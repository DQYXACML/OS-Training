
C:/diy-x86os-master/start/start/build/source/shell/shell.elf:     file format elf32-i386
C:/diy-x86os-master/start/start/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100062a

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00008150 memsz 0x00008700 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000071b2  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000059d  810071c0  810071c0  000081c0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007760  81007760  00008760  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  81008160  81008160  00009150  2**5
                  ALLOC
  4 .debug_info   0002400a  00000000  00000000  00009150  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00007ed1  00000000  00000000  0002d15a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000828  00000000  00000000  00035030  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_ranges 00000018  00000000  00000000  00035858  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000051fd  00000000  00000000  00035870  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001665  00000000  00000000  0003aa6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000023  00000000  00000000  0003c0d2  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001a30  00000000  00000000  0003c0f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line_str 000011ae  00000000  00000000  0003db28  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_rnglists 0000004e  00000000  00000000  0003ecd6  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
810071c0 l    d  .rodata	00000000 .rodata
81007760 l    d  .data	00000000 .data
81008160 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81008160 l     O .bss	0000040c cli
81007760 l     O .data	00000004 promot
81000000 l     F .text	00000033 show_promot
81000033 l     F .text	00000042 do_help
81000075 l     F .text	00000037 do_clear
810000ac l     F .text	000001a0 do_echo
8100024c l     F .text	00000010 do_exit
810072c0 l     O .rodata	00000030 cmd_list
8100025c l     F .text	00000048 cli_init
810002a4 l     F .text	00000044 find_builtin
810002e8 l     F .text	00000042 run_builtin
8100032a l     F .text	00000081 find_exec_path
81008580 l     O .bss	000000ff path.3747
810003ab l     F .text	000000b4 run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000678 l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000ddb l     F .text	000000ad std
81000e88 l     F .text	0000001b stdin_init
81000ea3 l     F .text	0000001b stdout_init
81000ebe l     F .text	0000001b stderr_init
81008680 l     O .bss	00000004 __sfp_recursive_mutex
81008684 l     O .bss	00000004 __sinit_recursive_mutex
81001181 l     F .text	0000000a __fp_lock
8100118b l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81008690 l     O .bss	00000004 optwhere
81008694 l     O .bss	00000004 permute_from
81008698 l     O .bss	00000004 num_nonopts
8100191e l     F .text	0000007b reverse_argv_elements
81001999 l     F .text	00000036 permute
810019cf l     F .text	00000031 is_option
81001a00 l     F .text	00000059 read_globals
81001a59 l     F .text	00000052 write_globals
81001aab l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81007780 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
8100270c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100325d l       .text	00000000 L20
81003214 l       .text	00000000 L5
8100325a l       .text	00000000 L15
81003220 l       .text	00000000 L8
81003241 l       .text	00000000 L9
81003250 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810032af l       .text	00000000 L4
810032a1 l       .text	00000000 BYTECMP
8100329c l       .text	00000000 L5
810032a3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
810086e8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81003470 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81004037 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100451b l       .text	00000000 L25
810044c2 l       .text	00000000 L5
8100450e l       .text	00000000 L14
81004514 l       .text	00000000 L19
810044d3 l       .text	00000000 L10
81004500 l       .text	00000000 L9
81004503 l       .text	00000000 L15
8100454e l       .text	00000000 L26
81004551 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81004656 l       .text	00000000 L5
8100468e l       .text	00000000 L15
81004660 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100479c l     F .text	0000000a __locale_ctype_ptr_l
810047a6 l     F .text	0000000a __get_global_locale
810047b0 l     F .text	0000000a __get_current_locale
810047ba l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
810086ec l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
810050af l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81007fd0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
8100584c l     F .text	0000000a __get_global_locale
81005856 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81005ab8 l     F .text	0000000a __get_global_locale
81005ac2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
81006300 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81006f9e l     F .text	0000000a __get_global_locale
81006fa8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810070a8 l     F .text	0000000a __get_global_locale
810070b2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
810086f8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
810086fc l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81007172 g     F .text	00000040 _isatty_r
81006d24 g     F .text	00000037 cleanup_glue
81003f45 g     F .text	000000d6 _puts_r
810058f2 g     F .text	00000046 _lseek_r
81000779 g     F .text	0000001b yield
810042a5 g     F .text	00000055 _siprintf_r
81004782 g     F .text	0000001a strtok_r
81003f10 g     F .text	00000035 printf
81006fb2 g     F .text	00000077 _wcrtomb_r
810043fb g     F .text	0000004a __sseek
810010d0 g     F .text	00000099 __sinit
810049ff g     F .text	00000112 __swbuf_r
81005860 g     F .text	0000005f _setlocale_r
81000ed9 g     F .text	0000006f __sfmoreglue
8100338e g     F .text	00000006 __malloc_unlock
81005b50 g       .text	00000000 memmove
81002607 g     F .text	00000049 getopt_long
810010b6 g     F .text	0000001a _cleanup
810046c2 g     F .text	000000c0 __strtok_r
81004e28 g     F .text	0000000a __errno
81005722 g     F .text	00000020 getenv
8100712f g     F .text	00000043 _fstat_r
810086f4 g     O .bss	00000004 errno
81004396 g     F .text	0000000a __seofread
8100074c g     F .text	0000002d execve
810006ee g     F .text	0000001b getpid
81000dbc g     F .text	0000001f fgets
810032b8 g       .text	00000000 memcpy
81001095 g     F .text	00000021 _cleanup_r
81005fc6 g     F .text	0000033a _svfprintf_r
8100401b g     F .text	0000001c puts
81003ee3 g     F .text	0000002d _printf_r
8100088a g     F .text	00000021 isatty
81008688 g     O .bss	00000004 optarg
810086a0 g     O .bss	00000004 __malloc_top_pad
81008160 g       .bss	00000000 __bss_start__
81005264 g     F .text	0000049e __sfvwrite_r
81004265 g     F .text	00000040 _sbrk_r
81007764 g     O .data	00000004 opterr
81006404 g     F .text	00000046 _read_r
81004e32 g     F .text	00000107 _fclose_r
81000c25 g     F .text	00000039 fflush
810086a4 g     O .bss	00000004 __malloc_max_sbrked_mem
81000836 g     F .text	0000002d lseek
810073f0 g     O .rodata	00000004 _global_impure_ptr
8100644a g     F .text	000008da _realloc_r
810049b1 g     F .text	00000025 strtol_l
810051c5 g     F .text	00000057 _fputwc_r
81001195 g     F .text	00000024 __fp_lock_all
810049d6 g     F .text	00000029 strtol
81006d5b g     F .text	00000160 _reclaim_reent
81004f56 g     F .text	00000046 _fputc_r
810007e8 g     F .text	0000002d write
81006366 g     F .text	0000004b _putc_r
8100814c g     O .data	00000004 environ
81000863 g     F .text	00000027 fstat
81001206 g     F .text	0000002c fprintf
810026e5 g     F .text	00000027 __getopt_long_only_r
81000949 g     F .text	0000001a _atoi_r
81005bdd g     F .text	000001b7 __ssputs_r
810034d6 g     F .text	000000a8 __sfputs_r
8100868c g     O .bss	00000004 optind
81001169 g     F .text	00000006 __sfp_lock_acquire
810031d0 g       .text	00000000 memchr
810042a5 g     F .text	00000055 _sprintf_r
81008700 g       .bss	00000000 __bss_end__
81001232 g     F .text	000003db _free_r
810008ed g     F .text	00000021 wait
810074c0 g     O .rodata	00000180 _ctype_b
810058bf g     F .text	00000014 __locale_mb_cur_max
81004cd3 g     F .text	00000115 __call_exitprocs
81007fcc g     O .data	00000004 __malloc_sbrk_base
8100062a g       .text	00000000 _start
810007bb g     F .text	0000002d read
81005d94 g     F .text	00000232 __ssprint_r
81006ebb g     F .text	000000e3 strncmp
810026be g     F .text	00000027 __getopt_long_r
810086c0 g     O .bss	00000028 __malloc_current_mallinfo
81003ee3 g     F .text	0000002d _iprintf_r
81004de8 g     F .text	00000040 _close_r
81004699 g     F .text	00000029 strtok
81003265 g       .text	00000000 memcmp
81001841 g     F .text	000000b8 _fwrite_r
81000731 g     F .text	0000001b fork
81004b78 g     F .text	0000015b __swsetup_r
81000f48 g     F .text	0000014d __sfp
81007bc0 g     O .data	00000408 __malloc_av_
8100117b g     F .text	00000006 __sinit_lock_release
81004352 g     F .text	00000044 __sread
81003388 g     F .text	00000006 __malloc_lock
810011dd g     F .text	00000029 _fprintf_r
810008ab g     F .text	00000021 sbrk
81000bcd g     F .text	00000058 _fflush_r
8100063a g     F .text	0000003e cstart
810025c0 g     F .text	00000047 getopt
81003300 g       .text	00000000 memset
8100045f g     F .text	000001cb main
810086a8 g     O .bss	00000004 __malloc_max_total_mem
81004b11 g     F .text	00000021 __swbuf
81004445 g     F .text	00000025 __sclose
81004f39 g     F .text	0000001d fclose
8100498c g     F .text	00000025 _strtol_r
81005742 g     F .text	000000ed _findenv_r
8100299f g     F .text	00000822 _malloc_r
810070e0 g     F .text	00000043 __ascii_wctomb
810011dd g     F .text	00000029 _fiprintf_r
81007129 g     F .text	00000006 __env_unlock
81005702 g     F .text	00000020 _findenv
8100176e g     F .text	00000068 _fwalk
81000c5e g     F .text	0000015e _fgets_r
81005acc g     F .text	0000002a _mbtowc_r
810063b1 g     F .text	00000053 putc
81002650 g     F .text	00000049 getopt_long_only
8100160d g     F .text	00000161 _malloc_trim_r
8100456c g     F .text	000000a5 strcmp
8100357e g     F .text	00000025 vfiprintf
810008cc g     F .text	00000021 dup
81003f10 g     F .text	00000035 iprintf
810042fa g     F .text	00000058 sprintf
810086f0 g     O .bss	00000004 _PathLocale
81004b32 g     F .text	00000046 _write_r
810058d3 g     F .text	0000001f setlocale
810038f9 g     F .text	0000019b _printf_common
81007ba4 g     O .data	00000004 _impure_ptr
810009a7 g     F .text	00000226 __sflush_r
81005fc6 g     F .text	0000033a _svfiprintf_r
81004064 g     F .text	00000201 __srefill_r
81005af6 g     F .text	00000058 __ascii_mbtowc
810011b9 g     F .text	00000024 __fp_unlock_all
81004f9c g     F .text	0000004e fputc
81000709 g     F .text	00000028 print_msg
81007768 g     O .data	00000004 optopt
81005a25 g     F .text	00000093 __swhatbuf_r
810018f9 g     F .text	00000025 fwrite
81005115 g     F .text	000000b0 __fputwc
81004fea g     F .text	000000a6 _fputs_r
810043a0 g     F .text	0000005b __swrite
81007fc8 g     O .data	00000004 __malloc_trim_threshold
81000963 g     F .text	00000044 exit
81001206 g     F .text	0000002c fiprintf
810035a3 g     F .text	00000356 _vfiprintf_r
810017d6 g     F .text	0000006b _fwalk_reent
8100116f g     F .text	00000006 __sfp_lock_release
810042fa g     F .text	00000058 siprintf
8100092f g     F .text	0000001a atoi
81007640 g     O .rodata	00000101 _ctype_
81002699 g     F .text	00000025 __getopt_r
8100090e g     F .text	00000021 _exit
81005938 g     F .text	000000ed __smakebuf_r
81004620 g       .text	00000000 strlen
81003a94 g     F .text	0000044f _printf_i
81000794 g     F .text	00000027 open
81003394 g     F .text	000000dc __sprint_r
81004470 g       .text	00000000 strchr
81005090 g     F .text	0000001f fputs
810070bc g     F .text	00000024 _wctomb_r
81007123 g     F .text	00000006 __env_lock
810035a3 g     F .text	00000356 _vfprintf_r
810006c4 g     F .text	0000002a msleep
81007029 g     F .text	0000007f wcrtomb
81000815 g     F .text	00000021 close
81007fe0 g     O .data	0000016c __global_locale
8100357e g     F .text	00000025 vfprintf
8100521c g     F .text	00000048 fputwc
81001175 g     F .text	00000006 __sinit_lock_acquire
8100582f g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <show_promot>:

/**
 * 显示命令行提示符
 */
static void show_promot(void)
{
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.promot);
81000006:	a1 68 85 00 81       	mov    0x81008568,%eax
8100000b:	83 ec 08             	sub    $0x8,%esp
8100000e:	50                   	push   %eax
8100000f:	68 c6 71 00 81       	push   $0x810071c6
81000014:	e8 f7 3e 00 00       	call   81003f10 <iprintf>
81000019:	83 c4 10             	add    $0x10,%esp
    fflush(stdout); // printf不加回车会被缓存
8100001c:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81000021:	8b 40 08             	mov    0x8(%eax),%eax
81000024:	83 ec 0c             	sub    $0xc,%esp
81000027:	50                   	push   %eax
81000028:	e8 f8 0b 00 00       	call   81000c25 <fflush>
8100002d:	83 c4 10             	add    $0x10,%esp
}
81000030:	90                   	nop
81000031:	c9                   	leave  
81000032:	c3                   	ret    

81000033 <do_help>:

/**
 * help命令
 */
static int do_help(int argc, char **argv)
{
81000033:	55                   	push   %ebp
81000034:	89 e5                	mov    %esp,%ebp
81000036:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t *start = cli.cmd_start;
81000039:	a1 60 85 00 81       	mov    0x81008560,%eax
8100003e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    // 循环打印名称及用法
    while (start < cli.cmd_end)
81000041:	eb 21                	jmp    81000064 <do_help+0x31>
    {
        printf("%s %s\n", start->name, start->useage);
81000043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000046:	8b 50 04             	mov    0x4(%eax),%edx
81000049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100004c:	8b 00                	mov    (%eax),%eax
8100004e:	83 ec 04             	sub    $0x4,%esp
81000051:	52                   	push   %edx
81000052:	50                   	push   %eax
81000053:	68 c9 71 00 81       	push   $0x810071c9
81000058:	e8 b3 3e 00 00       	call   81003f10 <iprintf>
8100005d:	83 c4 10             	add    $0x10,%esp
        start++;
81000060:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end)
81000064:	a1 64 85 00 81       	mov    0x81008564,%eax
81000069:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100006c:	72 d5                	jb     81000043 <do_help+0x10>
    }
    return 0;
8100006e:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_clear>:

/**
 * 清屏命令
 */
static int do_clear(int argc, char **argv)
{
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8100007b:	83 ec 08             	sub    $0x8,%esp
8100007e:	68 d0 71 00 81       	push   $0x810071d0
81000083:	68 c6 71 00 81       	push   $0x810071c6
81000088:	e8 83 3e 00 00       	call   81003f10 <iprintf>
8100008d:	83 c4 10             	add    $0x10,%esp
    printf("%s", ESC_MOVE_CURSOR(0, 0));
81000090:	83 ec 08             	sub    $0x8,%esp
81000093:	68 d5 71 00 81       	push   $0x810071d5
81000098:	68 c6 71 00 81       	push   $0x810071c6
8100009d:	e8 6e 3e 00 00       	call   81003f10 <iprintf>
810000a2:	83 c4 10             	add    $0x10,%esp
    return 0;
810000a5:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000aa:	c9                   	leave  
810000ab:	c3                   	ret    

810000ac <do_echo>:

/**
 * 回显命令
 */
static int do_echo(int argc, char **argv)
{
810000ac:	55                   	push   %ebp
810000ad:	89 e5                	mov    %esp,%ebp
810000af:	81 ec 98 00 00 00    	sub    $0x98,%esp
    // 只有一个参数，需要先手动输入，再输出
    if (argc == 1)
810000b5:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810000b9:	75 40                	jne    810000fb <do_echo+0x4f>
    {
        char msg_buf[128];

        fgets(msg_buf, sizeof(msg_buf), stdin);
810000bb:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810000c0:	8b 40 04             	mov    0x4(%eax),%eax
810000c3:	83 ec 04             	sub    $0x4,%esp
810000c6:	50                   	push   %eax
810000c7:	68 80 00 00 00       	push   $0x80
810000cc:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000d2:	50                   	push   %eax
810000d3:	e8 e4 0c 00 00       	call   81000dbc <fgets>
810000d8:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf) - 1] = '\0';
810000db:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
810000df:	83 ec 0c             	sub    $0xc,%esp
810000e2:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000e8:	50                   	push   %eax
810000e9:	e8 2d 3f 00 00       	call   8100401b <puts>
810000ee:	83 c4 10             	add    $0x10,%esp
        return 0;
810000f1:	b8 00 00 00 00       	mov    $0x0,%eax
810000f6:	e9 4f 01 00 00       	jmp    8100024a <do_echo+0x19e>
    }

    // https://www.cnblogs.com/yinghao-liu/p/7123622.html
    // optind是下一个要处理的元素在argv中的索引
    // 当没有选项时，变为argv第一个不是选项元素的索引。
    int count = 1; // 缺省只打印一次
810000fb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "n:h")) != -1)
81000102:	e9 9e 00 00 00       	jmp    810001a5 <do_echo+0xf9>
    {
        switch (ch)
81000107:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100010a:	83 f8 68             	cmp    $0x68,%eax
8100010d:	74 0f                	je     8100011e <do_echo+0x72>
8100010f:	83 f8 6e             	cmp    $0x6e,%eax
81000112:	74 3e                	je     81000152 <do_echo+0xa6>
81000114:	83 f8 3f             	cmp    $0x3f,%eax
81000117:	74 4f                	je     81000168 <do_echo+0xbc>
81000119:	e9 87 00 00 00       	jmp    810001a5 <do_echo+0xf9>
        {
        case 'h':
            puts("echo echo any message");
8100011e:	83 ec 0c             	sub    $0xc,%esp
81000121:	68 dc 71 00 81       	push   $0x810071dc
81000126:	e8 f0 3e 00 00       	call   8100401b <puts>
8100012b:	83 c4 10             	add    $0x10,%esp
            puts("Usage: echo [-n count] msg");
8100012e:	83 ec 0c             	sub    $0xc,%esp
81000131:	68 f2 71 00 81       	push   $0x810071f2
81000136:	e8 e0 3e 00 00       	call   8100401b <puts>
8100013b:	83 c4 10             	add    $0x10,%esp
            optind = 1; // getopt需要多次调用，需要重置
8100013e:	c7 05 8c 86 00 81 01 	movl   $0x1,0x8100868c
81000145:	00 00 00 
            return 0;
81000148:	b8 00 00 00 00       	mov    $0x0,%eax
8100014d:	e9 f8 00 00 00       	jmp    8100024a <do_echo+0x19e>
        case 'n':
            count = atoi(optarg);
81000152:	a1 88 86 00 81       	mov    0x81008688,%eax
81000157:	83 ec 0c             	sub    $0xc,%esp
8100015a:	50                   	push   %eax
8100015b:	e8 cf 07 00 00       	call   8100092f <atoi>
81000160:	83 c4 10             	add    $0x10,%esp
81000163:	89 45 f4             	mov    %eax,-0xc(%ebp)
            break;
81000166:	eb 3d                	jmp    810001a5 <do_echo+0xf9>
        case '?':
            if (optarg)
81000168:	a1 88 86 00 81       	mov    0x81008688,%eax
8100016d:	85 c0                	test   %eax,%eax
8100016f:	74 20                	je     81000191 <do_echo+0xe5>
            {
                fprintf(stderr, "Unknown option: -%s\n", optarg);
81000171:	8b 15 88 86 00 81    	mov    0x81008688,%edx
81000177:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
8100017c:	8b 40 0c             	mov    0xc(%eax),%eax
8100017f:	83 ec 04             	sub    $0x4,%esp
81000182:	52                   	push   %edx
81000183:	68 0d 72 00 81       	push   $0x8100720d
81000188:	50                   	push   %eax
81000189:	e8 78 10 00 00       	call   81001206 <fiprintf>
8100018e:	83 c4 10             	add    $0x10,%esp
            }
            optind = 1; // getopt需要多次调用，需要重置
81000191:	c7 05 8c 86 00 81 01 	movl   $0x1,0x8100868c
81000198:	00 00 00 
            return -1;
8100019b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001a0:	e9 a5 00 00 00       	jmp    8100024a <do_echo+0x19e>
    while ((ch = getopt(argc, argv, "n:h")) != -1)
810001a5:	83 ec 04             	sub    $0x4,%esp
810001a8:	68 22 72 00 81       	push   $0x81007222
810001ad:	ff 75 0c             	pushl  0xc(%ebp)
810001b0:	ff 75 08             	pushl  0x8(%ebp)
810001b3:	e8 08 24 00 00       	call   810025c0 <getopt>
810001b8:	83 c4 10             	add    $0x10,%esp
810001bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810001be:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001c2:	0f 85 3f ff ff ff    	jne    81000107 <do_echo+0x5b>
        }
    }
    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1)
810001c8:	8b 45 08             	mov    0x8(%ebp),%eax
810001cb:	8d 50 ff             	lea    -0x1(%eax),%edx
810001ce:	a1 8c 86 00 81       	mov    0x8100868c,%eax
810001d3:	39 c2                	cmp    %eax,%edx
810001d5:	7d 2b                	jge    81000202 <do_echo+0x156>
    {
        fprintf(stderr, "Message is empty \n");
810001d7:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 12                	push   $0x12
810001e2:	6a 01                	push   $0x1
810001e4:	68 26 72 00 81       	push   $0x81007226
810001e9:	e8 0b 17 00 00       	call   810018f9 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
810001f1:	c7 05 8c 86 00 81 01 	movl   $0x1,0x8100868c
810001f8:	00 00 00 
        return -1;
810001fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000200:	eb 48                	jmp    8100024a <do_echo+0x19e>
    }

    // 循环打印消息
    char *msg = argv[optind];
81000202:	a1 8c 86 00 81       	mov    0x8100868c,%eax
81000207:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100020e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000211:	01 d0                	add    %edx,%eax
81000213:	8b 00                	mov    (%eax),%eax
81000215:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++)
81000218:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100021f:	eb 12                	jmp    81000233 <do_echo+0x187>
    {
        puts(msg);
81000221:	83 ec 0c             	sub    $0xc,%esp
81000224:	ff 75 e8             	pushl  -0x18(%ebp)
81000227:	e8 ef 3d 00 00       	call   8100401b <puts>
8100022c:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++)
8100022f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000233:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000236:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81000239:	7c e6                	jl     81000221 <do_echo+0x175>
    }
    optind = 1; // getopt需要多次调用，需要重置
8100023b:	c7 05 8c 86 00 81 01 	movl   $0x1,0x8100868c
81000242:	00 00 00 
    return 0;
81000245:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100024a:	c9                   	leave  
8100024b:	c3                   	ret    

8100024c <do_exit>:

/**
 * 程序退出命令
 */
static int do_exit(int argc, char **argv)
{
8100024c:	55                   	push   %ebp
8100024d:	89 e5                	mov    %esp,%ebp
8100024f:	83 ec 08             	sub    $0x8,%esp
    exit(0);
81000252:	83 ec 0c             	sub    $0xc,%esp
81000255:	6a 00                	push   $0x0
81000257:	e8 07 07 00 00       	call   81000963 <exit>

8100025c <cli_init>:

/**
 * 命令行初始化
 */
static void cli_init(const char *promot, const cli_cmd_t *cmd_list, int cnt)
{
8100025c:	55                   	push   %ebp
8100025d:	89 e5                	mov    %esp,%ebp
8100025f:	83 ec 08             	sub    $0x8,%esp
    cli.promot = promot;
81000262:	8b 45 08             	mov    0x8(%ebp),%eax
81000265:	a3 68 85 00 81       	mov    %eax,0x81008568

    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100026a:	83 ec 04             	sub    $0x4,%esp
8100026d:	68 00 04 00 00       	push   $0x400
81000272:	6a 00                	push   $0x0
81000274:	68 60 81 00 81       	push   $0x81008160
81000279:	e8 82 30 00 00       	call   81003300 <memset>
8100027e:	83 c4 10             	add    $0x10,%esp

    cli.cmd_start = cmd_list;
81000281:	8b 45 0c             	mov    0xc(%ebp),%eax
81000284:	a3 60 85 00 81       	mov    %eax,0x81008560
    cli.cmd_end = cmd_list + cnt;
81000289:	8b 55 10             	mov    0x10(%ebp),%edx
8100028c:	89 d0                	mov    %edx,%eax
8100028e:	01 c0                	add    %eax,%eax
81000290:	01 d0                	add    %edx,%eax
81000292:	c1 e0 02             	shl    $0x2,%eax
81000295:	89 c2                	mov    %eax,%edx
81000297:	8b 45 0c             	mov    0xc(%ebp),%eax
8100029a:	01 d0                	add    %edx,%eax
8100029c:	a3 64 85 00 81       	mov    %eax,0x81008564
}
810002a1:	90                   	nop
810002a2:	c9                   	leave  
810002a3:	c3                   	ret    

810002a4 <find_builtin>:

/**
 * 在内部命令中搜索
 */
static const cli_cmd_t *find_builtin(const char *name)
{
810002a4:	55                   	push   %ebp
810002a5:	89 e5                	mov    %esp,%ebp
810002a7:	83 ec 18             	sub    $0x18,%esp
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
810002aa:	a1 60 85 00 81       	mov    0x81008560,%eax
810002af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810002b2:	eb 23                	jmp    810002d7 <find_builtin+0x33>
    {
        if (strcmp(cmd->name, name) != 0)
810002b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002b7:	8b 00                	mov    (%eax),%eax
810002b9:	83 ec 08             	sub    $0x8,%esp
810002bc:	ff 75 08             	pushl  0x8(%ebp)
810002bf:	50                   	push   %eax
810002c0:	e8 a7 42 00 00       	call   8100456c <strcmp>
810002c5:	83 c4 10             	add    $0x10,%esp
810002c8:	85 c0                	test   %eax,%eax
810002ca:	74 06                	je     810002d2 <find_builtin+0x2e>
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
810002cc:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810002d0:	eb 05                	jmp    810002d7 <find_builtin+0x33>
        {
            continue;
        }

        return cmd;
810002d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002d5:	eb 0f                	jmp    810002e6 <find_builtin+0x42>
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
810002d7:	a1 64 85 00 81       	mov    0x81008564,%eax
810002dc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810002df:	72 d3                	jb     810002b4 <find_builtin+0x10>
    }

    return (const cli_cmd_t *)0;
810002e1:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002e6:	c9                   	leave  
810002e7:	c3                   	ret    

810002e8 <run_builtin>:

/**
 * 运行内部命令
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, char **argv)
{
810002e8:	55                   	push   %ebp
810002e9:	89 e5                	mov    %esp,%ebp
810002eb:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810002ee:	8b 45 08             	mov    0x8(%ebp),%eax
810002f1:	8b 40 08             	mov    0x8(%eax),%eax
810002f4:	83 ec 08             	sub    $0x8,%esp
810002f7:	ff 75 10             	pushl  0x10(%ebp)
810002fa:	ff 75 0c             	pushl  0xc(%ebp)
810002fd:	ff d0                	call   *%eax
810002ff:	83 c4 10             	add    $0x10,%esp
81000302:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (ret < 0)
81000305:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000309:	79 1c                	jns    81000327 <run_builtin+0x3f>
    {
        fprintf(stderr, ESC_COLOR_ERROR "error: %d\n" ESC_COLOR_DEFAULT, ret);
8100030b:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81000310:	8b 40 0c             	mov    0xc(%eax),%eax
81000313:	83 ec 04             	sub    $0x4,%esp
81000316:	ff 75 f4             	pushl  -0xc(%ebp)
81000319:	68 f0 72 00 81       	push   $0x810072f0
8100031e:	50                   	push   %eax
8100031f:	e8 e2 0e 00 00       	call   81001206 <fiprintf>
81000324:	83 c4 10             	add    $0x10,%esp
    }
}
81000327:	90                   	nop
81000328:	c9                   	leave  
81000329:	c3                   	ret    

8100032a <find_exec_path>:

/**
 * 遍历搜索目录，看看文件是否存在，存在返回文件所在路径
 */
static const char *find_exec_path(const char *file_name)
{
8100032a:	55                   	push   %ebp
8100032b:	89 e5                	mov    %esp,%ebp
8100032d:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
81000330:	83 ec 08             	sub    $0x8,%esp
81000333:	6a 00                	push   $0x0
81000335:	ff 75 08             	pushl  0x8(%ebp)
81000338:	e8 57 04 00 00       	call   81000794 <open>
8100033d:	83 c4 10             	add    $0x10,%esp
81000340:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0)
81000343:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000347:	79 4f                	jns    81000398 <find_exec_path+0x6e>
    {
        sprintf(path, "%s.elf", file_name);
81000349:	83 ec 04             	sub    $0x4,%esp
8100034c:	ff 75 08             	pushl  0x8(%ebp)
8100034f:	68 05 73 00 81       	push   $0x81007305
81000354:	68 80 85 00 81       	push   $0x81008580
81000359:	e8 9c 3f 00 00       	call   810042fa <siprintf>
8100035e:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
81000361:	83 ec 08             	sub    $0x8,%esp
81000364:	6a 00                	push   $0x0
81000366:	68 80 85 00 81       	push   $0x81008580
8100036b:	e8 24 04 00 00       	call   81000794 <open>
81000370:	83 c4 10             	add    $0x10,%esp
81000373:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0)
81000376:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100037a:	79 07                	jns    81000383 <find_exec_path+0x59>
        {
            return (const char *)0;
8100037c:	b8 00 00 00 00       	mov    $0x0,%eax
81000381:	eb 26                	jmp    810003a9 <find_exec_path+0x7f>
        }
        close(fd);
81000383:	83 ec 0c             	sub    $0xc,%esp
81000386:	ff 75 f4             	pushl  -0xc(%ebp)
81000389:	e8 87 04 00 00       	call   81000815 <close>
8100038e:	83 c4 10             	add    $0x10,%esp
        return path;
81000391:	b8 80 85 00 81       	mov    $0x81008580,%eax
81000396:	eb 11                	jmp    810003a9 <find_exec_path+0x7f>
    }
    else
    {
        close(fd);
81000398:	83 ec 0c             	sub    $0xc,%esp
8100039b:	ff 75 f4             	pushl  -0xc(%ebp)
8100039e:	e8 72 04 00 00       	call   81000815 <close>
810003a3:	83 c4 10             	add    $0x10,%esp
        return file_name;
810003a6:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
810003a9:	c9                   	leave  
810003aa:	c3                   	ret    

810003ab <run_exec_file>:

/**
 * 试图运行当前文件
 */
static void run_exec_file(const char *path, int argc, char **argv)
{
810003ab:	55                   	push   %ebp
810003ac:	89 e5                	mov    %esp,%ebp
810003ae:	83 ec 18             	sub    $0x18,%esp
    int pid = fork();
810003b1:	e8 7b 03 00 00       	call   81000731 <fork>
810003b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (pid < 0)
810003b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810003bd:	79 1e                	jns    810003dd <run_exec_file+0x32>
    {
        fprintf(stderr, "fork failed: %s", path);
810003bf:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810003c4:	8b 40 0c             	mov    0xc(%eax),%eax
810003c7:	83 ec 04             	sub    $0x4,%esp
810003ca:	ff 75 08             	pushl  0x8(%ebp)
810003cd:	68 0c 73 00 81       	push   $0x8100730c
810003d2:	50                   	push   %eax
810003d3:	e8 2e 0e 00 00       	call   81001206 <fiprintf>
810003d8:	83 c4 10             	add    $0x10,%esp
        // 等待子进程执行完毕
        int status;
        int pid = wait(&status);
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
    }
}
810003db:	eb 7f                	jmp    8100045c <run_exec_file+0xb1>
    else if (pid == 0)
810003dd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810003e1:	75 44                	jne    81000427 <run_exec_file+0x7c>
        for (int i = 0; i < argc; i++)
810003e3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810003ea:	eb 29                	jmp    81000415 <run_exec_file+0x6a>
            printf("arg %d = %s\n", i, argv[i]);
810003ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003ef:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003f6:	8b 45 10             	mov    0x10(%ebp),%eax
810003f9:	01 d0                	add    %edx,%eax
810003fb:	8b 00                	mov    (%eax),%eax
810003fd:	83 ec 04             	sub    $0x4,%esp
81000400:	50                   	push   %eax
81000401:	ff 75 f4             	pushl  -0xc(%ebp)
81000404:	68 1c 73 00 81       	push   $0x8100731c
81000409:	e8 02 3b 00 00       	call   81003f10 <iprintf>
8100040e:	83 c4 10             	add    $0x10,%esp
        for (int i = 0; i < argc; i++)
81000411:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81000415:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000418:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100041b:	7c cf                	jl     810003ec <run_exec_file+0x41>
        exit(-1);
8100041d:	83 ec 0c             	sub    $0xc,%esp
81000420:	6a ff                	push   $0xffffffff
81000422:	e8 3c 05 00 00       	call   81000963 <exit>
        int pid = wait(&status);
81000427:	83 ec 0c             	sub    $0xc,%esp
8100042a:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100042d:	50                   	push   %eax
8100042e:	e8 ba 04 00 00       	call   810008ed <wait>
81000433:	83 c4 10             	add    $0x10,%esp
81000436:	89 45 ec             	mov    %eax,-0x14(%ebp)
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
81000439:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100043c:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81000441:	8b 40 0c             	mov    0xc(%eax),%eax
81000444:	83 ec 0c             	sub    $0xc,%esp
81000447:	ff 75 ec             	pushl  -0x14(%ebp)
8100044a:	52                   	push   %edx
8100044b:	ff 75 08             	pushl  0x8(%ebp)
8100044e:	68 29 73 00 81       	push   $0x81007329
81000453:	50                   	push   %eax
81000454:	e8 ad 0d 00 00       	call   81001206 <fiprintf>
81000459:	83 c4 20             	add    $0x20,%esp
}
8100045c:	90                   	nop
8100045d:	c9                   	leave  
8100045e:	c3                   	ret    

8100045f <main>:

int main(int argc, char **argv)
{
8100045f:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000463:	83 e4 f0             	and    $0xfffffff0,%esp
81000466:	ff 71 fc             	pushl  -0x4(%ecx)
81000469:	55                   	push   %ebp
8100046a:	89 e5                	mov    %esp,%ebp
8100046c:	51                   	push   %ecx
8100046d:	83 ec 54             	sub    $0x54,%esp
81000470:	89 c8                	mov    %ecx,%eax
    open(argv[0], 0); // int fd=0;
81000472:	8b 40 04             	mov    0x4(%eax),%eax
81000475:	8b 00                	mov    (%eax),%eax
81000477:	83 ec 08             	sub    $0x8,%esp
8100047a:	6a 00                	push   $0x0
8100047c:	50                   	push   %eax
8100047d:	e8 12 03 00 00       	call   81000794 <open>
81000482:	83 c4 10             	add    $0x10,%esp
    dup(0);           // 标准输出
81000485:	83 ec 0c             	sub    $0xc,%esp
81000488:	6a 00                	push   $0x0
8100048a:	e8 3d 04 00 00       	call   810008cc <dup>
8100048f:	83 c4 10             	add    $0x10,%esp
    dup(0);           // 标准错误输出
81000492:	83 ec 0c             	sub    $0xc,%esp
81000495:	6a 00                	push   $0x0
81000497:	e8 30 04 00 00       	call   810008cc <dup>
8100049c:	83 c4 10             	add    $0x10,%esp

    cli_init(promot, cmd_list, sizeof(cmd_list) / sizeof(cli_cmd_t));
8100049f:	a1 60 77 00 81       	mov    0x81007760,%eax
810004a4:	83 ec 04             	sub    $0x4,%esp
810004a7:	6a 04                	push   $0x4
810004a9:	68 c0 72 00 81       	push   $0x810072c0
810004ae:	50                   	push   %eax
810004af:	e8 a8 fd ff ff       	call   8100025c <cli_init>
810004b4:	83 c4 10             	add    $0x10,%esp

    for (;;)
    {
        // 显示提示符，开始工作
        show_promot();
810004b7:	e8 44 fb ff ff       	call   81000000 <show_promot>

        // 获取输入的字符串，然后进行处理.
        // 注意，读取到的字符串结尾中会包含换行符和0
        char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810004bc:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810004c1:	8b 40 04             	mov    0x4(%eax),%eax
810004c4:	83 ec 04             	sub    $0x4,%esp
810004c7:	50                   	push   %eax
810004c8:	68 00 04 00 00       	push   $0x400
810004cd:	68 60 81 00 81       	push   $0x81008160
810004d2:	e8 e5 08 00 00       	call   81000dbc <fgets>
810004d7:	83 c4 10             	add    $0x10,%esp
810004da:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (str == (char *)0)
810004dd:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810004e1:	75 0a                	jne    810004ed <main+0x8e>
810004e3:	b8 00 00 00 00       	mov    $0x0,%eax
810004e8:	e9 35 01 00 00       	jmp    81000622 <main+0x1c3>
            // 读不到错误，或f发生错误，则退出
            break;
        }

        // 读取的字符串中结尾可能有换行符
        char *cr = strchr(cli.curr_input, '\n');
810004ed:	83 ec 08             	sub    $0x8,%esp
810004f0:	6a 0a                	push   $0xa
810004f2:	68 60 81 00 81       	push   $0x81008160
810004f7:	e8 74 3f 00 00       	call   81004470 <strchr>
810004fc:	83 c4 10             	add    $0x10,%esp
810004ff:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr)
81000502:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000506:	74 06                	je     8100050e <main+0xaf>
        {
            *cr = '\0';
81000508:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100050b:	c6 00 00             	movb   $0x0,(%eax)
        }
        cr = strchr(cli.curr_input, '\r');
8100050e:	83 ec 08             	sub    $0x8,%esp
81000511:	6a 0d                	push   $0xd
81000513:	68 60 81 00 81       	push   $0x81008160
81000518:	e8 53 3f 00 00       	call   81004470 <strchr>
8100051d:	83 c4 10             	add    $0x10,%esp
81000520:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr)
81000523:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000527:	74 06                	je     8100052f <main+0xd0>
        {
            *cr = '\0';
81000529:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100052c:	c6 00 00             	movb   $0x0,(%eax)
        }

        int argc = 0;
8100052f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        char *argv[CLI_MAX_ARG_COUNT];
        memset(argv, 0, sizeof(argv));
81000536:	83 ec 04             	sub    $0x4,%esp
81000539:	6a 28                	push   $0x28
8100053b:	6a 00                	push   $0x0
8100053d:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000540:	50                   	push   %eax
81000541:	e8 ba 2d 00 00       	call   81003300 <memset>
81000546:	83 c4 10             	add    $0x10,%esp

        // 提取出命令，找命令表
        const char *space = " "; // 字符分割器
81000549:	c7 45 e4 46 73 00 81 	movl   $0x81007346,-0x1c(%ebp)
        char *token = strtok(cli.curr_input, space);
81000550:	83 ec 08             	sub    $0x8,%esp
81000553:	ff 75 e4             	pushl  -0x1c(%ebp)
81000556:	68 60 81 00 81       	push   $0x81008160
8100055b:	e8 39 41 00 00       	call   81004699 <strtok>
81000560:	83 c4 10             	add    $0x10,%esp
81000563:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token)
81000566:	eb 23                	jmp    8100058b <main+0x12c>
        {
            // 记录参数
            argv[argc++] = token;
81000568:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100056b:	8d 50 01             	lea    0x1(%eax),%edx
8100056e:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000571:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000574:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)

            // 先获取下一位置
            token = strtok(NULL, space);
81000578:	83 ec 08             	sub    $0x8,%esp
8100057b:	ff 75 e4             	pushl  -0x1c(%ebp)
8100057e:	6a 00                	push   $0x0
81000580:	e8 14 41 00 00       	call   81004699 <strtok>
81000585:	83 c4 10             	add    $0x10,%esp
81000588:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token)
8100058b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100058f:	75 d7                	jne    81000568 <main+0x109>
        }

        // 没有任何输入，则x继续循环
        if (argc == 0)
81000591:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000595:	0f 84 81 00 00 00    	je     8100061c <main+0x1bd>
        {
            continue;
        }

        // 试图作为内部命令加载执行
        const cli_cmd_t *cmd = find_builtin(argv[0]);
8100059b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100059e:	83 ec 0c             	sub    $0xc,%esp
810005a1:	50                   	push   %eax
810005a2:	e8 fd fc ff ff       	call   810002a4 <find_builtin>
810005a7:	83 c4 10             	add    $0x10,%esp
810005aa:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if (cmd)
810005ad:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810005b1:	74 17                	je     810005ca <main+0x16b>
        {
            run_builtin(cmd, argc, argv);
810005b3:	83 ec 04             	sub    $0x4,%esp
810005b6:	8d 45 b4             	lea    -0x4c(%ebp),%eax
810005b9:	50                   	push   %eax
810005ba:	ff 75 f4             	pushl  -0xc(%ebp)
810005bd:	ff 75 e0             	pushl  -0x20(%ebp)
810005c0:	e8 23 fd ff ff       	call   810002e8 <run_builtin>
810005c5:	83 c4 10             	add    $0x10,%esp
            continue;
810005c8:	eb 53                	jmp    8100061d <main+0x1be>
        }

        // 试图作为外部命令执行。只检查文件是否存在，不考虑是否可执行
        const char *path = find_exec_path(argv[0]);
810005ca:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810005cd:	83 ec 0c             	sub    $0xc,%esp
810005d0:	50                   	push   %eax
810005d1:	e8 54 fd ff ff       	call   8100032a <find_exec_path>
810005d6:	83 c4 10             	add    $0x10,%esp
810005d9:	89 45 dc             	mov    %eax,-0x24(%ebp)
        if (path)
810005dc:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810005e0:	74 17                	je     810005f9 <main+0x19a>
        {
            run_exec_file(path, argc, argv);
810005e2:	83 ec 04             	sub    $0x4,%esp
810005e5:	8d 45 b4             	lea    -0x4c(%ebp),%eax
810005e8:	50                   	push   %eax
810005e9:	ff 75 f4             	pushl  -0xc(%ebp)
810005ec:	ff 75 dc             	pushl  -0x24(%ebp)
810005ef:	e8 b7 fd ff ff       	call   810003ab <run_exec_file>
810005f4:	83 c4 10             	add    $0x10,%esp
            continue;
810005f7:	eb 24                	jmp    8100061d <main+0x1be>
        }

        // 找不到命令，提示错误
        fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT, cli.curr_input);
810005f9:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810005fe:	8b 40 0c             	mov    0xc(%eax),%eax
81000601:	83 ec 04             	sub    $0x4,%esp
81000604:	68 60 81 00 81       	push   $0x81008160
81000609:	68 48 73 00 81       	push   $0x81007348
8100060e:	50                   	push   %eax
8100060f:	e8 f2 0b 00 00       	call   81001206 <fiprintf>
81000614:	83 c4 10             	add    $0x10,%esp
81000617:	e9 9b fe ff ff       	jmp    810004b7 <main+0x58>
            continue;
8100061c:	90                   	nop
    {
8100061d:	e9 95 fe ff ff       	jmp    810004b7 <main+0x58>
    }
81000622:	8b 4d fc             	mov    -0x4(%ebp),%ecx
81000625:	c9                   	leave  
81000626:	8d 61 fc             	lea    -0x4(%ecx),%esp
81000629:	c3                   	ret    

8100062a <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
8100062a:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
8100062d:	8e d8                	mov    %eax,%ds
    mov %ax, %es
8100062f:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000631:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
81000633:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
81000635:	e9 00 00 00 00       	jmp    8100063a <cstart>

8100063a <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];
/**
 * @brief 应用的初始化，C部分
 */
void cstart(int argc, char **argv)
{
8100063a:	55                   	push   %ebp
8100063b:	89 e5                	mov    %esp,%ebp
8100063d:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t *start = __bss_start__;
81000640:	c7 45 f4 60 81 00 81 	movl   $0x81008160,-0xc(%ebp)
    while (start < __bss_end__)
81000647:	eb 0c                	jmp    81000655 <cstart+0x1b>
    {
        *start++ = 0;
81000649:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100064c:	8d 50 01             	lea    0x1(%eax),%edx
8100064f:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000652:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__)
81000655:	81 7d f4 00 87 00 81 	cmpl   $0x81008700,-0xc(%ebp)
8100065c:	72 eb                	jb     81000649 <cstart+0xf>
    }
    exit(main(argc, argv));
8100065e:	83 ec 08             	sub    $0x8,%esp
81000661:	ff 75 0c             	pushl  0xc(%ebp)
81000664:	ff 75 08             	pushl  0x8(%ebp)
81000667:	e8 f3 fd ff ff       	call   8100045f <main>
8100066c:	83 c4 10             	add    $0x10,%esp
8100066f:	83 ec 0c             	sub    $0xc,%esp
81000672:	50                   	push   %eax
81000673:	e8 eb 02 00 00       	call   81000963 <exit>

81000678 <sys_call>:

/**
 * 执行系统调用
 */
static inline int sys_call(syscall_args_t *args)
{
81000678:	55                   	push   %ebp
81000679:	89 e5                	mov    %esp,%ebp
8100067b:	57                   	push   %edi
8100067c:	56                   	push   %esi
8100067d:	53                   	push   %ebx
8100067e:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0}; // 使用特权级0
81000681:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000688:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[gate])\n\n"
        : "=a"(ret)
        : [arg3] "r"(args->arg3), [arg2] "r"(args->arg2), [arg1] "r"(args->arg1),
8100068f:	8b 45 08             	mov    0x8(%ebp),%eax
81000692:	8b 40 10             	mov    0x10(%eax),%eax
81000695:	8b 55 08             	mov    0x8(%ebp),%edx
81000698:	8b 52 0c             	mov    0xc(%edx),%edx
8100069b:	8b 4d 08             	mov    0x8(%ebp),%ecx
8100069e:	8b 49 08             	mov    0x8(%ecx),%ecx
          [arg0] "r"(args->arg0), [id] "r"(args->id),
810006a1:	8b 5d 08             	mov    0x8(%ebp),%ebx
810006a4:	8b 5b 04             	mov    0x4(%ebx),%ebx
810006a7:	8b 75 08             	mov    0x8(%ebp),%esi
810006aa:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
810006ac:	8d 7d e8             	lea    -0x18(%ebp),%edi
810006af:	50                   	push   %eax
810006b0:	52                   	push   %edx
810006b1:	51                   	push   %ecx
810006b2:	53                   	push   %ebx
810006b3:	56                   	push   %esi
810006b4:	ff 1f                	lcall  *(%edi)
810006b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
          [gate] "r"(sys_gate_addr));
    return ret;
810006b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810006bc:	83 c4 10             	add    $0x10,%esp
810006bf:	5b                   	pop    %ebx
810006c0:	5e                   	pop    %esi
810006c1:	5f                   	pop    %edi
810006c2:	5d                   	pop    %ebp
810006c3:	c3                   	ret    

810006c4 <msleep>:

int msleep(int ms)
{
810006c4:	55                   	push   %ebp
810006c5:	89 e5                	mov    %esp,%ebp
810006c7:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0)
810006ca:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810006ce:	7e 1b                	jle    810006eb <msleep+0x27>
    {
        return;
    }

    syscall_args_t args;
    args.id = SYS_msleep;
810006d0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810006d7:	8b 45 08             	mov    0x8(%ebp),%eax
810006da:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
810006dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006e0:	50                   	push   %eax
810006e1:	e8 92 ff ff ff       	call   81000678 <sys_call>
810006e6:	83 c4 04             	add    $0x4,%esp
810006e9:	eb 01                	jmp    810006ec <msleep+0x28>
        return;
810006eb:	90                   	nop
}
810006ec:	c9                   	leave  
810006ed:	c3                   	ret    

810006ee <getpid>:

int getpid(void)
{
810006ee:	55                   	push   %ebp
810006ef:	89 e5                	mov    %esp,%ebp
810006f1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
810006f4:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
810006fb:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006fe:	50                   	push   %eax
810006ff:	e8 74 ff ff ff       	call   81000678 <sys_call>
81000704:	83 c4 04             	add    $0x4,%esp
}
81000707:	c9                   	leave  
81000708:	c3                   	ret    

81000709 <print_msg>:

void print_msg(const char *fmt, int arg)
{
81000709:	55                   	push   %ebp
8100070a:	89 e5                	mov    %esp,%ebp
8100070c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100070f:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000716:	8b 45 08             	mov    0x8(%ebp),%eax
81000719:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100071c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100071f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000722:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000725:	50                   	push   %eax
81000726:	e8 4d ff ff ff       	call   81000678 <sys_call>
8100072b:	83 c4 04             	add    $0x4,%esp
}
8100072e:	90                   	nop
8100072f:	c9                   	leave  
81000730:	c3                   	ret    

81000731 <fork>:

int fork(void)
{
81000731:	55                   	push   %ebp
81000732:	89 e5                	mov    %esp,%ebp
81000734:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000737:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
8100073e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000741:	50                   	push   %eax
81000742:	e8 31 ff ff ff       	call   81000678 <sys_call>
81000747:	83 c4 04             	add    $0x4,%esp
}
8100074a:	c9                   	leave  
8100074b:	c3                   	ret    

8100074c <execve>:

int execve(const char *name, char *const *argv, char *const *env)
{
8100074c:	55                   	push   %ebp
8100074d:	89 e5                	mov    %esp,%ebp
8100074f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000752:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000759:	8b 45 08             	mov    0x8(%ebp),%eax
8100075c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
8100075f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000762:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000765:	8b 45 10             	mov    0x10(%ebp),%eax
81000768:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
8100076b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100076e:	50                   	push   %eax
8100076f:	e8 04 ff ff ff       	call   81000678 <sys_call>
81000774:	83 c4 04             	add    $0x4,%esp
}
81000777:	c9                   	leave  
81000778:	c3                   	ret    

81000779 <yield>:

int yield(void)
{
81000779:	55                   	push   %ebp
8100077a:	89 e5                	mov    %esp,%ebp
8100077c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
8100077f:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
81000786:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000789:	50                   	push   %eax
8100078a:	e8 e9 fe ff ff       	call   81000678 <sys_call>
8100078f:	83 c4 04             	add    $0x4,%esp
}
81000792:	c9                   	leave  
81000793:	c3                   	ret    

81000794 <open>:

int open(const char *name, int flags, ...)
{
81000794:	55                   	push   %ebp
81000795:	89 e5                	mov    %esp,%ebp
81000797:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
8100079a:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810007a1:	8b 45 08             	mov    0x8(%ebp),%eax
810007a4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
810007a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810007aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
810007ad:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007b0:	50                   	push   %eax
810007b1:	e8 c2 fe ff ff       	call   81000678 <sys_call>
810007b6:	83 c4 04             	add    $0x4,%esp
}
810007b9:	c9                   	leave  
810007ba:	c3                   	ret    

810007bb <read>:

int read(int file, char *ptr, int len)
{
810007bb:	55                   	push   %ebp
810007bc:	89 e5                	mov    %esp,%ebp
810007be:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810007c1:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
810007c8:	8b 45 08             	mov    0x8(%ebp),%eax
810007cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810007ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810007d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810007d4:	8b 45 10             	mov    0x10(%ebp),%eax
810007d7:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
810007da:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007dd:	50                   	push   %eax
810007de:	e8 95 fe ff ff       	call   81000678 <sys_call>
810007e3:	83 c4 04             	add    $0x4,%esp
}
810007e6:	c9                   	leave  
810007e7:	c3                   	ret    

810007e8 <write>:

int write(int file, char *ptr, int len)
{
810007e8:	55                   	push   %ebp
810007e9:	89 e5                	mov    %esp,%ebp
810007eb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
810007ee:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
810007f5:	8b 45 08             	mov    0x8(%ebp),%eax
810007f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810007fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810007fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000801:	8b 45 10             	mov    0x10(%ebp),%eax
81000804:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000807:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100080a:	50                   	push   %eax
8100080b:	e8 68 fe ff ff       	call   81000678 <sys_call>
81000810:	83 c4 04             	add    $0x4,%esp
}
81000813:	c9                   	leave  
81000814:	c3                   	ret    

81000815 <close>:

int close(int file)
{
81000815:	55                   	push   %ebp
81000816:	89 e5                	mov    %esp,%ebp
81000818:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100081b:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000822:	8b 45 08             	mov    0x8(%ebp),%eax
81000825:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000828:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100082b:	50                   	push   %eax
8100082c:	e8 47 fe ff ff       	call   81000678 <sys_call>
81000831:	83 c4 04             	add    $0x4,%esp
}
81000834:	c9                   	leave  
81000835:	c3                   	ret    

81000836 <lseek>:

int lseek(int file, int ptr, int dir)
{
81000836:	55                   	push   %ebp
81000837:	89 e5                	mov    %esp,%ebp
81000839:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100083c:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
81000843:	8b 45 08             	mov    0x8(%ebp),%eax
81000846:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000849:	8b 45 0c             	mov    0xc(%ebp),%eax
8100084c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
8100084f:	8b 45 10             	mov    0x10(%ebp),%eax
81000852:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000855:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000858:	50                   	push   %eax
81000859:	e8 1a fe ff ff       	call   81000678 <sys_call>
8100085e:	83 c4 04             	add    $0x4,%esp
}
81000861:	c9                   	leave  
81000862:	c3                   	ret    

81000863 <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st)
{
81000863:	55                   	push   %ebp
81000864:	89 e5                	mov    %esp,%ebp
81000866:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000869:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
81000870:	8b 45 08             	mov    0x8(%ebp),%eax
81000873:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000876:	8b 45 0c             	mov    0xc(%ebp),%eax
81000879:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
8100087c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100087f:	50                   	push   %eax
81000880:	e8 f3 fd ff ff       	call   81000678 <sys_call>
81000885:	83 c4 04             	add    $0x4,%esp
}
81000888:	c9                   	leave  
81000889:	c3                   	ret    

8100088a <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file)
{
8100088a:	55                   	push   %ebp
8100088b:	89 e5                	mov    %esp,%ebp
8100088d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000890:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
81000897:	8b 45 08             	mov    0x8(%ebp),%eax
8100089a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
8100089d:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008a0:	50                   	push   %eax
810008a1:	e8 d2 fd ff ff       	call   81000678 <sys_call>
810008a6:	83 c4 04             	add    $0x4,%esp
}
810008a9:	c9                   	leave  
810008aa:	c3                   	ret    

810008ab <sbrk>:

void *sbrk(ptrdiff_t incr)
{
810008ab:	55                   	push   %ebp
810008ac:	89 e5                	mov    %esp,%ebp
810008ae:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810008b1:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
810008b8:	8b 45 08             	mov    0x8(%ebp),%eax
810008bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
810008be:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008c1:	50                   	push   %eax
810008c2:	e8 b1 fd ff ff       	call   81000678 <sys_call>
810008c7:	83 c4 04             	add    $0x4,%esp
}
810008ca:	c9                   	leave  
810008cb:	c3                   	ret    

810008cc <dup>:

int dup(int file)
{
810008cc:	55                   	push   %ebp
810008cd:	89 e5                	mov    %esp,%ebp
810008cf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
810008d2:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
810008d9:	8b 45 08             	mov    0x8(%ebp),%eax
810008dc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
810008df:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008e2:	50                   	push   %eax
810008e3:	e8 90 fd ff ff       	call   81000678 <sys_call>
810008e8:	83 c4 04             	add    $0x4,%esp
}
810008eb:	c9                   	leave  
810008ec:	c3                   	ret    

810008ed <wait>:

int wait(int *status)
{
810008ed:	55                   	push   %ebp
810008ee:	89 e5                	mov    %esp,%ebp
810008f0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
810008f3:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
810008fa:	8b 45 08             	mov    0x8(%ebp),%eax
810008fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000900:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000903:	50                   	push   %eax
81000904:	e8 6f fd ff ff       	call   81000678 <sys_call>
81000909:	83 c4 04             	add    $0x4,%esp
}
8100090c:	c9                   	leave  
8100090d:	c3                   	ret    

8100090e <_exit>:

void _exit(int status)
{
8100090e:	55                   	push   %ebp
8100090f:	89 e5                	mov    %esp,%ebp
81000911:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000914:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
8100091b:	8b 45 08             	mov    0x8(%ebp),%eax
8100091e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000921:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000924:	50                   	push   %eax
81000925:	e8 4e fd ff ff       	call   81000678 <sys_call>
8100092a:	83 c4 04             	add    $0x4,%esp
    for (;;)
8100092d:	eb fe                	jmp    8100092d <_exit+0x1f>

8100092f <atoi>:
8100092f:	55                   	push   %ebp
81000930:	89 e5                	mov    %esp,%ebp
81000932:	83 ec 08             	sub    $0x8,%esp
81000935:	83 ec 04             	sub    $0x4,%esp
81000938:	6a 0a                	push   $0xa
8100093a:	6a 00                	push   $0x0
8100093c:	ff 75 08             	pushl  0x8(%ebp)
8100093f:	e8 92 40 00 00       	call   810049d6 <strtol>
81000944:	83 c4 10             	add    $0x10,%esp
81000947:	c9                   	leave  
81000948:	c3                   	ret    

81000949 <_atoi_r>:
81000949:	55                   	push   %ebp
8100094a:	89 e5                	mov    %esp,%ebp
8100094c:	83 ec 08             	sub    $0x8,%esp
8100094f:	6a 0a                	push   $0xa
81000951:	6a 00                	push   $0x0
81000953:	ff 75 0c             	pushl  0xc(%ebp)
81000956:	ff 75 08             	pushl  0x8(%ebp)
81000959:	e8 2e 40 00 00       	call   8100498c <_strtol_r>
8100095e:	83 c4 10             	add    $0x10,%esp
81000961:	c9                   	leave  
81000962:	c3                   	ret    

81000963 <exit>:
81000963:	55                   	push   %ebp
81000964:	89 e5                	mov    %esp,%ebp
81000966:	83 ec 08             	sub    $0x8,%esp
81000969:	83 ec 08             	sub    $0x8,%esp
8100096c:	6a 00                	push   $0x0
8100096e:	ff 75 08             	pushl  0x8(%ebp)
81000971:	e8 5d 43 00 00       	call   81004cd3 <__call_exitprocs>
81000976:	83 c4 10             	add    $0x10,%esp
81000979:	a1 f0 73 00 81       	mov    0x810073f0,%eax
8100097e:	8b 40 3c             	mov    0x3c(%eax),%eax
81000981:	85 c0                	test   %eax,%eax
81000983:	74 17                	je     8100099c <exit+0x39>
81000985:	a1 f0 73 00 81       	mov    0x810073f0,%eax
8100098a:	8b 40 3c             	mov    0x3c(%eax),%eax
8100098d:	8b 15 f0 73 00 81    	mov    0x810073f0,%edx
81000993:	83 ec 0c             	sub    $0xc,%esp
81000996:	52                   	push   %edx
81000997:	ff d0                	call   *%eax
81000999:	83 c4 10             	add    $0x10,%esp
8100099c:	83 ec 0c             	sub    $0xc,%esp
8100099f:	ff 75 08             	pushl  0x8(%ebp)
810009a2:	e8 67 ff ff ff       	call   8100090e <_exit>

810009a7 <__sflush_r>:
810009a7:	55                   	push   %ebp
810009a8:	89 e5                	mov    %esp,%ebp
810009aa:	57                   	push   %edi
810009ab:	56                   	push   %esi
810009ac:	53                   	push   %ebx
810009ad:	83 ec 1c             	sub    $0x1c,%esp
810009b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009b7:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810009bb:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810009bf:	83 e0 08             	and    $0x8,%eax
810009c2:	85 c0                	test   %eax,%eax
810009c4:	0f 85 93 01 00 00    	jne    81000b5d <__sflush_r+0x1b6>
810009ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009ce:	80 cc 08             	or     $0x8,%ah
810009d1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810009d5:	8b 43 04             	mov    0x4(%ebx),%eax
810009d8:	85 c0                	test   %eax,%eax
810009da:	7f 0b                	jg     810009e7 <__sflush_r+0x40>
810009dc:	8b 43 3c             	mov    0x3c(%ebx),%eax
810009df:	85 c0                	test   %eax,%eax
810009e1:	0f 8e 6f 01 00 00    	jle    81000b56 <__sflush_r+0x1af>
810009e7:	8b 43 28             	mov    0x28(%ebx),%eax
810009ea:	85 c0                	test   %eax,%eax
810009ec:	0f 84 64 01 00 00    	je     81000b56 <__sflush_r+0x1af>
810009f2:	8b 45 08             	mov    0x8(%ebp),%eax
810009f5:	8b 00                	mov    (%eax),%eax
810009f7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810009fa:	8b 45 08             	mov    0x8(%ebp),%eax
810009fd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000a03:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a07:	98                   	cwtl   
81000a08:	25 00 10 00 00       	and    $0x1000,%eax
81000a0d:	85 c0                	test   %eax,%eax
81000a0f:	74 08                	je     81000a19 <__sflush_r+0x72>
81000a11:	8b 43 50             	mov    0x50(%ebx),%eax
81000a14:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000a17:	eb 64                	jmp    81000a7d <__sflush_r+0xd6>
81000a19:	8b 43 28             	mov    0x28(%ebx),%eax
81000a1c:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000a1f:	6a 01                	push   $0x1
81000a21:	6a 00                	push   $0x0
81000a23:	52                   	push   %edx
81000a24:	ff 75 08             	pushl  0x8(%ebp)
81000a27:	ff d0                	call   *%eax
81000a29:	83 c4 10             	add    $0x10,%esp
81000a2c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000a2f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000a33:	75 48                	jne    81000a7d <__sflush_r+0xd6>
81000a35:	8b 45 08             	mov    0x8(%ebp),%eax
81000a38:	8b 00                	mov    (%eax),%eax
81000a3a:	85 c0                	test   %eax,%eax
81000a3c:	74 3f                	je     81000a7d <__sflush_r+0xd6>
81000a3e:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000a45:	8b 45 08             	mov    0x8(%ebp),%eax
81000a48:	8b 00                	mov    (%eax),%eax
81000a4a:	83 f8 1d             	cmp    $0x1d,%eax
81000a4d:	74 0a                	je     81000a59 <__sflush_r+0xb2>
81000a4f:	8b 45 08             	mov    0x8(%ebp),%eax
81000a52:	8b 00                	mov    (%eax),%eax
81000a54:	83 f8 16             	cmp    $0x16,%eax
81000a57:	75 11                	jne    81000a6a <__sflush_r+0xc3>
81000a59:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000a60:	8b 45 08             	mov    0x8(%ebp),%eax
81000a63:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000a66:	89 10                	mov    %edx,(%eax)
81000a68:	eb 0b                	jmp    81000a75 <__sflush_r+0xce>
81000a6a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a6e:	83 c8 40             	or     $0x40,%eax
81000a71:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a75:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000a78:	e9 48 01 00 00       	jmp    81000bc5 <__sflush_r+0x21e>
81000a7d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a81:	98                   	cwtl   
81000a82:	83 e0 04             	and    $0x4,%eax
81000a85:	85 c0                	test   %eax,%eax
81000a87:	74 13                	je     81000a9c <__sflush_r+0xf5>
81000a89:	8b 43 04             	mov    0x4(%ebx),%eax
81000a8c:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000a8f:	8b 43 30             	mov    0x30(%ebx),%eax
81000a92:	85 c0                	test   %eax,%eax
81000a94:	74 06                	je     81000a9c <__sflush_r+0xf5>
81000a96:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000a99:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000a9c:	8b 43 28             	mov    0x28(%ebx),%eax
81000a9f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000aa2:	6a 00                	push   $0x0
81000aa4:	ff 75 e4             	pushl  -0x1c(%ebp)
81000aa7:	52                   	push   %edx
81000aa8:	ff 75 08             	pushl  0x8(%ebp)
81000aab:	ff d0                	call   *%eax
81000aad:	83 c4 10             	add    $0x10,%esp
81000ab0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000ab3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000ab7:	75 1d                	jne    81000ad6 <__sflush_r+0x12f>
81000ab9:	8b 45 08             	mov    0x8(%ebp),%eax
81000abc:	8b 00                	mov    (%eax),%eax
81000abe:	85 c0                	test   %eax,%eax
81000ac0:	74 14                	je     81000ad6 <__sflush_r+0x12f>
81000ac2:	8b 45 08             	mov    0x8(%ebp),%eax
81000ac5:	8b 00                	mov    (%eax),%eax
81000ac7:	83 f8 1d             	cmp    $0x1d,%eax
81000aca:	74 0a                	je     81000ad6 <__sflush_r+0x12f>
81000acc:	8b 45 08             	mov    0x8(%ebp),%eax
81000acf:	8b 00                	mov    (%eax),%eax
81000ad1:	83 f8 16             	cmp    $0x16,%eax
81000ad4:	75 6e                	jne    81000b44 <__sflush_r+0x19d>
81000ad6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ada:	80 e4 f7             	and    $0xf7,%ah
81000add:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ae1:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000ae8:	8b 43 10             	mov    0x10(%ebx),%eax
81000aeb:	89 03                	mov    %eax,(%ebx)
81000aed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000af1:	98                   	cwtl   
81000af2:	25 00 10 00 00       	and    $0x1000,%eax
81000af7:	85 c0                	test   %eax,%eax
81000af9:	74 15                	je     81000b10 <__sflush_r+0x169>
81000afb:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000aff:	75 09                	jne    81000b0a <__sflush_r+0x163>
81000b01:	8b 45 08             	mov    0x8(%ebp),%eax
81000b04:	8b 00                	mov    (%eax),%eax
81000b06:	85 c0                	test   %eax,%eax
81000b08:	75 06                	jne    81000b10 <__sflush_r+0x169>
81000b0a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000b0d:	89 43 50             	mov    %eax,0x50(%ebx)
81000b10:	8b 45 08             	mov    0x8(%ebp),%eax
81000b13:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b16:	89 10                	mov    %edx,(%eax)
81000b18:	8b 43 30             	mov    0x30(%ebx),%eax
81000b1b:	85 c0                	test   %eax,%eax
81000b1d:	74 37                	je     81000b56 <__sflush_r+0x1af>
81000b1f:	8b 53 30             	mov    0x30(%ebx),%edx
81000b22:	8d 43 40             	lea    0x40(%ebx),%eax
81000b25:	39 c2                	cmp    %eax,%edx
81000b27:	74 12                	je     81000b3b <__sflush_r+0x194>
81000b29:	8b 43 30             	mov    0x30(%ebx),%eax
81000b2c:	83 ec 08             	sub    $0x8,%esp
81000b2f:	50                   	push   %eax
81000b30:	ff 75 08             	pushl  0x8(%ebp)
81000b33:	e8 fa 06 00 00       	call   81001232 <_free_r>
81000b38:	83 c4 10             	add    $0x10,%esp
81000b3b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000b42:	eb 12                	jmp    81000b56 <__sflush_r+0x1af>
81000b44:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b48:	83 c8 40             	or     $0x40,%eax
81000b4b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b4f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000b54:	eb 6f                	jmp    81000bc5 <__sflush_r+0x21e>
81000b56:	b8 00 00 00 00       	mov    $0x0,%eax
81000b5b:	eb 68                	jmp    81000bc5 <__sflush_r+0x21e>
81000b5d:	8b 73 10             	mov    0x10(%ebx),%esi
81000b60:	85 f6                	test   %esi,%esi
81000b62:	75 07                	jne    81000b6b <__sflush_r+0x1c4>
81000b64:	b8 00 00 00 00       	mov    $0x0,%eax
81000b69:	eb 5a                	jmp    81000bc5 <__sflush_r+0x21e>
81000b6b:	8b 03                	mov    (%ebx),%eax
81000b6d:	29 f0                	sub    %esi,%eax
81000b6f:	89 c7                	mov    %eax,%edi
81000b71:	89 33                	mov    %esi,(%ebx)
81000b73:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000b77:	83 e0 03             	and    $0x3,%eax
81000b7a:	85 c0                	test   %eax,%eax
81000b7c:	75 05                	jne    81000b83 <__sflush_r+0x1dc>
81000b7e:	8b 43 14             	mov    0x14(%ebx),%eax
81000b81:	eb 05                	jmp    81000b88 <__sflush_r+0x1e1>
81000b83:	b8 00 00 00 00       	mov    $0x0,%eax
81000b88:	89 43 08             	mov    %eax,0x8(%ebx)
81000b8b:	eb 2f                	jmp    81000bbc <__sflush_r+0x215>
81000b8d:	8b 43 24             	mov    0x24(%ebx),%eax
81000b90:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000b93:	57                   	push   %edi
81000b94:	56                   	push   %esi
81000b95:	52                   	push   %edx
81000b96:	ff 75 08             	pushl  0x8(%ebp)
81000b99:	ff d0                	call   *%eax
81000b9b:	83 c4 10             	add    $0x10,%esp
81000b9e:	85 c0                	test   %eax,%eax
81000ba0:	7f 12                	jg     81000bb4 <__sflush_r+0x20d>
81000ba2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ba6:	83 c8 40             	or     $0x40,%eax
81000ba9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000bb2:	eb 11                	jmp    81000bc5 <__sflush_r+0x21e>
81000bb4:	89 c1                	mov    %eax,%ecx
81000bb6:	89 c8                	mov    %ecx,%eax
81000bb8:	01 c6                	add    %eax,%esi
81000bba:	29 cf                	sub    %ecx,%edi
81000bbc:	85 ff                	test   %edi,%edi
81000bbe:	7f cd                	jg     81000b8d <__sflush_r+0x1e6>
81000bc0:	b8 00 00 00 00       	mov    $0x0,%eax
81000bc5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000bc8:	5b                   	pop    %ebx
81000bc9:	5e                   	pop    %esi
81000bca:	5f                   	pop    %edi
81000bcb:	5d                   	pop    %ebp
81000bcc:	c3                   	ret    

81000bcd <_fflush_r>:
81000bcd:	55                   	push   %ebp
81000bce:	89 e5                	mov    %esp,%ebp
81000bd0:	53                   	push   %ebx
81000bd1:	83 ec 14             	sub    $0x14,%esp
81000bd4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000bd7:	8b 45 08             	mov    0x8(%ebp),%eax
81000bda:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000bdd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000be1:	74 18                	je     81000bfb <_fflush_r+0x2e>
81000be3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000be6:	8b 40 38             	mov    0x38(%eax),%eax
81000be9:	85 c0                	test   %eax,%eax
81000beb:	75 0e                	jne    81000bfb <_fflush_r+0x2e>
81000bed:	83 ec 0c             	sub    $0xc,%esp
81000bf0:	ff 75 f4             	pushl  -0xc(%ebp)
81000bf3:	e8 d8 04 00 00       	call   810010d0 <__sinit>
81000bf8:	83 c4 10             	add    $0x10,%esp
81000bfb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bff:	66 85 c0             	test   %ax,%ax
81000c02:	75 07                	jne    81000c0b <_fflush_r+0x3e>
81000c04:	b8 00 00 00 00       	mov    $0x0,%eax
81000c09:	eb 15                	jmp    81000c20 <_fflush_r+0x53>
81000c0b:	83 ec 08             	sub    $0x8,%esp
81000c0e:	53                   	push   %ebx
81000c0f:	ff 75 08             	pushl  0x8(%ebp)
81000c12:	e8 90 fd ff ff       	call   810009a7 <__sflush_r>
81000c17:	83 c4 10             	add    $0x10,%esp
81000c1a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000c1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c20:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000c23:	c9                   	leave  
81000c24:	c3                   	ret    

81000c25 <fflush>:
81000c25:	55                   	push   %ebp
81000c26:	89 e5                	mov    %esp,%ebp
81000c28:	83 ec 08             	sub    $0x8,%esp
81000c2b:	8b 55 08             	mov    0x8(%ebp),%edx
81000c2e:	85 d2                	test   %edx,%edx
81000c30:	75 18                	jne    81000c4a <fflush+0x25>
81000c32:	a1 f0 73 00 81       	mov    0x810073f0,%eax
81000c37:	83 ec 08             	sub    $0x8,%esp
81000c3a:	68 cd 0b 00 81       	push   $0x81000bcd
81000c3f:	50                   	push   %eax
81000c40:	e8 91 0b 00 00       	call   810017d6 <_fwalk_reent>
81000c45:	83 c4 10             	add    $0x10,%esp
81000c48:	eb 12                	jmp    81000c5c <fflush+0x37>
81000c4a:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81000c4f:	83 ec 08             	sub    $0x8,%esp
81000c52:	52                   	push   %edx
81000c53:	50                   	push   %eax
81000c54:	e8 74 ff ff ff       	call   81000bcd <_fflush_r>
81000c59:	83 c4 10             	add    $0x10,%esp
81000c5c:	c9                   	leave  
81000c5d:	c3                   	ret    

81000c5e <_fgets_r>:
81000c5e:	55                   	push   %ebp
81000c5f:	89 e5                	mov    %esp,%ebp
81000c61:	83 ec 28             	sub    $0x28,%esp
81000c64:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000c68:	7f 0a                	jg     81000c74 <_fgets_r+0x16>
81000c6a:	b8 00 00 00 00       	mov    $0x0,%eax
81000c6f:	e9 46 01 00 00       	jmp    81000dba <_fgets_r+0x15c>
81000c74:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c77:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000c7a:	8b 45 08             	mov    0x8(%ebp),%eax
81000c7d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000c80:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000c84:	74 18                	je     81000c9e <_fgets_r+0x40>
81000c86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000c89:	8b 40 38             	mov    0x38(%eax),%eax
81000c8c:	85 c0                	test   %eax,%eax
81000c8e:	75 0e                	jne    81000c9e <_fgets_r+0x40>
81000c90:	83 ec 0c             	sub    $0xc,%esp
81000c93:	ff 75 ec             	pushl  -0x14(%ebp)
81000c96:	e8 35 04 00 00       	call   810010d0 <__sinit>
81000c9b:	83 c4 10             	add    $0x10,%esp
81000c9e:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000ca2:	8b 45 14             	mov    0x14(%ebp),%eax
81000ca5:	8b 40 04             	mov    0x4(%eax),%eax
81000ca8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000caf:	75 34                	jne    81000ce5 <_fgets_r+0x87>
81000cb1:	83 ec 08             	sub    $0x8,%esp
81000cb4:	ff 75 14             	pushl  0x14(%ebp)
81000cb7:	ff 75 08             	pushl  0x8(%ebp)
81000cba:	e8 a5 33 00 00       	call   81004064 <__srefill_r>
81000cbf:	83 c4 10             	add    $0x10,%esp
81000cc2:	85 c0                	test   %eax,%eax
81000cc4:	74 16                	je     81000cdc <_fgets_r+0x7e>
81000cc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000cc9:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000ccc:	0f 85 de 00 00 00    	jne    81000db0 <_fgets_r+0x152>
81000cd2:	b8 00 00 00 00       	mov    $0x0,%eax
81000cd7:	e9 de 00 00 00       	jmp    81000dba <_fgets_r+0x15c>
81000cdc:	8b 45 14             	mov    0x14(%ebp),%eax
81000cdf:	8b 40 04             	mov    0x4(%eax),%eax
81000ce2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ce5:	8b 45 14             	mov    0x14(%ebp),%eax
81000ce8:	8b 00                	mov    (%eax),%eax
81000cea:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000ced:	8b 45 10             	mov    0x10(%ebp),%eax
81000cf0:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000cf3:	76 06                	jbe    81000cfb <_fgets_r+0x9d>
81000cf5:	8b 45 10             	mov    0x10(%ebp),%eax
81000cf8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cfb:	83 ec 04             	sub    $0x4,%esp
81000cfe:	ff 75 f4             	pushl  -0xc(%ebp)
81000d01:	6a 0a                	push   $0xa
81000d03:	ff 75 e8             	pushl  -0x18(%ebp)
81000d06:	e8 c5 24 00 00       	call   810031d0 <memchr>
81000d0b:	83 c4 10             	add    $0x10,%esp
81000d0e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000d11:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d15:	74 4a                	je     81000d61 <_fgets_r+0x103>
81000d17:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000d1b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000d1e:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000d21:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d24:	8b 45 14             	mov    0x14(%ebp),%eax
81000d27:	8b 40 04             	mov    0x4(%eax),%eax
81000d2a:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000d2d:	89 c2                	mov    %eax,%edx
81000d2f:	8b 45 14             	mov    0x14(%ebp),%eax
81000d32:	89 50 04             	mov    %edx,0x4(%eax)
81000d35:	8b 45 14             	mov    0x14(%ebp),%eax
81000d38:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000d3b:	89 10                	mov    %edx,(%eax)
81000d3d:	83 ec 04             	sub    $0x4,%esp
81000d40:	ff 75 f4             	pushl  -0xc(%ebp)
81000d43:	ff 75 e8             	pushl  -0x18(%ebp)
81000d46:	ff 75 f0             	pushl  -0x10(%ebp)
81000d49:	e8 6a 25 00 00       	call   810032b8 <memcpy>
81000d4e:	83 c4 10             	add    $0x10,%esp
81000d51:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000d54:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d57:	01 d0                	add    %edx,%eax
81000d59:	c6 00 00             	movb   $0x0,(%eax)
81000d5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d5f:	eb 59                	jmp    81000dba <_fgets_r+0x15c>
81000d61:	8b 45 14             	mov    0x14(%ebp),%eax
81000d64:	8b 40 04             	mov    0x4(%eax),%eax
81000d67:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000d6a:	89 c2                	mov    %eax,%edx
81000d6c:	8b 45 14             	mov    0x14(%ebp),%eax
81000d6f:	89 50 04             	mov    %edx,0x4(%eax)
81000d72:	8b 45 14             	mov    0x14(%ebp),%eax
81000d75:	8b 10                	mov    (%eax),%edx
81000d77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d7a:	01 c2                	add    %eax,%edx
81000d7c:	8b 45 14             	mov    0x14(%ebp),%eax
81000d7f:	89 10                	mov    %edx,(%eax)
81000d81:	83 ec 04             	sub    $0x4,%esp
81000d84:	ff 75 f4             	pushl  -0xc(%ebp)
81000d87:	ff 75 e8             	pushl  -0x18(%ebp)
81000d8a:	ff 75 f0             	pushl  -0x10(%ebp)
81000d8d:	e8 26 25 00 00       	call   810032b8 <memcpy>
81000d92:	83 c4 10             	add    $0x10,%esp
81000d95:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d98:	01 45 f0             	add    %eax,-0x10(%ebp)
81000d9b:	8b 45 10             	mov    0x10(%ebp),%eax
81000d9e:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000da1:	89 45 10             	mov    %eax,0x10(%ebp)
81000da4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000da8:	0f 85 f4 fe ff ff    	jne    81000ca2 <_fgets_r+0x44>
81000dae:	eb 01                	jmp    81000db1 <_fgets_r+0x153>
81000db0:	90                   	nop
81000db1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000db4:	c6 00 00             	movb   $0x0,(%eax)
81000db7:	8b 45 0c             	mov    0xc(%ebp),%eax
81000dba:	c9                   	leave  
81000dbb:	c3                   	ret    

81000dbc <fgets>:
81000dbc:	55                   	push   %ebp
81000dbd:	89 e5                	mov    %esp,%ebp
81000dbf:	83 ec 08             	sub    $0x8,%esp
81000dc2:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81000dc7:	ff 75 10             	pushl  0x10(%ebp)
81000dca:	ff 75 0c             	pushl  0xc(%ebp)
81000dcd:	ff 75 08             	pushl  0x8(%ebp)
81000dd0:	50                   	push   %eax
81000dd1:	e8 88 fe ff ff       	call   81000c5e <_fgets_r>
81000dd6:	83 c4 10             	add    $0x10,%esp
81000dd9:	c9                   	leave  
81000dda:	c3                   	ret    

81000ddb <std>:
81000ddb:	55                   	push   %ebp
81000ddc:	89 e5                	mov    %esp,%ebp
81000dde:	83 ec 08             	sub    $0x8,%esp
81000de1:	8b 45 08             	mov    0x8(%ebp),%eax
81000de4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000dea:	8b 45 08             	mov    0x8(%ebp),%eax
81000ded:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000df4:	8b 45 08             	mov    0x8(%ebp),%eax
81000df7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000dfe:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e01:	89 c2                	mov    %eax,%edx
81000e03:	8b 45 08             	mov    0x8(%ebp),%eax
81000e06:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000e0a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e0d:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000e14:	8b 45 10             	mov    0x10(%ebp),%eax
81000e17:	89 c2                	mov    %eax,%edx
81000e19:	8b 45 08             	mov    0x8(%ebp),%eax
81000e1c:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000e20:	8b 45 08             	mov    0x8(%ebp),%eax
81000e23:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000e2a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e2d:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000e34:	8b 45 08             	mov    0x8(%ebp),%eax
81000e37:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000e3e:	8b 45 08             	mov    0x8(%ebp),%eax
81000e41:	83 c0 5c             	add    $0x5c,%eax
81000e44:	83 ec 04             	sub    $0x4,%esp
81000e47:	6a 08                	push   $0x8
81000e49:	6a 00                	push   $0x0
81000e4b:	50                   	push   %eax
81000e4c:	e8 af 24 00 00       	call   81003300 <memset>
81000e51:	83 c4 10             	add    $0x10,%esp
81000e54:	8b 45 08             	mov    0x8(%ebp),%eax
81000e57:	8b 55 08             	mov    0x8(%ebp),%edx
81000e5a:	89 50 1c             	mov    %edx,0x1c(%eax)
81000e5d:	8b 45 08             	mov    0x8(%ebp),%eax
81000e60:	c7 40 20 52 43 00 81 	movl   $0x81004352,0x20(%eax)
81000e67:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6a:	c7 40 24 a0 43 00 81 	movl   $0x810043a0,0x24(%eax)
81000e71:	8b 45 08             	mov    0x8(%ebp),%eax
81000e74:	c7 40 28 fb 43 00 81 	movl   $0x810043fb,0x28(%eax)
81000e7b:	8b 45 08             	mov    0x8(%ebp),%eax
81000e7e:	c7 40 2c 45 44 00 81 	movl   $0x81004445,0x2c(%eax)
81000e85:	90                   	nop
81000e86:	c9                   	leave  
81000e87:	c3                   	ret    

81000e88 <stdin_init>:
81000e88:	55                   	push   %ebp
81000e89:	89 e5                	mov    %esp,%ebp
81000e8b:	83 ec 08             	sub    $0x8,%esp
81000e8e:	83 ec 04             	sub    $0x4,%esp
81000e91:	6a 00                	push   $0x0
81000e93:	6a 04                	push   $0x4
81000e95:	ff 75 08             	pushl  0x8(%ebp)
81000e98:	e8 3e ff ff ff       	call   81000ddb <std>
81000e9d:	83 c4 10             	add    $0x10,%esp
81000ea0:	90                   	nop
81000ea1:	c9                   	leave  
81000ea2:	c3                   	ret    

81000ea3 <stdout_init>:
81000ea3:	55                   	push   %ebp
81000ea4:	89 e5                	mov    %esp,%ebp
81000ea6:	83 ec 08             	sub    $0x8,%esp
81000ea9:	83 ec 04             	sub    $0x4,%esp
81000eac:	6a 01                	push   $0x1
81000eae:	6a 09                	push   $0x9
81000eb0:	ff 75 08             	pushl  0x8(%ebp)
81000eb3:	e8 23 ff ff ff       	call   81000ddb <std>
81000eb8:	83 c4 10             	add    $0x10,%esp
81000ebb:	90                   	nop
81000ebc:	c9                   	leave  
81000ebd:	c3                   	ret    

81000ebe <stderr_init>:
81000ebe:	55                   	push   %ebp
81000ebf:	89 e5                	mov    %esp,%ebp
81000ec1:	83 ec 08             	sub    $0x8,%esp
81000ec4:	83 ec 04             	sub    $0x4,%esp
81000ec7:	6a 02                	push   $0x2
81000ec9:	6a 12                	push   $0x12
81000ecb:	ff 75 08             	pushl  0x8(%ebp)
81000ece:	e8 08 ff ff ff       	call   81000ddb <std>
81000ed3:	83 c4 10             	add    $0x10,%esp
81000ed6:	90                   	nop
81000ed7:	c9                   	leave  
81000ed8:	c3                   	ret    

81000ed9 <__sfmoreglue>:
81000ed9:	55                   	push   %ebp
81000eda:	89 e5                	mov    %esp,%ebp
81000edc:	53                   	push   %ebx
81000edd:	83 ec 14             	sub    $0x14,%esp
81000ee0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000ee3:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000ee6:	6b c0 68             	imul   $0x68,%eax,%eax
81000ee9:	83 c0 74             	add    $0x74,%eax
81000eec:	83 ec 08             	sub    $0x8,%esp
81000eef:	50                   	push   %eax
81000ef0:	ff 75 08             	pushl  0x8(%ebp)
81000ef3:	e8 a7 1a 00 00       	call   8100299f <_malloc_r>
81000ef8:	83 c4 10             	add    $0x10,%esp
81000efb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000efe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000f02:	75 07                	jne    81000f0b <__sfmoreglue+0x32>
81000f04:	b8 00 00 00 00       	mov    $0x0,%eax
81000f09:	eb 38                	jmp    81000f43 <__sfmoreglue+0x6a>
81000f0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f0e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000f14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f17:	89 58 04             	mov    %ebx,0x4(%eax)
81000f1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f1d:	8d 50 0c             	lea    0xc(%eax),%edx
81000f20:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f23:	89 50 08             	mov    %edx,0x8(%eax)
81000f26:	89 d8                	mov    %ebx,%eax
81000f28:	6b c0 68             	imul   $0x68,%eax,%eax
81000f2b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f2e:	83 c2 0c             	add    $0xc,%edx
81000f31:	83 ec 04             	sub    $0x4,%esp
81000f34:	50                   	push   %eax
81000f35:	6a 00                	push   $0x0
81000f37:	52                   	push   %edx
81000f38:	e8 c3 23 00 00       	call   81003300 <memset>
81000f3d:	83 c4 10             	add    $0x10,%esp
81000f40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f43:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000f46:	c9                   	leave  
81000f47:	c3                   	ret    

81000f48 <__sfp>:
81000f48:	55                   	push   %ebp
81000f49:	89 e5                	mov    %esp,%ebp
81000f4b:	83 ec 18             	sub    $0x18,%esp
81000f4e:	e8 16 02 00 00       	call   81001169 <__sfp_lock_acquire>
81000f53:	a1 f0 73 00 81       	mov    0x810073f0,%eax
81000f58:	8b 40 38             	mov    0x38(%eax),%eax
81000f5b:	85 c0                	test   %eax,%eax
81000f5d:	75 11                	jne    81000f70 <__sfp+0x28>
81000f5f:	a1 f0 73 00 81       	mov    0x810073f0,%eax
81000f64:	83 ec 0c             	sub    $0xc,%esp
81000f67:	50                   	push   %eax
81000f68:	e8 63 01 00 00       	call   810010d0 <__sinit>
81000f6d:	83 c4 10             	add    $0x10,%esp
81000f70:	a1 f0 73 00 81       	mov    0x810073f0,%eax
81000f75:	05 e0 02 00 00       	add    $0x2e0,%eax
81000f7a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000f7d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f80:	8b 40 08             	mov    0x8(%eax),%eax
81000f83:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000f86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f89:	8b 40 04             	mov    0x4(%eax),%eax
81000f8c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f8f:	eb 10                	jmp    81000fa1 <__sfp+0x59>
81000f91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f94:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000f98:	66 85 c0             	test   %ax,%ax
81000f9b:	74 58                	je     81000ff5 <__sfp+0xad>
81000f9d:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000fa1:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000fa5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000fa9:	79 e6                	jns    81000f91 <__sfp+0x49>
81000fab:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fae:	8b 00                	mov    (%eax),%eax
81000fb0:	85 c0                	test   %eax,%eax
81000fb2:	75 1e                	jne    81000fd2 <__sfp+0x8a>
81000fb4:	83 ec 08             	sub    $0x8,%esp
81000fb7:	6a 04                	push   $0x4
81000fb9:	ff 75 08             	pushl  0x8(%ebp)
81000fbc:	e8 18 ff ff ff       	call   81000ed9 <__sfmoreglue>
81000fc1:	83 c4 10             	add    $0x10,%esp
81000fc4:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000fc7:	89 02                	mov    %eax,(%edx)
81000fc9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fcc:	8b 00                	mov    (%eax),%eax
81000fce:	85 c0                	test   %eax,%eax
81000fd0:	74 0a                	je     81000fdc <__sfp+0x94>
81000fd2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fd5:	8b 00                	mov    (%eax),%eax
81000fd7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fda:	eb a1                	jmp    81000f7d <__sfp+0x35>
81000fdc:	90                   	nop
81000fdd:	e8 8d 01 00 00       	call   8100116f <__sfp_lock_release>
81000fe2:	8b 45 08             	mov    0x8(%ebp),%eax
81000fe5:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000feb:	b8 00 00 00 00       	mov    $0x0,%eax
81000ff0:	e9 9e 00 00 00       	jmp    81001093 <__sfp+0x14b>
81000ff5:	90                   	nop
81000ff6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff9:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000fff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001002:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81001008:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001012:	e8 58 01 00 00       	call   8100116f <__sfp_lock_release>
81001017:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001020:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001023:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100102a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001034:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001037:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100103e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001041:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001048:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100104b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001052:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001055:	83 c0 5c             	add    $0x5c,%eax
81001058:	83 ec 04             	sub    $0x4,%esp
8100105b:	6a 08                	push   $0x8
8100105d:	6a 00                	push   $0x0
8100105f:	50                   	push   %eax
81001060:	e8 9b 22 00 00       	call   81003300 <memset>
81001065:	83 c4 10             	add    $0x10,%esp
81001068:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100106b:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001072:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001075:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100107c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100107f:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81001086:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001089:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001090:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001093:	c9                   	leave  
81001094:	c3                   	ret    

81001095 <_cleanup_r>:
81001095:	55                   	push   %ebp
81001096:	89 e5                	mov    %esp,%ebp
81001098:	83 ec 18             	sub    $0x18,%esp
8100109b:	c7 45 f4 32 4e 00 81 	movl   $0x81004e32,-0xc(%ebp)
810010a2:	83 ec 08             	sub    $0x8,%esp
810010a5:	ff 75 f4             	pushl  -0xc(%ebp)
810010a8:	ff 75 08             	pushl  0x8(%ebp)
810010ab:	e8 26 07 00 00       	call   810017d6 <_fwalk_reent>
810010b0:	83 c4 10             	add    $0x10,%esp
810010b3:	90                   	nop
810010b4:	c9                   	leave  
810010b5:	c3                   	ret    

810010b6 <_cleanup>:
810010b6:	55                   	push   %ebp
810010b7:	89 e5                	mov    %esp,%ebp
810010b9:	83 ec 08             	sub    $0x8,%esp
810010bc:	a1 f0 73 00 81       	mov    0x810073f0,%eax
810010c1:	83 ec 0c             	sub    $0xc,%esp
810010c4:	50                   	push   %eax
810010c5:	e8 cb ff ff ff       	call   81001095 <_cleanup_r>
810010ca:	83 c4 10             	add    $0x10,%esp
810010cd:	90                   	nop
810010ce:	c9                   	leave  
810010cf:	c3                   	ret    

810010d0 <__sinit>:
810010d0:	55                   	push   %ebp
810010d1:	89 e5                	mov    %esp,%ebp
810010d3:	83 ec 08             	sub    $0x8,%esp
810010d6:	e8 9a 00 00 00       	call   81001175 <__sinit_lock_acquire>
810010db:	8b 45 08             	mov    0x8(%ebp),%eax
810010de:	8b 40 38             	mov    0x38(%eax),%eax
810010e1:	85 c0                	test   %eax,%eax
810010e3:	74 07                	je     810010ec <__sinit+0x1c>
810010e5:	e8 91 00 00 00       	call   8100117b <__sinit_lock_release>
810010ea:	eb 7b                	jmp    81001167 <__sinit+0x97>
810010ec:	8b 45 08             	mov    0x8(%ebp),%eax
810010ef:	c7 40 3c 95 10 00 81 	movl   $0x81001095,0x3c(%eax)
810010f6:	8b 45 08             	mov    0x8(%ebp),%eax
810010f9:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001100:	00 00 00 
81001103:	8b 45 08             	mov    0x8(%ebp),%eax
81001106:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100110d:	00 00 00 
81001110:	8b 45 08             	mov    0x8(%ebp),%eax
81001113:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81001119:	8b 45 08             	mov    0x8(%ebp),%eax
8100111c:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001122:	8b 45 08             	mov    0x8(%ebp),%eax
81001125:	8b 40 04             	mov    0x4(%eax),%eax
81001128:	83 ec 0c             	sub    $0xc,%esp
8100112b:	50                   	push   %eax
8100112c:	e8 57 fd ff ff       	call   81000e88 <stdin_init>
81001131:	83 c4 10             	add    $0x10,%esp
81001134:	8b 45 08             	mov    0x8(%ebp),%eax
81001137:	8b 40 08             	mov    0x8(%eax),%eax
8100113a:	83 ec 0c             	sub    $0xc,%esp
8100113d:	50                   	push   %eax
8100113e:	e8 60 fd ff ff       	call   81000ea3 <stdout_init>
81001143:	83 c4 10             	add    $0x10,%esp
81001146:	8b 45 08             	mov    0x8(%ebp),%eax
81001149:	8b 40 0c             	mov    0xc(%eax),%eax
8100114c:	83 ec 0c             	sub    $0xc,%esp
8100114f:	50                   	push   %eax
81001150:	e8 69 fd ff ff       	call   81000ebe <stderr_init>
81001155:	83 c4 10             	add    $0x10,%esp
81001158:	8b 45 08             	mov    0x8(%ebp),%eax
8100115b:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001162:	e8 14 00 00 00       	call   8100117b <__sinit_lock_release>
81001167:	c9                   	leave  
81001168:	c3                   	ret    

81001169 <__sfp_lock_acquire>:
81001169:	55                   	push   %ebp
8100116a:	89 e5                	mov    %esp,%ebp
8100116c:	90                   	nop
8100116d:	5d                   	pop    %ebp
8100116e:	c3                   	ret    

8100116f <__sfp_lock_release>:
8100116f:	55                   	push   %ebp
81001170:	89 e5                	mov    %esp,%ebp
81001172:	90                   	nop
81001173:	5d                   	pop    %ebp
81001174:	c3                   	ret    

81001175 <__sinit_lock_acquire>:
81001175:	55                   	push   %ebp
81001176:	89 e5                	mov    %esp,%ebp
81001178:	90                   	nop
81001179:	5d                   	pop    %ebp
8100117a:	c3                   	ret    

8100117b <__sinit_lock_release>:
8100117b:	55                   	push   %ebp
8100117c:	89 e5                	mov    %esp,%ebp
8100117e:	90                   	nop
8100117f:	5d                   	pop    %ebp
81001180:	c3                   	ret    

81001181 <__fp_lock>:
81001181:	55                   	push   %ebp
81001182:	89 e5                	mov    %esp,%ebp
81001184:	b8 00 00 00 00       	mov    $0x0,%eax
81001189:	5d                   	pop    %ebp
8100118a:	c3                   	ret    

8100118b <__fp_unlock>:
8100118b:	55                   	push   %ebp
8100118c:	89 e5                	mov    %esp,%ebp
8100118e:	b8 00 00 00 00       	mov    $0x0,%eax
81001193:	5d                   	pop    %ebp
81001194:	c3                   	ret    

81001195 <__fp_lock_all>:
81001195:	55                   	push   %ebp
81001196:	89 e5                	mov    %esp,%ebp
81001198:	83 ec 08             	sub    $0x8,%esp
8100119b:	e8 c9 ff ff ff       	call   81001169 <__sfp_lock_acquire>
810011a0:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810011a5:	83 ec 08             	sub    $0x8,%esp
810011a8:	68 81 11 00 81       	push   $0x81001181
810011ad:	50                   	push   %eax
810011ae:	e8 bb 05 00 00       	call   8100176e <_fwalk>
810011b3:	83 c4 10             	add    $0x10,%esp
810011b6:	90                   	nop
810011b7:	c9                   	leave  
810011b8:	c3                   	ret    

810011b9 <__fp_unlock_all>:
810011b9:	55                   	push   %ebp
810011ba:	89 e5                	mov    %esp,%ebp
810011bc:	83 ec 08             	sub    $0x8,%esp
810011bf:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810011c4:	83 ec 08             	sub    $0x8,%esp
810011c7:	68 8b 11 00 81       	push   $0x8100118b
810011cc:	50                   	push   %eax
810011cd:	e8 9c 05 00 00       	call   8100176e <_fwalk>
810011d2:	83 c4 10             	add    $0x10,%esp
810011d5:	e8 95 ff ff ff       	call   8100116f <__sfp_lock_release>
810011da:	90                   	nop
810011db:	c9                   	leave  
810011dc:	c3                   	ret    

810011dd <_fiprintf_r>:
810011dd:	55                   	push   %ebp
810011de:	89 e5                	mov    %esp,%ebp
810011e0:	83 ec 18             	sub    $0x18,%esp
810011e3:	8d 45 14             	lea    0x14(%ebp),%eax
810011e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810011e9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011ec:	50                   	push   %eax
810011ed:	ff 75 10             	pushl  0x10(%ebp)
810011f0:	ff 75 0c             	pushl  0xc(%ebp)
810011f3:	ff 75 08             	pushl  0x8(%ebp)
810011f6:	e8 a8 23 00 00       	call   810035a3 <_vfiprintf_r>
810011fb:	83 c4 10             	add    $0x10,%esp
810011fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001201:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001204:	c9                   	leave  
81001205:	c3                   	ret    

81001206 <fiprintf>:
81001206:	55                   	push   %ebp
81001207:	89 e5                	mov    %esp,%ebp
81001209:	83 ec 18             	sub    $0x18,%esp
8100120c:	8d 45 10             	lea    0x10(%ebp),%eax
8100120f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001212:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001215:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
8100121a:	52                   	push   %edx
8100121b:	ff 75 0c             	pushl  0xc(%ebp)
8100121e:	ff 75 08             	pushl  0x8(%ebp)
81001221:	50                   	push   %eax
81001222:	e8 7c 23 00 00       	call   810035a3 <_vfiprintf_r>
81001227:	83 c4 10             	add    $0x10,%esp
8100122a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100122d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001230:	c9                   	leave  
81001231:	c3                   	ret    

81001232 <_free_r>:
81001232:	55                   	push   %ebp
81001233:	89 e5                	mov    %esp,%ebp
81001235:	53                   	push   %ebx
81001236:	83 ec 34             	sub    $0x34,%esp
81001239:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100123d:	0f 84 c4 03 00 00    	je     81001607 <_free_r+0x3d5>
81001243:	83 ec 0c             	sub    $0xc,%esp
81001246:	ff 75 08             	pushl  0x8(%ebp)
81001249:	e8 3a 21 00 00       	call   81003388 <__malloc_lock>
8100124e:	83 c4 10             	add    $0x10,%esp
81001251:	8b 45 0c             	mov    0xc(%ebp),%eax
81001254:	83 e8 08             	sub    $0x8,%eax
81001257:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100125a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100125d:	8b 40 04             	mov    0x4(%eax),%eax
81001260:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001263:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001266:	83 e0 fe             	and    $0xfffffffe,%eax
81001269:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100126c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100126f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001272:	01 d0                	add    %edx,%eax
81001274:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001277:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100127a:	8b 40 04             	mov    0x4(%eax),%eax
8100127d:	83 e0 fc             	and    $0xfffffffc,%eax
81001280:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001283:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81001288:	8b 40 08             	mov    0x8(%eax),%eax
8100128b:	39 45 dc             	cmp    %eax,-0x24(%ebp)
8100128e:	0f 85 94 00 00 00    	jne    81001328 <_free_r+0xf6>
81001294:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001297:	01 45 f0             	add    %eax,-0x10(%ebp)
8100129a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100129d:	83 e0 01             	and    $0x1,%eax
810012a0:	85 c0                	test   %eax,%eax
810012a2:	75 3a                	jne    810012de <_free_r+0xac>
810012a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a7:	8b 00                	mov    (%eax),%eax
810012a9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810012ac:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012af:	f7 d8                	neg    %eax
810012b1:	01 45 f4             	add    %eax,-0xc(%ebp)
810012b4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012b7:	01 45 f0             	add    %eax,-0x10(%ebp)
810012ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012bd:	8b 40 0c             	mov    0xc(%eax),%eax
810012c0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810012c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012c6:	8b 40 08             	mov    0x8(%eax),%eax
810012c9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012cf:	8b 55 ec             	mov    -0x14(%ebp),%edx
810012d2:	89 50 0c             	mov    %edx,0xc(%eax)
810012d5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012d8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810012db:	89 50 08             	mov    %edx,0x8(%eax)
810012de:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012e1:	83 c8 01             	or     $0x1,%eax
810012e4:	89 c2                	mov    %eax,%edx
810012e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e9:	89 50 04             	mov    %edx,0x4(%eax)
810012ec:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
810012f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f4:	89 42 08             	mov    %eax,0x8(%edx)
810012f7:	a1 c8 7f 00 81       	mov    0x81007fc8,%eax
810012fc:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810012ff:	72 14                	jb     81001315 <_free_r+0xe3>
81001301:	a1 a0 86 00 81       	mov    0x810086a0,%eax
81001306:	83 ec 08             	sub    $0x8,%esp
81001309:	50                   	push   %eax
8100130a:	ff 75 08             	pushl  0x8(%ebp)
8100130d:	e8 fb 02 00 00       	call   8100160d <_malloc_trim_r>
81001312:	83 c4 10             	add    $0x10,%esp
81001315:	83 ec 0c             	sub    $0xc,%esp
81001318:	ff 75 08             	pushl  0x8(%ebp)
8100131b:	e8 6e 20 00 00       	call   8100338e <__malloc_unlock>
81001320:	83 c4 10             	add    $0x10,%esp
81001323:	e9 e0 02 00 00       	jmp    81001608 <_free_r+0x3d6>
81001328:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100132b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100132e:	89 50 04             	mov    %edx,0x4(%eax)
81001331:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001338:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100133b:	83 e0 01             	and    $0x1,%eax
8100133e:	85 c0                	test   %eax,%eax
81001340:	75 52                	jne    81001394 <_free_r+0x162>
81001342:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001345:	8b 00                	mov    (%eax),%eax
81001347:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100134a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100134d:	f7 d8                	neg    %eax
8100134f:	01 45 f4             	add    %eax,-0xc(%ebp)
81001352:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001355:	01 45 f0             	add    %eax,-0x10(%ebp)
81001358:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100135b:	8b 40 08             	mov    0x8(%eax),%eax
8100135e:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81001363:	39 d0                	cmp    %edx,%eax
81001365:	75 09                	jne    81001370 <_free_r+0x13e>
81001367:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100136e:	eb 24                	jmp    81001394 <_free_r+0x162>
81001370:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001373:	8b 40 0c             	mov    0xc(%eax),%eax
81001376:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001379:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100137c:	8b 40 08             	mov    0x8(%eax),%eax
8100137f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001382:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001385:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001388:	89 50 0c             	mov    %edx,0xc(%eax)
8100138b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100138e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001391:	89 50 08             	mov    %edx,0x8(%eax)
81001394:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001397:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100139a:	01 d0                	add    %edx,%eax
8100139c:	8b 40 04             	mov    0x4(%eax),%eax
8100139f:	83 e0 01             	and    $0x1,%eax
810013a2:	85 c0                	test   %eax,%eax
810013a4:	75 75                	jne    8100141b <_free_r+0x1e9>
810013a6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013a9:	01 45 f0             	add    %eax,-0x10(%ebp)
810013ac:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810013b0:	75 45                	jne    810013f7 <_free_r+0x1c5>
810013b2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013b5:	8b 40 08             	mov    0x8(%eax),%eax
810013b8:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
810013bd:	39 d0                	cmp    %edx,%eax
810013bf:	75 36                	jne    810013f7 <_free_r+0x1c5>
810013c1:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810013c8:	b8 c8 7b 00 81       	mov    $0x81007bc8,%eax
810013cd:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013d0:	89 50 0c             	mov    %edx,0xc(%eax)
810013d3:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
810013d8:	8b 40 0c             	mov    0xc(%eax),%eax
810013db:	89 42 08             	mov    %eax,0x8(%edx)
810013de:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
810013e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e6:	89 50 0c             	mov    %edx,0xc(%eax)
810013e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ec:	8b 50 0c             	mov    0xc(%eax),%edx
810013ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f2:	89 50 08             	mov    %edx,0x8(%eax)
810013f5:	eb 24                	jmp    8100141b <_free_r+0x1e9>
810013f7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013fa:	8b 40 0c             	mov    0xc(%eax),%eax
810013fd:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001400:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001403:	8b 40 08             	mov    0x8(%eax),%eax
81001406:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001409:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100140c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100140f:	89 50 0c             	mov    %edx,0xc(%eax)
81001412:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001415:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001418:	89 50 08             	mov    %edx,0x8(%eax)
8100141b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100141e:	83 c8 01             	or     $0x1,%eax
81001421:	89 c2                	mov    %eax,%edx
81001423:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001426:	89 50 04             	mov    %edx,0x4(%eax)
81001429:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100142c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100142f:	01 c2                	add    %eax,%edx
81001431:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001434:	89 02                	mov    %eax,(%edx)
81001436:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100143a:	0f 85 b7 01 00 00    	jne    810015f7 <_free_r+0x3c5>
81001440:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001447:	77 7f                	ja     810014c8 <_free_r+0x296>
81001449:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100144c:	c1 e8 03             	shr    $0x3,%eax
8100144f:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001452:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81001457:	8b 58 04             	mov    0x4(%eax),%ebx
8100145a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100145d:	8d 50 03             	lea    0x3(%eax),%edx
81001460:	85 c0                	test   %eax,%eax
81001462:	0f 48 c2             	cmovs  %edx,%eax
81001465:	c1 f8 02             	sar    $0x2,%eax
81001468:	ba 01 00 00 00       	mov    $0x1,%edx
8100146d:	89 c1                	mov    %eax,%ecx
8100146f:	d3 e2                	shl    %cl,%edx
81001471:	89 d0                	mov    %edx,%eax
81001473:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
81001478:	09 d8                	or     %ebx,%eax
8100147a:	89 42 04             	mov    %eax,0x4(%edx)
8100147d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001480:	83 c0 01             	add    $0x1,%eax
81001483:	01 c0                	add    %eax,%eax
81001485:	c1 e0 02             	shl    $0x2,%eax
81001488:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
8100148d:	83 e8 08             	sub    $0x8,%eax
81001490:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001493:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001496:	8b 40 08             	mov    0x8(%eax),%eax
81001499:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100149c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100149f:	8b 55 ec             	mov    -0x14(%ebp),%edx
810014a2:	89 50 0c             	mov    %edx,0xc(%eax)
810014a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014a8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014ab:	89 50 08             	mov    %edx,0x8(%eax)
810014ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014b1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014b4:	89 50 08             	mov    %edx,0x8(%eax)
810014b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014ba:	8b 50 08             	mov    0x8(%eax),%edx
810014bd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014c0:	89 50 0c             	mov    %edx,0xc(%eax)
810014c3:	e9 2f 01 00 00       	jmp    810015f7 <_free_r+0x3c5>
810014c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014cb:	c1 e8 09             	shr    $0x9,%eax
810014ce:	85 c0                	test   %eax,%eax
810014d0:	75 08                	jne    810014da <_free_r+0x2a8>
810014d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014d5:	c1 e8 03             	shr    $0x3,%eax
810014d8:	eb 77                	jmp    81001551 <_free_r+0x31f>
810014da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014dd:	c1 e8 09             	shr    $0x9,%eax
810014e0:	83 f8 04             	cmp    $0x4,%eax
810014e3:	77 0b                	ja     810014f0 <_free_r+0x2be>
810014e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014e8:	c1 e8 06             	shr    $0x6,%eax
810014eb:	83 c0 38             	add    $0x38,%eax
810014ee:	eb 61                	jmp    81001551 <_free_r+0x31f>
810014f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014f3:	c1 e8 09             	shr    $0x9,%eax
810014f6:	83 f8 14             	cmp    $0x14,%eax
810014f9:	77 0b                	ja     81001506 <_free_r+0x2d4>
810014fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014fe:	c1 e8 09             	shr    $0x9,%eax
81001501:	83 c0 5b             	add    $0x5b,%eax
81001504:	eb 4b                	jmp    81001551 <_free_r+0x31f>
81001506:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001509:	c1 e8 09             	shr    $0x9,%eax
8100150c:	83 f8 54             	cmp    $0x54,%eax
8100150f:	77 0b                	ja     8100151c <_free_r+0x2ea>
81001511:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001514:	c1 e8 0c             	shr    $0xc,%eax
81001517:	83 c0 6e             	add    $0x6e,%eax
8100151a:	eb 35                	jmp    81001551 <_free_r+0x31f>
8100151c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100151f:	c1 e8 09             	shr    $0x9,%eax
81001522:	3d 54 01 00 00       	cmp    $0x154,%eax
81001527:	77 0b                	ja     81001534 <_free_r+0x302>
81001529:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100152c:	c1 e8 0f             	shr    $0xf,%eax
8100152f:	83 c0 77             	add    $0x77,%eax
81001532:	eb 1d                	jmp    81001551 <_free_r+0x31f>
81001534:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001537:	c1 e8 09             	shr    $0x9,%eax
8100153a:	3d 54 05 00 00       	cmp    $0x554,%eax
8100153f:	77 0b                	ja     8100154c <_free_r+0x31a>
81001541:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001544:	c1 e8 12             	shr    $0x12,%eax
81001547:	83 c0 7c             	add    $0x7c,%eax
8100154a:	eb 05                	jmp    81001551 <_free_r+0x31f>
8100154c:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001551:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001554:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001557:	83 c0 01             	add    $0x1,%eax
8100155a:	01 c0                	add    %eax,%eax
8100155c:	c1 e0 02             	shl    $0x2,%eax
8100155f:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
81001564:	83 e8 08             	sub    $0x8,%eax
81001567:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100156a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100156d:	8b 40 08             	mov    0x8(%eax),%eax
81001570:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001573:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001576:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001579:	75 36                	jne    810015b1 <_free_r+0x37f>
8100157b:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81001580:	8b 58 04             	mov    0x4(%eax),%ebx
81001583:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001586:	8d 50 03             	lea    0x3(%eax),%edx
81001589:	85 c0                	test   %eax,%eax
8100158b:	0f 48 c2             	cmovs  %edx,%eax
8100158e:	c1 f8 02             	sar    $0x2,%eax
81001591:	ba 01 00 00 00       	mov    $0x1,%edx
81001596:	89 c1                	mov    %eax,%ecx
81001598:	d3 e2                	shl    %cl,%edx
8100159a:	89 d0                	mov    %edx,%eax
8100159c:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
810015a1:	09 d8                	or     %ebx,%eax
810015a3:	89 42 04             	mov    %eax,0x4(%edx)
810015a6:	eb 28                	jmp    810015d0 <_free_r+0x39e>
810015a8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015ab:	8b 40 08             	mov    0x8(%eax),%eax
810015ae:	89 45 e8             	mov    %eax,-0x18(%ebp)
810015b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015b4:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810015b7:	74 0e                	je     810015c7 <_free_r+0x395>
810015b9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015bc:	8b 40 04             	mov    0x4(%eax),%eax
810015bf:	83 e0 fc             	and    $0xfffffffc,%eax
810015c2:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810015c5:	72 e1                	jb     810015a8 <_free_r+0x376>
810015c7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015ca:	8b 40 0c             	mov    0xc(%eax),%eax
810015cd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810015d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015d3:	8b 55 ec             	mov    -0x14(%ebp),%edx
810015d6:	89 50 0c             	mov    %edx,0xc(%eax)
810015d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015dc:	8b 55 e8             	mov    -0x18(%ebp),%edx
810015df:	89 50 08             	mov    %edx,0x8(%eax)
810015e2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810015e5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015e8:	89 50 08             	mov    %edx,0x8(%eax)
810015eb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810015ee:	8b 50 08             	mov    0x8(%eax),%edx
810015f1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015f4:	89 50 0c             	mov    %edx,0xc(%eax)
810015f7:	83 ec 0c             	sub    $0xc,%esp
810015fa:	ff 75 08             	pushl  0x8(%ebp)
810015fd:	e8 8c 1d 00 00       	call   8100338e <__malloc_unlock>
81001602:	83 c4 10             	add    $0x10,%esp
81001605:	eb 01                	jmp    81001608 <_free_r+0x3d6>
81001607:	90                   	nop
81001608:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100160b:	c9                   	leave  
8100160c:	c3                   	ret    

8100160d <_malloc_trim_r>:
8100160d:	55                   	push   %ebp
8100160e:	89 e5                	mov    %esp,%ebp
81001610:	83 ec 28             	sub    $0x28,%esp
81001613:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
8100161a:	83 ec 0c             	sub    $0xc,%esp
8100161d:	ff 75 08             	pushl  0x8(%ebp)
81001620:	e8 63 1d 00 00       	call   81003388 <__malloc_lock>
81001625:	83 c4 10             	add    $0x10,%esp
81001628:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
8100162d:	8b 40 08             	mov    0x8(%eax),%eax
81001630:	8b 40 04             	mov    0x4(%eax),%eax
81001633:	83 e0 fc             	and    $0xfffffffc,%eax
81001636:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001639:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100163c:	2b 45 0c             	sub    0xc(%ebp),%eax
8100163f:	89 c2                	mov    %eax,%edx
81001641:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001644:	01 d0                	add    %edx,%eax
81001646:	83 e8 11             	sub    $0x11,%eax
81001649:	ba 00 00 00 00       	mov    $0x0,%edx
8100164e:	f7 75 f4             	divl   -0xc(%ebp)
81001651:	83 e8 01             	sub    $0x1,%eax
81001654:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001658:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100165b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100165e:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001661:	7d 18                	jge    8100167b <_malloc_trim_r+0x6e>
81001663:	83 ec 0c             	sub    $0xc,%esp
81001666:	ff 75 08             	pushl  0x8(%ebp)
81001669:	e8 20 1d 00 00       	call   8100338e <__malloc_unlock>
8100166e:	83 c4 10             	add    $0x10,%esp
81001671:	b8 00 00 00 00       	mov    $0x0,%eax
81001676:	e9 f1 00 00 00       	jmp    8100176c <_malloc_trim_r+0x15f>
8100167b:	83 ec 08             	sub    $0x8,%esp
8100167e:	6a 00                	push   $0x0
81001680:	ff 75 08             	pushl  0x8(%ebp)
81001683:	e8 dd 2b 00 00       	call   81004265 <_sbrk_r>
81001688:	83 c4 10             	add    $0x10,%esp
8100168b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100168e:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81001693:	8b 50 08             	mov    0x8(%eax),%edx
81001696:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001699:	01 d0                	add    %edx,%eax
8100169b:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100169e:	74 18                	je     810016b8 <_malloc_trim_r+0xab>
810016a0:	83 ec 0c             	sub    $0xc,%esp
810016a3:	ff 75 08             	pushl  0x8(%ebp)
810016a6:	e8 e3 1c 00 00       	call   8100338e <__malloc_unlock>
810016ab:	83 c4 10             	add    $0x10,%esp
810016ae:	b8 00 00 00 00       	mov    $0x0,%eax
810016b3:	e9 b4 00 00 00       	jmp    8100176c <_malloc_trim_r+0x15f>
810016b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016bb:	f7 d8                	neg    %eax
810016bd:	83 ec 08             	sub    $0x8,%esp
810016c0:	50                   	push   %eax
810016c1:	ff 75 08             	pushl  0x8(%ebp)
810016c4:	e8 9c 2b 00 00       	call   81004265 <_sbrk_r>
810016c9:	83 c4 10             	add    $0x10,%esp
810016cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810016cf:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810016d3:	75 61                	jne    81001736 <_malloc_trim_r+0x129>
810016d5:	83 ec 08             	sub    $0x8,%esp
810016d8:	6a 00                	push   $0x0
810016da:	ff 75 08             	pushl  0x8(%ebp)
810016dd:	e8 83 2b 00 00       	call   81004265 <_sbrk_r>
810016e2:	83 c4 10             	add    $0x10,%esp
810016e5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810016e8:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810016ed:	8b 50 08             	mov    0x8(%eax),%edx
810016f0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016f3:	29 d0                	sub    %edx,%eax
810016f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016f8:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810016fc:	7e 23                	jle    81001721 <_malloc_trim_r+0x114>
810016fe:	8b 15 cc 7f 00 81    	mov    0x81007fcc,%edx
81001704:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001707:	29 d0                	sub    %edx,%eax
81001709:	a3 c0 86 00 81       	mov    %eax,0x810086c0
8100170e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001711:	83 c8 01             	or     $0x1,%eax
81001714:	89 c2                	mov    %eax,%edx
81001716:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
8100171b:	8b 40 08             	mov    0x8(%eax),%eax
8100171e:	89 50 04             	mov    %edx,0x4(%eax)
81001721:	83 ec 0c             	sub    $0xc,%esp
81001724:	ff 75 08             	pushl  0x8(%ebp)
81001727:	e8 62 1c 00 00       	call   8100338e <__malloc_unlock>
8100172c:	83 c4 10             	add    $0x10,%esp
8100172f:	b8 00 00 00 00       	mov    $0x0,%eax
81001734:	eb 36                	jmp    8100176c <_malloc_trim_r+0x15f>
81001736:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001739:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100173c:	83 c8 01             	or     $0x1,%eax
8100173f:	89 c2                	mov    %eax,%edx
81001741:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81001746:	8b 40 08             	mov    0x8(%eax),%eax
81001749:	89 50 04             	mov    %edx,0x4(%eax)
8100174c:	a1 c0 86 00 81       	mov    0x810086c0,%eax
81001751:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001754:	a3 c0 86 00 81       	mov    %eax,0x810086c0
81001759:	83 ec 0c             	sub    $0xc,%esp
8100175c:	ff 75 08             	pushl  0x8(%ebp)
8100175f:	e8 2a 1c 00 00       	call   8100338e <__malloc_unlock>
81001764:	83 c4 10             	add    $0x10,%esp
81001767:	b8 01 00 00 00       	mov    $0x1,%eax
8100176c:	c9                   	leave  
8100176d:	c3                   	ret    

8100176e <_fwalk>:
8100176e:	55                   	push   %ebp
8100176f:	89 e5                	mov    %esp,%ebp
81001771:	57                   	push   %edi
81001772:	56                   	push   %esi
81001773:	53                   	push   %ebx
81001774:	83 ec 1c             	sub    $0x1c,%esp
81001777:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100177e:	8b 45 08             	mov    0x8(%ebp),%eax
81001781:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001787:	eb 3e                	jmp    810017c7 <_fwalk+0x59>
81001789:	8b 5e 08             	mov    0x8(%esi),%ebx
8100178c:	8b 7e 04             	mov    0x4(%esi),%edi
8100178f:	eb 2d                	jmp    810017be <_fwalk+0x50>
81001791:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001795:	66 85 c0             	test   %ax,%ax
81001798:	74 21                	je     810017bb <_fwalk+0x4d>
8100179a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100179e:	66 83 f8 01          	cmp    $0x1,%ax
810017a2:	74 17                	je     810017bb <_fwalk+0x4d>
810017a4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810017a8:	66 83 f8 ff          	cmp    $0xffff,%ax
810017ac:	74 0d                	je     810017bb <_fwalk+0x4d>
810017ae:	83 ec 0c             	sub    $0xc,%esp
810017b1:	53                   	push   %ebx
810017b2:	ff 55 0c             	call   *0xc(%ebp)
810017b5:	83 c4 10             	add    $0x10,%esp
810017b8:	09 45 e4             	or     %eax,-0x1c(%ebp)
810017bb:	83 c3 68             	add    $0x68,%ebx
810017be:	83 ef 01             	sub    $0x1,%edi
810017c1:	85 ff                	test   %edi,%edi
810017c3:	79 cc                	jns    81001791 <_fwalk+0x23>
810017c5:	8b 36                	mov    (%esi),%esi
810017c7:	85 f6                	test   %esi,%esi
810017c9:	75 be                	jne    81001789 <_fwalk+0x1b>
810017cb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810017ce:	8d 65 f4             	lea    -0xc(%ebp),%esp
810017d1:	5b                   	pop    %ebx
810017d2:	5e                   	pop    %esi
810017d3:	5f                   	pop    %edi
810017d4:	5d                   	pop    %ebp
810017d5:	c3                   	ret    

810017d6 <_fwalk_reent>:
810017d6:	55                   	push   %ebp
810017d7:	89 e5                	mov    %esp,%ebp
810017d9:	57                   	push   %edi
810017da:	56                   	push   %esi
810017db:	53                   	push   %ebx
810017dc:	83 ec 1c             	sub    $0x1c,%esp
810017df:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810017e6:	8b 45 08             	mov    0x8(%ebp),%eax
810017e9:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810017ef:	eb 41                	jmp    81001832 <_fwalk_reent+0x5c>
810017f1:	8b 5e 08             	mov    0x8(%esi),%ebx
810017f4:	8b 7e 04             	mov    0x4(%esi),%edi
810017f7:	eb 30                	jmp    81001829 <_fwalk_reent+0x53>
810017f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810017fd:	66 85 c0             	test   %ax,%ax
81001800:	74 24                	je     81001826 <_fwalk_reent+0x50>
81001802:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001806:	66 83 f8 01          	cmp    $0x1,%ax
8100180a:	74 1a                	je     81001826 <_fwalk_reent+0x50>
8100180c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001810:	66 83 f8 ff          	cmp    $0xffff,%ax
81001814:	74 10                	je     81001826 <_fwalk_reent+0x50>
81001816:	83 ec 08             	sub    $0x8,%esp
81001819:	53                   	push   %ebx
8100181a:	ff 75 08             	pushl  0x8(%ebp)
8100181d:	ff 55 0c             	call   *0xc(%ebp)
81001820:	83 c4 10             	add    $0x10,%esp
81001823:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001826:	83 c3 68             	add    $0x68,%ebx
81001829:	83 ef 01             	sub    $0x1,%edi
8100182c:	85 ff                	test   %edi,%edi
8100182e:	79 c9                	jns    810017f9 <_fwalk_reent+0x23>
81001830:	8b 36                	mov    (%esi),%esi
81001832:	85 f6                	test   %esi,%esi
81001834:	75 bb                	jne    810017f1 <_fwalk_reent+0x1b>
81001836:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001839:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100183c:	5b                   	pop    %ebx
8100183d:	5e                   	pop    %esi
8100183e:	5f                   	pop    %edi
8100183f:	5d                   	pop    %ebp
81001840:	c3                   	ret    

81001841 <_fwrite_r>:
81001841:	55                   	push   %ebp
81001842:	89 e5                	mov    %esp,%ebp
81001844:	83 ec 28             	sub    $0x28,%esp
81001847:	8b 45 0c             	mov    0xc(%ebp),%eax
8100184a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100184d:	8b 45 14             	mov    0x14(%ebp),%eax
81001850:	0f af 45 10          	imul   0x10(%ebp),%eax
81001854:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001857:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100185d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001860:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001863:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001866:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001869:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001870:	8b 45 08             	mov    0x8(%ebp),%eax
81001873:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001876:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100187a:	74 18                	je     81001894 <_fwrite_r+0x53>
8100187c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100187f:	8b 40 38             	mov    0x38(%eax),%eax
81001882:	85 c0                	test   %eax,%eax
81001884:	75 0e                	jne    81001894 <_fwrite_r+0x53>
81001886:	83 ec 0c             	sub    $0xc,%esp
81001889:	ff 75 f0             	pushl  -0x10(%ebp)
8100188c:	e8 3f f8 ff ff       	call   810010d0 <__sinit>
81001891:	83 c4 10             	add    $0x10,%esp
81001894:	8b 45 18             	mov    0x18(%ebp),%eax
81001897:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100189b:	98                   	cwtl   
8100189c:	25 00 20 00 00       	and    $0x2000,%eax
810018a1:	85 c0                	test   %eax,%eax
810018a3:	75 24                	jne    810018c9 <_fwrite_r+0x88>
810018a5:	8b 45 18             	mov    0x18(%ebp),%eax
810018a8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810018ac:	80 cc 20             	or     $0x20,%ah
810018af:	89 c2                	mov    %eax,%edx
810018b1:	8b 45 18             	mov    0x18(%ebp),%eax
810018b4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810018b8:	8b 45 18             	mov    0x18(%ebp),%eax
810018bb:	8b 40 64             	mov    0x64(%eax),%eax
810018be:	80 e4 df             	and    $0xdf,%ah
810018c1:	89 c2                	mov    %eax,%edx
810018c3:	8b 45 18             	mov    0x18(%ebp),%eax
810018c6:	89 50 64             	mov    %edx,0x64(%eax)
810018c9:	83 ec 04             	sub    $0x4,%esp
810018cc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810018cf:	50                   	push   %eax
810018d0:	ff 75 18             	pushl  0x18(%ebp)
810018d3:	ff 75 08             	pushl  0x8(%ebp)
810018d6:	e8 89 39 00 00       	call   81005264 <__sfvwrite_r>
810018db:	83 c4 10             	add    $0x10,%esp
810018de:	85 c0                	test   %eax,%eax
810018e0:	75 05                	jne    810018e7 <_fwrite_r+0xa6>
810018e2:	8b 45 14             	mov    0x14(%ebp),%eax
810018e5:	eb 10                	jmp    810018f7 <_fwrite_r+0xb6>
810018e7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810018ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ed:	29 d0                	sub    %edx,%eax
810018ef:	ba 00 00 00 00       	mov    $0x0,%edx
810018f4:	f7 75 10             	divl   0x10(%ebp)
810018f7:	c9                   	leave  
810018f8:	c3                   	ret    

810018f9 <fwrite>:
810018f9:	55                   	push   %ebp
810018fa:	89 e5                	mov    %esp,%ebp
810018fc:	83 ec 08             	sub    $0x8,%esp
810018ff:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81001904:	83 ec 0c             	sub    $0xc,%esp
81001907:	ff 75 14             	pushl  0x14(%ebp)
8100190a:	ff 75 10             	pushl  0x10(%ebp)
8100190d:	ff 75 0c             	pushl  0xc(%ebp)
81001910:	ff 75 08             	pushl  0x8(%ebp)
81001913:	50                   	push   %eax
81001914:	e8 28 ff ff ff       	call   81001841 <_fwrite_r>
81001919:	83 c4 20             	add    $0x20,%esp
8100191c:	c9                   	leave  
8100191d:	c3                   	ret    

8100191e <reverse_argv_elements>:
8100191e:	55                   	push   %ebp
8100191f:	89 e5                	mov    %esp,%ebp
81001921:	83 ec 10             	sub    $0x10,%esp
81001924:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
8100192b:	eb 5e                	jmp    8100198b <reverse_argv_elements+0x6d>
8100192d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81001930:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001937:	8b 45 08             	mov    0x8(%ebp),%eax
8100193a:	01 d0                	add    %edx,%eax
8100193c:	8b 00                	mov    (%eax),%eax
8100193e:	89 45 f8             	mov    %eax,-0x8(%ebp)
81001941:	8b 45 0c             	mov    0xc(%ebp),%eax
81001944:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001947:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
8100194c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001953:	8b 45 08             	mov    0x8(%ebp),%eax
81001956:	01 d0                	add    %edx,%eax
81001958:	8b 55 fc             	mov    -0x4(%ebp),%edx
8100195b:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001962:	8b 55 08             	mov    0x8(%ebp),%edx
81001965:	01 ca                	add    %ecx,%edx
81001967:	8b 00                	mov    (%eax),%eax
81001969:	89 02                	mov    %eax,(%edx)
8100196b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100196e:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001971:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001976:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100197d:	8b 45 08             	mov    0x8(%ebp),%eax
81001980:	01 c2                	add    %eax,%edx
81001982:	8b 45 f8             	mov    -0x8(%ebp),%eax
81001985:	89 02                	mov    %eax,(%edx)
81001987:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
8100198b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100198e:	d1 f8                	sar    %eax
81001990:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81001993:	7c 98                	jl     8100192d <reverse_argv_elements+0xf>
81001995:	90                   	nop
81001996:	90                   	nop
81001997:	c9                   	leave  
81001998:	c3                   	ret    

81001999 <permute>:
81001999:	55                   	push   %ebp
8100199a:	89 e5                	mov    %esp,%ebp
8100199c:	ff 75 0c             	pushl  0xc(%ebp)
8100199f:	ff 75 08             	pushl  0x8(%ebp)
810019a2:	e8 77 ff ff ff       	call   8100191e <reverse_argv_elements>
810019a7:	83 c4 08             	add    $0x8,%esp
810019aa:	8b 55 0c             	mov    0xc(%ebp),%edx
810019ad:	8b 45 10             	mov    0x10(%ebp),%eax
810019b0:	01 d0                	add    %edx,%eax
810019b2:	50                   	push   %eax
810019b3:	ff 75 08             	pushl  0x8(%ebp)
810019b6:	e8 63 ff ff ff       	call   8100191e <reverse_argv_elements>
810019bb:	83 c4 08             	add    $0x8,%esp
810019be:	ff 75 10             	pushl  0x10(%ebp)
810019c1:	ff 75 08             	pushl  0x8(%ebp)
810019c4:	e8 55 ff ff ff       	call   8100191e <reverse_argv_elements>
810019c9:	83 c4 08             	add    $0x8,%esp
810019cc:	90                   	nop
810019cd:	c9                   	leave  
810019ce:	c3                   	ret    

810019cf <is_option>:
810019cf:	55                   	push   %ebp
810019d0:	89 e5                	mov    %esp,%ebp
810019d2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810019d6:	74 1a                	je     810019f2 <is_option+0x23>
810019d8:	8b 45 08             	mov    0x8(%ebp),%eax
810019db:	0f b6 00             	movzbl (%eax),%eax
810019de:	3c 2d                	cmp    $0x2d,%al
810019e0:	74 10                	je     810019f2 <is_option+0x23>
810019e2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810019e6:	74 11                	je     810019f9 <is_option+0x2a>
810019e8:	8b 45 08             	mov    0x8(%ebp),%eax
810019eb:	0f b6 00             	movzbl (%eax),%eax
810019ee:	3c 2b                	cmp    $0x2b,%al
810019f0:	75 07                	jne    810019f9 <is_option+0x2a>
810019f2:	b8 01 00 00 00       	mov    $0x1,%eax
810019f7:	eb 05                	jmp    810019fe <is_option+0x2f>
810019f9:	b8 00 00 00 00       	mov    $0x0,%eax
810019fe:	5d                   	pop    %ebp
810019ff:	c3                   	ret    

81001a00 <read_globals>:
81001a00:	55                   	push   %ebp
81001a01:	89 e5                	mov    %esp,%ebp
81001a03:	8b 15 88 86 00 81    	mov    0x81008688,%edx
81001a09:	8b 45 08             	mov    0x8(%ebp),%eax
81001a0c:	89 10                	mov    %edx,(%eax)
81001a0e:	8b 15 8c 86 00 81    	mov    0x8100868c,%edx
81001a14:	8b 45 08             	mov    0x8(%ebp),%eax
81001a17:	89 50 04             	mov    %edx,0x4(%eax)
81001a1a:	8b 15 64 77 00 81    	mov    0x81007764,%edx
81001a20:	8b 45 08             	mov    0x8(%ebp),%eax
81001a23:	89 50 08             	mov    %edx,0x8(%eax)
81001a26:	8b 15 68 77 00 81    	mov    0x81007768,%edx
81001a2c:	8b 45 08             	mov    0x8(%ebp),%eax
81001a2f:	89 50 0c             	mov    %edx,0xc(%eax)
81001a32:	8b 15 90 86 00 81    	mov    0x81008690,%edx
81001a38:	8b 45 08             	mov    0x8(%ebp),%eax
81001a3b:	89 50 10             	mov    %edx,0x10(%eax)
81001a3e:	8b 15 94 86 00 81    	mov    0x81008694,%edx
81001a44:	8b 45 08             	mov    0x8(%ebp),%eax
81001a47:	89 50 14             	mov    %edx,0x14(%eax)
81001a4a:	8b 15 98 86 00 81    	mov    0x81008698,%edx
81001a50:	8b 45 08             	mov    0x8(%ebp),%eax
81001a53:	89 50 18             	mov    %edx,0x18(%eax)
81001a56:	90                   	nop
81001a57:	5d                   	pop    %ebp
81001a58:	c3                   	ret    

81001a59 <write_globals>:
81001a59:	55                   	push   %ebp
81001a5a:	89 e5                	mov    %esp,%ebp
81001a5c:	8b 45 08             	mov    0x8(%ebp),%eax
81001a5f:	8b 00                	mov    (%eax),%eax
81001a61:	a3 88 86 00 81       	mov    %eax,0x81008688
81001a66:	8b 45 08             	mov    0x8(%ebp),%eax
81001a69:	8b 40 04             	mov    0x4(%eax),%eax
81001a6c:	a3 8c 86 00 81       	mov    %eax,0x8100868c
81001a71:	8b 45 08             	mov    0x8(%ebp),%eax
81001a74:	8b 40 08             	mov    0x8(%eax),%eax
81001a77:	a3 64 77 00 81       	mov    %eax,0x81007764
81001a7c:	8b 45 08             	mov    0x8(%ebp),%eax
81001a7f:	8b 40 0c             	mov    0xc(%eax),%eax
81001a82:	a3 68 77 00 81       	mov    %eax,0x81007768
81001a87:	8b 45 08             	mov    0x8(%ebp),%eax
81001a8a:	8b 40 10             	mov    0x10(%eax),%eax
81001a8d:	a3 90 86 00 81       	mov    %eax,0x81008690
81001a92:	8b 45 08             	mov    0x8(%ebp),%eax
81001a95:	8b 40 14             	mov    0x14(%eax),%eax
81001a98:	a3 94 86 00 81       	mov    %eax,0x81008694
81001a9d:	8b 45 08             	mov    0x8(%ebp),%eax
81001aa0:	8b 40 18             	mov    0x18(%eax),%eax
81001aa3:	a3 98 86 00 81       	mov    %eax,0x81008698
81001aa8:	90                   	nop
81001aa9:	5d                   	pop    %ebp
81001aaa:	c3                   	ret    

81001aab <getopt_internal>:
81001aab:	55                   	push   %ebp
81001aac:	89 e5                	mov    %esp,%ebp
81001aae:	53                   	push   %ebx
81001aaf:	83 ec 34             	sub    $0x34,%esp
81001ab2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001ab9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001ac0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001ac7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001ace:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001ad5:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001adc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81001ae3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001aea:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81001af1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001af5:	74 35                	je     81001b2c <getopt_internal+0x81>
81001af7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001afb:	74 2f                	je     81001b2c <getopt_internal+0x81>
81001afd:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001b01:	75 06                	jne    81001b09 <getopt_internal+0x5e>
81001b03:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001b07:	74 23                	je     81001b2c <getopt_internal+0x81>
81001b09:	8b 45 20             	mov    0x20(%ebp),%eax
81001b0c:	8b 40 04             	mov    0x4(%eax),%eax
81001b0f:	39 45 08             	cmp    %eax,0x8(%ebp)
81001b12:	7e 18                	jle    81001b2c <getopt_internal+0x81>
81001b14:	8b 45 20             	mov    0x20(%ebp),%eax
81001b17:	8b 40 04             	mov    0x4(%eax),%eax
81001b1a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b21:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b24:	01 d0                	add    %edx,%eax
81001b26:	8b 00                	mov    (%eax),%eax
81001b28:	85 c0                	test   %eax,%eax
81001b2a:	75 0a                	jne    81001b36 <getopt_internal+0x8b>
81001b2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001b31:	e9 85 0a 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001b36:	8b 45 20             	mov    0x20(%ebp),%eax
81001b39:	8b 40 04             	mov    0x4(%eax),%eax
81001b3c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b43:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b46:	01 d0                	add    %edx,%eax
81001b48:	8b 00                	mov    (%eax),%eax
81001b4a:	83 ec 08             	sub    $0x8,%esp
81001b4d:	68 68 73 00 81       	push   $0x81007368
81001b52:	50                   	push   %eax
81001b53:	e8 14 2a 00 00       	call   8100456c <strcmp>
81001b58:	83 c4 10             	add    $0x10,%esp
81001b5b:	85 c0                	test   %eax,%eax
81001b5d:	75 19                	jne    81001b78 <getopt_internal+0xcd>
81001b5f:	8b 45 20             	mov    0x20(%ebp),%eax
81001b62:	8b 40 04             	mov    0x4(%eax),%eax
81001b65:	8d 50 01             	lea    0x1(%eax),%edx
81001b68:	8b 45 20             	mov    0x20(%ebp),%eax
81001b6b:	89 50 04             	mov    %edx,0x4(%eax)
81001b6e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001b73:	e9 43 0a 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001b78:	8b 45 20             	mov    0x20(%ebp),%eax
81001b7b:	8b 40 04             	mov    0x4(%eax),%eax
81001b7e:	85 c0                	test   %eax,%eax
81001b80:	75 28                	jne    81001baa <getopt_internal+0xff>
81001b82:	8b 45 20             	mov    0x20(%ebp),%eax
81001b85:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001b8c:	8b 45 20             	mov    0x20(%ebp),%eax
81001b8f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001b96:	8b 45 20             	mov    0x20(%ebp),%eax
81001b99:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001ba0:	8b 45 20             	mov    0x20(%ebp),%eax
81001ba3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001baa:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001bae:	74 33                	je     81001be3 <getopt_internal+0x138>
81001bb0:	8b 45 10             	mov    0x10(%ebp),%eax
81001bb3:	0f b6 00             	movzbl (%eax),%eax
81001bb6:	3c 2d                	cmp    $0x2d,%al
81001bb8:	74 0a                	je     81001bc4 <getopt_internal+0x119>
81001bba:	8b 45 10             	mov    0x10(%ebp),%eax
81001bbd:	0f b6 00             	movzbl (%eax),%eax
81001bc0:	3c 2b                	cmp    $0x2b,%al
81001bc2:	75 1f                	jne    81001be3 <getopt_internal+0x138>
81001bc4:	8b 45 10             	mov    0x10(%ebp),%eax
81001bc7:	0f b6 00             	movzbl (%eax),%eax
81001bca:	3c 2d                	cmp    $0x2d,%al
81001bcc:	75 07                	jne    81001bd5 <getopt_internal+0x12a>
81001bce:	b8 01 00 00 00       	mov    $0x1,%eax
81001bd3:	eb 05                	jmp    81001bda <getopt_internal+0x12f>
81001bd5:	b8 02 00 00 00       	mov    $0x2,%eax
81001bda:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001bdd:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001be1:	eb 23                	jmp    81001c06 <getopt_internal+0x15b>
81001be3:	83 ec 0c             	sub    $0xc,%esp
81001be6:	68 6b 73 00 81       	push   $0x8100736b
81001beb:	e8 32 3b 00 00       	call   81005722 <getenv>
81001bf0:	83 c4 10             	add    $0x10,%esp
81001bf3:	85 c0                	test   %eax,%eax
81001bf5:	74 07                	je     81001bfe <getopt_internal+0x153>
81001bf7:	b8 02 00 00 00       	mov    $0x2,%eax
81001bfc:	eb 05                	jmp    81001c03 <getopt_internal+0x158>
81001bfe:	b8 00 00 00 00       	mov    $0x0,%eax
81001c03:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c06:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001c0a:	74 15                	je     81001c21 <getopt_internal+0x176>
81001c0c:	8b 45 10             	mov    0x10(%ebp),%eax
81001c0f:	0f b6 00             	movzbl (%eax),%eax
81001c12:	3c 3a                	cmp    $0x3a,%al
81001c14:	75 0b                	jne    81001c21 <getopt_internal+0x176>
81001c16:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001c1a:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001c21:	8b 45 20             	mov    0x20(%ebp),%eax
81001c24:	8b 40 10             	mov    0x10(%eax),%eax
81001c27:	83 f8 01             	cmp    $0x1,%eax
81001c2a:	0f 85 a2 01 00 00    	jne    81001dd2 <getopt_internal+0x327>
81001c30:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001c34:	0f 84 02 01 00 00    	je     81001d3c <getopt_internal+0x291>
81001c3a:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001c3e:	0f 84 56 01 00 00    	je     81001d9a <getopt_internal+0x2ef>
81001c44:	8b 45 20             	mov    0x20(%ebp),%eax
81001c47:	8b 50 04             	mov    0x4(%eax),%edx
81001c4a:	8b 45 20             	mov    0x20(%ebp),%eax
81001c4d:	89 50 14             	mov    %edx,0x14(%eax)
81001c50:	8b 45 20             	mov    0x20(%ebp),%eax
81001c53:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001c5a:	eb 1e                	jmp    81001c7a <getopt_internal+0x1cf>
81001c5c:	8b 45 20             	mov    0x20(%ebp),%eax
81001c5f:	8b 40 04             	mov    0x4(%eax),%eax
81001c62:	8d 50 01             	lea    0x1(%eax),%edx
81001c65:	8b 45 20             	mov    0x20(%ebp),%eax
81001c68:	89 50 04             	mov    %edx,0x4(%eax)
81001c6b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c6e:	8b 40 18             	mov    0x18(%eax),%eax
81001c71:	8d 50 01             	lea    0x1(%eax),%edx
81001c74:	8b 45 20             	mov    0x20(%ebp),%eax
81001c77:	89 50 18             	mov    %edx,0x18(%eax)
81001c7a:	8b 45 20             	mov    0x20(%ebp),%eax
81001c7d:	8b 40 04             	mov    0x4(%eax),%eax
81001c80:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c87:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c8a:	01 d0                	add    %edx,%eax
81001c8c:	8b 00                	mov    (%eax),%eax
81001c8e:	83 ec 08             	sub    $0x8,%esp
81001c91:	ff 75 1c             	pushl  0x1c(%ebp)
81001c94:	50                   	push   %eax
81001c95:	e8 35 fd ff ff       	call   810019cf <is_option>
81001c9a:	83 c4 10             	add    $0x10,%esp
81001c9d:	85 c0                	test   %eax,%eax
81001c9f:	74 bb                	je     81001c5c <getopt_internal+0x1b1>
81001ca1:	8b 45 20             	mov    0x20(%ebp),%eax
81001ca4:	8b 40 04             	mov    0x4(%eax),%eax
81001ca7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cae:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cb1:	01 d0                	add    %edx,%eax
81001cb3:	8b 00                	mov    (%eax),%eax
81001cb5:	85 c0                	test   %eax,%eax
81001cb7:	75 16                	jne    81001ccf <getopt_internal+0x224>
81001cb9:	8b 45 20             	mov    0x20(%ebp),%eax
81001cbc:	8b 50 14             	mov    0x14(%eax),%edx
81001cbf:	8b 45 20             	mov    0x20(%ebp),%eax
81001cc2:	89 50 04             	mov    %edx,0x4(%eax)
81001cc5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001cca:	e9 ec 08 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001ccf:	8b 45 20             	mov    0x20(%ebp),%eax
81001cd2:	8b 40 04             	mov    0x4(%eax),%eax
81001cd5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cdc:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cdf:	01 d0                	add    %edx,%eax
81001ce1:	8b 00                	mov    (%eax),%eax
81001ce3:	83 ec 08             	sub    $0x8,%esp
81001ce6:	68 68 73 00 81       	push   $0x81007368
81001ceb:	50                   	push   %eax
81001cec:	e8 7b 28 00 00       	call   8100456c <strcmp>
81001cf1:	83 c4 10             	add    $0x10,%esp
81001cf4:	85 c0                	test   %eax,%eax
81001cf6:	0f 85 cf 00 00 00    	jne    81001dcb <getopt_internal+0x320>
81001cfc:	8b 45 20             	mov    0x20(%ebp),%eax
81001cff:	8b 40 18             	mov    0x18(%eax),%eax
81001d02:	8b 55 20             	mov    0x20(%ebp),%edx
81001d05:	8b 52 14             	mov    0x14(%edx),%edx
81001d08:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001d0f:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d12:	01 ca                	add    %ecx,%edx
81001d14:	83 ec 04             	sub    $0x4,%esp
81001d17:	6a 01                	push   $0x1
81001d19:	50                   	push   %eax
81001d1a:	52                   	push   %edx
81001d1b:	e8 79 fc ff ff       	call   81001999 <permute>
81001d20:	83 c4 10             	add    $0x10,%esp
81001d23:	8b 45 20             	mov    0x20(%ebp),%eax
81001d26:	8b 40 14             	mov    0x14(%eax),%eax
81001d29:	8d 50 01             	lea    0x1(%eax),%edx
81001d2c:	8b 45 20             	mov    0x20(%ebp),%eax
81001d2f:	89 50 04             	mov    %edx,0x4(%eax)
81001d32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d37:	e9 7f 08 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001d3c:	8b 45 20             	mov    0x20(%ebp),%eax
81001d3f:	8b 40 04             	mov    0x4(%eax),%eax
81001d42:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d49:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d4c:	01 d0                	add    %edx,%eax
81001d4e:	8b 00                	mov    (%eax),%eax
81001d50:	83 ec 08             	sub    $0x8,%esp
81001d53:	ff 75 1c             	pushl  0x1c(%ebp)
81001d56:	50                   	push   %eax
81001d57:	e8 73 fc ff ff       	call   810019cf <is_option>
81001d5c:	83 c4 10             	add    $0x10,%esp
81001d5f:	85 c0                	test   %eax,%eax
81001d61:	75 6b                	jne    81001dce <getopt_internal+0x323>
81001d63:	8b 45 20             	mov    0x20(%ebp),%eax
81001d66:	8b 40 04             	mov    0x4(%eax),%eax
81001d69:	8d 48 01             	lea    0x1(%eax),%ecx
81001d6c:	8b 55 20             	mov    0x20(%ebp),%edx
81001d6f:	89 4a 04             	mov    %ecx,0x4(%edx)
81001d72:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d79:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d7c:	01 d0                	add    %edx,%eax
81001d7e:	8b 10                	mov    (%eax),%edx
81001d80:	8b 45 20             	mov    0x20(%ebp),%eax
81001d83:	89 10                	mov    %edx,(%eax)
81001d85:	8b 45 20             	mov    0x20(%ebp),%eax
81001d88:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001d8f:	8b 45 20             	mov    0x20(%ebp),%eax
81001d92:	8b 40 0c             	mov    0xc(%eax),%eax
81001d95:	e9 21 08 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001d9a:	8b 45 20             	mov    0x20(%ebp),%eax
81001d9d:	8b 40 04             	mov    0x4(%eax),%eax
81001da0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001da7:	8b 45 0c             	mov    0xc(%ebp),%eax
81001daa:	01 d0                	add    %edx,%eax
81001dac:	8b 00                	mov    (%eax),%eax
81001dae:	83 ec 08             	sub    $0x8,%esp
81001db1:	ff 75 1c             	pushl  0x1c(%ebp)
81001db4:	50                   	push   %eax
81001db5:	e8 15 fc ff ff       	call   810019cf <is_option>
81001dba:	83 c4 10             	add    $0x10,%esp
81001dbd:	85 c0                	test   %eax,%eax
81001dbf:	75 10                	jne    81001dd1 <getopt_internal+0x326>
81001dc1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dc6:	e9 f0 07 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001dcb:	90                   	nop
81001dcc:	eb 04                	jmp    81001dd2 <getopt_internal+0x327>
81001dce:	90                   	nop
81001dcf:	eb 01                	jmp    81001dd2 <getopt_internal+0x327>
81001dd1:	90                   	nop
81001dd2:	8b 45 20             	mov    0x20(%ebp),%eax
81001dd5:	8b 40 04             	mov    0x4(%eax),%eax
81001dd8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ddf:	8b 45 0c             	mov    0xc(%ebp),%eax
81001de2:	01 d0                	add    %edx,%eax
81001de4:	8b 00                	mov    (%eax),%eax
81001de6:	85 c0                	test   %eax,%eax
81001de8:	75 0a                	jne    81001df4 <getopt_internal+0x349>
81001dea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001def:	e9 c7 07 00 00       	jmp    810025bb <getopt_internal+0xb10>
81001df4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001df8:	0f 84 15 03 00 00    	je     81002113 <getopt_internal+0x668>
81001dfe:	8b 45 20             	mov    0x20(%ebp),%eax
81001e01:	8b 40 04             	mov    0x4(%eax),%eax
81001e04:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e0e:	01 d0                	add    %edx,%eax
81001e10:	8b 00                	mov    (%eax),%eax
81001e12:	83 ec 04             	sub    $0x4,%esp
81001e15:	6a 02                	push   $0x2
81001e17:	68 68 73 00 81       	push   $0x81007368
81001e1c:	50                   	push   %eax
81001e1d:	e8 43 14 00 00       	call   81003265 <memcmp>
81001e22:	83 c4 10             	add    $0x10,%esp
81001e25:	85 c0                	test   %eax,%eax
81001e27:	74 29                	je     81001e52 <getopt_internal+0x3a7>
81001e29:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001e2d:	0f 84 e0 02 00 00    	je     81002113 <getopt_internal+0x668>
81001e33:	8b 45 20             	mov    0x20(%ebp),%eax
81001e36:	8b 40 04             	mov    0x4(%eax),%eax
81001e39:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e40:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e43:	01 d0                	add    %edx,%eax
81001e45:	8b 00                	mov    (%eax),%eax
81001e47:	0f b6 00             	movzbl (%eax),%eax
81001e4a:	3c 2b                	cmp    $0x2b,%al
81001e4c:	0f 85 c1 02 00 00    	jne    81002113 <getopt_internal+0x668>
81001e52:	8b 45 20             	mov    0x20(%ebp),%eax
81001e55:	8b 40 10             	mov    0x10(%eax),%eax
81001e58:	83 f8 01             	cmp    $0x1,%eax
81001e5b:	0f 85 b2 02 00 00    	jne    81002113 <getopt_internal+0x668>
81001e61:	8b 45 20             	mov    0x20(%ebp),%eax
81001e64:	8b 40 04             	mov    0x4(%eax),%eax
81001e67:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e6e:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e71:	01 d0                	add    %edx,%eax
81001e73:	8b 00                	mov    (%eax),%eax
81001e75:	83 ec 04             	sub    $0x4,%esp
81001e78:	6a 02                	push   $0x2
81001e7a:	68 68 73 00 81       	push   $0x81007368
81001e7f:	50                   	push   %eax
81001e80:	e8 e0 13 00 00       	call   81003265 <memcmp>
81001e85:	83 c4 10             	add    $0x10,%esp
81001e88:	85 c0                	test   %eax,%eax
81001e8a:	75 0a                	jne    81001e96 <getopt_internal+0x3eb>
81001e8c:	8b 45 20             	mov    0x20(%ebp),%eax
81001e8f:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001e96:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001e9d:	8b 45 20             	mov    0x20(%ebp),%eax
81001ea0:	8b 40 04             	mov    0x4(%eax),%eax
81001ea3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001eaa:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ead:	01 d0                	add    %edx,%eax
81001eaf:	8b 10                	mov    (%eax),%edx
81001eb1:	8b 45 20             	mov    0x20(%ebp),%eax
81001eb4:	8b 40 10             	mov    0x10(%eax),%eax
81001eb7:	01 d0                	add    %edx,%eax
81001eb9:	83 ec 08             	sub    $0x8,%esp
81001ebc:	6a 3d                	push   $0x3d
81001ebe:	50                   	push   %eax
81001ebf:	e8 ac 25 00 00       	call   81004470 <strchr>
81001ec4:	83 c4 10             	add    $0x10,%esp
81001ec7:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001eca:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001ece:	75 4a                	jne    81001f1a <getopt_internal+0x46f>
81001ed0:	8b 45 20             	mov    0x20(%ebp),%eax
81001ed3:	8b 40 04             	mov    0x4(%eax),%eax
81001ed6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001edd:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ee0:	01 d0                	add    %edx,%eax
81001ee2:	8b 00                	mov    (%eax),%eax
81001ee4:	83 ec 0c             	sub    $0xc,%esp
81001ee7:	50                   	push   %eax
81001ee8:	e8 33 27 00 00       	call   81004620 <strlen>
81001eed:	83 c4 10             	add    $0x10,%esp
81001ef0:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ef3:	8b 45 20             	mov    0x20(%ebp),%eax
81001ef6:	8b 40 04             	mov    0x4(%eax),%eax
81001ef9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f00:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f03:	01 d0                	add    %edx,%eax
81001f05:	8b 10                	mov    (%eax),%edx
81001f07:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f0a:	01 d0                	add    %edx,%eax
81001f0c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f0f:	8b 45 20             	mov    0x20(%ebp),%eax
81001f12:	8b 40 10             	mov    0x10(%eax),%eax
81001f15:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001f18:	eb 28                	jmp    81001f42 <getopt_internal+0x497>
81001f1a:	8b 45 20             	mov    0x20(%ebp),%eax
81001f1d:	8b 40 04             	mov    0x4(%eax),%eax
81001f20:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f27:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f2a:	01 d0                	add    %edx,%eax
81001f2c:	8b 08                	mov    (%eax),%ecx
81001f2e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f31:	29 c8                	sub    %ecx,%eax
81001f33:	89 c2                	mov    %eax,%edx
81001f35:	8b 45 20             	mov    0x20(%ebp),%eax
81001f38:	8b 48 10             	mov    0x10(%eax),%ecx
81001f3b:	89 d0                	mov    %edx,%eax
81001f3d:	29 c8                	sub    %ecx,%eax
81001f3f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f42:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001f49:	e9 95 01 00 00       	jmp    810020e3 <getopt_internal+0x638>
81001f4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f51:	c1 e0 04             	shl    $0x4,%eax
81001f54:	89 c2                	mov    %eax,%edx
81001f56:	8b 45 14             	mov    0x14(%ebp),%eax
81001f59:	01 d0                	add    %edx,%eax
81001f5b:	8b 00                	mov    (%eax),%eax
81001f5d:	8b 55 20             	mov    0x20(%ebp),%edx
81001f60:	8b 52 04             	mov    0x4(%edx),%edx
81001f63:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001f6a:	8b 55 0c             	mov    0xc(%ebp),%edx
81001f6d:	01 ca                	add    %ecx,%edx
81001f6f:	8b 0a                	mov    (%edx),%ecx
81001f71:	8b 55 20             	mov    0x20(%ebp),%edx
81001f74:	8b 52 10             	mov    0x10(%edx),%edx
81001f77:	01 ca                	add    %ecx,%edx
81001f79:	83 ec 04             	sub    $0x4,%esp
81001f7c:	ff 75 ec             	pushl  -0x14(%ebp)
81001f7f:	50                   	push   %eax
81001f80:	52                   	push   %edx
81001f81:	e8 df 12 00 00       	call   81003265 <memcmp>
81001f86:	83 c4 10             	add    $0x10,%esp
81001f89:	85 c0                	test   %eax,%eax
81001f8b:	0f 85 4e 01 00 00    	jne    810020df <getopt_internal+0x634>
81001f91:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f94:	c1 e0 04             	shl    $0x4,%eax
81001f97:	89 c2                	mov    %eax,%edx
81001f99:	8b 45 14             	mov    0x14(%ebp),%eax
81001f9c:	01 d0                	add    %edx,%eax
81001f9e:	8b 00                	mov    (%eax),%eax
81001fa0:	83 ec 0c             	sub    $0xc,%esp
81001fa3:	50                   	push   %eax
81001fa4:	e8 77 26 00 00       	call   81004620 <strlen>
81001fa9:	83 c4 10             	add    $0x10,%esp
81001fac:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001faf:	75 0b                	jne    81001fbc <getopt_internal+0x511>
81001fb1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fb4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001fb7:	e9 3e 01 00 00       	jmp    810020fa <getopt_internal+0x64f>
81001fbc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001fc0:	79 0b                	jns    81001fcd <getopt_internal+0x522>
81001fc2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fc5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001fc8:	e9 12 01 00 00       	jmp    810020df <getopt_internal+0x634>
81001fcd:	8b 45 20             	mov    0x20(%ebp),%eax
81001fd0:	8b 40 08             	mov    0x8(%eax),%eax
81001fd3:	85 c0                	test   %eax,%eax
81001fd5:	0f 84 ef 00 00 00    	je     810020ca <getopt_internal+0x61f>
81001fdb:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81001fe0:	8b 50 0c             	mov    0xc(%eax),%edx
81001fe3:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fe6:	8b 00                	mov    (%eax),%eax
81001fe8:	83 ec 08             	sub    $0x8,%esp
81001feb:	52                   	push   %edx
81001fec:	50                   	push   %eax
81001fed:	e8 9e 30 00 00       	call   81005090 <fputs>
81001ff2:	83 c4 10             	add    $0x10,%esp
81001ff5:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81001ffa:	8b 40 0c             	mov    0xc(%eax),%eax
81001ffd:	83 ec 08             	sub    $0x8,%esp
81002000:	50                   	push   %eax
81002001:	68 7b 73 00 81       	push   $0x8100737b
81002006:	e8 85 30 00 00       	call   81005090 <fputs>
8100200b:	83 c4 10             	add    $0x10,%esp
8100200e:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002013:	8b 50 0c             	mov    0xc(%eax),%edx
81002016:	8b 45 20             	mov    0x20(%ebp),%eax
81002019:	8b 40 04             	mov    0x4(%eax),%eax
8100201c:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002023:	8b 45 0c             	mov    0xc(%ebp),%eax
81002026:	01 c8                	add    %ecx,%eax
81002028:	8b 00                	mov    (%eax),%eax
8100202a:	83 ec 08             	sub    $0x8,%esp
8100202d:	52                   	push   %edx
8100202e:	50                   	push   %eax
8100202f:	e8 5c 30 00 00       	call   81005090 <fputs>
81002034:	83 c4 10             	add    $0x10,%esp
81002037:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
8100203c:	8b 40 0c             	mov    0xc(%eax),%eax
8100203f:	83 ec 08             	sub    $0x8,%esp
81002042:	50                   	push   %eax
81002043:	68 86 73 00 81       	push   $0x81007386
81002048:	e8 43 30 00 00       	call   81005090 <fputs>
8100204d:	83 c4 10             	add    $0x10,%esp
81002050:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002055:	8b 50 0c             	mov    0xc(%eax),%edx
81002058:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100205b:	c1 e0 04             	shl    $0x4,%eax
8100205e:	89 c1                	mov    %eax,%ecx
81002060:	8b 45 14             	mov    0x14(%ebp),%eax
81002063:	01 c8                	add    %ecx,%eax
81002065:	8b 00                	mov    (%eax),%eax
81002067:	83 ec 08             	sub    $0x8,%esp
8100206a:	52                   	push   %edx
8100206b:	50                   	push   %eax
8100206c:	e8 1f 30 00 00       	call   81005090 <fputs>
81002071:	83 c4 10             	add    $0x10,%esp
81002074:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002079:	8b 40 0c             	mov    0xc(%eax),%eax
8100207c:	83 ec 08             	sub    $0x8,%esp
8100207f:	50                   	push   %eax
81002080:	68 a3 73 00 81       	push   $0x810073a3
81002085:	e8 06 30 00 00       	call   81005090 <fputs>
8100208a:	83 c4 10             	add    $0x10,%esp
8100208d:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002092:	8b 50 0c             	mov    0xc(%eax),%edx
81002095:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002098:	c1 e0 04             	shl    $0x4,%eax
8100209b:	89 c1                	mov    %eax,%ecx
8100209d:	8b 45 14             	mov    0x14(%ebp),%eax
810020a0:	01 c8                	add    %ecx,%eax
810020a2:	8b 00                	mov    (%eax),%eax
810020a4:	83 ec 08             	sub    $0x8,%esp
810020a7:	52                   	push   %edx
810020a8:	50                   	push   %eax
810020a9:	e8 e2 2f 00 00       	call   81005090 <fputs>
810020ae:	83 c4 10             	add    $0x10,%esp
810020b1:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810020b6:	8b 40 0c             	mov    0xc(%eax),%eax
810020b9:	83 ec 08             	sub    $0x8,%esp
810020bc:	50                   	push   %eax
810020bd:	68 ac 73 00 81       	push   $0x810073ac
810020c2:	e8 c9 2f 00 00       	call   81005090 <fputs>
810020c7:	83 c4 10             	add    $0x10,%esp
810020ca:	8b 45 20             	mov    0x20(%ebp),%eax
810020cd:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810020d4:	8b 45 20             	mov    0x20(%ebp),%eax
810020d7:	8b 40 0c             	mov    0xc(%eax),%eax
810020da:	e9 dc 04 00 00       	jmp    810025bb <getopt_internal+0xb10>
810020df:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810020e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020e6:	c1 e0 04             	shl    $0x4,%eax
810020e9:	89 c2                	mov    %eax,%edx
810020eb:	8b 45 14             	mov    0x14(%ebp),%eax
810020ee:	01 d0                	add    %edx,%eax
810020f0:	8b 00                	mov    (%eax),%eax
810020f2:	85 c0                	test   %eax,%eax
810020f4:	0f 85 54 fe ff ff    	jne    81001f4e <getopt_internal+0x4a3>
810020fa:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810020fe:	78 13                	js     81002113 <getopt_internal+0x668>
81002100:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002103:	c1 e0 04             	shl    $0x4,%eax
81002106:	89 c2                	mov    %eax,%edx
81002108:	8b 45 14             	mov    0x14(%ebp),%eax
8100210b:	01 d0                	add    %edx,%eax
8100210d:	8b 40 04             	mov    0x4(%eax),%eax
81002110:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002113:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002117:	0f 89 9a 01 00 00    	jns    810022b7 <getopt_internal+0x80c>
8100211d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002121:	0f 84 90 01 00 00    	je     810022b7 <getopt_internal+0x80c>
81002127:	8b 45 20             	mov    0x20(%ebp),%eax
8100212a:	8b 40 04             	mov    0x4(%eax),%eax
8100212d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002134:	8b 45 0c             	mov    0xc(%ebp),%eax
81002137:	01 d0                	add    %edx,%eax
81002139:	8b 10                	mov    (%eax),%edx
8100213b:	8b 45 20             	mov    0x20(%ebp),%eax
8100213e:	8b 40 10             	mov    0x10(%eax),%eax
81002141:	01 d0                	add    %edx,%eax
81002143:	0f b6 00             	movzbl (%eax),%eax
81002146:	0f be c0             	movsbl %al,%eax
81002149:	83 ec 08             	sub    $0x8,%esp
8100214c:	50                   	push   %eax
8100214d:	ff 75 10             	pushl  0x10(%ebp)
81002150:	e8 1b 23 00 00       	call   81004470 <strchr>
81002155:	83 c4 10             	add    $0x10,%esp
81002158:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100215b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100215f:	0f 85 f1 00 00 00    	jne    81002256 <getopt_internal+0x7ab>
81002165:	8b 45 20             	mov    0x20(%ebp),%eax
81002168:	8b 40 08             	mov    0x8(%eax),%eax
8100216b:	85 c0                	test   %eax,%eax
8100216d:	0f 84 83 00 00 00    	je     810021f6 <getopt_internal+0x74b>
81002173:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002178:	8b 50 0c             	mov    0xc(%eax),%edx
8100217b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100217e:	8b 00                	mov    (%eax),%eax
81002180:	83 ec 08             	sub    $0x8,%esp
81002183:	52                   	push   %edx
81002184:	50                   	push   %eax
81002185:	e8 06 2f 00 00       	call   81005090 <fputs>
8100218a:	83 c4 10             	add    $0x10,%esp
8100218d:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002192:	8b 40 0c             	mov    0xc(%eax),%eax
81002195:	83 ec 08             	sub    $0x8,%esp
81002198:	50                   	push   %eax
81002199:	68 b0 73 00 81       	push   $0x810073b0
8100219e:	e8 ed 2e 00 00       	call   81005090 <fputs>
810021a3:	83 c4 10             	add    $0x10,%esp
810021a6:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810021ab:	8b 50 0c             	mov    0xc(%eax),%edx
810021ae:	8b 45 20             	mov    0x20(%ebp),%eax
810021b1:	8b 40 04             	mov    0x4(%eax),%eax
810021b4:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
810021bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810021be:	01 c8                	add    %ecx,%eax
810021c0:	8b 08                	mov    (%eax),%ecx
810021c2:	8b 45 20             	mov    0x20(%ebp),%eax
810021c5:	8b 40 10             	mov    0x10(%eax),%eax
810021c8:	01 c8                	add    %ecx,%eax
810021ca:	0f b6 00             	movzbl (%eax),%eax
810021cd:	0f be c0             	movsbl %al,%eax
810021d0:	83 ec 08             	sub    $0x8,%esp
810021d3:	52                   	push   %edx
810021d4:	50                   	push   %eax
810021d5:	e8 c2 2d 00 00       	call   81004f9c <fputc>
810021da:	83 c4 10             	add    $0x10,%esp
810021dd:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810021e2:	8b 40 0c             	mov    0xc(%eax),%eax
810021e5:	83 ec 08             	sub    $0x8,%esp
810021e8:	50                   	push   %eax
810021e9:	68 c7 73 00 81       	push   $0x810073c7
810021ee:	e8 9d 2e 00 00       	call   81005090 <fputs>
810021f3:	83 c4 10             	add    $0x10,%esp
810021f6:	8b 45 20             	mov    0x20(%ebp),%eax
810021f9:	8b 40 10             	mov    0x10(%eax),%eax
810021fc:	8d 50 01             	lea    0x1(%eax),%edx
810021ff:	8b 45 20             	mov    0x20(%ebp),%eax
81002202:	89 50 10             	mov    %edx,0x10(%eax)
81002205:	8b 45 20             	mov    0x20(%ebp),%eax
81002208:	8b 40 04             	mov    0x4(%eax),%eax
8100220b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002212:	8b 45 0c             	mov    0xc(%ebp),%eax
81002215:	01 d0                	add    %edx,%eax
81002217:	8b 10                	mov    (%eax),%edx
81002219:	8b 45 20             	mov    0x20(%ebp),%eax
8100221c:	8b 40 10             	mov    0x10(%eax),%eax
8100221f:	01 d0                	add    %edx,%eax
81002221:	0f b6 00             	movzbl (%eax),%eax
81002224:	84 c0                	test   %al,%al
81002226:	75 19                	jne    81002241 <getopt_internal+0x796>
81002228:	8b 45 20             	mov    0x20(%ebp),%eax
8100222b:	8b 40 04             	mov    0x4(%eax),%eax
8100222e:	8d 50 01             	lea    0x1(%eax),%edx
81002231:	8b 45 20             	mov    0x20(%ebp),%eax
81002234:	89 50 04             	mov    %edx,0x4(%eax)
81002237:	8b 45 20             	mov    0x20(%ebp),%eax
8100223a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002241:	8b 45 20             	mov    0x20(%ebp),%eax
81002244:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100224b:	8b 45 20             	mov    0x20(%ebp),%eax
8100224e:	8b 40 0c             	mov    0xc(%eax),%eax
81002251:	e9 65 03 00 00       	jmp    810025bb <getopt_internal+0xb10>
81002256:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002259:	83 c0 01             	add    $0x1,%eax
8100225c:	0f b6 00             	movzbl (%eax),%eax
8100225f:	3c 3a                	cmp    $0x3a,%al
81002261:	75 1b                	jne    8100227e <getopt_internal+0x7d3>
81002263:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002266:	83 c0 02             	add    $0x2,%eax
81002269:	0f b6 00             	movzbl (%eax),%eax
8100226c:	3c 3a                	cmp    $0x3a,%al
8100226e:	75 07                	jne    81002277 <getopt_internal+0x7cc>
81002270:	b8 02 00 00 00       	mov    $0x2,%eax
81002275:	eb 0c                	jmp    81002283 <getopt_internal+0x7d8>
81002277:	b8 01 00 00 00       	mov    $0x1,%eax
8100227c:	eb 05                	jmp    81002283 <getopt_internal+0x7d8>
8100227e:	b8 00 00 00 00       	mov    $0x0,%eax
81002283:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002286:	8b 45 20             	mov    0x20(%ebp),%eax
81002289:	8b 40 04             	mov    0x4(%eax),%eax
8100228c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002293:	8b 45 0c             	mov    0xc(%ebp),%eax
81002296:	01 d0                	add    %edx,%eax
81002298:	8b 10                	mov    (%eax),%edx
8100229a:	8b 45 20             	mov    0x20(%ebp),%eax
8100229d:	8b 40 10             	mov    0x10(%eax),%eax
810022a0:	83 c0 01             	add    $0x1,%eax
810022a3:	01 d0                	add    %edx,%eax
810022a5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810022ab:	0f b6 00             	movzbl (%eax),%eax
810022ae:	0f be d0             	movsbl %al,%edx
810022b1:	8b 45 20             	mov    0x20(%ebp),%eax
810022b4:	89 50 0c             	mov    %edx,0xc(%eax)
810022b7:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810022be:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
810022c2:	74 40                	je     81002304 <getopt_internal+0x859>
810022c4:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810022c8:	0f 85 b0 01 00 00    	jne    8100247e <getopt_internal+0x9d3>
810022ce:	8b 45 e8             	mov    -0x18(%ebp),%eax
810022d1:	0f b6 00             	movzbl (%eax),%eax
810022d4:	3c 3d                	cmp    $0x3d,%al
810022d6:	75 04                	jne    810022dc <getopt_internal+0x831>
810022d8:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810022dc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810022df:	0f b6 00             	movzbl (%eax),%eax
810022e2:	84 c0                	test   %al,%al
810022e4:	74 05                	je     810022eb <getopt_internal+0x840>
810022e6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810022e9:	eb 05                	jmp    810022f0 <getopt_internal+0x845>
810022eb:	b8 00 00 00 00       	mov    $0x0,%eax
810022f0:	8b 55 20             	mov    0x20(%ebp),%edx
810022f3:	89 02                	mov    %eax,(%edx)
810022f5:	8b 45 20             	mov    0x20(%ebp),%eax
810022f8:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810022ff:	e9 d2 01 00 00       	jmp    810024d6 <getopt_internal+0xa2b>
81002304:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002307:	0f b6 00             	movzbl (%eax),%eax
8100230a:	3c 3d                	cmp    $0x3d,%al
8100230c:	75 04                	jne    81002312 <getopt_internal+0x867>
8100230e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002312:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002315:	0f b6 00             	movzbl (%eax),%eax
81002318:	84 c0                	test   %al,%al
8100231a:	74 17                	je     81002333 <getopt_internal+0x888>
8100231c:	8b 45 20             	mov    0x20(%ebp),%eax
8100231f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002322:	89 10                	mov    %edx,(%eax)
81002324:	8b 45 20             	mov    0x20(%ebp),%eax
81002327:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100232e:	e9 a3 01 00 00       	jmp    810024d6 <getopt_internal+0xa2b>
81002333:	8b 45 20             	mov    0x20(%ebp),%eax
81002336:	8b 40 04             	mov    0x4(%eax),%eax
81002339:	83 c0 01             	add    $0x1,%eax
8100233c:	39 45 08             	cmp    %eax,0x8(%ebp)
8100233f:	0f 8f 0a 01 00 00    	jg     8100244f <getopt_internal+0x9a4>
81002345:	8b 45 20             	mov    0x20(%ebp),%eax
81002348:	8b 40 08             	mov    0x8(%eax),%eax
8100234b:	85 c0                	test   %eax,%eax
8100234d:	0f 84 d3 00 00 00    	je     81002426 <getopt_internal+0x97b>
81002353:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002358:	8b 50 0c             	mov    0xc(%eax),%edx
8100235b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100235e:	8b 00                	mov    (%eax),%eax
81002360:	83 ec 08             	sub    $0x8,%esp
81002363:	52                   	push   %edx
81002364:	50                   	push   %eax
81002365:	e8 26 2d 00 00       	call   81005090 <fputs>
8100236a:	83 c4 10             	add    $0x10,%esp
8100236d:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002372:	8b 40 0c             	mov    0xc(%eax),%eax
81002375:	83 ec 08             	sub    $0x8,%esp
81002378:	50                   	push   %eax
81002379:	68 cc 73 00 81       	push   $0x810073cc
8100237e:	e8 0d 2d 00 00       	call   81005090 <fputs>
81002383:	83 c4 10             	add    $0x10,%esp
81002386:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100238a:	78 54                	js     810023e0 <getopt_internal+0x935>
8100238c:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002391:	8b 40 0c             	mov    0xc(%eax),%eax
81002394:	83 ec 08             	sub    $0x8,%esp
81002397:	50                   	push   %eax
81002398:	6a 2d                	push   $0x2d
8100239a:	e8 fd 2b 00 00       	call   81004f9c <fputc>
8100239f:	83 c4 10             	add    $0x10,%esp
810023a2:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810023a7:	8b 50 0c             	mov    0xc(%eax),%edx
810023aa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810023ad:	c1 e0 04             	shl    $0x4,%eax
810023b0:	89 c1                	mov    %eax,%ecx
810023b2:	8b 45 14             	mov    0x14(%ebp),%eax
810023b5:	01 c8                	add    %ecx,%eax
810023b7:	8b 00                	mov    (%eax),%eax
810023b9:	83 ec 08             	sub    $0x8,%esp
810023bc:	52                   	push   %edx
810023bd:	50                   	push   %eax
810023be:	e8 cd 2c 00 00       	call   81005090 <fputs>
810023c3:	83 c4 10             	add    $0x10,%esp
810023c6:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810023ca:	74 07                	je     810023d3 <getopt_internal+0x928>
810023cc:	ba 3a 00 00 00       	mov    $0x3a,%edx
810023d1:	eb 05                	jmp    810023d8 <getopt_internal+0x92d>
810023d3:	ba 3f 00 00 00       	mov    $0x3f,%edx
810023d8:	8b 45 20             	mov    0x20(%ebp),%eax
810023db:	89 50 0c             	mov    %edx,0xc(%eax)
810023de:	eb 2d                	jmp    8100240d <getopt_internal+0x962>
810023e0:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810023e5:	8b 50 0c             	mov    0xc(%eax),%edx
810023e8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810023eb:	0f b6 00             	movzbl (%eax),%eax
810023ee:	0f be c0             	movsbl %al,%eax
810023f1:	83 ec 08             	sub    $0x8,%esp
810023f4:	52                   	push   %edx
810023f5:	50                   	push   %eax
810023f6:	e8 a1 2b 00 00       	call   81004f9c <fputc>
810023fb:	83 c4 10             	add    $0x10,%esp
810023fe:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002401:	0f b6 00             	movzbl (%eax),%eax
81002404:	0f be d0             	movsbl %al,%edx
81002407:	8b 45 20             	mov    0x20(%ebp),%eax
8100240a:	89 50 0c             	mov    %edx,0xc(%eax)
8100240d:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81002412:	8b 40 0c             	mov    0xc(%eax),%eax
81002415:	83 ec 08             	sub    $0x8,%esp
81002418:	50                   	push   %eax
81002419:	68 c7 73 00 81       	push   $0x810073c7
8100241e:	e8 6d 2c 00 00       	call   81005090 <fputs>
81002423:	83 c4 10             	add    $0x10,%esp
81002426:	8b 45 20             	mov    0x20(%ebp),%eax
81002429:	8b 40 04             	mov    0x4(%eax),%eax
8100242c:	8d 50 01             	lea    0x1(%eax),%edx
8100242f:	8b 45 20             	mov    0x20(%ebp),%eax
81002432:	89 50 04             	mov    %edx,0x4(%eax)
81002435:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002439:	74 0a                	je     81002445 <getopt_internal+0x99a>
8100243b:	b8 3a 00 00 00       	mov    $0x3a,%eax
81002440:	e9 76 01 00 00       	jmp    810025bb <getopt_internal+0xb10>
81002445:	b8 3f 00 00 00       	mov    $0x3f,%eax
8100244a:	e9 6c 01 00 00       	jmp    810025bb <getopt_internal+0xb10>
8100244f:	8b 45 20             	mov    0x20(%ebp),%eax
81002452:	8b 40 04             	mov    0x4(%eax),%eax
81002455:	83 c0 01             	add    $0x1,%eax
81002458:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100245f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002462:	01 d0                	add    %edx,%eax
81002464:	8b 10                	mov    (%eax),%edx
81002466:	8b 45 20             	mov    0x20(%ebp),%eax
81002469:	89 10                	mov    %edx,(%eax)
8100246b:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002472:	8b 45 20             	mov    0x20(%ebp),%eax
81002475:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100247c:	eb 58                	jmp    810024d6 <getopt_internal+0xa2b>
8100247e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002482:	79 3e                	jns    810024c2 <getopt_internal+0xa17>
81002484:	8b 45 20             	mov    0x20(%ebp),%eax
81002487:	8b 40 10             	mov    0x10(%eax),%eax
8100248a:	8d 50 01             	lea    0x1(%eax),%edx
8100248d:	8b 45 20             	mov    0x20(%ebp),%eax
81002490:	89 50 10             	mov    %edx,0x10(%eax)
81002493:	8b 45 20             	mov    0x20(%ebp),%eax
81002496:	8b 40 04             	mov    0x4(%eax),%eax
81002499:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810024a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810024a3:	01 d0                	add    %edx,%eax
810024a5:	8b 10                	mov    (%eax),%edx
810024a7:	8b 45 20             	mov    0x20(%ebp),%eax
810024aa:	8b 40 10             	mov    0x10(%eax),%eax
810024ad:	01 d0                	add    %edx,%eax
810024af:	0f b6 00             	movzbl (%eax),%eax
810024b2:	84 c0                	test   %al,%al
810024b4:	75 16                	jne    810024cc <getopt_internal+0xa21>
810024b6:	8b 45 20             	mov    0x20(%ebp),%eax
810024b9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810024c0:	eb 0a                	jmp    810024cc <getopt_internal+0xa21>
810024c2:	8b 45 20             	mov    0x20(%ebp),%eax
810024c5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810024cc:	8b 45 20             	mov    0x20(%ebp),%eax
810024cf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810024d5:	90                   	nop
810024d6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810024da:	75 57                	jne    81002533 <getopt_internal+0xa88>
810024dc:	8b 45 20             	mov    0x20(%ebp),%eax
810024df:	8b 40 10             	mov    0x10(%eax),%eax
810024e2:	83 f8 01             	cmp    $0x1,%eax
810024e5:	75 4c                	jne    81002533 <getopt_internal+0xa88>
810024e7:	8b 45 20             	mov    0x20(%ebp),%eax
810024ea:	8b 40 18             	mov    0x18(%eax),%eax
810024ed:	85 c0                	test   %eax,%eax
810024ef:	74 42                	je     81002533 <getopt_internal+0xa88>
810024f1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810024f4:	8d 48 01             	lea    0x1(%eax),%ecx
810024f7:	8b 45 20             	mov    0x20(%ebp),%eax
810024fa:	8b 40 18             	mov    0x18(%eax),%eax
810024fd:	8b 55 20             	mov    0x20(%ebp),%edx
81002500:	8b 52 14             	mov    0x14(%edx),%edx
81002503:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
8100250a:	8b 55 0c             	mov    0xc(%ebp),%edx
8100250d:	01 da                	add    %ebx,%edx
8100250f:	83 ec 04             	sub    $0x4,%esp
81002512:	51                   	push   %ecx
81002513:	50                   	push   %eax
81002514:	52                   	push   %edx
81002515:	e8 7f f4 ff ff       	call   81001999 <permute>
8100251a:	83 c4 10             	add    $0x10,%esp
8100251d:	8b 45 20             	mov    0x20(%ebp),%eax
81002520:	8b 40 14             	mov    0x14(%eax),%eax
81002523:	8d 50 01             	lea    0x1(%eax),%edx
81002526:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002529:	01 c2                	add    %eax,%edx
8100252b:	8b 45 20             	mov    0x20(%ebp),%eax
8100252e:	89 50 04             	mov    %edx,0x4(%eax)
81002531:	eb 1f                	jmp    81002552 <getopt_internal+0xaa7>
81002533:	8b 45 20             	mov    0x20(%ebp),%eax
81002536:	8b 40 10             	mov    0x10(%eax),%eax
81002539:	83 f8 01             	cmp    $0x1,%eax
8100253c:	75 14                	jne    81002552 <getopt_internal+0xaa7>
8100253e:	8b 45 20             	mov    0x20(%ebp),%eax
81002541:	8b 40 04             	mov    0x4(%eax),%eax
81002544:	8d 50 01             	lea    0x1(%eax),%edx
81002547:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100254a:	01 c2                	add    %eax,%edx
8100254c:	8b 45 20             	mov    0x20(%ebp),%eax
8100254f:	89 50 04             	mov    %edx,0x4(%eax)
81002552:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002556:	78 5d                	js     810025b5 <getopt_internal+0xb0a>
81002558:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
8100255c:	74 08                	je     81002566 <getopt_internal+0xabb>
8100255e:	8b 45 18             	mov    0x18(%ebp),%eax
81002561:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002564:	89 10                	mov    %edx,(%eax)
81002566:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002569:	c1 e0 04             	shl    $0x4,%eax
8100256c:	89 c2                	mov    %eax,%edx
8100256e:	8b 45 14             	mov    0x14(%ebp),%eax
81002571:	01 d0                	add    %edx,%eax
81002573:	8b 40 08             	mov    0x8(%eax),%eax
81002576:	85 c0                	test   %eax,%eax
81002578:	74 29                	je     810025a3 <getopt_internal+0xaf8>
8100257a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100257d:	c1 e0 04             	shl    $0x4,%eax
81002580:	89 c2                	mov    %eax,%edx
81002582:	8b 45 14             	mov    0x14(%ebp),%eax
81002585:	01 c2                	add    %eax,%edx
81002587:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100258a:	c1 e0 04             	shl    $0x4,%eax
8100258d:	89 c1                	mov    %eax,%ecx
8100258f:	8b 45 14             	mov    0x14(%ebp),%eax
81002592:	01 c8                	add    %ecx,%eax
81002594:	8b 40 08             	mov    0x8(%eax),%eax
81002597:	8b 52 0c             	mov    0xc(%edx),%edx
8100259a:	89 10                	mov    %edx,(%eax)
8100259c:	b8 00 00 00 00       	mov    $0x0,%eax
810025a1:	eb 18                	jmp    810025bb <getopt_internal+0xb10>
810025a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810025a6:	c1 e0 04             	shl    $0x4,%eax
810025a9:	89 c2                	mov    %eax,%edx
810025ab:	8b 45 14             	mov    0x14(%ebp),%eax
810025ae:	01 d0                	add    %edx,%eax
810025b0:	8b 40 0c             	mov    0xc(%eax),%eax
810025b3:	eb 06                	jmp    810025bb <getopt_internal+0xb10>
810025b5:	8b 45 20             	mov    0x20(%ebp),%eax
810025b8:	8b 40 0c             	mov    0xc(%eax),%eax
810025bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810025be:	c9                   	leave  
810025bf:	c3                   	ret    

810025c0 <getopt>:
810025c0:	55                   	push   %ebp
810025c1:	89 e5                	mov    %esp,%ebp
810025c3:	83 ec 28             	sub    $0x28,%esp
810025c6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025c9:	50                   	push   %eax
810025ca:	e8 31 f4 ff ff       	call   81001a00 <read_globals>
810025cf:	83 c4 04             	add    $0x4,%esp
810025d2:	83 ec 04             	sub    $0x4,%esp
810025d5:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025d8:	50                   	push   %eax
810025d9:	6a 00                	push   $0x0
810025db:	6a 00                	push   $0x0
810025dd:	6a 00                	push   $0x0
810025df:	ff 75 10             	pushl  0x10(%ebp)
810025e2:	ff 75 0c             	pushl  0xc(%ebp)
810025e5:	ff 75 08             	pushl  0x8(%ebp)
810025e8:	e8 be f4 ff ff       	call   81001aab <getopt_internal>
810025ed:	83 c4 20             	add    $0x20,%esp
810025f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025f3:	83 ec 0c             	sub    $0xc,%esp
810025f6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025f9:	50                   	push   %eax
810025fa:	e8 5a f4 ff ff       	call   81001a59 <write_globals>
810025ff:	83 c4 10             	add    $0x10,%esp
81002602:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002605:	c9                   	leave  
81002606:	c3                   	ret    

81002607 <getopt_long>:
81002607:	55                   	push   %ebp
81002608:	89 e5                	mov    %esp,%ebp
8100260a:	83 ec 28             	sub    $0x28,%esp
8100260d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002610:	50                   	push   %eax
81002611:	e8 ea f3 ff ff       	call   81001a00 <read_globals>
81002616:	83 c4 04             	add    $0x4,%esp
81002619:	83 ec 04             	sub    $0x4,%esp
8100261c:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100261f:	50                   	push   %eax
81002620:	6a 00                	push   $0x0
81002622:	ff 75 18             	pushl  0x18(%ebp)
81002625:	ff 75 14             	pushl  0x14(%ebp)
81002628:	ff 75 10             	pushl  0x10(%ebp)
8100262b:	ff 75 0c             	pushl  0xc(%ebp)
8100262e:	ff 75 08             	pushl  0x8(%ebp)
81002631:	e8 75 f4 ff ff       	call   81001aab <getopt_internal>
81002636:	83 c4 20             	add    $0x20,%esp
81002639:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100263c:	83 ec 0c             	sub    $0xc,%esp
8100263f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002642:	50                   	push   %eax
81002643:	e8 11 f4 ff ff       	call   81001a59 <write_globals>
81002648:	83 c4 10             	add    $0x10,%esp
8100264b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100264e:	c9                   	leave  
8100264f:	c3                   	ret    

81002650 <getopt_long_only>:
81002650:	55                   	push   %ebp
81002651:	89 e5                	mov    %esp,%ebp
81002653:	83 ec 28             	sub    $0x28,%esp
81002656:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002659:	50                   	push   %eax
8100265a:	e8 a1 f3 ff ff       	call   81001a00 <read_globals>
8100265f:	83 c4 04             	add    $0x4,%esp
81002662:	83 ec 04             	sub    $0x4,%esp
81002665:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002668:	50                   	push   %eax
81002669:	6a 01                	push   $0x1
8100266b:	ff 75 18             	pushl  0x18(%ebp)
8100266e:	ff 75 14             	pushl  0x14(%ebp)
81002671:	ff 75 10             	pushl  0x10(%ebp)
81002674:	ff 75 0c             	pushl  0xc(%ebp)
81002677:	ff 75 08             	pushl  0x8(%ebp)
8100267a:	e8 2c f4 ff ff       	call   81001aab <getopt_internal>
8100267f:	83 c4 20             	add    $0x20,%esp
81002682:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002685:	83 ec 0c             	sub    $0xc,%esp
81002688:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100268b:	50                   	push   %eax
8100268c:	e8 c8 f3 ff ff       	call   81001a59 <write_globals>
81002691:	83 c4 10             	add    $0x10,%esp
81002694:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002697:	c9                   	leave  
81002698:	c3                   	ret    

81002699 <__getopt_r>:
81002699:	55                   	push   %ebp
8100269a:	89 e5                	mov    %esp,%ebp
8100269c:	83 ec 08             	sub    $0x8,%esp
8100269f:	83 ec 04             	sub    $0x4,%esp
810026a2:	ff 75 14             	pushl  0x14(%ebp)
810026a5:	6a 00                	push   $0x0
810026a7:	6a 00                	push   $0x0
810026a9:	6a 00                	push   $0x0
810026ab:	ff 75 10             	pushl  0x10(%ebp)
810026ae:	ff 75 0c             	pushl  0xc(%ebp)
810026b1:	ff 75 08             	pushl  0x8(%ebp)
810026b4:	e8 f2 f3 ff ff       	call   81001aab <getopt_internal>
810026b9:	83 c4 20             	add    $0x20,%esp
810026bc:	c9                   	leave  
810026bd:	c3                   	ret    

810026be <__getopt_long_r>:
810026be:	55                   	push   %ebp
810026bf:	89 e5                	mov    %esp,%ebp
810026c1:	83 ec 08             	sub    $0x8,%esp
810026c4:	83 ec 04             	sub    $0x4,%esp
810026c7:	ff 75 1c             	pushl  0x1c(%ebp)
810026ca:	6a 00                	push   $0x0
810026cc:	ff 75 18             	pushl  0x18(%ebp)
810026cf:	ff 75 14             	pushl  0x14(%ebp)
810026d2:	ff 75 10             	pushl  0x10(%ebp)
810026d5:	ff 75 0c             	pushl  0xc(%ebp)
810026d8:	ff 75 08             	pushl  0x8(%ebp)
810026db:	e8 cb f3 ff ff       	call   81001aab <getopt_internal>
810026e0:	83 c4 20             	add    $0x20,%esp
810026e3:	c9                   	leave  
810026e4:	c3                   	ret    

810026e5 <__getopt_long_only_r>:
810026e5:	55                   	push   %ebp
810026e6:	89 e5                	mov    %esp,%ebp
810026e8:	83 ec 08             	sub    $0x8,%esp
810026eb:	83 ec 04             	sub    $0x4,%esp
810026ee:	ff 75 1c             	pushl  0x1c(%ebp)
810026f1:	6a 01                	push   $0x1
810026f3:	ff 75 18             	pushl  0x18(%ebp)
810026f6:	ff 75 14             	pushl  0x14(%ebp)
810026f9:	ff 75 10             	pushl  0x10(%ebp)
810026fc:	ff 75 0c             	pushl  0xc(%ebp)
810026ff:	ff 75 08             	pushl  0x8(%ebp)
81002702:	e8 a4 f3 ff ff       	call   81001aab <getopt_internal>
81002707:	83 c4 20             	add    $0x20,%esp
8100270a:	c9                   	leave  
8100270b:	c3                   	ret    

8100270c <malloc_extend_top>:
8100270c:	55                   	push   %ebp
8100270d:	89 e5                	mov    %esp,%ebp
8100270f:	83 ec 38             	sub    $0x38,%esp
81002712:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002719:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
8100271e:	8b 40 08             	mov    0x8(%eax),%eax
81002721:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002724:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002727:	8b 40 04             	mov    0x4(%eax),%eax
8100272a:	83 e0 fc             	and    $0xfffffffc,%eax
8100272d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002730:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002733:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002736:	01 d0                	add    %edx,%eax
81002738:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100273b:	8b 15 a0 86 00 81    	mov    0x810086a0,%edx
81002741:	8b 45 0c             	mov    0xc(%ebp),%eax
81002744:	01 d0                	add    %edx,%eax
81002746:	83 c0 10             	add    $0x10,%eax
81002749:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100274c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81002753:	a1 cc 7f 00 81       	mov    0x81007fcc,%eax
81002758:	83 f8 ff             	cmp    $0xffffffff,%eax
8100275b:	74 15                	je     81002772 <malloc_extend_top+0x66>
8100275d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002760:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002763:	01 d0                	add    %edx,%eax
81002765:	8d 50 ff             	lea    -0x1(%eax),%edx
81002768:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100276b:	f7 d8                	neg    %eax
8100276d:	21 d0                	and    %edx,%eax
8100276f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002772:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002775:	83 ec 08             	sub    $0x8,%esp
81002778:	50                   	push   %eax
81002779:	ff 75 08             	pushl  0x8(%ebp)
8100277c:	e8 e4 1a 00 00       	call   81004265 <_sbrk_r>
81002781:	83 c4 10             	add    $0x10,%esp
81002784:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002787:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100278b:	0f 84 0b 02 00 00    	je     8100299c <malloc_extend_top+0x290>
81002791:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002794:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002797:	73 0e                	jae    810027a7 <malloc_extend_top+0x9b>
81002799:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
8100279e:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810027a1:	0f 85 f5 01 00 00    	jne    8100299c <malloc_extend_top+0x290>
810027a7:	a1 c0 86 00 81       	mov    0x810086c0,%eax
810027ac:	89 c2                	mov    %eax,%edx
810027ae:	8b 45 e8             	mov    -0x18(%ebp),%eax
810027b1:	01 d0                	add    %edx,%eax
810027b3:	a3 c0 86 00 81       	mov    %eax,0x810086c0
810027b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027bb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810027be:	75 30                	jne    810027f0 <malloc_extend_top+0xe4>
810027c0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027c3:	8d 50 ff             	lea    -0x1(%eax),%edx
810027c6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810027c9:	21 d0                	and    %edx,%eax
810027cb:	85 c0                	test   %eax,%eax
810027cd:	75 21                	jne    810027f0 <malloc_extend_top+0xe4>
810027cf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810027d2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810027d5:	01 d0                	add    %edx,%eax
810027d7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810027da:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810027df:	8b 40 08             	mov    0x8(%eax),%eax
810027e2:	8b 55 d0             	mov    -0x30(%ebp),%edx
810027e5:	83 ca 01             	or     $0x1,%edx
810027e8:	89 50 04             	mov    %edx,0x4(%eax)
810027eb:	e9 76 01 00 00       	jmp    81002966 <malloc_extend_top+0x25a>
810027f0:	a1 cc 7f 00 81       	mov    0x81007fcc,%eax
810027f5:	83 f8 ff             	cmp    $0xffffffff,%eax
810027f8:	75 0a                	jne    81002804 <malloc_extend_top+0xf8>
810027fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027fd:	a3 cc 7f 00 81       	mov    %eax,0x81007fcc
81002802:	eb 13                	jmp    81002817 <malloc_extend_top+0x10b>
81002804:	8b 15 c0 86 00 81    	mov    0x810086c0,%edx
8100280a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100280d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81002810:	01 d0                	add    %edx,%eax
81002812:	a3 c0 86 00 81       	mov    %eax,0x810086c0
81002817:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100281a:	83 c0 08             	add    $0x8,%eax
8100281d:	83 e0 07             	and    $0x7,%eax
81002820:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002823:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002827:	74 13                	je     8100283c <malloc_extend_top+0x130>
81002829:	b8 08 00 00 00       	mov    $0x8,%eax
8100282e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81002831:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002834:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002837:	01 45 f4             	add    %eax,-0xc(%ebp)
8100283a:	eb 07                	jmp    81002843 <malloc_extend_top+0x137>
8100283c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002843:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002846:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002849:	01 d0                	add    %edx,%eax
8100284b:	89 c2                	mov    %eax,%edx
8100284d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002850:	83 e8 01             	sub    $0x1,%eax
81002853:	21 c2                	and    %eax,%edx
81002855:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002858:	29 d0                	sub    %edx,%eax
8100285a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100285d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002860:	83 e8 01             	sub    $0x1,%eax
81002863:	21 45 f0             	and    %eax,-0x10(%ebp)
81002866:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002869:	83 ec 08             	sub    $0x8,%esp
8100286c:	50                   	push   %eax
8100286d:	ff 75 08             	pushl  0x8(%ebp)
81002870:	e8 f0 19 00 00       	call   81004265 <_sbrk_r>
81002875:	83 c4 10             	add    $0x10,%esp
81002878:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100287b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100287f:	75 28                	jne    810028a9 <malloc_extend_top+0x19d>
81002881:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002888:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100288f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002892:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002895:	01 d0                	add    %edx,%eax
81002897:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100289a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100289e:	74 09                	je     810028a9 <malloc_extend_top+0x19d>
810028a0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810028a3:	83 e8 08             	sub    $0x8,%eax
810028a6:	01 45 ec             	add    %eax,-0x14(%ebp)
810028a9:	a1 c0 86 00 81       	mov    0x810086c0,%eax
810028ae:	89 c2                	mov    %eax,%edx
810028b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028b3:	01 d0                	add    %edx,%eax
810028b5:	a3 c0 86 00 81       	mov    %eax,0x810086c0
810028ba:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
810028bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028c2:	89 42 08             	mov    %eax,0x8(%edx)
810028c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028c8:	2b 45 f4             	sub    -0xc(%ebp),%eax
810028cb:	89 c2                	mov    %eax,%edx
810028cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028d0:	01 d0                	add    %edx,%eax
810028d2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810028d5:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810028da:	8b 40 08             	mov    0x8(%eax),%eax
810028dd:	8b 55 d0             	mov    -0x30(%ebp),%edx
810028e0:	83 ca 01             	or     $0x1,%edx
810028e3:	89 50 04             	mov    %edx,0x4(%eax)
810028e6:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810028eb:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810028ee:	74 76                	je     81002966 <malloc_extend_top+0x25a>
810028f0:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810028f4:	77 14                	ja     8100290a <malloc_extend_top+0x1fe>
810028f6:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810028fb:	8b 40 08             	mov    0x8(%eax),%eax
810028fe:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002905:	e9 93 00 00 00       	jmp    8100299d <malloc_extend_top+0x291>
8100290a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100290d:	83 e8 0c             	sub    $0xc,%eax
81002910:	83 e0 f8             	and    $0xfffffff8,%eax
81002913:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002916:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002919:	8b 40 04             	mov    0x4(%eax),%eax
8100291c:	83 e0 01             	and    $0x1,%eax
8100291f:	0b 45 dc             	or     -0x24(%ebp),%eax
81002922:	89 c2                	mov    %eax,%edx
81002924:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002927:	89 50 04             	mov    %edx,0x4(%eax)
8100292a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100292d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002930:	01 d0                	add    %edx,%eax
81002932:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002939:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100293c:	8d 50 04             	lea    0x4(%eax),%edx
8100293f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002942:	01 d0                	add    %edx,%eax
81002944:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100294b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100294f:	76 15                	jbe    81002966 <malloc_extend_top+0x25a>
81002951:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002954:	83 c0 08             	add    $0x8,%eax
81002957:	83 ec 08             	sub    $0x8,%esp
8100295a:	50                   	push   %eax
8100295b:	ff 75 08             	pushl  0x8(%ebp)
8100295e:	e8 cf e8 ff ff       	call   81001232 <_free_r>
81002963:	83 c4 10             	add    $0x10,%esp
81002966:	a1 c0 86 00 81       	mov    0x810086c0,%eax
8100296b:	89 c2                	mov    %eax,%edx
8100296d:	a1 a4 86 00 81       	mov    0x810086a4,%eax
81002972:	39 c2                	cmp    %eax,%edx
81002974:	76 0a                	jbe    81002980 <malloc_extend_top+0x274>
81002976:	a1 c0 86 00 81       	mov    0x810086c0,%eax
8100297b:	a3 a4 86 00 81       	mov    %eax,0x810086a4
81002980:	a1 c0 86 00 81       	mov    0x810086c0,%eax
81002985:	89 c2                	mov    %eax,%edx
81002987:	a1 a8 86 00 81       	mov    0x810086a8,%eax
8100298c:	39 c2                	cmp    %eax,%edx
8100298e:	76 0d                	jbe    8100299d <malloc_extend_top+0x291>
81002990:	a1 c0 86 00 81       	mov    0x810086c0,%eax
81002995:	a3 a8 86 00 81       	mov    %eax,0x810086a8
8100299a:	eb 01                	jmp    8100299d <malloc_extend_top+0x291>
8100299c:	90                   	nop
8100299d:	c9                   	leave  
8100299e:	c3                   	ret    

8100299f <_malloc_r>:
8100299f:	55                   	push   %ebp
810029a0:	89 e5                	mov    %esp,%ebp
810029a2:	53                   	push   %ebx
810029a3:	83 ec 44             	sub    $0x44,%esp
810029a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810029a9:	83 c0 0b             	add    $0xb,%eax
810029ac:	83 f8 16             	cmp    $0x16,%eax
810029af:	76 0b                	jbe    810029bc <_malloc_r+0x1d>
810029b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810029b4:	83 c0 0b             	add    $0xb,%eax
810029b7:	83 e0 f8             	and    $0xfffffff8,%eax
810029ba:	eb 05                	jmp    810029c1 <_malloc_r+0x22>
810029bc:	b8 10 00 00 00       	mov    $0x10,%eax
810029c1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810029c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029c7:	85 c0                	test   %eax,%eax
810029c9:	78 08                	js     810029d3 <_malloc_r+0x34>
810029cb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029ce:	3b 45 0c             	cmp    0xc(%ebp),%eax
810029d1:	73 13                	jae    810029e6 <_malloc_r+0x47>
810029d3:	8b 45 08             	mov    0x8(%ebp),%eax
810029d6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810029dc:	b8 00 00 00 00       	mov    $0x0,%eax
810029e1:	e9 d6 07 00 00       	jmp    810031bc <_malloc_r+0x81d>
810029e6:	83 ec 0c             	sub    $0xc,%esp
810029e9:	ff 75 08             	pushl  0x8(%ebp)
810029ec:	e8 97 09 00 00       	call   81003388 <__malloc_lock>
810029f1:	83 c4 10             	add    $0x10,%esp
810029f4:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810029fb:	0f 87 b0 00 00 00    	ja     81002ab1 <_malloc_r+0x112>
81002a01:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a04:	c1 e8 03             	shr    $0x3,%eax
81002a07:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a0a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a0d:	83 c0 01             	add    $0x1,%eax
81002a10:	01 c0                	add    %eax,%eax
81002a12:	c1 e0 02             	shl    $0x2,%eax
81002a15:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
81002a1a:	83 e8 08             	sub    $0x8,%eax
81002a1d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002a20:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002a23:	8b 40 0c             	mov    0xc(%eax),%eax
81002a26:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a29:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a2c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002a2f:	75 0d                	jne    81002a3e <_malloc_r+0x9f>
81002a31:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81002a35:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002a38:	8b 40 0c             	mov    0xc(%eax),%eax
81002a3b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a41:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002a44:	74 62                	je     81002aa8 <_malloc_r+0x109>
81002a46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a49:	8b 40 04             	mov    0x4(%eax),%eax
81002a4c:	83 e0 fc             	and    $0xfffffffc,%eax
81002a4f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002a52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a55:	8b 40 0c             	mov    0xc(%eax),%eax
81002a58:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a5e:	8b 40 08             	mov    0x8(%eax),%eax
81002a61:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a64:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a67:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002a6a:	89 50 0c             	mov    %edx,0xc(%eax)
81002a6d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a70:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002a73:	89 50 08             	mov    %edx,0x8(%eax)
81002a76:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002a79:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a7c:	01 d0                	add    %edx,%eax
81002a7e:	8b 50 04             	mov    0x4(%eax),%edx
81002a81:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002a84:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a87:	01 c8                	add    %ecx,%eax
81002a89:	83 ca 01             	or     $0x1,%edx
81002a8c:	89 50 04             	mov    %edx,0x4(%eax)
81002a8f:	83 ec 0c             	sub    $0xc,%esp
81002a92:	ff 75 08             	pushl  0x8(%ebp)
81002a95:	e8 f4 08 00 00       	call   8100338e <__malloc_unlock>
81002a9a:	83 c4 10             	add    $0x10,%esp
81002a9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002aa0:	83 c0 08             	add    $0x8,%eax
81002aa3:	e9 14 07 00 00       	jmp    810031bc <_malloc_r+0x81d>
81002aa8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002aac:	e9 46 01 00 00       	jmp    81002bf7 <_malloc_r+0x258>
81002ab1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ab4:	c1 e8 09             	shr    $0x9,%eax
81002ab7:	85 c0                	test   %eax,%eax
81002ab9:	75 08                	jne    81002ac3 <_malloc_r+0x124>
81002abb:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002abe:	c1 e8 03             	shr    $0x3,%eax
81002ac1:	eb 77                	jmp    81002b3a <_malloc_r+0x19b>
81002ac3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ac6:	c1 e8 09             	shr    $0x9,%eax
81002ac9:	83 f8 04             	cmp    $0x4,%eax
81002acc:	77 0b                	ja     81002ad9 <_malloc_r+0x13a>
81002ace:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ad1:	c1 e8 06             	shr    $0x6,%eax
81002ad4:	83 c0 38             	add    $0x38,%eax
81002ad7:	eb 61                	jmp    81002b3a <_malloc_r+0x19b>
81002ad9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002adc:	c1 e8 09             	shr    $0x9,%eax
81002adf:	83 f8 14             	cmp    $0x14,%eax
81002ae2:	77 0b                	ja     81002aef <_malloc_r+0x150>
81002ae4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ae7:	c1 e8 09             	shr    $0x9,%eax
81002aea:	83 c0 5b             	add    $0x5b,%eax
81002aed:	eb 4b                	jmp    81002b3a <_malloc_r+0x19b>
81002aef:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002af2:	c1 e8 09             	shr    $0x9,%eax
81002af5:	83 f8 54             	cmp    $0x54,%eax
81002af8:	77 0b                	ja     81002b05 <_malloc_r+0x166>
81002afa:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002afd:	c1 e8 0c             	shr    $0xc,%eax
81002b00:	83 c0 6e             	add    $0x6e,%eax
81002b03:	eb 35                	jmp    81002b3a <_malloc_r+0x19b>
81002b05:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b08:	c1 e8 09             	shr    $0x9,%eax
81002b0b:	3d 54 01 00 00       	cmp    $0x154,%eax
81002b10:	77 0b                	ja     81002b1d <_malloc_r+0x17e>
81002b12:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b15:	c1 e8 0f             	shr    $0xf,%eax
81002b18:	83 c0 77             	add    $0x77,%eax
81002b1b:	eb 1d                	jmp    81002b3a <_malloc_r+0x19b>
81002b1d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b20:	c1 e8 09             	shr    $0x9,%eax
81002b23:	3d 54 05 00 00       	cmp    $0x554,%eax
81002b28:	77 0b                	ja     81002b35 <_malloc_r+0x196>
81002b2a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b2d:	c1 e8 12             	shr    $0x12,%eax
81002b30:	83 c0 7c             	add    $0x7c,%eax
81002b33:	eb 05                	jmp    81002b3a <_malloc_r+0x19b>
81002b35:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002b3a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b40:	83 c0 01             	add    $0x1,%eax
81002b43:	01 c0                	add    %eax,%eax
81002b45:	c1 e0 02             	shl    $0x2,%eax
81002b48:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
81002b4d:	83 e8 08             	sub    $0x8,%eax
81002b50:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002b53:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b56:	8b 40 0c             	mov    0xc(%eax),%eax
81002b59:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b5c:	e9 86 00 00 00       	jmp    81002be7 <_malloc_r+0x248>
81002b61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b64:	8b 40 04             	mov    0x4(%eax),%eax
81002b67:	83 e0 fc             	and    $0xfffffffc,%eax
81002b6a:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002b6d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b70:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b73:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002b76:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002b7a:	7e 06                	jle    81002b82 <_malloc_r+0x1e3>
81002b7c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002b80:	eb 71                	jmp    81002bf3 <_malloc_r+0x254>
81002b82:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002b86:	78 56                	js     81002bde <_malloc_r+0x23f>
81002b88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b8b:	8b 40 0c             	mov    0xc(%eax),%eax
81002b8e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b94:	8b 40 08             	mov    0x8(%eax),%eax
81002b97:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b9a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b9d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ba0:	89 50 0c             	mov    %edx,0xc(%eax)
81002ba3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ba6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ba9:	89 50 08             	mov    %edx,0x8(%eax)
81002bac:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002baf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bb2:	01 d0                	add    %edx,%eax
81002bb4:	8b 50 04             	mov    0x4(%eax),%edx
81002bb7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002bba:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bbd:	01 c8                	add    %ecx,%eax
81002bbf:	83 ca 01             	or     $0x1,%edx
81002bc2:	89 50 04             	mov    %edx,0x4(%eax)
81002bc5:	83 ec 0c             	sub    $0xc,%esp
81002bc8:	ff 75 08             	pushl  0x8(%ebp)
81002bcb:	e8 be 07 00 00       	call   8100338e <__malloc_unlock>
81002bd0:	83 c4 10             	add    $0x10,%esp
81002bd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bd6:	83 c0 08             	add    $0x8,%eax
81002bd9:	e9 de 05 00 00       	jmp    810031bc <_malloc_r+0x81d>
81002bde:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002be1:	8b 40 0c             	mov    0xc(%eax),%eax
81002be4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002be7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bea:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002bed:	0f 85 6e ff ff ff    	jne    81002b61 <_malloc_r+0x1c2>
81002bf3:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002bf7:	b8 c8 7b 00 81       	mov    $0x81007bc8,%eax
81002bfc:	8b 40 08             	mov    0x8(%eax),%eax
81002bff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c02:	b8 c8 7b 00 81       	mov    $0x81007bc8,%eax
81002c07:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002c0a:	0f 84 9c 02 00 00    	je     81002eac <_malloc_r+0x50d>
81002c10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c13:	8b 40 04             	mov    0x4(%eax),%eax
81002c16:	83 e0 fc             	and    $0xfffffffc,%eax
81002c19:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002c1c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c1f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002c22:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002c25:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002c29:	7e 7a                	jle    81002ca5 <_malloc_r+0x306>
81002c2b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c2e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c31:	01 d0                	add    %edx,%eax
81002c33:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002c36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c39:	83 c8 01             	or     $0x1,%eax
81002c3c:	89 c2                	mov    %eax,%edx
81002c3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c41:	89 50 04             	mov    %edx,0x4(%eax)
81002c44:	b8 c8 7b 00 81       	mov    $0x81007bc8,%eax
81002c49:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002c4c:	89 50 0c             	mov    %edx,0xc(%eax)
81002c4f:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81002c54:	8b 40 0c             	mov    0xc(%eax),%eax
81002c57:	89 42 08             	mov    %eax,0x8(%edx)
81002c5a:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81002c5f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002c62:	89 50 0c             	mov    %edx,0xc(%eax)
81002c65:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002c68:	8b 50 0c             	mov    0xc(%eax),%edx
81002c6b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002c6e:	89 50 08             	mov    %edx,0x8(%eax)
81002c71:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002c74:	83 c8 01             	or     $0x1,%eax
81002c77:	89 c2                	mov    %eax,%edx
81002c79:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002c7c:	89 50 04             	mov    %edx,0x4(%eax)
81002c7f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002c82:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002c85:	01 c2                	add    %eax,%edx
81002c87:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002c8a:	89 02                	mov    %eax,(%edx)
81002c8c:	83 ec 0c             	sub    $0xc,%esp
81002c8f:	ff 75 08             	pushl  0x8(%ebp)
81002c92:	e8 f7 06 00 00       	call   8100338e <__malloc_unlock>
81002c97:	83 c4 10             	add    $0x10,%esp
81002c9a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c9d:	83 c0 08             	add    $0x8,%eax
81002ca0:	e9 17 05 00 00       	jmp    810031bc <_malloc_r+0x81d>
81002ca5:	b8 c8 7b 00 81       	mov    $0x81007bc8,%eax
81002caa:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81002caf:	89 50 0c             	mov    %edx,0xc(%eax)
81002cb2:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81002cb7:	8b 40 0c             	mov    0xc(%eax),%eax
81002cba:	89 42 08             	mov    %eax,0x8(%edx)
81002cbd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002cc1:	78 32                	js     81002cf5 <_malloc_r+0x356>
81002cc3:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cc6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cc9:	01 d0                	add    %edx,%eax
81002ccb:	8b 50 04             	mov    0x4(%eax),%edx
81002cce:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002cd1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cd4:	01 c8                	add    %ecx,%eax
81002cd6:	83 ca 01             	or     $0x1,%edx
81002cd9:	89 50 04             	mov    %edx,0x4(%eax)
81002cdc:	83 ec 0c             	sub    $0xc,%esp
81002cdf:	ff 75 08             	pushl  0x8(%ebp)
81002ce2:	e8 a7 06 00 00       	call   8100338e <__malloc_unlock>
81002ce7:	83 c4 10             	add    $0x10,%esp
81002cea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ced:	83 c0 08             	add    $0x8,%eax
81002cf0:	e9 c7 04 00 00       	jmp    810031bc <_malloc_r+0x81d>
81002cf5:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002cfc:	77 7f                	ja     81002d7d <_malloc_r+0x3de>
81002cfe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d01:	c1 e8 03             	shr    $0x3,%eax
81002d04:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002d07:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81002d0c:	8b 58 04             	mov    0x4(%eax),%ebx
81002d0f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002d12:	8d 50 03             	lea    0x3(%eax),%edx
81002d15:	85 c0                	test   %eax,%eax
81002d17:	0f 48 c2             	cmovs  %edx,%eax
81002d1a:	c1 f8 02             	sar    $0x2,%eax
81002d1d:	ba 01 00 00 00       	mov    $0x1,%edx
81002d22:	89 c1                	mov    %eax,%ecx
81002d24:	d3 e2                	shl    %cl,%edx
81002d26:	89 d0                	mov    %edx,%eax
81002d28:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
81002d2d:	09 d8                	or     %ebx,%eax
81002d2f:	89 42 04             	mov    %eax,0x4(%edx)
81002d32:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002d35:	83 c0 01             	add    $0x1,%eax
81002d38:	01 c0                	add    %eax,%eax
81002d3a:	c1 e0 02             	shl    $0x2,%eax
81002d3d:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
81002d42:	83 e8 08             	sub    $0x8,%eax
81002d45:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002d48:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d4b:	8b 40 08             	mov    0x8(%eax),%eax
81002d4e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002d51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d54:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002d57:	89 50 0c             	mov    %edx,0xc(%eax)
81002d5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d5d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002d60:	89 50 08             	mov    %edx,0x8(%eax)
81002d63:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d66:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d69:	89 50 08             	mov    %edx,0x8(%eax)
81002d6c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d6f:	8b 50 08             	mov    0x8(%eax),%edx
81002d72:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d75:	89 50 0c             	mov    %edx,0xc(%eax)
81002d78:	e9 2f 01 00 00       	jmp    81002eac <_malloc_r+0x50d>
81002d7d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d80:	c1 e8 09             	shr    $0x9,%eax
81002d83:	85 c0                	test   %eax,%eax
81002d85:	75 08                	jne    81002d8f <_malloc_r+0x3f0>
81002d87:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d8a:	c1 e8 03             	shr    $0x3,%eax
81002d8d:	eb 77                	jmp    81002e06 <_malloc_r+0x467>
81002d8f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d92:	c1 e8 09             	shr    $0x9,%eax
81002d95:	83 f8 04             	cmp    $0x4,%eax
81002d98:	77 0b                	ja     81002da5 <_malloc_r+0x406>
81002d9a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d9d:	c1 e8 06             	shr    $0x6,%eax
81002da0:	83 c0 38             	add    $0x38,%eax
81002da3:	eb 61                	jmp    81002e06 <_malloc_r+0x467>
81002da5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002da8:	c1 e8 09             	shr    $0x9,%eax
81002dab:	83 f8 14             	cmp    $0x14,%eax
81002dae:	77 0b                	ja     81002dbb <_malloc_r+0x41c>
81002db0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002db3:	c1 e8 09             	shr    $0x9,%eax
81002db6:	83 c0 5b             	add    $0x5b,%eax
81002db9:	eb 4b                	jmp    81002e06 <_malloc_r+0x467>
81002dbb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002dbe:	c1 e8 09             	shr    $0x9,%eax
81002dc1:	83 f8 54             	cmp    $0x54,%eax
81002dc4:	77 0b                	ja     81002dd1 <_malloc_r+0x432>
81002dc6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002dc9:	c1 e8 0c             	shr    $0xc,%eax
81002dcc:	83 c0 6e             	add    $0x6e,%eax
81002dcf:	eb 35                	jmp    81002e06 <_malloc_r+0x467>
81002dd1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002dd4:	c1 e8 09             	shr    $0x9,%eax
81002dd7:	3d 54 01 00 00       	cmp    $0x154,%eax
81002ddc:	77 0b                	ja     81002de9 <_malloc_r+0x44a>
81002dde:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002de1:	c1 e8 0f             	shr    $0xf,%eax
81002de4:	83 c0 77             	add    $0x77,%eax
81002de7:	eb 1d                	jmp    81002e06 <_malloc_r+0x467>
81002de9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002dec:	c1 e8 09             	shr    $0x9,%eax
81002def:	3d 54 05 00 00       	cmp    $0x554,%eax
81002df4:	77 0b                	ja     81002e01 <_malloc_r+0x462>
81002df6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002df9:	c1 e8 12             	shr    $0x12,%eax
81002dfc:	83 c0 7c             	add    $0x7c,%eax
81002dff:	eb 05                	jmp    81002e06 <_malloc_r+0x467>
81002e01:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002e06:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e09:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e0c:	83 c0 01             	add    $0x1,%eax
81002e0f:	01 c0                	add    %eax,%eax
81002e11:	c1 e0 02             	shl    $0x2,%eax
81002e14:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
81002e19:	83 e8 08             	sub    $0x8,%eax
81002e1c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e1f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e22:	8b 40 08             	mov    0x8(%eax),%eax
81002e25:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e28:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e2b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002e2e:	75 36                	jne    81002e66 <_malloc_r+0x4c7>
81002e30:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81002e35:	8b 58 04             	mov    0x4(%eax),%ebx
81002e38:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e3b:	8d 50 03             	lea    0x3(%eax),%edx
81002e3e:	85 c0                	test   %eax,%eax
81002e40:	0f 48 c2             	cmovs  %edx,%eax
81002e43:	c1 f8 02             	sar    $0x2,%eax
81002e46:	ba 01 00 00 00       	mov    $0x1,%edx
81002e4b:	89 c1                	mov    %eax,%ecx
81002e4d:	d3 e2                	shl    %cl,%edx
81002e4f:	89 d0                	mov    %edx,%eax
81002e51:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
81002e56:	09 d8                	or     %ebx,%eax
81002e58:	89 42 04             	mov    %eax,0x4(%edx)
81002e5b:	eb 28                	jmp    81002e85 <_malloc_r+0x4e6>
81002e5d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e60:	8b 40 08             	mov    0x8(%eax),%eax
81002e63:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e66:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e69:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002e6c:	74 0e                	je     81002e7c <_malloc_r+0x4dd>
81002e6e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e71:	8b 40 04             	mov    0x4(%eax),%eax
81002e74:	83 e0 fc             	and    $0xfffffffc,%eax
81002e77:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002e7a:	72 e1                	jb     81002e5d <_malloc_r+0x4be>
81002e7c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e7f:	8b 40 0c             	mov    0xc(%eax),%eax
81002e82:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e88:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002e8b:	89 50 0c             	mov    %edx,0xc(%eax)
81002e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e91:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e94:	89 50 08             	mov    %edx,0x8(%eax)
81002e97:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e9a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e9d:	89 50 08             	mov    %edx,0x8(%eax)
81002ea0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ea3:	8b 50 08             	mov    0x8(%eax),%edx
81002ea6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ea9:	89 50 0c             	mov    %edx,0xc(%eax)
81002eac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eaf:	8d 50 03             	lea    0x3(%eax),%edx
81002eb2:	85 c0                	test   %eax,%eax
81002eb4:	0f 48 c2             	cmovs  %edx,%eax
81002eb7:	c1 f8 02             	sar    $0x2,%eax
81002eba:	ba 01 00 00 00       	mov    $0x1,%edx
81002ebf:	89 c1                	mov    %eax,%ecx
81002ec1:	d3 e2                	shl    %cl,%edx
81002ec3:	89 d0                	mov    %edx,%eax
81002ec5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ec8:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81002ecd:	8b 40 04             	mov    0x4(%eax),%eax
81002ed0:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002ed3:	0f 87 13 02 00 00    	ja     810030ec <_malloc_r+0x74d>
81002ed9:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81002ede:	8b 40 04             	mov    0x4(%eax),%eax
81002ee1:	23 45 e4             	and    -0x1c(%ebp),%eax
81002ee4:	85 c0                	test   %eax,%eax
81002ee6:	75 27                	jne    81002f0f <_malloc_r+0x570>
81002ee8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eeb:	83 e0 fc             	and    $0xfffffffc,%eax
81002eee:	83 c0 04             	add    $0x4,%eax
81002ef1:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002ef4:	d1 65 e4             	shll   -0x1c(%ebp)
81002ef7:	eb 07                	jmp    81002f00 <_malloc_r+0x561>
81002ef9:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002efd:	d1 65 e4             	shll   -0x1c(%ebp)
81002f00:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81002f05:	8b 40 04             	mov    0x4(%eax),%eax
81002f08:	23 45 e4             	and    -0x1c(%ebp),%eax
81002f0b:	85 c0                	test   %eax,%eax
81002f0d:	74 ea                	je     81002ef9 <_malloc_r+0x55a>
81002f0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f12:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002f15:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f18:	83 c0 01             	add    $0x1,%eax
81002f1b:	01 c0                	add    %eax,%eax
81002f1d:	c1 e0 02             	shl    $0x2,%eax
81002f20:	05 c0 7b 00 81       	add    $0x81007bc0,%eax
81002f25:	83 e8 08             	sub    $0x8,%eax
81002f28:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f2b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f2e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002f31:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f34:	8b 40 0c             	mov    0xc(%eax),%eax
81002f37:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f3a:	e9 22 01 00 00       	jmp    81003061 <_malloc_r+0x6c2>
81002f3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f42:	8b 40 04             	mov    0x4(%eax),%eax
81002f45:	83 e0 fc             	and    $0xfffffffc,%eax
81002f48:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f4b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f4e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002f51:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f54:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002f58:	0f 8e 9e 00 00 00    	jle    81002ffc <_malloc_r+0x65d>
81002f5e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f61:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002f64:	01 d0                	add    %edx,%eax
81002f66:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002f69:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002f6c:	83 c8 01             	or     $0x1,%eax
81002f6f:	89 c2                	mov    %eax,%edx
81002f71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f74:	89 50 04             	mov    %edx,0x4(%eax)
81002f77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f7a:	8b 40 0c             	mov    0xc(%eax),%eax
81002f7d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f83:	8b 40 08             	mov    0x8(%eax),%eax
81002f86:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f89:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f8c:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002f8f:	89 50 0c             	mov    %edx,0xc(%eax)
81002f92:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f95:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f98:	89 50 08             	mov    %edx,0x8(%eax)
81002f9b:	b8 c8 7b 00 81       	mov    $0x81007bc8,%eax
81002fa0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002fa3:	89 50 0c             	mov    %edx,0xc(%eax)
81002fa6:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81002fab:	8b 40 0c             	mov    0xc(%eax),%eax
81002fae:	89 42 08             	mov    %eax,0x8(%edx)
81002fb1:	ba c8 7b 00 81       	mov    $0x81007bc8,%edx
81002fb6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002fb9:	89 50 0c             	mov    %edx,0xc(%eax)
81002fbc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002fbf:	8b 50 0c             	mov    0xc(%eax),%edx
81002fc2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002fc5:	89 50 08             	mov    %edx,0x8(%eax)
81002fc8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fcb:	83 c8 01             	or     $0x1,%eax
81002fce:	89 c2                	mov    %eax,%edx
81002fd0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002fd3:	89 50 04             	mov    %edx,0x4(%eax)
81002fd6:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002fd9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002fdc:	01 c2                	add    %eax,%edx
81002fde:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fe1:	89 02                	mov    %eax,(%edx)
81002fe3:	83 ec 0c             	sub    $0xc,%esp
81002fe6:	ff 75 08             	pushl  0x8(%ebp)
81002fe9:	e8 a0 03 00 00       	call   8100338e <__malloc_unlock>
81002fee:	83 c4 10             	add    $0x10,%esp
81002ff1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ff4:	83 c0 08             	add    $0x8,%eax
81002ff7:	e9 c0 01 00 00       	jmp    810031bc <_malloc_r+0x81d>
81002ffc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003000:	78 56                	js     81003058 <_malloc_r+0x6b9>
81003002:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003005:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003008:	01 d0                	add    %edx,%eax
8100300a:	8b 50 04             	mov    0x4(%eax),%edx
8100300d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003010:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003013:	01 c8                	add    %ecx,%eax
81003015:	83 ca 01             	or     $0x1,%edx
81003018:	89 50 04             	mov    %edx,0x4(%eax)
8100301b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100301e:	8b 40 0c             	mov    0xc(%eax),%eax
81003021:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003024:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003027:	8b 40 08             	mov    0x8(%eax),%eax
8100302a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100302d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003030:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003033:	89 50 0c             	mov    %edx,0xc(%eax)
81003036:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003039:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100303c:	89 50 08             	mov    %edx,0x8(%eax)
8100303f:	83 ec 0c             	sub    $0xc,%esp
81003042:	ff 75 08             	pushl  0x8(%ebp)
81003045:	e8 44 03 00 00       	call   8100338e <__malloc_unlock>
8100304a:	83 c4 10             	add    $0x10,%esp
8100304d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003050:	83 c0 08             	add    $0x8,%eax
81003053:	e9 64 01 00 00       	jmp    810031bc <_malloc_r+0x81d>
81003058:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100305b:	8b 40 0c             	mov    0xc(%eax),%eax
8100305e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003061:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003064:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003067:	0f 85 d2 fe ff ff    	jne    81002f3f <_malloc_r+0x5a0>
8100306d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003071:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003075:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003078:	83 e0 03             	and    $0x3,%eax
8100307b:	85 c0                	test   %eax,%eax
8100307d:	0f 85 ae fe ff ff    	jne    81002f31 <_malloc_r+0x592>
81003083:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003086:	83 e0 03             	and    $0x3,%eax
81003089:	85 c0                	test   %eax,%eax
8100308b:	75 19                	jne    810030a6 <_malloc_r+0x707>
8100308d:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81003092:	8b 48 04             	mov    0x4(%eax),%ecx
81003095:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003098:	f7 d0                	not    %eax
8100309a:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
8100309f:	21 c8                	and    %ecx,%eax
810030a1:	89 42 04             	mov    %eax,0x4(%edx)
810030a4:	eb 13                	jmp    810030b9 <_malloc_r+0x71a>
810030a6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810030aa:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810030ae:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810030b1:	8b 40 08             	mov    0x8(%eax),%eax
810030b4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810030b7:	74 ca                	je     81003083 <_malloc_r+0x6e4>
810030b9:	d1 65 e4             	shll   -0x1c(%ebp)
810030bc:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810030c1:	8b 40 04             	mov    0x4(%eax),%eax
810030c4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810030c7:	77 23                	ja     810030ec <_malloc_r+0x74d>
810030c9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810030cd:	74 1d                	je     810030ec <_malloc_r+0x74d>
810030cf:	eb 07                	jmp    810030d8 <_malloc_r+0x739>
810030d1:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810030d5:	d1 65 e4             	shll   -0x1c(%ebp)
810030d8:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810030dd:	8b 40 04             	mov    0x4(%eax),%eax
810030e0:	23 45 e4             	and    -0x1c(%ebp),%eax
810030e3:	85 c0                	test   %eax,%eax
810030e5:	74 ea                	je     810030d1 <_malloc_r+0x732>
810030e7:	e9 23 fe ff ff       	jmp    81002f0f <_malloc_r+0x570>
810030ec:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810030f1:	8b 40 08             	mov    0x8(%eax),%eax
810030f4:	8b 40 04             	mov    0x4(%eax),%eax
810030f7:	83 e0 fc             	and    $0xfffffffc,%eax
810030fa:	2b 45 d0             	sub    -0x30(%ebp),%eax
810030fd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003100:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81003105:	8b 40 08             	mov    0x8(%eax),%eax
81003108:	8b 40 04             	mov    0x4(%eax),%eax
8100310b:	83 e0 fc             	and    $0xfffffffc,%eax
8100310e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003111:	77 06                	ja     81003119 <_malloc_r+0x77a>
81003113:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003117:	7f 53                	jg     8100316c <_malloc_r+0x7cd>
81003119:	83 ec 08             	sub    $0x8,%esp
8100311c:	ff 75 d0             	pushl  -0x30(%ebp)
8100311f:	ff 75 08             	pushl  0x8(%ebp)
81003122:	e8 e5 f5 ff ff       	call   8100270c <malloc_extend_top>
81003127:	83 c4 10             	add    $0x10,%esp
8100312a:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
8100312f:	8b 40 08             	mov    0x8(%eax),%eax
81003132:	8b 40 04             	mov    0x4(%eax),%eax
81003135:	83 e0 fc             	and    $0xfffffffc,%eax
81003138:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100313b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100313e:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81003143:	8b 40 08             	mov    0x8(%eax),%eax
81003146:	8b 40 04             	mov    0x4(%eax),%eax
81003149:	83 e0 fc             	and    $0xfffffffc,%eax
8100314c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100314f:	77 06                	ja     81003157 <_malloc_r+0x7b8>
81003151:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003155:	7f 15                	jg     8100316c <_malloc_r+0x7cd>
81003157:	83 ec 0c             	sub    $0xc,%esp
8100315a:	ff 75 08             	pushl  0x8(%ebp)
8100315d:	e8 2c 02 00 00       	call   8100338e <__malloc_unlock>
81003162:	83 c4 10             	add    $0x10,%esp
81003165:	b8 00 00 00 00       	mov    $0x0,%eax
8100316a:	eb 50                	jmp    810031bc <_malloc_r+0x81d>
8100316c:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81003171:	8b 40 08             	mov    0x8(%eax),%eax
81003174:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003177:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100317a:	83 c8 01             	or     $0x1,%eax
8100317d:	89 c2                	mov    %eax,%edx
8100317f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003182:	89 50 04             	mov    %edx,0x4(%eax)
81003185:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
8100318a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100318d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003190:	01 c8                	add    %ecx,%eax
81003192:	89 42 08             	mov    %eax,0x8(%edx)
81003195:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003198:	83 c8 01             	or     $0x1,%eax
8100319b:	89 c2                	mov    %eax,%edx
8100319d:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810031a2:	8b 40 08             	mov    0x8(%eax),%eax
810031a5:	89 50 04             	mov    %edx,0x4(%eax)
810031a8:	83 ec 0c             	sub    $0xc,%esp
810031ab:	ff 75 08             	pushl  0x8(%ebp)
810031ae:	e8 db 01 00 00       	call   8100338e <__malloc_unlock>
810031b3:	83 c4 10             	add    $0x10,%esp
810031b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031b9:	83 c0 08             	add    $0x8,%eax
810031bc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810031bf:	c9                   	leave  
810031c0:	c3                   	ret    
810031c1:	66 90                	xchg   %ax,%ax
810031c3:	66 90                	xchg   %ax,%ax
810031c5:	66 90                	xchg   %ax,%ax
810031c7:	66 90                	xchg   %ax,%ax
810031c9:	66 90                	xchg   %ax,%ax
810031cb:	66 90                	xchg   %ax,%ax
810031cd:	66 90                	xchg   %ax,%ax
810031cf:	90                   	nop

810031d0 <memchr>:
810031d0:	55                   	push   %ebp
810031d1:	89 e5                	mov    %esp,%ebp
810031d3:	57                   	push   %edi
810031d4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810031d8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810031db:	8b 7d 08             	mov    0x8(%ebp),%edi
810031de:	31 d2                	xor    %edx,%edx
810031e0:	85 c9                	test   %ecx,%ecx
810031e2:	74 79                	je     8100325d <L20>
810031e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810031ea:	74 28                	je     81003214 <L5>
810031ec:	3a 07                	cmp    (%edi),%al
810031ee:	74 6a                	je     8100325a <L15>
810031f0:	47                   	inc    %edi
810031f1:	49                   	dec    %ecx
810031f2:	74 69                	je     8100325d <L20>
810031f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810031fa:	74 18                	je     81003214 <L5>
810031fc:	3a 07                	cmp    (%edi),%al
810031fe:	74 5a                	je     8100325a <L15>
81003200:	47                   	inc    %edi
81003201:	49                   	dec    %ecx
81003202:	74 59                	je     8100325d <L20>
81003204:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100320a:	74 08                	je     81003214 <L5>
8100320c:	3a 07                	cmp    (%edi),%al
8100320e:	74 4a                	je     8100325a <L15>
81003210:	47                   	inc    %edi
81003211:	49                   	dec    %ecx
81003212:	74 49                	je     8100325d <L20>

81003214 <L5>:
81003214:	88 c4                	mov    %al,%ah
81003216:	89 c2                	mov    %eax,%edx
81003218:	c1 e2 10             	shl    $0x10,%edx
8100321b:	09 d0                	or     %edx,%eax
8100321d:	53                   	push   %ebx
8100321e:	66 90                	xchg   %ax,%ax

81003220 <L8>:
81003220:	83 e9 04             	sub    $0x4,%ecx
81003223:	72 1c                	jb     81003241 <L9>
81003225:	8b 17                	mov    (%edi),%edx
81003227:	83 c7 04             	add    $0x4,%edi
8100322a:	31 c2                	xor    %eax,%edx
8100322c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003232:	f7 d2                	not    %edx
81003234:	21 d3                	and    %edx,%ebx
81003236:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100323c:	74 e2                	je     81003220 <L8>
8100323e:	83 ef 04             	sub    $0x4,%edi

81003241 <L9>:
81003241:	5b                   	pop    %ebx
81003242:	31 d2                	xor    %edx,%edx
81003244:	83 c1 04             	add    $0x4,%ecx
81003247:	74 14                	je     8100325d <L20>
81003249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003250 <L10>:
81003250:	3a 07                	cmp    (%edi),%al
81003252:	74 06                	je     8100325a <L15>
81003254:	47                   	inc    %edi
81003255:	49                   	dec    %ecx
81003256:	75 f8                	jne    81003250 <L10>
81003258:	31 ff                	xor    %edi,%edi

8100325a <L15>:
8100325a:	4a                   	dec    %edx
8100325b:	21 fa                	and    %edi,%edx

8100325d <L20>:
8100325d:	89 d0                	mov    %edx,%eax
8100325f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003262:	5f                   	pop    %edi
81003263:	c9                   	leave  
81003264:	c3                   	ret    

81003265 <memcmp>:
81003265:	55                   	push   %ebp
81003266:	89 e5                	mov    %esp,%ebp
81003268:	83 ec 10             	sub    $0x10,%esp
8100326b:	53                   	push   %ebx
8100326c:	57                   	push   %edi
8100326d:	56                   	push   %esi
8100326e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003271:	8b 75 0c             	mov    0xc(%ebp),%esi
81003274:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003277:	fc                   	cld    
81003278:	31 c0                	xor    %eax,%eax
8100327a:	85 c9                	test   %ecx,%ecx
8100327c:	74 31                	je     810032af <L4>
8100327e:	89 f8                	mov    %edi,%eax
81003280:	09 f0                	or     %esi,%eax
81003282:	a8 03                	test   $0x3,%al
81003284:	75 1b                	jne    810032a1 <BYTECMP>
81003286:	89 cb                	mov    %ecx,%ebx
81003288:	c1 e9 02             	shr    $0x2,%ecx
8100328b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100328d:	74 0d                	je     8100329c <L5>
8100328f:	83 ee 04             	sub    $0x4,%esi
81003292:	83 ef 04             	sub    $0x4,%edi
81003295:	b9 04 00 00 00       	mov    $0x4,%ecx
8100329a:	eb 05                	jmp    810032a1 <BYTECMP>

8100329c <L5>:
8100329c:	83 e3 03             	and    $0x3,%ebx
8100329f:	89 d9                	mov    %ebx,%ecx

810032a1 <BYTECMP>:
810032a1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810032a3 <L3>:
810032a3:	31 d2                	xor    %edx,%edx
810032a5:	8a 56 ff             	mov    -0x1(%esi),%dl
810032a8:	31 c0                	xor    %eax,%eax
810032aa:	8a 47 ff             	mov    -0x1(%edi),%al
810032ad:	29 d0                	sub    %edx,%eax

810032af <L4>:
810032af:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810032b2:	5e                   	pop    %esi
810032b3:	5f                   	pop    %edi
810032b4:	5b                   	pop    %ebx
810032b5:	c9                   	leave  
810032b6:	c3                   	ret    
810032b7:	90                   	nop

810032b8 <memcpy>:
810032b8:	55                   	push   %ebp
810032b9:	89 e5                	mov    %esp,%ebp
810032bb:	56                   	push   %esi
810032bc:	57                   	push   %edi
810032bd:	53                   	push   %ebx
810032be:	8b 7d 08             	mov    0x8(%ebp),%edi
810032c1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810032c4:	8b 75 0c             	mov    0xc(%ebp),%esi
810032c7:	fc                   	cld    
810032c8:	83 f9 08             	cmp    $0x8,%ecx
810032cb:	76 26                	jbe    810032f3 <memcpy+0x3b>
810032cd:	89 fa                	mov    %edi,%edx
810032cf:	89 cb                	mov    %ecx,%ebx
810032d1:	83 e2 03             	and    $0x3,%edx
810032d4:	74 10                	je     810032e6 <memcpy+0x2e>
810032d6:	b9 04 00 00 00       	mov    $0x4,%ecx
810032db:	29 d1                	sub    %edx,%ecx
810032dd:	83 e1 03             	and    $0x3,%ecx
810032e0:	29 cb                	sub    %ecx,%ebx
810032e2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810032e4:	89 d9                	mov    %ebx,%ecx
810032e6:	c1 e9 02             	shr    $0x2,%ecx
810032e9:	8d 76 00             	lea    0x0(%esi),%esi
810032ec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810032ee:	89 d9                	mov    %ebx,%ecx
810032f0:	83 e1 03             	and    $0x3,%ecx
810032f3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810032f5:	8b 45 08             	mov    0x8(%ebp),%eax
810032f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810032fb:	5b                   	pop    %ebx
810032fc:	5f                   	pop    %edi
810032fd:	5e                   	pop    %esi
810032fe:	c9                   	leave  
810032ff:	c3                   	ret    

81003300 <memset>:
81003300:	55                   	push   %ebp
81003301:	89 e5                	mov    %esp,%ebp
81003303:	57                   	push   %edi
81003304:	8b 7d 08             	mov    0x8(%ebp),%edi
81003307:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100330b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100330e:	fc                   	cld    
8100330f:	83 f9 10             	cmp    $0x10,%ecx
81003312:	76 69                	jbe    8100337d <memset+0x7d>
81003314:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100331a:	74 4c                	je     81003368 <memset+0x68>
8100331c:	88 07                	mov    %al,(%edi)
8100331e:	47                   	inc    %edi
8100331f:	49                   	dec    %ecx
81003320:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003326:	74 40                	je     81003368 <memset+0x68>
81003328:	88 07                	mov    %al,(%edi)
8100332a:	47                   	inc    %edi
8100332b:	49                   	dec    %ecx
8100332c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003332:	74 34                	je     81003368 <memset+0x68>
81003334:	88 07                	mov    %al,(%edi)
81003336:	47                   	inc    %edi
81003337:	49                   	dec    %ecx
81003338:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100333e:	74 28                	je     81003368 <memset+0x68>
81003340:	88 07                	mov    %al,(%edi)
81003342:	47                   	inc    %edi
81003343:	49                   	dec    %ecx
81003344:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100334a:	74 1c                	je     81003368 <memset+0x68>
8100334c:	88 07                	mov    %al,(%edi)
8100334e:	47                   	inc    %edi
8100334f:	49                   	dec    %ecx
81003350:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003356:	74 10                	je     81003368 <memset+0x68>
81003358:	88 07                	mov    %al,(%edi)
8100335a:	47                   	inc    %edi
8100335b:	49                   	dec    %ecx
8100335c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003362:	74 04                	je     81003368 <memset+0x68>
81003364:	88 07                	mov    %al,(%edi)
81003366:	47                   	inc    %edi
81003367:	49                   	dec    %ecx
81003368:	88 c4                	mov    %al,%ah
8100336a:	89 c2                	mov    %eax,%edx
8100336c:	c1 e2 10             	shl    $0x10,%edx
8100336f:	09 d0                	or     %edx,%eax
81003371:	89 ca                	mov    %ecx,%edx
81003373:	c1 e9 02             	shr    $0x2,%ecx
81003376:	83 e2 03             	and    $0x3,%edx
81003379:	f3 ab                	rep stos %eax,%es:(%edi)
8100337b:	89 d1                	mov    %edx,%ecx
8100337d:	f3 aa                	rep stos %al,%es:(%edi)
8100337f:	8b 45 08             	mov    0x8(%ebp),%eax
81003382:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003385:	5f                   	pop    %edi
81003386:	c9                   	leave  
81003387:	c3                   	ret    

81003388 <__malloc_lock>:
81003388:	55                   	push   %ebp
81003389:	89 e5                	mov    %esp,%ebp
8100338b:	90                   	nop
8100338c:	5d                   	pop    %ebp
8100338d:	c3                   	ret    

8100338e <__malloc_unlock>:
8100338e:	55                   	push   %ebp
8100338f:	89 e5                	mov    %esp,%ebp
81003391:	90                   	nop
81003392:	5d                   	pop    %ebp
81003393:	c3                   	ret    

81003394 <__sprint_r>:
81003394:	55                   	push   %ebp
81003395:	89 e5                	mov    %esp,%ebp
81003397:	56                   	push   %esi
81003398:	53                   	push   %ebx
81003399:	83 ec 10             	sub    $0x10,%esp
8100339c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100339f:	be 00 00 00 00       	mov    $0x0,%esi
810033a4:	8b 43 08             	mov    0x8(%ebx),%eax
810033a7:	85 c0                	test   %eax,%eax
810033a9:	75 11                	jne    810033bc <__sprint_r+0x28>
810033ab:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810033b2:	b8 00 00 00 00       	mov    $0x0,%eax
810033b7:	e9 ad 00 00 00       	jmp    81003469 <__sprint_r+0xd5>
810033bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810033bf:	8b 40 64             	mov    0x64(%eax),%eax
810033c2:	25 00 20 00 00       	and    $0x2000,%eax
810033c7:	85 c0                	test   %eax,%eax
810033c9:	74 7a                	je     81003445 <__sprint_r+0xb1>
810033cb:	8b 03                	mov    (%ebx),%eax
810033cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033d0:	eb 6a                	jmp    8100343c <__sprint_r+0xa8>
810033d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033d5:	8b 00                	mov    (%eax),%eax
810033d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810033da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033dd:	8b 40 04             	mov    0x4(%eax),%eax
810033e0:	c1 e8 02             	shr    $0x2,%eax
810033e3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810033e6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810033ed:	eb 33                	jmp    81003422 <__sprint_r+0x8e>
810033ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810033f2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810033fc:	01 d0                	add    %edx,%eax
810033fe:	8b 00                	mov    (%eax),%eax
81003400:	83 ec 04             	sub    $0x4,%esp
81003403:	ff 75 0c             	pushl  0xc(%ebp)
81003406:	50                   	push   %eax
81003407:	ff 75 08             	pushl  0x8(%ebp)
8100340a:	e8 b6 1d 00 00       	call   810051c5 <_fputwc_r>
8100340f:	83 c4 10             	add    $0x10,%esp
81003412:	83 f8 ff             	cmp    $0xffffffff,%eax
81003415:	75 07                	jne    8100341e <__sprint_r+0x8a>
81003417:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100341c:	eb 3b                	jmp    81003459 <__sprint_r+0xc5>
8100341e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003422:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003425:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81003428:	7c c5                	jl     810033ef <__sprint_r+0x5b>
8100342a:	8b 43 08             	mov    0x8(%ebx),%eax
8100342d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003430:	c1 e2 02             	shl    $0x2,%edx
81003433:	29 d0                	sub    %edx,%eax
81003435:	89 43 08             	mov    %eax,0x8(%ebx)
81003438:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100343c:	8b 43 08             	mov    0x8(%ebx),%eax
8100343f:	85 c0                	test   %eax,%eax
81003441:	75 8f                	jne    810033d2 <__sprint_r+0x3e>
81003443:	eb 14                	jmp    81003459 <__sprint_r+0xc5>
81003445:	83 ec 04             	sub    $0x4,%esp
81003448:	53                   	push   %ebx
81003449:	ff 75 0c             	pushl  0xc(%ebp)
8100344c:	ff 75 08             	pushl  0x8(%ebp)
8100344f:	e8 10 1e 00 00       	call   81005264 <__sfvwrite_r>
81003454:	83 c4 10             	add    $0x10,%esp
81003457:	89 c6                	mov    %eax,%esi
81003459:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003460:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003467:	89 f0                	mov    %esi,%eax
81003469:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100346c:	5b                   	pop    %ebx
8100346d:	5e                   	pop    %esi
8100346e:	5d                   	pop    %ebp
8100346f:	c3                   	ret    

81003470 <__sfputc_r>:
81003470:	55                   	push   %ebp
81003471:	89 e5                	mov    %esp,%ebp
81003473:	83 ec 08             	sub    $0x8,%esp
81003476:	8b 45 10             	mov    0x10(%ebp),%eax
81003479:	8b 40 08             	mov    0x8(%eax),%eax
8100347c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100347f:	8b 45 10             	mov    0x10(%ebp),%eax
81003482:	89 50 08             	mov    %edx,0x8(%eax)
81003485:	8b 45 10             	mov    0x10(%ebp),%eax
81003488:	8b 40 08             	mov    0x8(%eax),%eax
8100348b:	85 c0                	test   %eax,%eax
8100348d:	79 17                	jns    810034a6 <__sfputc_r+0x36>
8100348f:	8b 45 10             	mov    0x10(%ebp),%eax
81003492:	8b 50 08             	mov    0x8(%eax),%edx
81003495:	8b 45 10             	mov    0x10(%ebp),%eax
81003498:	8b 40 18             	mov    0x18(%eax),%eax
8100349b:	39 c2                	cmp    %eax,%edx
8100349d:	7c 21                	jl     810034c0 <__sfputc_r+0x50>
8100349f:	8b 45 0c             	mov    0xc(%ebp),%eax
810034a2:	3c 0a                	cmp    $0xa,%al
810034a4:	74 1a                	je     810034c0 <__sfputc_r+0x50>
810034a6:	8b 45 10             	mov    0x10(%ebp),%eax
810034a9:	8b 00                	mov    (%eax),%eax
810034ab:	8d 48 01             	lea    0x1(%eax),%ecx
810034ae:	8b 55 10             	mov    0x10(%ebp),%edx
810034b1:	89 0a                	mov    %ecx,(%edx)
810034b3:	8b 55 0c             	mov    0xc(%ebp),%edx
810034b6:	88 10                	mov    %dl,(%eax)
810034b8:	0f b6 00             	movzbl (%eax),%eax
810034bb:	0f b6 c0             	movzbl %al,%eax
810034be:	eb 14                	jmp    810034d4 <__sfputc_r+0x64>
810034c0:	83 ec 04             	sub    $0x4,%esp
810034c3:	ff 75 10             	pushl  0x10(%ebp)
810034c6:	ff 75 0c             	pushl  0xc(%ebp)
810034c9:	ff 75 08             	pushl  0x8(%ebp)
810034cc:	e8 2e 15 00 00       	call   810049ff <__swbuf_r>
810034d1:	83 c4 10             	add    $0x10,%esp
810034d4:	c9                   	leave  
810034d5:	c3                   	ret    

810034d6 <__sfputs_r>:
810034d6:	55                   	push   %ebp
810034d7:	89 e5                	mov    %esp,%ebp
810034d9:	53                   	push   %ebx
810034da:	83 ec 14             	sub    $0x14,%esp
810034dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810034e0:	8b 40 64             	mov    0x64(%eax),%eax
810034e3:	25 00 20 00 00       	and    $0x2000,%eax
810034e8:	85 c0                	test   %eax,%eax
810034ea:	74 4c                	je     81003538 <__sfputs_r+0x62>
810034ec:	8b 45 10             	mov    0x10(%ebp),%eax
810034ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034f2:	bb 00 00 00 00       	mov    $0x0,%ebx
810034f7:	eb 31                	jmp    8100352a <__sfputs_r+0x54>
810034f9:	89 d8                	mov    %ebx,%eax
810034fb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003502:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003505:	01 d0                	add    %edx,%eax
81003507:	8b 00                	mov    (%eax),%eax
81003509:	83 ec 04             	sub    $0x4,%esp
8100350c:	ff 75 0c             	pushl  0xc(%ebp)
8100350f:	50                   	push   %eax
81003510:	ff 75 08             	pushl  0x8(%ebp)
81003513:	e8 ad 1c 00 00       	call   810051c5 <_fputwc_r>
81003518:	83 c4 10             	add    $0x10,%esp
8100351b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100351e:	75 07                	jne    81003527 <__sfputs_r+0x51>
81003520:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003525:	eb 52                	jmp    81003579 <__sfputs_r+0xa3>
81003527:	83 c3 01             	add    $0x1,%ebx
8100352a:	8b 45 14             	mov    0x14(%ebp),%eax
8100352d:	c1 e8 02             	shr    $0x2,%eax
81003530:	89 da                	mov    %ebx,%edx
81003532:	39 d0                	cmp    %edx,%eax
81003534:	77 c3                	ja     810034f9 <__sfputs_r+0x23>
81003536:	eb 3c                	jmp    81003574 <__sfputs_r+0x9e>
81003538:	bb 00 00 00 00       	mov    $0x0,%ebx
8100353d:	eb 2e                	jmp    8100356d <__sfputs_r+0x97>
8100353f:	89 da                	mov    %ebx,%edx
81003541:	8b 45 10             	mov    0x10(%ebp),%eax
81003544:	01 d0                	add    %edx,%eax
81003546:	0f b6 00             	movzbl (%eax),%eax
81003549:	0f be c0             	movsbl %al,%eax
8100354c:	83 ec 04             	sub    $0x4,%esp
8100354f:	ff 75 0c             	pushl  0xc(%ebp)
81003552:	50                   	push   %eax
81003553:	ff 75 08             	pushl  0x8(%ebp)
81003556:	e8 15 ff ff ff       	call   81003470 <__sfputc_r>
8100355b:	83 c4 10             	add    $0x10,%esp
8100355e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003561:	75 07                	jne    8100356a <__sfputs_r+0x94>
81003563:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003568:	eb 0f                	jmp    81003579 <__sfputs_r+0xa3>
8100356a:	83 c3 01             	add    $0x1,%ebx
8100356d:	89 d8                	mov    %ebx,%eax
8100356f:	39 45 14             	cmp    %eax,0x14(%ebp)
81003572:	77 cb                	ja     8100353f <__sfputs_r+0x69>
81003574:	b8 00 00 00 00       	mov    $0x0,%eax
81003579:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100357c:	c9                   	leave  
8100357d:	c3                   	ret    

8100357e <vfiprintf>:
8100357e:	55                   	push   %ebp
8100357f:	89 e5                	mov    %esp,%ebp
81003581:	83 ec 18             	sub    $0x18,%esp
81003584:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81003589:	ff 75 10             	pushl  0x10(%ebp)
8100358c:	ff 75 0c             	pushl  0xc(%ebp)
8100358f:	ff 75 08             	pushl  0x8(%ebp)
81003592:	50                   	push   %eax
81003593:	e8 0b 00 00 00       	call   810035a3 <_vfiprintf_r>
81003598:	83 c4 10             	add    $0x10,%esp
8100359b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100359e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035a1:	c9                   	leave  
810035a2:	c3                   	ret    

810035a3 <_vfiprintf_r>:
810035a3:	55                   	push   %ebp
810035a4:	89 e5                	mov    %esp,%ebp
810035a6:	57                   	push   %edi
810035a7:	56                   	push   %esi
810035a8:	53                   	push   %ebx
810035a9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810035af:	c7 45 e4 d6 34 00 81 	movl   $0x810034d6,-0x1c(%ebp)
810035b6:	8b 45 08             	mov    0x8(%ebp),%eax
810035b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810035bc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810035c0:	74 18                	je     810035da <_vfiprintf_r+0x37>
810035c2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810035c5:	8b 40 38             	mov    0x38(%eax),%eax
810035c8:	85 c0                	test   %eax,%eax
810035ca:	75 0e                	jne    810035da <_vfiprintf_r+0x37>
810035cc:	83 ec 0c             	sub    $0xc,%esp
810035cf:	ff 75 e0             	pushl  -0x20(%ebp)
810035d2:	e8 f9 da ff ff       	call   810010d0 <__sinit>
810035d7:	83 c4 10             	add    $0x10,%esp
810035da:	8b 45 0c             	mov    0xc(%ebp),%eax
810035dd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810035e1:	98                   	cwtl   
810035e2:	83 e0 08             	and    $0x8,%eax
810035e5:	85 c0                	test   %eax,%eax
810035e7:	74 0a                	je     810035f3 <_vfiprintf_r+0x50>
810035e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810035ec:	8b 40 10             	mov    0x10(%eax),%eax
810035ef:	85 c0                	test   %eax,%eax
810035f1:	75 1f                	jne    81003612 <_vfiprintf_r+0x6f>
810035f3:	83 ec 08             	sub    $0x8,%esp
810035f6:	ff 75 0c             	pushl  0xc(%ebp)
810035f9:	ff 75 08             	pushl  0x8(%ebp)
810035fc:	e8 77 15 00 00       	call   81004b78 <__swsetup_r>
81003601:	83 c4 10             	add    $0x10,%esp
81003604:	85 c0                	test   %eax,%eax
81003606:	74 0a                	je     81003612 <_vfiprintf_r+0x6f>
81003608:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100360d:	e9 df 02 00 00       	jmp    810038f1 <_vfiprintf_r+0x34e>
81003612:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003615:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100361c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003620:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81003624:	8b 45 14             	mov    0x14(%ebp),%eax
81003627:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100362d:	89 de                	mov    %ebx,%esi
8100362f:	eb 03                	jmp    81003634 <_vfiprintf_r+0x91>
81003631:	83 c3 01             	add    $0x1,%ebx
81003634:	0f b6 03             	movzbl (%ebx),%eax
81003637:	84 c0                	test   %al,%al
81003639:	74 07                	je     81003642 <_vfiprintf_r+0x9f>
8100363b:	0f b6 03             	movzbl (%ebx),%eax
8100363e:	3c 25                	cmp    $0x25,%al
81003640:	75 ef                	jne    81003631 <_vfiprintf_r+0x8e>
81003642:	89 d8                	mov    %ebx,%eax
81003644:	29 f0                	sub    %esi,%eax
81003646:	85 c0                	test   %eax,%eax
81003648:	74 2b                	je     81003675 <_vfiprintf_r+0xd2>
8100364a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81003650:	50                   	push   %eax
81003651:	56                   	push   %esi
81003652:	ff 75 0c             	pushl  0xc(%ebp)
81003655:	ff 75 08             	pushl  0x8(%ebp)
81003658:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100365b:	ff d0                	call   *%eax
8100365d:	83 c4 10             	add    $0x10,%esp
81003660:	83 f8 ff             	cmp    $0xffffffff,%eax
81003663:	0f 84 68 02 00 00    	je     810038d1 <_vfiprintf_r+0x32e>
81003669:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100366c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81003672:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003675:	0f b6 03             	movzbl (%ebx),%eax
81003678:	84 c0                	test   %al,%al
8100367a:	0f 84 54 02 00 00    	je     810038d4 <_vfiprintf_r+0x331>
81003680:	83 c3 01             	add    $0x1,%ebx
81003683:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100368a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81003691:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003698:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100369f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810036a3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810036aa:	c7 45 dc f4 73 00 81 	movl   $0x810073f4,-0x24(%ebp)
810036b1:	eb 1b                	jmp    810036ce <_vfiprintf_r+0x12b>
810036b3:	8b 55 80             	mov    -0x80(%ebp),%edx
810036b6:	89 f0                	mov    %esi,%eax
810036b8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810036bb:	be 01 00 00 00       	mov    $0x1,%esi
810036c0:	89 c1                	mov    %eax,%ecx
810036c2:	d3 e6                	shl    %cl,%esi
810036c4:	89 f0                	mov    %esi,%eax
810036c6:	09 d0                	or     %edx,%eax
810036c8:	89 45 80             	mov    %eax,-0x80(%ebp)
810036cb:	83 c3 01             	add    $0x1,%ebx
810036ce:	0f b6 03             	movzbl (%ebx),%eax
810036d1:	0f be c0             	movsbl %al,%eax
810036d4:	83 ec 04             	sub    $0x4,%esp
810036d7:	6a 05                	push   $0x5
810036d9:	50                   	push   %eax
810036da:	ff 75 dc             	pushl  -0x24(%ebp)
810036dd:	e8 ee fa ff ff       	call   810031d0 <memchr>
810036e2:	83 c4 10             	add    $0x10,%esp
810036e5:	89 c6                	mov    %eax,%esi
810036e7:	85 f6                	test   %esi,%esi
810036e9:	75 c8                	jne    810036b3 <_vfiprintf_r+0x110>
810036eb:	8b 45 80             	mov    -0x80(%ebp),%eax
810036ee:	83 e0 10             	and    $0x10,%eax
810036f1:	85 c0                	test   %eax,%eax
810036f3:	74 04                	je     810036f9 <_vfiprintf_r+0x156>
810036f5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810036f9:	8b 45 80             	mov    -0x80(%ebp),%eax
810036fc:	83 e0 08             	and    $0x8,%eax
810036ff:	85 c0                	test   %eax,%eax
81003701:	74 04                	je     81003707 <_vfiprintf_r+0x164>
81003703:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003707:	0f b6 03             	movzbl (%ebx),%eax
8100370a:	3c 2a                	cmp    $0x2a,%al
8100370c:	75 50                	jne    8100375e <_vfiprintf_r+0x1bb>
8100370e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003714:	8d 50 04             	lea    0x4(%eax),%edx
81003717:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100371d:	8b 00                	mov    (%eax),%eax
8100371f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003722:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003725:	85 c0                	test   %eax,%eax
81003727:	79 11                	jns    8100373a <_vfiprintf_r+0x197>
81003729:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100372c:	f7 d8                	neg    %eax
8100372e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003731:	8b 45 80             	mov    -0x80(%ebp),%eax
81003734:	83 c8 02             	or     $0x2,%eax
81003737:	89 45 80             	mov    %eax,-0x80(%ebp)
8100373a:	83 c3 01             	add    $0x1,%ebx
8100373d:	eb 2d                	jmp    8100376c <_vfiprintf_r+0x1c9>
8100373f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81003742:	89 d0                	mov    %edx,%eax
81003744:	c1 e0 02             	shl    $0x2,%eax
81003747:	01 d0                	add    %edx,%eax
81003749:	01 c0                	add    %eax,%eax
8100374b:	89 c2                	mov    %eax,%edx
8100374d:	0f b6 03             	movzbl (%ebx),%eax
81003750:	0f be c0             	movsbl %al,%eax
81003753:	83 e8 30             	sub    $0x30,%eax
81003756:	01 d0                	add    %edx,%eax
81003758:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100375b:	83 c3 01             	add    $0x1,%ebx
8100375e:	0f b6 03             	movzbl (%ebx),%eax
81003761:	0f be c0             	movsbl %al,%eax
81003764:	83 e8 30             	sub    $0x30,%eax
81003767:	83 f8 09             	cmp    $0x9,%eax
8100376a:	76 d3                	jbe    8100373f <_vfiprintf_r+0x19c>
8100376c:	0f b6 03             	movzbl (%ebx),%eax
8100376f:	3c 2e                	cmp    $0x2e,%al
81003771:	75 67                	jne    810037da <_vfiprintf_r+0x237>
81003773:	83 c3 01             	add    $0x1,%ebx
81003776:	0f b6 03             	movzbl (%ebx),%eax
81003779:	3c 2a                	cmp    $0x2a,%al
8100377b:	75 27                	jne    810037a4 <_vfiprintf_r+0x201>
8100377d:	83 c3 01             	add    $0x1,%ebx
81003780:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003786:	8d 50 04             	lea    0x4(%eax),%edx
81003789:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100378f:	8b 00                	mov    (%eax),%eax
81003791:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003794:	8b 45 84             	mov    -0x7c(%ebp),%eax
81003797:	85 c0                	test   %eax,%eax
81003799:	79 3f                	jns    810037da <_vfiprintf_r+0x237>
8100379b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810037a2:	eb 36                	jmp    810037da <_vfiprintf_r+0x237>
810037a4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810037ab:	eb 1f                	jmp    810037cc <_vfiprintf_r+0x229>
810037ad:	8b 55 84             	mov    -0x7c(%ebp),%edx
810037b0:	89 d0                	mov    %edx,%eax
810037b2:	c1 e0 02             	shl    $0x2,%eax
810037b5:	01 d0                	add    %edx,%eax
810037b7:	01 c0                	add    %eax,%eax
810037b9:	89 c2                	mov    %eax,%edx
810037bb:	0f b6 03             	movzbl (%ebx),%eax
810037be:	0f be c0             	movsbl %al,%eax
810037c1:	83 e8 30             	sub    $0x30,%eax
810037c4:	01 d0                	add    %edx,%eax
810037c6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810037c9:	83 c3 01             	add    $0x1,%ebx
810037cc:	0f b6 03             	movzbl (%ebx),%eax
810037cf:	0f be c0             	movsbl %al,%eax
810037d2:	83 e8 30             	sub    $0x30,%eax
810037d5:	83 f8 09             	cmp    $0x9,%eax
810037d8:	76 d3                	jbe    810037ad <_vfiprintf_r+0x20a>
810037da:	c7 45 dc fa 73 00 81 	movl   $0x810073fa,-0x24(%ebp)
810037e1:	0f b6 03             	movzbl (%ebx),%eax
810037e4:	0f be c0             	movsbl %al,%eax
810037e7:	83 ec 04             	sub    $0x4,%esp
810037ea:	6a 03                	push   $0x3
810037ec:	50                   	push   %eax
810037ed:	ff 75 dc             	pushl  -0x24(%ebp)
810037f0:	e8 db f9 ff ff       	call   810031d0 <memchr>
810037f5:	83 c4 10             	add    $0x10,%esp
810037f8:	89 c6                	mov    %eax,%esi
810037fa:	85 f6                	test   %esi,%esi
810037fc:	74 1b                	je     81003819 <_vfiprintf_r+0x276>
810037fe:	8b 55 80             	mov    -0x80(%ebp),%edx
81003801:	89 f0                	mov    %esi,%eax
81003803:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003806:	be 40 00 00 00       	mov    $0x40,%esi
8100380b:	89 c1                	mov    %eax,%ecx
8100380d:	d3 e6                	shl    %cl,%esi
8100380f:	89 f0                	mov    %esi,%eax
81003811:	09 d0                	or     %edx,%eax
81003813:	89 45 80             	mov    %eax,-0x80(%ebp)
81003816:	83 c3 01             	add    $0x1,%ebx
81003819:	89 d8                	mov    %ebx,%eax
8100381b:	8d 58 01             	lea    0x1(%eax),%ebx
8100381e:	0f b6 00             	movzbl (%eax),%eax
81003821:	88 45 98             	mov    %al,-0x68(%ebp)
81003824:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003828:	0f be c0             	movsbl %al,%eax
8100382b:	83 ec 04             	sub    $0x4,%esp
8100382e:	6a 06                	push   $0x6
81003830:	50                   	push   %eax
81003831:	68 fe 73 00 81       	push   $0x810073fe
81003836:	e8 95 f9 ff ff       	call   810031d0 <memchr>
8100383b:	83 c4 10             	add    $0x10,%esp
8100383e:	89 c6                	mov    %eax,%esi
81003840:	85 f6                	test   %esi,%esi
81003842:	74 5a                	je     8100389e <_vfiprintf_r+0x2fb>
81003844:	b8 00 00 00 00       	mov    $0x0,%eax
81003849:	85 c0                	test   %eax,%eax
8100384b:	75 2e                	jne    8100387b <_vfiprintf_r+0x2d8>
8100384d:	8b 45 80             	mov    -0x80(%ebp),%eax
81003850:	25 00 01 00 00       	and    $0x100,%eax
81003855:	85 c0                	test   %eax,%eax
81003857:	74 11                	je     8100386a <_vfiprintf_r+0x2c7>
81003859:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100385f:	83 c0 0c             	add    $0xc,%eax
81003862:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003868:	eb 55                	jmp    810038bf <_vfiprintf_r+0x31c>
8100386a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003870:	83 c0 08             	add    $0x8,%eax
81003873:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003879:	eb 44                	jmp    810038bf <_vfiprintf_r+0x31c>
8100387b:	83 ec 0c             	sub    $0xc,%esp
8100387e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003884:	50                   	push   %eax
81003885:	ff 75 e4             	pushl  -0x1c(%ebp)
81003888:	ff 75 0c             	pushl  0xc(%ebp)
8100388b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100388e:	50                   	push   %eax
8100388f:	ff 75 08             	pushl  0x8(%ebp)
81003892:	e8 69 c7 ff 7e       	call   0 <show_promot-0x81000000>
81003897:	83 c4 20             	add    $0x20,%esp
8100389a:	89 c7                	mov    %eax,%edi
8100389c:	eb 21                	jmp    810038bf <_vfiprintf_r+0x31c>
8100389e:	83 ec 0c             	sub    $0xc,%esp
810038a1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810038a7:	50                   	push   %eax
810038a8:	ff 75 e4             	pushl  -0x1c(%ebp)
810038ab:	ff 75 0c             	pushl  0xc(%ebp)
810038ae:	8d 45 80             	lea    -0x80(%ebp),%eax
810038b1:	50                   	push   %eax
810038b2:	ff 75 08             	pushl  0x8(%ebp)
810038b5:	e8 da 01 00 00       	call   81003a94 <_printf_i>
810038ba:	83 c4 20             	add    $0x20,%esp
810038bd:	89 c7                	mov    %eax,%edi
810038bf:	83 ff ff             	cmp    $0xffffffff,%edi
810038c2:	74 13                	je     810038d7 <_vfiprintf_r+0x334>
810038c4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810038c7:	01 f8                	add    %edi,%eax
810038c9:	89 45 94             	mov    %eax,-0x6c(%ebp)
810038cc:	e9 5c fd ff ff       	jmp    8100362d <_vfiprintf_r+0x8a>
810038d1:	90                   	nop
810038d2:	eb 04                	jmp    810038d8 <_vfiprintf_r+0x335>
810038d4:	90                   	nop
810038d5:	eb 01                	jmp    810038d8 <_vfiprintf_r+0x335>
810038d7:	90                   	nop
810038d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810038db:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810038df:	98                   	cwtl   
810038e0:	83 e0 40             	and    $0x40,%eax
810038e3:	85 c0                	test   %eax,%eax
810038e5:	75 05                	jne    810038ec <_vfiprintf_r+0x349>
810038e7:	8b 45 94             	mov    -0x6c(%ebp),%eax
810038ea:	eb 05                	jmp    810038f1 <_vfiprintf_r+0x34e>
810038ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810038f1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810038f4:	5b                   	pop    %ebx
810038f5:	5e                   	pop    %esi
810038f6:	5f                   	pop    %edi
810038f7:	5d                   	pop    %ebp
810038f8:	c3                   	ret    

810038f9 <_printf_common>:
810038f9:	55                   	push   %ebp
810038fa:	89 e5                	mov    %esp,%ebp
810038fc:	83 ec 18             	sub    $0x18,%esp
810038ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81003902:	8b 50 10             	mov    0x10(%eax),%edx
81003905:	8b 45 0c             	mov    0xc(%ebp),%eax
81003908:	8b 40 08             	mov    0x8(%eax),%eax
8100390b:	39 c2                	cmp    %eax,%edx
8100390d:	0f 4c d0             	cmovl  %eax,%edx
81003910:	8b 45 10             	mov    0x10(%ebp),%eax
81003913:	89 10                	mov    %edx,(%eax)
81003915:	8b 45 0c             	mov    0xc(%ebp),%eax
81003918:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100391c:	84 c0                	test   %al,%al
8100391e:	74 0d                	je     8100392d <_printf_common+0x34>
81003920:	8b 45 10             	mov    0x10(%ebp),%eax
81003923:	8b 00                	mov    (%eax),%eax
81003925:	8d 50 01             	lea    0x1(%eax),%edx
81003928:	8b 45 10             	mov    0x10(%ebp),%eax
8100392b:	89 10                	mov    %edx,(%eax)
8100392d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003930:	8b 00                	mov    (%eax),%eax
81003932:	83 e0 20             	and    $0x20,%eax
81003935:	85 c0                	test   %eax,%eax
81003937:	74 0d                	je     81003946 <_printf_common+0x4d>
81003939:	8b 45 10             	mov    0x10(%ebp),%eax
8100393c:	8b 00                	mov    (%eax),%eax
8100393e:	8d 50 02             	lea    0x2(%eax),%edx
81003941:	8b 45 10             	mov    0x10(%ebp),%eax
81003944:	89 10                	mov    %edx,(%eax)
81003946:	8b 45 0c             	mov    0xc(%ebp),%eax
81003949:	8b 00                	mov    (%eax),%eax
8100394b:	83 e0 06             	and    $0x6,%eax
8100394e:	85 c0                	test   %eax,%eax
81003950:	75 41                	jne    81003993 <_printf_common+0x9a>
81003952:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003959:	eb 24                	jmp    8100397f <_printf_common+0x86>
8100395b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100395e:	83 c0 19             	add    $0x19,%eax
81003961:	6a 01                	push   $0x1
81003963:	50                   	push   %eax
81003964:	ff 75 14             	pushl  0x14(%ebp)
81003967:	ff 75 08             	pushl  0x8(%ebp)
8100396a:	8b 45 18             	mov    0x18(%ebp),%eax
8100396d:	ff d0                	call   *%eax
8100396f:	83 c4 10             	add    $0x10,%esp
81003972:	83 f8 ff             	cmp    $0xffffffff,%eax
81003975:	0f 84 0b 01 00 00    	je     81003a86 <_printf_common+0x18d>
8100397b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100397f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003982:	8b 50 0c             	mov    0xc(%eax),%edx
81003985:	8b 45 10             	mov    0x10(%ebp),%eax
81003988:	8b 08                	mov    (%eax),%ecx
8100398a:	89 d0                	mov    %edx,%eax
8100398c:	29 c8                	sub    %ecx,%eax
8100398e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003991:	7c c8                	jl     8100395b <_printf_common+0x62>
81003993:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100399a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100399d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810039a1:	84 c0                	test   %al,%al
810039a3:	74 04                	je     810039a9 <_printf_common+0xb0>
810039a5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810039a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810039ac:	8b 00                	mov    (%eax),%eax
810039ae:	83 e0 20             	and    $0x20,%eax
810039b1:	85 c0                	test   %eax,%eax
810039b3:	74 28                	je     810039dd <_printf_common+0xe4>
810039b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039b8:	8d 50 01             	lea    0x1(%eax),%edx
810039bb:	89 55 f4             	mov    %edx,-0xc(%ebp)
810039be:	8b 55 0c             	mov    0xc(%ebp),%edx
810039c1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810039c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039c9:	8d 50 01             	lea    0x1(%eax),%edx
810039cc:	89 55 f4             	mov    %edx,-0xc(%ebp)
810039cf:	8b 55 0c             	mov    0xc(%ebp),%edx
810039d2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810039d6:	8b 55 0c             	mov    0xc(%ebp),%edx
810039d9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
810039dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039e0:	8b 55 0c             	mov    0xc(%ebp),%edx
810039e3:	83 c2 43             	add    $0x43,%edx
810039e6:	50                   	push   %eax
810039e7:	52                   	push   %edx
810039e8:	ff 75 14             	pushl  0x14(%ebp)
810039eb:	ff 75 08             	pushl  0x8(%ebp)
810039ee:	8b 45 18             	mov    0x18(%ebp),%eax
810039f1:	ff d0                	call   *%eax
810039f3:	83 c4 10             	add    $0x10,%esp
810039f6:	83 f8 ff             	cmp    $0xffffffff,%eax
810039f9:	0f 84 8a 00 00 00    	je     81003a89 <_printf_common+0x190>
810039ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a02:	8b 50 0c             	mov    0xc(%eax),%edx
81003a05:	8b 45 10             	mov    0x10(%ebp),%eax
81003a08:	8b 08                	mov    (%eax),%ecx
81003a0a:	89 d0                	mov    %edx,%eax
81003a0c:	29 c8                	sub    %ecx,%eax
81003a0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a11:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a14:	8b 00                	mov    (%eax),%eax
81003a16:	83 e0 06             	and    $0x6,%eax
81003a19:	83 f8 04             	cmp    $0x4,%eax
81003a1c:	75 06                	jne    81003a24 <_printf_common+0x12b>
81003a1e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003a22:	79 07                	jns    81003a2b <_printf_common+0x132>
81003a24:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003a2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a2e:	8b 50 08             	mov    0x8(%eax),%edx
81003a31:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a34:	8b 40 10             	mov    0x10(%eax),%eax
81003a37:	39 c2                	cmp    %eax,%edx
81003a39:	7e 13                	jle    81003a4e <_printf_common+0x155>
81003a3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a3e:	8b 50 08             	mov    0x8(%eax),%edx
81003a41:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a44:	8b 48 10             	mov    0x10(%eax),%ecx
81003a47:	89 d0                	mov    %edx,%eax
81003a49:	29 c8                	sub    %ecx,%eax
81003a4b:	01 45 f4             	add    %eax,-0xc(%ebp)
81003a4e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003a55:	eb 20                	jmp    81003a77 <_printf_common+0x17e>
81003a57:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a5a:	83 c0 1a             	add    $0x1a,%eax
81003a5d:	6a 01                	push   $0x1
81003a5f:	50                   	push   %eax
81003a60:	ff 75 14             	pushl  0x14(%ebp)
81003a63:	ff 75 08             	pushl  0x8(%ebp)
81003a66:	8b 45 18             	mov    0x18(%ebp),%eax
81003a69:	ff d0                	call   *%eax
81003a6b:	83 c4 10             	add    $0x10,%esp
81003a6e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a71:	74 19                	je     81003a8c <_printf_common+0x193>
81003a73:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81003a77:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a7a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81003a7d:	7c d8                	jl     81003a57 <_printf_common+0x15e>
81003a7f:	b8 00 00 00 00       	mov    $0x0,%eax
81003a84:	eb 0c                	jmp    81003a92 <_printf_common+0x199>
81003a86:	90                   	nop
81003a87:	eb 04                	jmp    81003a8d <_printf_common+0x194>
81003a89:	90                   	nop
81003a8a:	eb 01                	jmp    81003a8d <_printf_common+0x194>
81003a8c:	90                   	nop
81003a8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003a92:	c9                   	leave  
81003a93:	c3                   	ret    

81003a94 <_printf_i>:
81003a94:	55                   	push   %ebp
81003a95:	89 e5                	mov    %esp,%ebp
81003a97:	53                   	push   %ebx
81003a98:	83 ec 24             	sub    $0x24,%esp
81003a9b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a9e:	83 c0 1b             	add    $0x1b,%eax
81003aa1:	83 c0 28             	add    $0x28,%eax
81003aa4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003aa7:	c7 45 e8 08 74 00 81 	movl   $0x81007408,-0x18(%ebp)
81003aae:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ab1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003ab5:	0f be c0             	movsbl %al,%eax
81003ab8:	85 c0                	test   %eax,%eax
81003aba:	0f 84 00 03 00 00    	je     81003dc0 <_printf_i+0x32c>
81003ac0:	85 c0                	test   %eax,%eax
81003ac2:	0f 88 52 03 00 00    	js     81003e1a <_printf_i+0x386>
81003ac8:	83 f8 78             	cmp    $0x78,%eax
81003acb:	0f 8f 49 03 00 00    	jg     81003e1a <_printf_i+0x386>
81003ad1:	83 f8 58             	cmp    $0x58,%eax
81003ad4:	0f 8c 40 03 00 00    	jl     81003e1a <_printf_i+0x386>
81003ada:	83 e8 58             	sub    $0x58,%eax
81003add:	83 f8 20             	cmp    $0x20,%eax
81003ae0:	0f 87 34 03 00 00    	ja     81003e1a <_printf_i+0x386>
81003ae6:	8b 04 85 2c 74 00 81 	mov    -0x7eff8bd4(,%eax,4),%eax
81003aed:	ff e0                	jmp    *%eax
81003aef:	8b 45 18             	mov    0x18(%ebp),%eax
81003af2:	8b 00                	mov    (%eax),%eax
81003af4:	8d 48 04             	lea    0x4(%eax),%ecx
81003af7:	8b 55 18             	mov    0x18(%ebp),%edx
81003afa:	89 0a                	mov    %ecx,(%edx)
81003afc:	8b 00                	mov    (%eax),%eax
81003afe:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003b02:	89 c2                	mov    %eax,%edx
81003b04:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b07:	88 10                	mov    %dl,(%eax)
81003b09:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b0c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b13:	e9 1c 03 00 00       	jmp    81003e34 <_printf_i+0x3a0>
81003b18:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b1b:	8b 00                	mov    (%eax),%eax
81003b1d:	25 80 00 00 00       	and    $0x80,%eax
81003b22:	85 c0                	test   %eax,%eax
81003b24:	74 11                	je     81003b37 <_printf_i+0xa3>
81003b26:	8b 45 18             	mov    0x18(%ebp),%eax
81003b29:	8b 00                	mov    (%eax),%eax
81003b2b:	8d 48 04             	lea    0x4(%eax),%ecx
81003b2e:	8b 55 18             	mov    0x18(%ebp),%edx
81003b31:	89 0a                	mov    %ecx,(%edx)
81003b33:	8b 00                	mov    (%eax),%eax
81003b35:	eb 2d                	jmp    81003b64 <_printf_i+0xd0>
81003b37:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b3a:	8b 00                	mov    (%eax),%eax
81003b3c:	83 e0 40             	and    $0x40,%eax
81003b3f:	85 c0                	test   %eax,%eax
81003b41:	74 12                	je     81003b55 <_printf_i+0xc1>
81003b43:	8b 45 18             	mov    0x18(%ebp),%eax
81003b46:	8b 00                	mov    (%eax),%eax
81003b48:	8d 48 04             	lea    0x4(%eax),%ecx
81003b4b:	8b 55 18             	mov    0x18(%ebp),%edx
81003b4e:	89 0a                	mov    %ecx,(%edx)
81003b50:	8b 00                	mov    (%eax),%eax
81003b52:	98                   	cwtl   
81003b53:	eb 0f                	jmp    81003b64 <_printf_i+0xd0>
81003b55:	8b 45 18             	mov    0x18(%ebp),%eax
81003b58:	8b 00                	mov    (%eax),%eax
81003b5a:	8d 48 04             	lea    0x4(%eax),%ecx
81003b5d:	8b 55 18             	mov    0x18(%ebp),%edx
81003b60:	89 0a                	mov    %ecx,(%edx)
81003b62:	8b 00                	mov    (%eax),%eax
81003b64:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b6a:	85 c0                	test   %eax,%eax
81003b6c:	79 0a                	jns    81003b78 <_printf_i+0xe4>
81003b6e:	f7 5d f4             	negl   -0xc(%ebp)
81003b71:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b74:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003b78:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003b7f:	e9 28 01 00 00       	jmp    81003cac <_printf_i+0x218>
81003b84:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b87:	8b 00                	mov    (%eax),%eax
81003b89:	25 80 00 00 00       	and    $0x80,%eax
81003b8e:	85 c0                	test   %eax,%eax
81003b90:	74 11                	je     81003ba3 <_printf_i+0x10f>
81003b92:	8b 45 18             	mov    0x18(%ebp),%eax
81003b95:	8b 00                	mov    (%eax),%eax
81003b97:	8d 48 04             	lea    0x4(%eax),%ecx
81003b9a:	8b 55 18             	mov    0x18(%ebp),%edx
81003b9d:	89 0a                	mov    %ecx,(%edx)
81003b9f:	8b 00                	mov    (%eax),%eax
81003ba1:	eb 2f                	jmp    81003bd2 <_printf_i+0x13e>
81003ba3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ba6:	8b 00                	mov    (%eax),%eax
81003ba8:	83 e0 40             	and    $0x40,%eax
81003bab:	85 c0                	test   %eax,%eax
81003bad:	74 14                	je     81003bc3 <_printf_i+0x12f>
81003baf:	8b 45 18             	mov    0x18(%ebp),%eax
81003bb2:	8b 00                	mov    (%eax),%eax
81003bb4:	8d 48 04             	lea    0x4(%eax),%ecx
81003bb7:	8b 55 18             	mov    0x18(%ebp),%edx
81003bba:	89 0a                	mov    %ecx,(%edx)
81003bbc:	8b 00                	mov    (%eax),%eax
81003bbe:	0f b7 c0             	movzwl %ax,%eax
81003bc1:	eb 0f                	jmp    81003bd2 <_printf_i+0x13e>
81003bc3:	8b 45 18             	mov    0x18(%ebp),%eax
81003bc6:	8b 00                	mov    (%eax),%eax
81003bc8:	8d 48 04             	lea    0x4(%eax),%ecx
81003bcb:	8b 55 18             	mov    0x18(%ebp),%edx
81003bce:	89 0a                	mov    %ecx,(%edx)
81003bd0:	8b 00                	mov    (%eax),%eax
81003bd2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003bd5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bd8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003bdc:	3c 6f                	cmp    $0x6f,%al
81003bde:	75 07                	jne    81003be7 <_printf_i+0x153>
81003be0:	b8 08 00 00 00       	mov    $0x8,%eax
81003be5:	eb 05                	jmp    81003bec <_printf_i+0x158>
81003be7:	b8 0a 00 00 00       	mov    $0xa,%eax
81003bec:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003bef:	e9 b1 00 00 00       	jmp    81003ca5 <_printf_i+0x211>
81003bf4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bf7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003bfb:	eb 1d                	jmp    81003c1a <_printf_i+0x186>
81003bfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c00:	8b 00                	mov    (%eax),%eax
81003c02:	83 c8 20             	or     $0x20,%eax
81003c05:	89 c2                	mov    %eax,%edx
81003c07:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c0a:	89 10                	mov    %edx,(%eax)
81003c0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c0f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003c13:	c7 45 e8 19 74 00 81 	movl   $0x81007419,-0x18(%ebp)
81003c1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c1d:	8b 00                	mov    (%eax),%eax
81003c1f:	25 80 00 00 00       	and    $0x80,%eax
81003c24:	85 c0                	test   %eax,%eax
81003c26:	74 11                	je     81003c39 <_printf_i+0x1a5>
81003c28:	8b 45 18             	mov    0x18(%ebp),%eax
81003c2b:	8b 00                	mov    (%eax),%eax
81003c2d:	8d 48 04             	lea    0x4(%eax),%ecx
81003c30:	8b 55 18             	mov    0x18(%ebp),%edx
81003c33:	89 0a                	mov    %ecx,(%edx)
81003c35:	8b 00                	mov    (%eax),%eax
81003c37:	eb 2f                	jmp    81003c68 <_printf_i+0x1d4>
81003c39:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c3c:	8b 00                	mov    (%eax),%eax
81003c3e:	83 e0 40             	and    $0x40,%eax
81003c41:	85 c0                	test   %eax,%eax
81003c43:	74 14                	je     81003c59 <_printf_i+0x1c5>
81003c45:	8b 45 18             	mov    0x18(%ebp),%eax
81003c48:	8b 00                	mov    (%eax),%eax
81003c4a:	8d 48 04             	lea    0x4(%eax),%ecx
81003c4d:	8b 55 18             	mov    0x18(%ebp),%edx
81003c50:	89 0a                	mov    %ecx,(%edx)
81003c52:	8b 00                	mov    (%eax),%eax
81003c54:	0f b7 c0             	movzwl %ax,%eax
81003c57:	eb 0f                	jmp    81003c68 <_printf_i+0x1d4>
81003c59:	8b 45 18             	mov    0x18(%ebp),%eax
81003c5c:	8b 00                	mov    (%eax),%eax
81003c5e:	8d 48 04             	lea    0x4(%eax),%ecx
81003c61:	8b 55 18             	mov    0x18(%ebp),%edx
81003c64:	89 0a                	mov    %ecx,(%edx)
81003c66:	8b 00                	mov    (%eax),%eax
81003c68:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c6b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003c72:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c75:	8b 00                	mov    (%eax),%eax
81003c77:	83 e0 01             	and    $0x1,%eax
81003c7a:	85 c0                	test   %eax,%eax
81003c7c:	74 0f                	je     81003c8d <_printf_i+0x1f9>
81003c7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c81:	8b 00                	mov    (%eax),%eax
81003c83:	83 c8 20             	or     $0x20,%eax
81003c86:	89 c2                	mov    %eax,%edx
81003c88:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c8b:	89 10                	mov    %edx,(%eax)
81003c8d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003c91:	75 11                	jne    81003ca4 <_printf_i+0x210>
81003c93:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c96:	8b 00                	mov    (%eax),%eax
81003c98:	83 e0 df             	and    $0xffffffdf,%eax
81003c9b:	89 c2                	mov    %eax,%edx
81003c9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ca0:	89 10                	mov    %edx,(%eax)
81003ca2:	eb 01                	jmp    81003ca5 <_printf_i+0x211>
81003ca4:	90                   	nop
81003ca5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ca8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003cac:	8b 45 0c             	mov    0xc(%ebp),%eax
81003caf:	8b 50 04             	mov    0x4(%eax),%edx
81003cb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cb5:	89 50 08             	mov    %edx,0x8(%eax)
81003cb8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cbb:	8b 40 08             	mov    0x8(%eax),%eax
81003cbe:	85 c0                	test   %eax,%eax
81003cc0:	78 0f                	js     81003cd1 <_printf_i+0x23d>
81003cc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cc5:	8b 00                	mov    (%eax),%eax
81003cc7:	83 e0 fb             	and    $0xfffffffb,%eax
81003cca:	89 c2                	mov    %eax,%edx
81003ccc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ccf:	89 10                	mov    %edx,(%eax)
81003cd1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003cd5:	75 0a                	jne    81003ce1 <_printf_i+0x24d>
81003cd7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cda:	8b 40 04             	mov    0x4(%eax),%eax
81003cdd:	85 c0                	test   %eax,%eax
81003cdf:	74 34                	je     81003d15 <_printf_i+0x281>
81003ce1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003ce4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ce7:	ba 00 00 00 00       	mov    $0x0,%edx
81003cec:	f7 f1                	div    %ecx
81003cee:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cf1:	01 d0                	add    %edx,%eax
81003cf3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003cf7:	0f b6 10             	movzbl (%eax),%edx
81003cfa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cfd:	88 10                	mov    %dl,(%eax)
81003cff:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003d02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d05:	ba 00 00 00 00       	mov    $0x0,%edx
81003d0a:	f7 f3                	div    %ebx
81003d0c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003d13:	75 cc                	jne    81003ce1 <_printf_i+0x24d>
81003d15:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003d19:	75 26                	jne    81003d41 <_printf_i+0x2ad>
81003d1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d1e:	8b 00                	mov    (%eax),%eax
81003d20:	83 e0 01             	and    $0x1,%eax
81003d23:	85 c0                	test   %eax,%eax
81003d25:	74 1a                	je     81003d41 <_printf_i+0x2ad>
81003d27:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d2a:	8b 50 04             	mov    0x4(%eax),%edx
81003d2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d30:	8b 40 10             	mov    0x10(%eax),%eax
81003d33:	39 c2                	cmp    %eax,%edx
81003d35:	7f 0a                	jg     81003d41 <_printf_i+0x2ad>
81003d37:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003d3b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d3e:	c6 00 30             	movb   $0x30,(%eax)
81003d41:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d44:	83 c0 1b             	add    $0x1b,%eax
81003d47:	83 c0 28             	add    $0x28,%eax
81003d4a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003d4d:	89 c2                	mov    %eax,%edx
81003d4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d52:	89 50 10             	mov    %edx,0x10(%eax)
81003d55:	e9 e2 00 00 00       	jmp    81003e3c <_printf_i+0x3a8>
81003d5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d5d:	8b 00                	mov    (%eax),%eax
81003d5f:	25 80 00 00 00       	and    $0x80,%eax
81003d64:	85 c0                	test   %eax,%eax
81003d66:	74 19                	je     81003d81 <_printf_i+0x2ed>
81003d68:	8b 45 18             	mov    0x18(%ebp),%eax
81003d6b:	8b 00                	mov    (%eax),%eax
81003d6d:	8d 48 04             	lea    0x4(%eax),%ecx
81003d70:	8b 55 18             	mov    0x18(%ebp),%edx
81003d73:	89 0a                	mov    %ecx,(%edx)
81003d75:	8b 00                	mov    (%eax),%eax
81003d77:	8b 55 0c             	mov    0xc(%ebp),%edx
81003d7a:	8b 52 14             	mov    0x14(%edx),%edx
81003d7d:	89 10                	mov    %edx,(%eax)
81003d7f:	eb 3f                	jmp    81003dc0 <_printf_i+0x32c>
81003d81:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d84:	8b 00                	mov    (%eax),%eax
81003d86:	83 e0 40             	and    $0x40,%eax
81003d89:	85 c0                	test   %eax,%eax
81003d8b:	74 1c                	je     81003da9 <_printf_i+0x315>
81003d8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d90:	8b 58 14             	mov    0x14(%eax),%ebx
81003d93:	8b 45 18             	mov    0x18(%ebp),%eax
81003d96:	8b 00                	mov    (%eax),%eax
81003d98:	8d 48 04             	lea    0x4(%eax),%ecx
81003d9b:	8b 55 18             	mov    0x18(%ebp),%edx
81003d9e:	89 0a                	mov    %ecx,(%edx)
81003da0:	8b 00                	mov    (%eax),%eax
81003da2:	89 da                	mov    %ebx,%edx
81003da4:	66 89 10             	mov    %dx,(%eax)
81003da7:	eb 17                	jmp    81003dc0 <_printf_i+0x32c>
81003da9:	8b 45 18             	mov    0x18(%ebp),%eax
81003dac:	8b 00                	mov    (%eax),%eax
81003dae:	8d 48 04             	lea    0x4(%eax),%ecx
81003db1:	8b 55 18             	mov    0x18(%ebp),%edx
81003db4:	89 0a                	mov    %ecx,(%edx)
81003db6:	8b 00                	mov    (%eax),%eax
81003db8:	8b 55 0c             	mov    0xc(%ebp),%edx
81003dbb:	8b 52 14             	mov    0x14(%edx),%edx
81003dbe:	89 10                	mov    %edx,(%eax)
81003dc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dc3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003dca:	eb 70                	jmp    81003e3c <_printf_i+0x3a8>
81003dcc:	8b 45 18             	mov    0x18(%ebp),%eax
81003dcf:	8b 00                	mov    (%eax),%eax
81003dd1:	8d 48 04             	lea    0x4(%eax),%ecx
81003dd4:	8b 55 18             	mov    0x18(%ebp),%edx
81003dd7:	89 0a                	mov    %ecx,(%edx)
81003dd9:	8b 00                	mov    (%eax),%eax
81003ddb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003dde:	8b 45 0c             	mov    0xc(%ebp),%eax
81003de1:	8b 40 04             	mov    0x4(%eax),%eax
81003de4:	83 ec 04             	sub    $0x4,%esp
81003de7:	50                   	push   %eax
81003de8:	6a 00                	push   $0x0
81003dea:	ff 75 ec             	pushl  -0x14(%ebp)
81003ded:	e8 de f3 ff ff       	call   810031d0 <memchr>
81003df2:	83 c4 10             	add    $0x10,%esp
81003df5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003df8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003dfc:	74 0e                	je     81003e0c <_printf_i+0x378>
81003dfe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003e01:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003e04:	89 c2                	mov    %eax,%edx
81003e06:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e09:	89 50 04             	mov    %edx,0x4(%eax)
81003e0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e0f:	8b 50 04             	mov    0x4(%eax),%edx
81003e12:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e15:	89 50 10             	mov    %edx,0x10(%eax)
81003e18:	eb 1a                	jmp    81003e34 <_printf_i+0x3a0>
81003e1a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003e1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e21:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003e25:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e28:	88 10                	mov    %dl,(%eax)
81003e2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e2d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003e34:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e37:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003e3b:	90                   	nop
81003e3c:	83 ec 0c             	sub    $0xc,%esp
81003e3f:	ff 75 14             	pushl  0x14(%ebp)
81003e42:	ff 75 10             	pushl  0x10(%ebp)
81003e45:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003e48:	50                   	push   %eax
81003e49:	ff 75 0c             	pushl  0xc(%ebp)
81003e4c:	ff 75 08             	pushl  0x8(%ebp)
81003e4f:	e8 a5 fa ff ff       	call   810038f9 <_printf_common>
81003e54:	83 c4 20             	add    $0x20,%esp
81003e57:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e5a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003e5e:	74 72                	je     81003ed2 <_printf_i+0x43e>
81003e60:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e63:	8b 40 10             	mov    0x10(%eax),%eax
81003e66:	50                   	push   %eax
81003e67:	ff 75 ec             	pushl  -0x14(%ebp)
81003e6a:	ff 75 10             	pushl  0x10(%ebp)
81003e6d:	ff 75 08             	pushl  0x8(%ebp)
81003e70:	8b 45 14             	mov    0x14(%ebp),%eax
81003e73:	ff d0                	call   *%eax
81003e75:	83 c4 10             	add    $0x10,%esp
81003e78:	83 f8 ff             	cmp    $0xffffffff,%eax
81003e7b:	74 58                	je     81003ed5 <_printf_i+0x441>
81003e7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e80:	8b 00                	mov    (%eax),%eax
81003e82:	83 e0 02             	and    $0x2,%eax
81003e85:	85 c0                	test   %eax,%eax
81003e87:	74 39                	je     81003ec2 <_printf_i+0x42e>
81003e89:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003e90:	eb 20                	jmp    81003eb2 <_printf_i+0x41e>
81003e92:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e95:	83 c0 19             	add    $0x19,%eax
81003e98:	6a 01                	push   $0x1
81003e9a:	50                   	push   %eax
81003e9b:	ff 75 10             	pushl  0x10(%ebp)
81003e9e:	ff 75 08             	pushl  0x8(%ebp)
81003ea1:	8b 45 14             	mov    0x14(%ebp),%eax
81003ea4:	ff d0                	call   *%eax
81003ea6:	83 c4 10             	add    $0x10,%esp
81003ea9:	83 f8 ff             	cmp    $0xffffffff,%eax
81003eac:	74 2a                	je     81003ed8 <_printf_i+0x444>
81003eae:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003eb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003eb5:	8b 40 0c             	mov    0xc(%eax),%eax
81003eb8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003ebb:	29 d0                	sub    %edx,%eax
81003ebd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003ec0:	7c d0                	jl     81003e92 <_printf_i+0x3fe>
81003ec2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ec5:	8b 50 0c             	mov    0xc(%eax),%edx
81003ec8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ecb:	39 c2                	cmp    %eax,%edx
81003ecd:	0f 4d c2             	cmovge %edx,%eax
81003ed0:	eb 0c                	jmp    81003ede <_printf_i+0x44a>
81003ed2:	90                   	nop
81003ed3:	eb 04                	jmp    81003ed9 <_printf_i+0x445>
81003ed5:	90                   	nop
81003ed6:	eb 01                	jmp    81003ed9 <_printf_i+0x445>
81003ed8:	90                   	nop
81003ed9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003ede:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003ee1:	c9                   	leave  
81003ee2:	c3                   	ret    

81003ee3 <_iprintf_r>:
81003ee3:	55                   	push   %ebp
81003ee4:	89 e5                	mov    %esp,%ebp
81003ee6:	83 ec 18             	sub    $0x18,%esp
81003ee9:	8d 45 10             	lea    0x10(%ebp),%eax
81003eec:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003eef:	8b 55 f0             	mov    -0x10(%ebp),%edx
81003ef2:	8b 45 08             	mov    0x8(%ebp),%eax
81003ef5:	8b 40 08             	mov    0x8(%eax),%eax
81003ef8:	52                   	push   %edx
81003ef9:	ff 75 0c             	pushl  0xc(%ebp)
81003efc:	50                   	push   %eax
81003efd:	ff 75 08             	pushl  0x8(%ebp)
81003f00:	e8 9e f6 ff ff       	call   810035a3 <_vfiprintf_r>
81003f05:	83 c4 10             	add    $0x10,%esp
81003f08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f0e:	c9                   	leave  
81003f0f:	c3                   	ret    

81003f10 <iprintf>:
81003f10:	55                   	push   %ebp
81003f11:	89 e5                	mov    %esp,%ebp
81003f13:	83 ec 18             	sub    $0x18,%esp
81003f16:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81003f1b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f1e:	8d 45 0c             	lea    0xc(%ebp),%eax
81003f21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003f24:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003f27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f2a:	8b 40 08             	mov    0x8(%eax),%eax
81003f2d:	52                   	push   %edx
81003f2e:	ff 75 08             	pushl  0x8(%ebp)
81003f31:	50                   	push   %eax
81003f32:	ff 75 f4             	pushl  -0xc(%ebp)
81003f35:	e8 69 f6 ff ff       	call   810035a3 <_vfiprintf_r>
81003f3a:	83 c4 10             	add    $0x10,%esp
81003f3d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f43:	c9                   	leave  
81003f44:	c3                   	ret    

81003f45 <_puts_r>:
81003f45:	55                   	push   %ebp
81003f46:	89 e5                	mov    %esp,%ebp
81003f48:	83 ec 38             	sub    $0x38,%esp
81003f4b:	83 ec 0c             	sub    $0xc,%esp
81003f4e:	ff 75 0c             	pushl  0xc(%ebp)
81003f51:	e8 ca 06 00 00       	call   81004620 <strlen>
81003f56:	83 c4 10             	add    $0x10,%esp
81003f59:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f5f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003f62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f65:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003f68:	c7 45 d4 b0 74 00 81 	movl   $0x810074b0,-0x2c(%ebp)
81003f6f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003f76:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f79:	83 c0 01             	add    $0x1,%eax
81003f7c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003f7f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81003f82:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f85:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81003f8c:	8b 45 08             	mov    0x8(%ebp),%eax
81003f8f:	8b 40 08             	mov    0x8(%eax),%eax
81003f92:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f95:	8b 45 08             	mov    0x8(%ebp),%eax
81003f98:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003f9b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003f9f:	74 18                	je     81003fb9 <_puts_r+0x74>
81003fa1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003fa4:	8b 40 38             	mov    0x38(%eax),%eax
81003fa7:	85 c0                	test   %eax,%eax
81003fa9:	75 0e                	jne    81003fb9 <_puts_r+0x74>
81003fab:	83 ec 0c             	sub    $0xc,%esp
81003fae:	ff 75 ec             	pushl  -0x14(%ebp)
81003fb1:	e8 1a d1 ff ff       	call   810010d0 <__sinit>
81003fb6:	83 c4 10             	add    $0x10,%esp
81003fb9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fbc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003fc0:	98                   	cwtl   
81003fc1:	25 00 20 00 00       	and    $0x2000,%eax
81003fc6:	85 c0                	test   %eax,%eax
81003fc8:	75 24                	jne    81003fee <_puts_r+0xa9>
81003fca:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fcd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003fd1:	80 cc 20             	or     $0x20,%ah
81003fd4:	89 c2                	mov    %eax,%edx
81003fd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fd9:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003fdd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fe0:	8b 40 64             	mov    0x64(%eax),%eax
81003fe3:	80 e4 df             	and    $0xdf,%ah
81003fe6:	89 c2                	mov    %eax,%edx
81003fe8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003feb:	89 50 64             	mov    %edx,0x64(%eax)
81003fee:	83 ec 04             	sub    $0x4,%esp
81003ff1:	8d 45 dc             	lea    -0x24(%ebp),%eax
81003ff4:	50                   	push   %eax
81003ff5:	ff 75 f0             	pushl  -0x10(%ebp)
81003ff8:	ff 75 08             	pushl  0x8(%ebp)
81003ffb:	e8 64 12 00 00       	call   81005264 <__sfvwrite_r>
81004000:	83 c4 10             	add    $0x10,%esp
81004003:	85 c0                	test   %eax,%eax
81004005:	74 07                	je     8100400e <_puts_r+0xc9>
81004007:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100400c:	eb 05                	jmp    81004013 <_puts_r+0xce>
8100400e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004013:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004016:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004019:	c9                   	leave  
8100401a:	c3                   	ret    

8100401b <puts>:
8100401b:	55                   	push   %ebp
8100401c:	89 e5                	mov    %esp,%ebp
8100401e:	83 ec 08             	sub    $0x8,%esp
81004021:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004026:	83 ec 08             	sub    $0x8,%esp
81004029:	ff 75 08             	pushl  0x8(%ebp)
8100402c:	50                   	push   %eax
8100402d:	e8 13 ff ff ff       	call   81003f45 <_puts_r>
81004032:	83 c4 10             	add    $0x10,%esp
81004035:	c9                   	leave  
81004036:	c3                   	ret    

81004037 <lflush>:
81004037:	55                   	push   %ebp
81004038:	89 e5                	mov    %esp,%ebp
8100403a:	83 ec 08             	sub    $0x8,%esp
8100403d:	8b 45 08             	mov    0x8(%ebp),%eax
81004040:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004044:	98                   	cwtl   
81004045:	83 e0 09             	and    $0x9,%eax
81004048:	83 f8 09             	cmp    $0x9,%eax
8100404b:	75 10                	jne    8100405d <lflush+0x26>
8100404d:	83 ec 0c             	sub    $0xc,%esp
81004050:	ff 75 08             	pushl  0x8(%ebp)
81004053:	e8 cd cb ff ff       	call   81000c25 <fflush>
81004058:	83 c4 10             	add    $0x10,%esp
8100405b:	eb 05                	jmp    81004062 <lflush+0x2b>
8100405d:	b8 00 00 00 00       	mov    $0x0,%eax
81004062:	c9                   	leave  
81004063:	c3                   	ret    

81004064 <__srefill_r>:
81004064:	55                   	push   %ebp
81004065:	89 e5                	mov    %esp,%ebp
81004067:	56                   	push   %esi
81004068:	53                   	push   %ebx
81004069:	83 ec 10             	sub    $0x10,%esp
8100406c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100406f:	8b 45 08             	mov    0x8(%ebp),%eax
81004072:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004075:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004079:	74 18                	je     81004093 <__srefill_r+0x2f>
8100407b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100407e:	8b 40 38             	mov    0x38(%eax),%eax
81004081:	85 c0                	test   %eax,%eax
81004083:	75 0e                	jne    81004093 <__srefill_r+0x2f>
81004085:	83 ec 0c             	sub    $0xc,%esp
81004088:	ff 75 f4             	pushl  -0xc(%ebp)
8100408b:	e8 40 d0 ff ff       	call   810010d0 <__sinit>
81004090:	83 c4 10             	add    $0x10,%esp
81004093:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004097:	98                   	cwtl   
81004098:	25 00 20 00 00       	and    $0x2000,%eax
8100409d:	85 c0                	test   %eax,%eax
8100409f:	75 14                	jne    810040b5 <__srefill_r+0x51>
810040a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040a5:	80 cc 20             	or     $0x20,%ah
810040a8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040ac:	8b 43 64             	mov    0x64(%ebx),%eax
810040af:	80 e4 df             	and    $0xdf,%ah
810040b2:	89 43 64             	mov    %eax,0x64(%ebx)
810040b5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810040bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040c0:	98                   	cwtl   
810040c1:	83 e0 20             	and    $0x20,%eax
810040c4:	85 c0                	test   %eax,%eax
810040c6:	74 0a                	je     810040d2 <__srefill_r+0x6e>
810040c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810040cd:	e9 8c 01 00 00       	jmp    8100425e <__srefill_r+0x1fa>
810040d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040d6:	98                   	cwtl   
810040d7:	83 e0 04             	and    $0x4,%eax
810040da:	85 c0                	test   %eax,%eax
810040dc:	75 79                	jne    81004157 <__srefill_r+0xf3>
810040de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040e2:	98                   	cwtl   
810040e3:	83 e0 10             	and    $0x10,%eax
810040e6:	85 c0                	test   %eax,%eax
810040e8:	75 1e                	jne    81004108 <__srefill_r+0xa4>
810040ea:	8b 45 08             	mov    0x8(%ebp),%eax
810040ed:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810040f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040f7:	83 c8 40             	or     $0x40,%eax
810040fa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004103:	e9 56 01 00 00       	jmp    8100425e <__srefill_r+0x1fa>
81004108:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100410c:	98                   	cwtl   
8100410d:	83 e0 08             	and    $0x8,%eax
81004110:	85 c0                	test   %eax,%eax
81004112:	74 36                	je     8100414a <__srefill_r+0xe6>
81004114:	83 ec 08             	sub    $0x8,%esp
81004117:	53                   	push   %ebx
81004118:	ff 75 08             	pushl  0x8(%ebp)
8100411b:	e8 ad ca ff ff       	call   81000bcd <_fflush_r>
81004120:	83 c4 10             	add    $0x10,%esp
81004123:	85 c0                	test   %eax,%eax
81004125:	74 0a                	je     81004131 <__srefill_r+0xcd>
81004127:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100412c:	e9 2d 01 00 00       	jmp    8100425e <__srefill_r+0x1fa>
81004131:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004135:	83 e0 f7             	and    $0xfffffff7,%eax
81004138:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100413c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004143:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100414a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100414e:	83 c8 04             	or     $0x4,%eax
81004151:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004155:	eb 46                	jmp    8100419d <__srefill_r+0x139>
81004157:	8b 43 30             	mov    0x30(%ebx),%eax
8100415a:	85 c0                	test   %eax,%eax
8100415c:	74 3f                	je     8100419d <__srefill_r+0x139>
8100415e:	8b 53 30             	mov    0x30(%ebx),%edx
81004161:	8d 43 40             	lea    0x40(%ebx),%eax
81004164:	39 c2                	cmp    %eax,%edx
81004166:	74 12                	je     8100417a <__srefill_r+0x116>
81004168:	8b 43 30             	mov    0x30(%ebx),%eax
8100416b:	83 ec 08             	sub    $0x8,%esp
8100416e:	50                   	push   %eax
8100416f:	ff 75 08             	pushl  0x8(%ebp)
81004172:	e8 bb d0 ff ff       	call   81001232 <_free_r>
81004177:	83 c4 10             	add    $0x10,%esp
8100417a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004181:	8b 43 3c             	mov    0x3c(%ebx),%eax
81004184:	89 43 04             	mov    %eax,0x4(%ebx)
81004187:	8b 43 04             	mov    0x4(%ebx),%eax
8100418a:	85 c0                	test   %eax,%eax
8100418c:	74 0f                	je     8100419d <__srefill_r+0x139>
8100418e:	8b 43 38             	mov    0x38(%ebx),%eax
81004191:	89 03                	mov    %eax,(%ebx)
81004193:	b8 00 00 00 00       	mov    $0x0,%eax
81004198:	e9 c1 00 00 00       	jmp    8100425e <__srefill_r+0x1fa>
8100419d:	8b 43 10             	mov    0x10(%ebx),%eax
810041a0:	85 c0                	test   %eax,%eax
810041a2:	75 0f                	jne    810041b3 <__srefill_r+0x14f>
810041a4:	83 ec 08             	sub    $0x8,%esp
810041a7:	53                   	push   %ebx
810041a8:	ff 75 08             	pushl  0x8(%ebp)
810041ab:	e8 88 17 00 00       	call   81005938 <__smakebuf_r>
810041b0:	83 c4 10             	add    $0x10,%esp
810041b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041b7:	98                   	cwtl   
810041b8:	83 e0 03             	and    $0x3,%eax
810041bb:	85 c0                	test   %eax,%eax
810041bd:	74 48                	je     81004207 <__srefill_r+0x1a3>
810041bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041c3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810041c7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810041cd:	a1 f0 73 00 81       	mov    0x810073f0,%eax
810041d2:	83 ec 08             	sub    $0x8,%esp
810041d5:	68 37 40 00 81       	push   $0x81004037
810041da:	50                   	push   %eax
810041db:	e8 8e d5 ff ff       	call   8100176e <_fwalk>
810041e0:	83 c4 10             	add    $0x10,%esp
810041e3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810041e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041ef:	98                   	cwtl   
810041f0:	83 e0 09             	and    $0x9,%eax
810041f3:	83 f8 09             	cmp    $0x9,%eax
810041f6:	75 0f                	jne    81004207 <__srefill_r+0x1a3>
810041f8:	83 ec 08             	sub    $0x8,%esp
810041fb:	53                   	push   %ebx
810041fc:	ff 75 08             	pushl  0x8(%ebp)
810041ff:	e8 a3 c7 ff ff       	call   810009a7 <__sflush_r>
81004204:	83 c4 10             	add    $0x10,%esp
81004207:	8b 43 10             	mov    0x10(%ebx),%eax
8100420a:	89 03                	mov    %eax,(%ebx)
8100420c:	8b 43 20             	mov    0x20(%ebx),%eax
8100420f:	8b 73 14             	mov    0x14(%ebx),%esi
81004212:	8b 0b                	mov    (%ebx),%ecx
81004214:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004217:	56                   	push   %esi
81004218:	51                   	push   %ecx
81004219:	52                   	push   %edx
8100421a:	ff 75 08             	pushl  0x8(%ebp)
8100421d:	ff d0                	call   *%eax
8100421f:	83 c4 10             	add    $0x10,%esp
81004222:	89 43 04             	mov    %eax,0x4(%ebx)
81004225:	8b 43 04             	mov    0x4(%ebx),%eax
81004228:	85 c0                	test   %eax,%eax
8100422a:	7f 2d                	jg     81004259 <__srefill_r+0x1f5>
8100422c:	8b 43 04             	mov    0x4(%ebx),%eax
8100422f:	85 c0                	test   %eax,%eax
81004231:	75 0d                	jne    81004240 <__srefill_r+0x1dc>
81004233:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004237:	83 c8 20             	or     $0x20,%eax
8100423a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100423e:	eb 12                	jmp    81004252 <__srefill_r+0x1ee>
81004240:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004247:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100424b:	83 c8 40             	or     $0x40,%eax
8100424e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004252:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004257:	eb 05                	jmp    8100425e <__srefill_r+0x1fa>
81004259:	b8 00 00 00 00       	mov    $0x0,%eax
8100425e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004261:	5b                   	pop    %ebx
81004262:	5e                   	pop    %esi
81004263:	5d                   	pop    %ebp
81004264:	c3                   	ret    

81004265 <_sbrk_r>:
81004265:	55                   	push   %ebp
81004266:	89 e5                	mov    %esp,%ebp
81004268:	83 ec 18             	sub    $0x18,%esp
8100426b:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
81004272:	00 00 00 
81004275:	83 ec 0c             	sub    $0xc,%esp
81004278:	ff 75 0c             	pushl  0xc(%ebp)
8100427b:	e8 2b c6 ff ff       	call   810008ab <sbrk>
81004280:	83 c4 10             	add    $0x10,%esp
81004283:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004286:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100428a:	75 14                	jne    810042a0 <_sbrk_r+0x3b>
8100428c:	a1 f4 86 00 81       	mov    0x810086f4,%eax
81004291:	85 c0                	test   %eax,%eax
81004293:	74 0b                	je     810042a0 <_sbrk_r+0x3b>
81004295:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
8100429b:	8b 45 08             	mov    0x8(%ebp),%eax
8100429e:	89 10                	mov    %edx,(%eax)
810042a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042a3:	c9                   	leave  
810042a4:	c3                   	ret    

810042a5 <_siprintf_r>:
810042a5:	55                   	push   %ebp
810042a6:	89 e5                	mov    %esp,%ebp
810042a8:	83 ec 78             	sub    $0x78,%esp
810042ab:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810042b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810042b4:	89 45 88             	mov    %eax,-0x78(%ebp)
810042b7:	8b 45 88             	mov    -0x78(%ebp),%eax
810042ba:	89 45 98             	mov    %eax,-0x68(%ebp)
810042bd:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810042c4:	8b 45 90             	mov    -0x70(%ebp),%eax
810042c7:	89 45 9c             	mov    %eax,-0x64(%ebp)
810042ca:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810042d0:	8d 45 14             	lea    0x14(%ebp),%eax
810042d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810042d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810042d9:	50                   	push   %eax
810042da:	ff 75 10             	pushl  0x10(%ebp)
810042dd:	8d 45 88             	lea    -0x78(%ebp),%eax
810042e0:	50                   	push   %eax
810042e1:	ff 75 08             	pushl  0x8(%ebp)
810042e4:	e8 dd 1c 00 00       	call   81005fc6 <_svfiprintf_r>
810042e9:	83 c4 10             	add    $0x10,%esp
810042ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042ef:	8b 45 88             	mov    -0x78(%ebp),%eax
810042f2:	c6 00 00             	movb   $0x0,(%eax)
810042f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042f8:	c9                   	leave  
810042f9:	c3                   	ret    

810042fa <siprintf>:
810042fa:	55                   	push   %ebp
810042fb:	89 e5                	mov    %esp,%ebp
810042fd:	83 ec 78             	sub    $0x78,%esp
81004300:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
81004306:	8b 45 08             	mov    0x8(%ebp),%eax
81004309:	89 45 88             	mov    %eax,-0x78(%ebp)
8100430c:	8b 45 88             	mov    -0x78(%ebp),%eax
8100430f:	89 45 98             	mov    %eax,-0x68(%ebp)
81004312:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81004319:	8b 45 90             	mov    -0x70(%ebp),%eax
8100431c:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100431f:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81004325:	8d 45 10             	lea    0x10(%ebp),%eax
81004328:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100432b:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100432e:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004333:	52                   	push   %edx
81004334:	ff 75 0c             	pushl  0xc(%ebp)
81004337:	8d 55 88             	lea    -0x78(%ebp),%edx
8100433a:	52                   	push   %edx
8100433b:	50                   	push   %eax
8100433c:	e8 85 1c 00 00       	call   81005fc6 <_svfiprintf_r>
81004341:	83 c4 10             	add    $0x10,%esp
81004344:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004347:	8b 45 88             	mov    -0x78(%ebp),%eax
8100434a:	c6 00 00             	movb   $0x0,(%eax)
8100434d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004350:	c9                   	leave  
81004351:	c3                   	ret    

81004352 <__sread>:
81004352:	55                   	push   %ebp
81004353:	89 e5                	mov    %esp,%ebp
81004355:	56                   	push   %esi
81004356:	53                   	push   %ebx
81004357:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100435a:	8b 55 14             	mov    0x14(%ebp),%edx
8100435d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004361:	98                   	cwtl   
81004362:	52                   	push   %edx
81004363:	ff 75 10             	pushl  0x10(%ebp)
81004366:	50                   	push   %eax
81004367:	ff 75 08             	pushl  0x8(%ebp)
8100436a:	e8 95 20 00 00       	call   81006404 <_read_r>
8100436f:	83 c4 10             	add    $0x10,%esp
81004372:	89 c6                	mov    %eax,%esi
81004374:	85 f6                	test   %esi,%esi
81004376:	78 0a                	js     81004382 <__sread+0x30>
81004378:	8b 43 50             	mov    0x50(%ebx),%eax
8100437b:	01 f0                	add    %esi,%eax
8100437d:	89 43 50             	mov    %eax,0x50(%ebx)
81004380:	eb 0b                	jmp    8100438d <__sread+0x3b>
81004382:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004386:	80 e4 ef             	and    $0xef,%ah
81004389:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100438d:	89 f0                	mov    %esi,%eax
8100438f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004392:	5b                   	pop    %ebx
81004393:	5e                   	pop    %esi
81004394:	5d                   	pop    %ebp
81004395:	c3                   	ret    

81004396 <__seofread>:
81004396:	55                   	push   %ebp
81004397:	89 e5                	mov    %esp,%ebp
81004399:	b8 00 00 00 00       	mov    $0x0,%eax
8100439e:	5d                   	pop    %ebp
8100439f:	c3                   	ret    

810043a0 <__swrite>:
810043a0:	55                   	push   %ebp
810043a1:	89 e5                	mov    %esp,%ebp
810043a3:	53                   	push   %ebx
810043a4:	83 ec 14             	sub    $0x14,%esp
810043a7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810043aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810043ae:	98                   	cwtl   
810043af:	25 00 01 00 00       	and    $0x100,%eax
810043b4:	85 c0                	test   %eax,%eax
810043b6:	74 15                	je     810043cd <__swrite+0x2d>
810043b8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810043bc:	98                   	cwtl   
810043bd:	6a 02                	push   $0x2
810043bf:	6a 00                	push   $0x0
810043c1:	50                   	push   %eax
810043c2:	ff 75 08             	pushl  0x8(%ebp)
810043c5:	e8 28 15 00 00       	call   810058f2 <_lseek_r>
810043ca:	83 c4 10             	add    $0x10,%esp
810043cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810043d1:	80 e4 ef             	and    $0xef,%ah
810043d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810043d8:	8b 55 14             	mov    0x14(%ebp),%edx
810043db:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810043df:	98                   	cwtl   
810043e0:	52                   	push   %edx
810043e1:	ff 75 10             	pushl  0x10(%ebp)
810043e4:	50                   	push   %eax
810043e5:	ff 75 08             	pushl  0x8(%ebp)
810043e8:	e8 45 07 00 00       	call   81004b32 <_write_r>
810043ed:	83 c4 10             	add    $0x10,%esp
810043f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043f6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810043f9:	c9                   	leave  
810043fa:	c3                   	ret    

810043fb <__sseek>:
810043fb:	55                   	push   %ebp
810043fc:	89 e5                	mov    %esp,%ebp
810043fe:	56                   	push   %esi
810043ff:	53                   	push   %ebx
81004400:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004403:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004407:	98                   	cwtl   
81004408:	ff 75 14             	pushl  0x14(%ebp)
8100440b:	ff 75 10             	pushl  0x10(%ebp)
8100440e:	50                   	push   %eax
8100440f:	ff 75 08             	pushl  0x8(%ebp)
81004412:	e8 db 14 00 00       	call   810058f2 <_lseek_r>
81004417:	83 c4 10             	add    $0x10,%esp
8100441a:	89 c6                	mov    %eax,%esi
8100441c:	83 fe ff             	cmp    $0xffffffff,%esi
8100441f:	75 0d                	jne    8100442e <__sseek+0x33>
81004421:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004425:	80 e4 ef             	and    $0xef,%ah
81004428:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100442c:	eb 0e                	jmp    8100443c <__sseek+0x41>
8100442e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004432:	80 cc 10             	or     $0x10,%ah
81004435:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004439:	89 73 50             	mov    %esi,0x50(%ebx)
8100443c:	89 f0                	mov    %esi,%eax
8100443e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004441:	5b                   	pop    %ebx
81004442:	5e                   	pop    %esi
81004443:	5d                   	pop    %ebp
81004444:	c3                   	ret    

81004445 <__sclose>:
81004445:	55                   	push   %ebp
81004446:	89 e5                	mov    %esp,%ebp
81004448:	83 ec 18             	sub    $0x18,%esp
8100444b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100444e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004451:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004454:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81004458:	98                   	cwtl   
81004459:	83 ec 08             	sub    $0x8,%esp
8100445c:	50                   	push   %eax
8100445d:	ff 75 08             	pushl  0x8(%ebp)
81004460:	e8 83 09 00 00       	call   81004de8 <_close_r>
81004465:	83 c4 10             	add    $0x10,%esp
81004468:	c9                   	leave  
81004469:	c3                   	ret    
8100446a:	66 90                	xchg   %ax,%ax
8100446c:	66 90                	xchg   %ax,%ax
8100446e:	66 90                	xchg   %ax,%ax

81004470 <strchr>:
81004470:	55                   	push   %ebp
81004471:	89 e5                	mov    %esp,%ebp
81004473:	57                   	push   %edi
81004474:	53                   	push   %ebx
81004475:	31 db                	xor    %ebx,%ebx
81004477:	8b 7d 08             	mov    0x8(%ebp),%edi
8100447a:	02 5d 0c             	add    0xc(%ebp),%bl
8100447d:	0f 84 98 00 00 00    	je     8100451b <L25>
81004483:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004489:	74 37                	je     810044c2 <L5>
8100448b:	89 f8                	mov    %edi,%eax
8100448d:	8a 08                	mov    (%eax),%cl
8100448f:	84 c9                	test   %cl,%cl
81004491:	74 7b                	je     8100450e <L14>
81004493:	38 d9                	cmp    %bl,%cl
81004495:	74 7d                	je     81004514 <L19>
81004497:	47                   	inc    %edi
81004498:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100449e:	74 22                	je     810044c2 <L5>
810044a0:	89 f8                	mov    %edi,%eax
810044a2:	8a 08                	mov    (%eax),%cl
810044a4:	84 c9                	test   %cl,%cl
810044a6:	74 66                	je     8100450e <L14>
810044a8:	38 d9                	cmp    %bl,%cl
810044aa:	74 68                	je     81004514 <L19>
810044ac:	47                   	inc    %edi
810044ad:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044b3:	74 0d                	je     810044c2 <L5>
810044b5:	89 f8                	mov    %edi,%eax
810044b7:	8a 08                	mov    (%eax),%cl
810044b9:	84 c9                	test   %cl,%cl
810044bb:	74 51                	je     8100450e <L14>
810044bd:	38 d9                	cmp    %bl,%cl
810044bf:	74 53                	je     81004514 <L19>
810044c1:	47                   	inc    %edi

810044c2 <L5>:
810044c2:	89 d9                	mov    %ebx,%ecx
810044c4:	c1 e3 08             	shl    $0x8,%ebx
810044c7:	83 ef 04             	sub    $0x4,%edi
810044ca:	09 cb                	or     %ecx,%ebx
810044cc:	89 da                	mov    %ebx,%edx
810044ce:	c1 e3 10             	shl    $0x10,%ebx
810044d1:	09 d3                	or     %edx,%ebx

810044d3 <L10>:
810044d3:	83 c7 04             	add    $0x4,%edi
810044d6:	8b 0f                	mov    (%edi),%ecx
810044d8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810044de:	89 c8                	mov    %ecx,%eax
810044e0:	f7 d0                	not    %eax
810044e2:	21 c2                	and    %eax,%edx
810044e4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810044ea:	75 14                	jne    81004500 <L9>
810044ec:	31 d9                	xor    %ebx,%ecx
810044ee:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810044f4:	f7 d1                	not    %ecx
810044f6:	21 ca                	and    %ecx,%edx
810044f8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810044fe:	74 d3                	je     810044d3 <L10>

81004500 <L9>:
81004500:	8d 47 ff             	lea    -0x1(%edi),%eax

81004503 <L15>:
81004503:	40                   	inc    %eax
81004504:	8a 10                	mov    (%eax),%dl
81004506:	84 d2                	test   %dl,%dl
81004508:	74 04                	je     8100450e <L14>
8100450a:	38 da                	cmp    %bl,%dl
8100450c:	75 f5                	jne    81004503 <L15>

8100450e <L14>:
8100450e:	38 18                	cmp    %bl,(%eax)
81004510:	74 02                	je     81004514 <L19>
81004512:	31 c0                	xor    %eax,%eax

81004514 <L19>:
81004514:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004517:	5b                   	pop    %ebx
81004518:	5f                   	pop    %edi
81004519:	c9                   	leave  
8100451a:	c3                   	ret    

8100451b <L25>:
8100451b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004521:	74 2b                	je     8100454e <L26>
81004523:	89 f8                	mov    %edi,%eax
81004525:	8a 08                	mov    (%eax),%cl
81004527:	84 c9                	test   %cl,%cl
81004529:	74 e9                	je     81004514 <L19>
8100452b:	47                   	inc    %edi
8100452c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004532:	74 1a                	je     8100454e <L26>
81004534:	89 f8                	mov    %edi,%eax
81004536:	8a 08                	mov    (%eax),%cl
81004538:	84 c9                	test   %cl,%cl
8100453a:	74 d8                	je     81004514 <L19>
8100453c:	47                   	inc    %edi
8100453d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004543:	74 09                	je     8100454e <L26>
81004545:	89 f8                	mov    %edi,%eax
81004547:	8a 08                	mov    (%eax),%cl
81004549:	84 c9                	test   %cl,%cl
8100454b:	74 c7                	je     81004514 <L19>
8100454d:	47                   	inc    %edi

8100454e <L26>:
8100454e:	83 ef 04             	sub    $0x4,%edi

81004551 <L27>:
81004551:	83 c7 04             	add    $0x4,%edi
81004554:	8b 0f                	mov    (%edi),%ecx
81004556:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100455c:	89 c8                	mov    %ecx,%eax
8100455e:	f7 d0                	not    %eax
81004560:	21 c2                	and    %eax,%edx
81004562:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81004568:	74 e7                	je     81004551 <L27>
8100456a:	eb 94                	jmp    81004500 <L9>

8100456c <strcmp>:
8100456c:	55                   	push   %ebp
8100456d:	89 e5                	mov    %esp,%ebp
8100456f:	83 ec 10             	sub    $0x10,%esp
81004572:	8b 55 08             	mov    0x8(%ebp),%edx
81004575:	8b 45 0c             	mov    0xc(%ebp),%eax
81004578:	09 d0                	or     %edx,%eax
8100457a:	83 e0 03             	and    $0x3,%eax
8100457d:	85 c0                	test   %eax,%eax
8100457f:	75 5e                	jne    810045df <strcmp+0x73>
81004581:	8b 45 08             	mov    0x8(%ebp),%eax
81004584:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004587:	8b 45 0c             	mov    0xc(%ebp),%eax
8100458a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100458d:	eb 2c                	jmp    810045bb <strcmp+0x4f>
8100458f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004592:	8b 00                	mov    (%eax),%eax
81004594:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100459a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100459d:	8b 00                	mov    (%eax),%eax
8100459f:	f7 d0                	not    %eax
810045a1:	21 d0                	and    %edx,%eax
810045a3:	25 80 80 80 80       	and    $0x80808080,%eax
810045a8:	85 c0                	test   %eax,%eax
810045aa:	74 07                	je     810045b3 <strcmp+0x47>
810045ac:	b8 00 00 00 00       	mov    $0x0,%eax
810045b1:	eb 5c                	jmp    8100460f <strcmp+0xa3>
810045b3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810045b7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810045bb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810045be:	8b 10                	mov    (%eax),%edx
810045c0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810045c3:	8b 00                	mov    (%eax),%eax
810045c5:	39 c2                	cmp    %eax,%edx
810045c7:	74 c6                	je     8100458f <strcmp+0x23>
810045c9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810045cc:	89 45 08             	mov    %eax,0x8(%ebp)
810045cf:	8b 45 f8             	mov    -0x8(%ebp),%eax
810045d2:	89 45 0c             	mov    %eax,0xc(%ebp)
810045d5:	eb 08                	jmp    810045df <strcmp+0x73>
810045d7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810045db:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810045df:	8b 45 08             	mov    0x8(%ebp),%eax
810045e2:	0f b6 00             	movzbl (%eax),%eax
810045e5:	84 c0                	test   %al,%al
810045e7:	74 10                	je     810045f9 <strcmp+0x8d>
810045e9:	8b 45 08             	mov    0x8(%ebp),%eax
810045ec:	0f b6 10             	movzbl (%eax),%edx
810045ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810045f2:	0f b6 00             	movzbl (%eax),%eax
810045f5:	38 c2                	cmp    %al,%dl
810045f7:	74 de                	je     810045d7 <strcmp+0x6b>
810045f9:	8b 45 08             	mov    0x8(%ebp),%eax
810045fc:	0f b6 00             	movzbl (%eax),%eax
810045ff:	0f b6 d0             	movzbl %al,%edx
81004602:	8b 45 0c             	mov    0xc(%ebp),%eax
81004605:	0f b6 00             	movzbl (%eax),%eax
81004608:	0f b6 c8             	movzbl %al,%ecx
8100460b:	89 d0                	mov    %edx,%eax
8100460d:	29 c8                	sub    %ecx,%eax
8100460f:	c9                   	leave  
81004610:	c3                   	ret    
81004611:	66 90                	xchg   %ax,%ax
81004613:	66 90                	xchg   %ax,%ax
81004615:	66 90                	xchg   %ax,%ax
81004617:	66 90                	xchg   %ax,%ax
81004619:	66 90                	xchg   %ax,%ax
8100461b:	66 90                	xchg   %ax,%ax
8100461d:	66 90                	xchg   %ax,%ax
8100461f:	90                   	nop

81004620 <strlen>:
81004620:	55                   	push   %ebp
81004621:	89 e5                	mov    %esp,%ebp
81004623:	57                   	push   %edi
81004624:	8b 55 08             	mov    0x8(%ebp),%edx
81004627:	89 d7                	mov    %edx,%edi
81004629:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100462f:	74 25                	je     81004656 <L5>
81004631:	8a 0f                	mov    (%edi),%cl
81004633:	47                   	inc    %edi
81004634:	84 c9                	test   %cl,%cl
81004636:	74 56                	je     8100468e <L15>
81004638:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100463e:	74 16                	je     81004656 <L5>
81004640:	8a 0f                	mov    (%edi),%cl
81004642:	47                   	inc    %edi
81004643:	84 c9                	test   %cl,%cl
81004645:	74 47                	je     8100468e <L15>
81004647:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100464d:	74 07                	je     81004656 <L5>
8100464f:	8a 0f                	mov    (%edi),%cl
81004651:	47                   	inc    %edi
81004652:	84 c9                	test   %cl,%cl
81004654:	74 38                	je     8100468e <L15>

81004656 <L5>:
81004656:	83 ef 04             	sub    $0x4,%edi
81004659:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004660 <L10>:
81004660:	83 c7 04             	add    $0x4,%edi
81004663:	8b 0f                	mov    (%edi),%ecx
81004665:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100466b:	f7 d1                	not    %ecx
8100466d:	21 c8                	and    %ecx,%eax
8100466f:	a9 80 80 80 80       	test   $0x80808080,%eax
81004674:	74 ea                	je     81004660 <L10>
81004676:	f7 d1                	not    %ecx
81004678:	47                   	inc    %edi
81004679:	84 c9                	test   %cl,%cl
8100467b:	74 11                	je     8100468e <L15>
8100467d:	47                   	inc    %edi
8100467e:	c1 e9 08             	shr    $0x8,%ecx
81004681:	84 c9                	test   %cl,%cl
81004683:	74 09                	je     8100468e <L15>
81004685:	47                   	inc    %edi
81004686:	c1 e9 08             	shr    $0x8,%ecx
81004689:	84 c9                	test   %cl,%cl
8100468b:	74 01                	je     8100468e <L15>
8100468d:	47                   	inc    %edi

8100468e <L15>:
8100468e:	29 d7                	sub    %edx,%edi
81004690:	8d 47 ff             	lea    -0x1(%edi),%eax
81004693:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004696:	5f                   	pop    %edi
81004697:	c9                   	leave  
81004698:	c3                   	ret    

81004699 <strtok>:
81004699:	55                   	push   %ebp
8100469a:	89 e5                	mov    %esp,%ebp
8100469c:	83 ec 18             	sub    $0x18,%esp
8100469f:	8b 55 08             	mov    0x8(%ebp),%edx
810046a2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810046a5:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810046aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046b0:	83 c0 5c             	add    $0x5c,%eax
810046b3:	6a 01                	push   $0x1
810046b5:	50                   	push   %eax
810046b6:	51                   	push   %ecx
810046b7:	52                   	push   %edx
810046b8:	e8 05 00 00 00       	call   810046c2 <__strtok_r>
810046bd:	83 c4 10             	add    $0x10,%esp
810046c0:	c9                   	leave  
810046c1:	c3                   	ret    

810046c2 <__strtok_r>:
810046c2:	55                   	push   %ebp
810046c3:	89 e5                	mov    %esp,%ebp
810046c5:	57                   	push   %edi
810046c6:	56                   	push   %esi
810046c7:	53                   	push   %ebx
810046c8:	83 ec 10             	sub    $0x10,%esp
810046cb:	8b 45 08             	mov    0x8(%ebp),%eax
810046ce:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810046d1:	85 c0                	test   %eax,%eax
810046d3:	75 13                	jne    810046e8 <__strtok_r+0x26>
810046d5:	8b 45 10             	mov    0x10(%ebp),%eax
810046d8:	8b 00                	mov    (%eax),%eax
810046da:	85 c0                	test   %eax,%eax
810046dc:	75 0a                	jne    810046e8 <__strtok_r+0x26>
810046de:	b8 00 00 00 00       	mov    $0x0,%eax
810046e3:	e9 92 00 00 00       	jmp    8100477a <__strtok_r+0xb8>
810046e8:	90                   	nop
810046e9:	89 c2                	mov    %eax,%edx
810046eb:	8d 42 01             	lea    0x1(%edx),%eax
810046ee:	0f b6 12             	movzbl (%edx),%edx
810046f1:	0f be f2             	movsbl %dl,%esi
810046f4:	89 cf                	mov    %ecx,%edi
810046f6:	eb 1c                	jmp    81004714 <__strtok_r+0x52>
810046f8:	39 de                	cmp    %ebx,%esi
810046fa:	75 18                	jne    81004714 <__strtok_r+0x52>
810046fc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004700:	74 02                	je     81004704 <__strtok_r+0x42>
81004702:	eb e5                	jmp    810046e9 <__strtok_r+0x27>
81004704:	8b 55 10             	mov    0x10(%ebp),%edx
81004707:	89 02                	mov    %eax,(%edx)
81004709:	8d 50 ff             	lea    -0x1(%eax),%edx
8100470c:	c6 02 00             	movb   $0x0,(%edx)
8100470f:	83 e8 01             	sub    $0x1,%eax
81004712:	eb 66                	jmp    8100477a <__strtok_r+0xb8>
81004714:	89 fa                	mov    %edi,%edx
81004716:	8d 7a 01             	lea    0x1(%edx),%edi
81004719:	0f b6 12             	movzbl (%edx),%edx
8100471c:	0f be da             	movsbl %dl,%ebx
8100471f:	85 db                	test   %ebx,%ebx
81004721:	75 d5                	jne    810046f8 <__strtok_r+0x36>
81004723:	85 f6                	test   %esi,%esi
81004725:	75 10                	jne    81004737 <__strtok_r+0x75>
81004727:	8b 45 10             	mov    0x10(%ebp),%eax
8100472a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004730:	b8 00 00 00 00       	mov    $0x0,%eax
81004735:	eb 43                	jmp    8100477a <__strtok_r+0xb8>
81004737:	8d 50 ff             	lea    -0x1(%eax),%edx
8100473a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100473d:	89 c2                	mov    %eax,%edx
8100473f:	8d 42 01             	lea    0x1(%edx),%eax
81004742:	0f b6 12             	movzbl (%edx),%edx
81004745:	0f be f2             	movsbl %dl,%esi
81004748:	89 cf                	mov    %ecx,%edi
8100474a:	89 fa                	mov    %edi,%edx
8100474c:	8d 7a 01             	lea    0x1(%edx),%edi
8100474f:	0f b6 12             	movzbl (%edx),%edx
81004752:	0f be da             	movsbl %dl,%ebx
81004755:	39 f3                	cmp    %esi,%ebx
81004757:	75 1b                	jne    81004774 <__strtok_r+0xb2>
81004759:	85 f6                	test   %esi,%esi
8100475b:	75 07                	jne    81004764 <__strtok_r+0xa2>
8100475d:	b8 00 00 00 00       	mov    $0x0,%eax
81004762:	eb 06                	jmp    8100476a <__strtok_r+0xa8>
81004764:	8d 50 ff             	lea    -0x1(%eax),%edx
81004767:	c6 02 00             	movb   $0x0,(%edx)
8100476a:	8b 55 10             	mov    0x10(%ebp),%edx
8100476d:	89 02                	mov    %eax,(%edx)
8100476f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004772:	eb 06                	jmp    8100477a <__strtok_r+0xb8>
81004774:	85 db                	test   %ebx,%ebx
81004776:	75 d2                	jne    8100474a <__strtok_r+0x88>
81004778:	eb c3                	jmp    8100473d <__strtok_r+0x7b>
8100477a:	83 c4 10             	add    $0x10,%esp
8100477d:	5b                   	pop    %ebx
8100477e:	5e                   	pop    %esi
8100477f:	5f                   	pop    %edi
81004780:	5d                   	pop    %ebp
81004781:	c3                   	ret    

81004782 <strtok_r>:
81004782:	55                   	push   %ebp
81004783:	89 e5                	mov    %esp,%ebp
81004785:	8b 45 08             	mov    0x8(%ebp),%eax
81004788:	8b 55 0c             	mov    0xc(%ebp),%edx
8100478b:	6a 01                	push   $0x1
8100478d:	ff 75 10             	pushl  0x10(%ebp)
81004790:	52                   	push   %edx
81004791:	50                   	push   %eax
81004792:	e8 2b ff ff ff       	call   810046c2 <__strtok_r>
81004797:	83 c4 10             	add    $0x10,%esp
8100479a:	c9                   	leave  
8100479b:	c3                   	ret    

8100479c <__locale_ctype_ptr_l>:
8100479c:	55                   	push   %ebp
8100479d:	89 e5                	mov    %esp,%ebp
8100479f:	b8 40 76 00 81       	mov    $0x81007640,%eax
810047a4:	5d                   	pop    %ebp
810047a5:	c3                   	ret    

810047a6 <__get_global_locale>:
810047a6:	55                   	push   %ebp
810047a7:	89 e5                	mov    %esp,%ebp
810047a9:	b8 e0 7f 00 81       	mov    $0x81007fe0,%eax
810047ae:	5d                   	pop    %ebp
810047af:	c3                   	ret    

810047b0 <__get_current_locale>:
810047b0:	55                   	push   %ebp
810047b1:	89 e5                	mov    %esp,%ebp
810047b3:	e8 ee ff ff ff       	call   810047a6 <__get_global_locale>
810047b8:	5d                   	pop    %ebp
810047b9:	c3                   	ret    

810047ba <_strtol_l>:
810047ba:	55                   	push   %ebp
810047bb:	89 e5                	mov    %esp,%ebp
810047bd:	57                   	push   %edi
810047be:	56                   	push   %esi
810047bf:	53                   	push   %ebx
810047c0:	83 ec 1c             	sub    $0x1c,%esp
810047c3:	8b 75 0c             	mov    0xc(%ebp),%esi
810047c6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810047cd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810047d1:	78 0c                	js     810047df <_strtol_l+0x25>
810047d3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810047d7:	74 06                	je     810047df <_strtol_l+0x25>
810047d9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
810047dd:	7e 15                	jle    810047f4 <_strtol_l+0x3a>
810047df:	e8 44 06 00 00       	call   81004e28 <__errno>
810047e4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810047ea:	b8 00 00 00 00       	mov    $0x0,%eax
810047ef:	e9 90 01 00 00       	jmp    81004984 <_strtol_l+0x1ca>
810047f4:	89 f0                	mov    %esi,%eax
810047f6:	8d 70 01             	lea    0x1(%eax),%esi
810047f9:	0f b6 00             	movzbl (%eax),%eax
810047fc:	0f b6 d8             	movzbl %al,%ebx
810047ff:	83 ec 0c             	sub    $0xc,%esp
81004802:	ff 75 18             	pushl  0x18(%ebp)
81004805:	e8 92 ff ff ff       	call   8100479c <__locale_ctype_ptr_l>
8100480a:	83 c4 10             	add    $0x10,%esp
8100480d:	89 da                	mov    %ebx,%edx
8100480f:	83 c2 01             	add    $0x1,%edx
81004812:	01 d0                	add    %edx,%eax
81004814:	0f b6 00             	movzbl (%eax),%eax
81004817:	0f be c0             	movsbl %al,%eax
8100481a:	83 e0 08             	and    $0x8,%eax
8100481d:	85 c0                	test   %eax,%eax
8100481f:	75 d3                	jne    810047f4 <_strtol_l+0x3a>
81004821:	83 fb 2d             	cmp    $0x2d,%ebx
81004824:	75 14                	jne    8100483a <_strtol_l+0x80>
81004826:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100482d:	89 f0                	mov    %esi,%eax
8100482f:	8d 70 01             	lea    0x1(%eax),%esi
81004832:	0f b6 00             	movzbl (%eax),%eax
81004835:	0f b6 d8             	movzbl %al,%ebx
81004838:	eb 10                	jmp    8100484a <_strtol_l+0x90>
8100483a:	83 fb 2b             	cmp    $0x2b,%ebx
8100483d:	75 0b                	jne    8100484a <_strtol_l+0x90>
8100483f:	89 f0                	mov    %esi,%eax
81004841:	8d 70 01             	lea    0x1(%eax),%esi
81004844:	0f b6 00             	movzbl (%eax),%eax
81004847:	0f b6 d8             	movzbl %al,%ebx
8100484a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100484e:	74 06                	je     81004856 <_strtol_l+0x9c>
81004850:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81004854:	75 26                	jne    8100487c <_strtol_l+0xc2>
81004856:	83 fb 30             	cmp    $0x30,%ebx
81004859:	75 21                	jne    8100487c <_strtol_l+0xc2>
8100485b:	0f b6 06             	movzbl (%esi),%eax
8100485e:	3c 78                	cmp    $0x78,%al
81004860:	74 07                	je     81004869 <_strtol_l+0xaf>
81004862:	0f b6 06             	movzbl (%esi),%eax
81004865:	3c 58                	cmp    $0x58,%al
81004867:	75 13                	jne    8100487c <_strtol_l+0xc2>
81004869:	8d 46 01             	lea    0x1(%esi),%eax
8100486c:	0f b6 00             	movzbl (%eax),%eax
8100486f:	0f b6 d8             	movzbl %al,%ebx
81004872:	83 c6 02             	add    $0x2,%esi
81004875:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100487c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004880:	75 14                	jne    81004896 <_strtol_l+0xdc>
81004882:	83 fb 30             	cmp    $0x30,%ebx
81004885:	75 07                	jne    8100488e <_strtol_l+0xd4>
81004887:	b8 08 00 00 00       	mov    $0x8,%eax
8100488c:	eb 05                	jmp    81004893 <_strtol_l+0xd9>
8100488e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004893:	89 45 14             	mov    %eax,0x14(%ebp)
81004896:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100489a:	74 07                	je     810048a3 <_strtol_l+0xe9>
8100489c:	b8 00 00 00 80       	mov    $0x80000000,%eax
810048a1:	eb 05                	jmp    810048a8 <_strtol_l+0xee>
810048a3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810048a8:	89 c7                	mov    %eax,%edi
810048aa:	8b 4d 14             	mov    0x14(%ebp),%ecx
810048ad:	89 f8                	mov    %edi,%eax
810048af:	ba 00 00 00 00       	mov    $0x0,%edx
810048b4:	f7 f1                	div    %ecx
810048b6:	89 d0                	mov    %edx,%eax
810048b8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810048bb:	8b 4d 14             	mov    0x14(%ebp),%ecx
810048be:	89 f8                	mov    %edi,%eax
810048c0:	ba 00 00 00 00       	mov    $0x0,%edx
810048c5:	f7 f1                	div    %ecx
810048c7:	89 c2                	mov    %eax,%edx
810048c9:	bf 00 00 00 00       	mov    $0x0,%edi
810048ce:	b9 00 00 00 00       	mov    $0x0,%ecx
810048d3:	83 fb 2f             	cmp    $0x2f,%ebx
810048d6:	7e 0a                	jle    810048e2 <_strtol_l+0x128>
810048d8:	83 fb 39             	cmp    $0x39,%ebx
810048db:	7f 05                	jg     810048e2 <_strtol_l+0x128>
810048dd:	83 eb 30             	sub    $0x30,%ebx
810048e0:	eb 1c                	jmp    810048fe <_strtol_l+0x144>
810048e2:	83 fb 40             	cmp    $0x40,%ebx
810048e5:	7e 0a                	jle    810048f1 <_strtol_l+0x137>
810048e7:	83 fb 5a             	cmp    $0x5a,%ebx
810048ea:	7f 05                	jg     810048f1 <_strtol_l+0x137>
810048ec:	83 eb 37             	sub    $0x37,%ebx
810048ef:	eb 0d                	jmp    810048fe <_strtol_l+0x144>
810048f1:	83 fb 60             	cmp    $0x60,%ebx
810048f4:	7e 46                	jle    8100493c <_strtol_l+0x182>
810048f6:	83 fb 7a             	cmp    $0x7a,%ebx
810048f9:	7f 41                	jg     8100493c <_strtol_l+0x182>
810048fb:	83 eb 57             	sub    $0x57,%ebx
810048fe:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81004901:	7d 38                	jge    8100493b <_strtol_l+0x181>
81004903:	89 c8                	mov    %ecx,%eax
81004905:	85 c0                	test   %eax,%eax
81004907:	78 0f                	js     81004918 <_strtol_l+0x15e>
81004909:	89 d0                	mov    %edx,%eax
8100490b:	39 c7                	cmp    %eax,%edi
8100490d:	77 09                	ja     81004918 <_strtol_l+0x15e>
8100490f:	39 c7                	cmp    %eax,%edi
81004911:	75 0c                	jne    8100491f <_strtol_l+0x165>
81004913:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81004916:	7e 07                	jle    8100491f <_strtol_l+0x165>
81004918:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100491d:	eb 0f                	jmp    8100492e <_strtol_l+0x174>
8100491f:	b9 01 00 00 00       	mov    $0x1,%ecx
81004924:	8b 45 14             	mov    0x14(%ebp),%eax
81004927:	0f af f8             	imul   %eax,%edi
8100492a:	89 d8                	mov    %ebx,%eax
8100492c:	01 c7                	add    %eax,%edi
8100492e:	89 f0                	mov    %esi,%eax
81004930:	8d 70 01             	lea    0x1(%eax),%esi
81004933:	0f b6 00             	movzbl (%eax),%eax
81004936:	0f b6 d8             	movzbl %al,%ebx
81004939:	eb 98                	jmp    810048d3 <_strtol_l+0x119>
8100493b:	90                   	nop
8100493c:	89 c8                	mov    %ecx,%eax
8100493e:	85 c0                	test   %eax,%eax
81004940:	79 1f                	jns    81004961 <_strtol_l+0x1a7>
81004942:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004946:	74 07                	je     8100494f <_strtol_l+0x195>
81004948:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100494d:	eb 05                	jmp    81004954 <_strtol_l+0x19a>
8100494f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004954:	89 c7                	mov    %eax,%edi
81004956:	8b 45 08             	mov    0x8(%ebp),%eax
81004959:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100495f:	eb 08                	jmp    81004969 <_strtol_l+0x1af>
81004961:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004965:	74 02                	je     81004969 <_strtol_l+0x1af>
81004967:	f7 df                	neg    %edi
81004969:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100496d:	74 13                	je     81004982 <_strtol_l+0x1c8>
8100496f:	89 c8                	mov    %ecx,%eax
81004971:	85 c0                	test   %eax,%eax
81004973:	74 05                	je     8100497a <_strtol_l+0x1c0>
81004975:	8d 46 ff             	lea    -0x1(%esi),%eax
81004978:	eb 03                	jmp    8100497d <_strtol_l+0x1c3>
8100497a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100497d:	8b 55 10             	mov    0x10(%ebp),%edx
81004980:	89 02                	mov    %eax,(%edx)
81004982:	89 f8                	mov    %edi,%eax
81004984:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004987:	5b                   	pop    %ebx
81004988:	5e                   	pop    %esi
81004989:	5f                   	pop    %edi
8100498a:	5d                   	pop    %ebp
8100498b:	c3                   	ret    

8100498c <_strtol_r>:
8100498c:	55                   	push   %ebp
8100498d:	89 e5                	mov    %esp,%ebp
8100498f:	83 ec 08             	sub    $0x8,%esp
81004992:	e8 19 fe ff ff       	call   810047b0 <__get_current_locale>
81004997:	83 ec 0c             	sub    $0xc,%esp
8100499a:	50                   	push   %eax
8100499b:	ff 75 14             	pushl  0x14(%ebp)
8100499e:	ff 75 10             	pushl  0x10(%ebp)
810049a1:	ff 75 0c             	pushl  0xc(%ebp)
810049a4:	ff 75 08             	pushl  0x8(%ebp)
810049a7:	e8 0e fe ff ff       	call   810047ba <_strtol_l>
810049ac:	83 c4 20             	add    $0x20,%esp
810049af:	c9                   	leave  
810049b0:	c3                   	ret    

810049b1 <strtol_l>:
810049b1:	55                   	push   %ebp
810049b2:	89 e5                	mov    %esp,%ebp
810049b4:	83 ec 08             	sub    $0x8,%esp
810049b7:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810049bc:	83 ec 0c             	sub    $0xc,%esp
810049bf:	ff 75 14             	pushl  0x14(%ebp)
810049c2:	ff 75 10             	pushl  0x10(%ebp)
810049c5:	ff 75 0c             	pushl  0xc(%ebp)
810049c8:	ff 75 08             	pushl  0x8(%ebp)
810049cb:	50                   	push   %eax
810049cc:	e8 e9 fd ff ff       	call   810047ba <_strtol_l>
810049d1:	83 c4 20             	add    $0x20,%esp
810049d4:	c9                   	leave  
810049d5:	c3                   	ret    

810049d6 <strtol>:
810049d6:	55                   	push   %ebp
810049d7:	89 e5                	mov    %esp,%ebp
810049d9:	83 ec 08             	sub    $0x8,%esp
810049dc:	e8 cf fd ff ff       	call   810047b0 <__get_current_locale>
810049e1:	8b 15 a4 7b 00 81    	mov    0x81007ba4,%edx
810049e7:	83 ec 0c             	sub    $0xc,%esp
810049ea:	50                   	push   %eax
810049eb:	ff 75 10             	pushl  0x10(%ebp)
810049ee:	ff 75 0c             	pushl  0xc(%ebp)
810049f1:	ff 75 08             	pushl  0x8(%ebp)
810049f4:	52                   	push   %edx
810049f5:	e8 c0 fd ff ff       	call   810047ba <_strtol_l>
810049fa:	83 c4 20             	add    $0x20,%esp
810049fd:	c9                   	leave  
810049fe:	c3                   	ret    

810049ff <__swbuf_r>:
810049ff:	55                   	push   %ebp
81004a00:	89 e5                	mov    %esp,%ebp
81004a02:	57                   	push   %edi
81004a03:	56                   	push   %esi
81004a04:	53                   	push   %ebx
81004a05:	83 ec 1c             	sub    $0x1c,%esp
81004a08:	8b 7d 0c             	mov    0xc(%ebp),%edi
81004a0b:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004a0e:	8b 45 08             	mov    0x8(%ebp),%eax
81004a11:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004a14:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004a18:	74 18                	je     81004a32 <__swbuf_r+0x33>
81004a1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004a1d:	8b 40 38             	mov    0x38(%eax),%eax
81004a20:	85 c0                	test   %eax,%eax
81004a22:	75 0e                	jne    81004a32 <__swbuf_r+0x33>
81004a24:	83 ec 0c             	sub    $0xc,%esp
81004a27:	ff 75 e4             	pushl  -0x1c(%ebp)
81004a2a:	e8 a1 c6 ff ff       	call   810010d0 <__sinit>
81004a2f:	83 c4 10             	add    $0x10,%esp
81004a32:	8b 43 18             	mov    0x18(%ebx),%eax
81004a35:	89 43 08             	mov    %eax,0x8(%ebx)
81004a38:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a3c:	98                   	cwtl   
81004a3d:	83 e0 08             	and    $0x8,%eax
81004a40:	85 c0                	test   %eax,%eax
81004a42:	74 07                	je     81004a4b <__swbuf_r+0x4c>
81004a44:	8b 43 10             	mov    0x10(%ebx),%eax
81004a47:	85 c0                	test   %eax,%eax
81004a49:	75 1d                	jne    81004a68 <__swbuf_r+0x69>
81004a4b:	83 ec 08             	sub    $0x8,%esp
81004a4e:	53                   	push   %ebx
81004a4f:	ff 75 08             	pushl  0x8(%ebp)
81004a52:	e8 21 01 00 00       	call   81004b78 <__swsetup_r>
81004a57:	83 c4 10             	add    $0x10,%esp
81004a5a:	85 c0                	test   %eax,%eax
81004a5c:	74 0a                	je     81004a68 <__swbuf_r+0x69>
81004a5e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a63:	e9 a1 00 00 00       	jmp    81004b09 <__swbuf_r+0x10a>
81004a68:	89 f8                	mov    %edi,%eax
81004a6a:	0f b6 f8             	movzbl %al,%edi
81004a6d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a71:	98                   	cwtl   
81004a72:	25 00 20 00 00       	and    $0x2000,%eax
81004a77:	85 c0                	test   %eax,%eax
81004a79:	75 14                	jne    81004a8f <__swbuf_r+0x90>
81004a7b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a7f:	80 cc 20             	or     $0x20,%ah
81004a82:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a86:	8b 43 64             	mov    0x64(%ebx),%eax
81004a89:	80 e4 df             	and    $0xdf,%ah
81004a8c:	89 43 64             	mov    %eax,0x64(%ebx)
81004a8f:	8b 03                	mov    (%ebx),%eax
81004a91:	8b 53 10             	mov    0x10(%ebx),%edx
81004a94:	29 d0                	sub    %edx,%eax
81004a96:	89 c6                	mov    %eax,%esi
81004a98:	8b 43 14             	mov    0x14(%ebx),%eax
81004a9b:	39 c6                	cmp    %eax,%esi
81004a9d:	7c 1f                	jl     81004abe <__swbuf_r+0xbf>
81004a9f:	83 ec 08             	sub    $0x8,%esp
81004aa2:	53                   	push   %ebx
81004aa3:	ff 75 08             	pushl  0x8(%ebp)
81004aa6:	e8 22 c1 ff ff       	call   81000bcd <_fflush_r>
81004aab:	83 c4 10             	add    $0x10,%esp
81004aae:	85 c0                	test   %eax,%eax
81004ab0:	74 07                	je     81004ab9 <__swbuf_r+0xba>
81004ab2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ab7:	eb 50                	jmp    81004b09 <__swbuf_r+0x10a>
81004ab9:	be 00 00 00 00       	mov    $0x0,%esi
81004abe:	8b 43 08             	mov    0x8(%ebx),%eax
81004ac1:	83 e8 01             	sub    $0x1,%eax
81004ac4:	89 43 08             	mov    %eax,0x8(%ebx)
81004ac7:	8b 03                	mov    (%ebx),%eax
81004ac9:	8d 50 01             	lea    0x1(%eax),%edx
81004acc:	89 13                	mov    %edx,(%ebx)
81004ace:	89 fa                	mov    %edi,%edx
81004ad0:	88 10                	mov    %dl,(%eax)
81004ad2:	83 c6 01             	add    $0x1,%esi
81004ad5:	8b 43 14             	mov    0x14(%ebx),%eax
81004ad8:	39 c6                	cmp    %eax,%esi
81004ada:	74 11                	je     81004aed <__swbuf_r+0xee>
81004adc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ae0:	98                   	cwtl   
81004ae1:	83 e0 01             	and    $0x1,%eax
81004ae4:	85 c0                	test   %eax,%eax
81004ae6:	74 1f                	je     81004b07 <__swbuf_r+0x108>
81004ae8:	83 ff 0a             	cmp    $0xa,%edi
81004aeb:	75 1a                	jne    81004b07 <__swbuf_r+0x108>
81004aed:	83 ec 08             	sub    $0x8,%esp
81004af0:	53                   	push   %ebx
81004af1:	ff 75 08             	pushl  0x8(%ebp)
81004af4:	e8 d4 c0 ff ff       	call   81000bcd <_fflush_r>
81004af9:	83 c4 10             	add    $0x10,%esp
81004afc:	85 c0                	test   %eax,%eax
81004afe:	74 07                	je     81004b07 <__swbuf_r+0x108>
81004b00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b05:	eb 02                	jmp    81004b09 <__swbuf_r+0x10a>
81004b07:	89 f8                	mov    %edi,%eax
81004b09:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b0c:	5b                   	pop    %ebx
81004b0d:	5e                   	pop    %esi
81004b0e:	5f                   	pop    %edi
81004b0f:	5d                   	pop    %ebp
81004b10:	c3                   	ret    

81004b11 <__swbuf>:
81004b11:	55                   	push   %ebp
81004b12:	89 e5                	mov    %esp,%ebp
81004b14:	83 ec 08             	sub    $0x8,%esp
81004b17:	8b 55 08             	mov    0x8(%ebp),%edx
81004b1a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004b1d:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004b22:	83 ec 04             	sub    $0x4,%esp
81004b25:	51                   	push   %ecx
81004b26:	52                   	push   %edx
81004b27:	50                   	push   %eax
81004b28:	e8 d2 fe ff ff       	call   810049ff <__swbuf_r>
81004b2d:	83 c4 10             	add    $0x10,%esp
81004b30:	c9                   	leave  
81004b31:	c3                   	ret    

81004b32 <_write_r>:
81004b32:	55                   	push   %ebp
81004b33:	89 e5                	mov    %esp,%ebp
81004b35:	83 ec 18             	sub    $0x18,%esp
81004b38:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
81004b3f:	00 00 00 
81004b42:	83 ec 04             	sub    $0x4,%esp
81004b45:	ff 75 14             	pushl  0x14(%ebp)
81004b48:	ff 75 10             	pushl  0x10(%ebp)
81004b4b:	ff 75 0c             	pushl  0xc(%ebp)
81004b4e:	e8 95 bc ff ff       	call   810007e8 <write>
81004b53:	83 c4 10             	add    $0x10,%esp
81004b56:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b59:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004b5d:	75 14                	jne    81004b73 <_write_r+0x41>
81004b5f:	a1 f4 86 00 81       	mov    0x810086f4,%eax
81004b64:	85 c0                	test   %eax,%eax
81004b66:	74 0b                	je     81004b73 <_write_r+0x41>
81004b68:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
81004b6e:	8b 45 08             	mov    0x8(%ebp),%eax
81004b71:	89 10                	mov    %edx,(%eax)
81004b73:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b76:	c9                   	leave  
81004b77:	c3                   	ret    

81004b78 <__swsetup_r>:
81004b78:	55                   	push   %ebp
81004b79:	89 e5                	mov    %esp,%ebp
81004b7b:	53                   	push   %ebx
81004b7c:	83 ec 14             	sub    $0x14,%esp
81004b7f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004b82:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004b87:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b8a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004b8e:	74 18                	je     81004ba8 <__swsetup_r+0x30>
81004b90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b93:	8b 40 38             	mov    0x38(%eax),%eax
81004b96:	85 c0                	test   %eax,%eax
81004b98:	75 0e                	jne    81004ba8 <__swsetup_r+0x30>
81004b9a:	83 ec 0c             	sub    $0xc,%esp
81004b9d:	ff 75 f4             	pushl  -0xc(%ebp)
81004ba0:	e8 2b c5 ff ff       	call   810010d0 <__sinit>
81004ba5:	83 c4 10             	add    $0x10,%esp
81004ba8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004bac:	98                   	cwtl   
81004bad:	83 e0 08             	and    $0x8,%eax
81004bb0:	85 c0                	test   %eax,%eax
81004bb2:	0f 85 82 00 00 00    	jne    81004c3a <__swsetup_r+0xc2>
81004bb8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004bbc:	98                   	cwtl   
81004bbd:	83 e0 10             	and    $0x10,%eax
81004bc0:	85 c0                	test   %eax,%eax
81004bc2:	75 1e                	jne    81004be2 <__swsetup_r+0x6a>
81004bc4:	8b 45 08             	mov    0x8(%ebp),%eax
81004bc7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004bcd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004bd1:	83 c8 40             	or     $0x40,%eax
81004bd4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004bd8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004bdd:	e9 ec 00 00 00       	jmp    81004cce <__swsetup_r+0x156>
81004be2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004be6:	98                   	cwtl   
81004be7:	83 e0 04             	and    $0x4,%eax
81004bea:	85 c0                	test   %eax,%eax
81004bec:	74 41                	je     81004c2f <__swsetup_r+0xb7>
81004bee:	8b 43 30             	mov    0x30(%ebx),%eax
81004bf1:	85 c0                	test   %eax,%eax
81004bf3:	74 23                	je     81004c18 <__swsetup_r+0xa0>
81004bf5:	8b 53 30             	mov    0x30(%ebx),%edx
81004bf8:	8d 43 40             	lea    0x40(%ebx),%eax
81004bfb:	39 c2                	cmp    %eax,%edx
81004bfd:	74 12                	je     81004c11 <__swsetup_r+0x99>
81004bff:	8b 43 30             	mov    0x30(%ebx),%eax
81004c02:	83 ec 08             	sub    $0x8,%esp
81004c05:	50                   	push   %eax
81004c06:	ff 75 08             	pushl  0x8(%ebp)
81004c09:	e8 24 c6 ff ff       	call   81001232 <_free_r>
81004c0e:	83 c4 10             	add    $0x10,%esp
81004c11:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004c18:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c1c:	83 e0 db             	and    $0xffffffdb,%eax
81004c1f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c23:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c2a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c2d:	89 03                	mov    %eax,(%ebx)
81004c2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c33:	83 c8 08             	or     $0x8,%eax
81004c36:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c3a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c3d:	85 c0                	test   %eax,%eax
81004c3f:	75 2b                	jne    81004c6c <__swsetup_r+0xf4>
81004c41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c45:	98                   	cwtl   
81004c46:	25 00 02 00 00       	and    $0x200,%eax
81004c4b:	85 c0                	test   %eax,%eax
81004c4d:	74 0e                	je     81004c5d <__swsetup_r+0xe5>
81004c4f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c53:	98                   	cwtl   
81004c54:	25 80 00 00 00       	and    $0x80,%eax
81004c59:	85 c0                	test   %eax,%eax
81004c5b:	74 0f                	je     81004c6c <__swsetup_r+0xf4>
81004c5d:	83 ec 08             	sub    $0x8,%esp
81004c60:	53                   	push   %ebx
81004c61:	ff 75 08             	pushl  0x8(%ebp)
81004c64:	e8 cf 0c 00 00       	call   81005938 <__smakebuf_r>
81004c69:	83 c4 10             	add    $0x10,%esp
81004c6c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c70:	98                   	cwtl   
81004c71:	83 e0 01             	and    $0x1,%eax
81004c74:	85 c0                	test   %eax,%eax
81004c76:	74 11                	je     81004c89 <__swsetup_r+0x111>
81004c78:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004c7f:	8b 43 14             	mov    0x14(%ebx),%eax
81004c82:	f7 d8                	neg    %eax
81004c84:	89 43 18             	mov    %eax,0x18(%ebx)
81004c87:	eb 19                	jmp    81004ca2 <__swsetup_r+0x12a>
81004c89:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c8d:	98                   	cwtl   
81004c8e:	83 e0 02             	and    $0x2,%eax
81004c91:	85 c0                	test   %eax,%eax
81004c93:	75 05                	jne    81004c9a <__swsetup_r+0x122>
81004c95:	8b 43 14             	mov    0x14(%ebx),%eax
81004c98:	eb 05                	jmp    81004c9f <__swsetup_r+0x127>
81004c9a:	b8 00 00 00 00       	mov    $0x0,%eax
81004c9f:	89 43 08             	mov    %eax,0x8(%ebx)
81004ca2:	8b 43 10             	mov    0x10(%ebx),%eax
81004ca5:	85 c0                	test   %eax,%eax
81004ca7:	75 20                	jne    81004cc9 <__swsetup_r+0x151>
81004ca9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cad:	98                   	cwtl   
81004cae:	25 80 00 00 00       	and    $0x80,%eax
81004cb3:	85 c0                	test   %eax,%eax
81004cb5:	74 12                	je     81004cc9 <__swsetup_r+0x151>
81004cb7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cbb:	83 c8 40             	or     $0x40,%eax
81004cbe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004cc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004cc7:	eb 05                	jmp    81004cce <__swsetup_r+0x156>
81004cc9:	b8 00 00 00 00       	mov    $0x0,%eax
81004cce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004cd1:	c9                   	leave  
81004cd2:	c3                   	ret    

81004cd3 <__call_exitprocs>:
81004cd3:	55                   	push   %ebp
81004cd4:	89 e5                	mov    %esp,%ebp
81004cd6:	57                   	push   %edi
81004cd7:	56                   	push   %esi
81004cd8:	53                   	push   %ebx
81004cd9:	83 ec 1c             	sub    $0x1c,%esp
81004cdc:	a1 f0 73 00 81       	mov    0x810073f0,%eax
81004ce1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004ce7:	a1 f0 73 00 81       	mov    0x810073f0,%eax
81004cec:	05 48 01 00 00       	add    $0x148,%eax
81004cf1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004cf4:	90                   	nop
81004cf5:	85 db                	test   %ebx,%ebx
81004cf7:	0f 84 e1 00 00 00    	je     81004dde <__call_exitprocs+0x10b>
81004cfd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004d03:	8b 43 04             	mov    0x4(%ebx),%eax
81004d06:	8d 70 ff             	lea    -0x1(%eax),%esi
81004d09:	e9 c6 00 00 00       	jmp    81004dd4 <__call_exitprocs+0x101>
81004d0e:	b8 01 00 00 00       	mov    $0x1,%eax
81004d13:	89 f1                	mov    %esi,%ecx
81004d15:	d3 e0                	shl    %cl,%eax
81004d17:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004d1a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004d1e:	74 17                	je     81004d37 <__call_exitprocs+0x64>
81004d20:	85 ff                	test   %edi,%edi
81004d22:	0f 84 a5 00 00 00    	je     81004dcd <__call_exitprocs+0xfa>
81004d28:	8d 46 20             	lea    0x20(%esi),%eax
81004d2b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004d2e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004d31:	0f 85 96 00 00 00    	jne    81004dcd <__call_exitprocs+0xfa>
81004d37:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004d3b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004d3e:	8b 43 04             	mov    0x4(%ebx),%eax
81004d41:	83 e8 01             	sub    $0x1,%eax
81004d44:	39 c6                	cmp    %eax,%esi
81004d46:	75 0b                	jne    81004d53 <__call_exitprocs+0x80>
81004d48:	8b 43 04             	mov    0x4(%ebx),%eax
81004d4b:	83 e8 01             	sub    $0x1,%eax
81004d4e:	89 43 04             	mov    %eax,0x4(%ebx)
81004d51:	eb 08                	jmp    81004d5b <__call_exitprocs+0x88>
81004d53:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004d5a:	00 
81004d5b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004d5f:	74 6f                	je     81004dd0 <__call_exitprocs+0xfd>
81004d61:	8b 43 04             	mov    0x4(%ebx),%eax
81004d64:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004d67:	85 ff                	test   %edi,%edi
81004d69:	74 0f                	je     81004d7a <__call_exitprocs+0xa7>
81004d6b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004d71:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004d74:	21 d0                	and    %edx,%eax
81004d76:	85 c0                	test   %eax,%eax
81004d78:	75 07                	jne    81004d81 <__call_exitprocs+0xae>
81004d7a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004d7d:	ff d0                	call   *%eax
81004d7f:	eb 32                	jmp    81004db3 <__call_exitprocs+0xe0>
81004d81:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004d87:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004d8a:	21 d0                	and    %edx,%eax
81004d8c:	85 c0                	test   %eax,%eax
81004d8e:	75 14                	jne    81004da4 <__call_exitprocs+0xd1>
81004d90:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004d93:	83 ec 08             	sub    $0x8,%esp
81004d96:	50                   	push   %eax
81004d97:	ff 75 08             	pushl  0x8(%ebp)
81004d9a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004d9d:	ff d0                	call   *%eax
81004d9f:	83 c4 10             	add    $0x10,%esp
81004da2:	eb 0f                	jmp    81004db3 <__call_exitprocs+0xe0>
81004da4:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004da7:	83 ec 0c             	sub    $0xc,%esp
81004daa:	50                   	push   %eax
81004dab:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004dae:	ff d0                	call   *%eax
81004db0:	83 c4 10             	add    $0x10,%esp
81004db3:	8b 43 04             	mov    0x4(%ebx),%eax
81004db6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004db9:	0f 85 1d ff ff ff    	jne    81004cdc <__call_exitprocs+0x9>
81004dbf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004dc2:	8b 00                	mov    (%eax),%eax
81004dc4:	39 c3                	cmp    %eax,%ebx
81004dc6:	74 09                	je     81004dd1 <__call_exitprocs+0xfe>
81004dc8:	e9 0f ff ff ff       	jmp    81004cdc <__call_exitprocs+0x9>
81004dcd:	90                   	nop
81004dce:	eb 01                	jmp    81004dd1 <__call_exitprocs+0xfe>
81004dd0:	90                   	nop
81004dd1:	83 ee 01             	sub    $0x1,%esi
81004dd4:	85 f6                	test   %esi,%esi
81004dd6:	0f 89 32 ff ff ff    	jns    81004d0e <__call_exitprocs+0x3b>
81004ddc:	eb 01                	jmp    81004ddf <__call_exitprocs+0x10c>
81004dde:	90                   	nop
81004ddf:	90                   	nop
81004de0:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004de3:	5b                   	pop    %ebx
81004de4:	5e                   	pop    %esi
81004de5:	5f                   	pop    %edi
81004de6:	5d                   	pop    %ebp
81004de7:	c3                   	ret    

81004de8 <_close_r>:
81004de8:	55                   	push   %ebp
81004de9:	89 e5                	mov    %esp,%ebp
81004deb:	83 ec 18             	sub    $0x18,%esp
81004dee:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
81004df5:	00 00 00 
81004df8:	83 ec 0c             	sub    $0xc,%esp
81004dfb:	ff 75 0c             	pushl  0xc(%ebp)
81004dfe:	e8 12 ba ff ff       	call   81000815 <close>
81004e03:	83 c4 10             	add    $0x10,%esp
81004e06:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e09:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004e0d:	75 14                	jne    81004e23 <_close_r+0x3b>
81004e0f:	a1 f4 86 00 81       	mov    0x810086f4,%eax
81004e14:	85 c0                	test   %eax,%eax
81004e16:	74 0b                	je     81004e23 <_close_r+0x3b>
81004e18:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
81004e1e:	8b 45 08             	mov    0x8(%ebp),%eax
81004e21:	89 10                	mov    %edx,(%eax)
81004e23:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e26:	c9                   	leave  
81004e27:	c3                   	ret    

81004e28 <__errno>:
81004e28:	55                   	push   %ebp
81004e29:	89 e5                	mov    %esp,%ebp
81004e2b:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004e30:	5d                   	pop    %ebp
81004e31:	c3                   	ret    

81004e32 <_fclose_r>:
81004e32:	55                   	push   %ebp
81004e33:	89 e5                	mov    %esp,%ebp
81004e35:	53                   	push   %ebx
81004e36:	83 ec 14             	sub    $0x14,%esp
81004e39:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004e3c:	85 db                	test   %ebx,%ebx
81004e3e:	75 0a                	jne    81004e4a <_fclose_r+0x18>
81004e40:	b8 00 00 00 00       	mov    $0x0,%eax
81004e45:	e9 ea 00 00 00       	jmp    81004f34 <_fclose_r+0x102>
81004e4a:	8b 45 08             	mov    0x8(%ebp),%eax
81004e4d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e50:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e54:	74 18                	je     81004e6e <_fclose_r+0x3c>
81004e56:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e59:	8b 40 38             	mov    0x38(%eax),%eax
81004e5c:	85 c0                	test   %eax,%eax
81004e5e:	75 0e                	jne    81004e6e <_fclose_r+0x3c>
81004e60:	83 ec 0c             	sub    $0xc,%esp
81004e63:	ff 75 f0             	pushl  -0x10(%ebp)
81004e66:	e8 65 c2 ff ff       	call   810010d0 <__sinit>
81004e6b:	83 c4 10             	add    $0x10,%esp
81004e6e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004e72:	66 85 c0             	test   %ax,%ax
81004e75:	75 0a                	jne    81004e81 <_fclose_r+0x4f>
81004e77:	b8 00 00 00 00       	mov    $0x0,%eax
81004e7c:	e9 b3 00 00 00       	jmp    81004f34 <_fclose_r+0x102>
81004e81:	83 ec 08             	sub    $0x8,%esp
81004e84:	53                   	push   %ebx
81004e85:	ff 75 08             	pushl  0x8(%ebp)
81004e88:	e8 1a bb ff ff       	call   810009a7 <__sflush_r>
81004e8d:	83 c4 10             	add    $0x10,%esp
81004e90:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e93:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004e96:	85 c0                	test   %eax,%eax
81004e98:	74 1d                	je     81004eb7 <_fclose_r+0x85>
81004e9a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004e9d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004ea0:	83 ec 08             	sub    $0x8,%esp
81004ea3:	52                   	push   %edx
81004ea4:	ff 75 08             	pushl  0x8(%ebp)
81004ea7:	ff d0                	call   *%eax
81004ea9:	83 c4 10             	add    $0x10,%esp
81004eac:	85 c0                	test   %eax,%eax
81004eae:	79 07                	jns    81004eb7 <_fclose_r+0x85>
81004eb0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004eb7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ebb:	98                   	cwtl   
81004ebc:	25 80 00 00 00       	and    $0x80,%eax
81004ec1:	85 c0                	test   %eax,%eax
81004ec3:	74 12                	je     81004ed7 <_fclose_r+0xa5>
81004ec5:	8b 43 10             	mov    0x10(%ebx),%eax
81004ec8:	83 ec 08             	sub    $0x8,%esp
81004ecb:	50                   	push   %eax
81004ecc:	ff 75 08             	pushl  0x8(%ebp)
81004ecf:	e8 5e c3 ff ff       	call   81001232 <_free_r>
81004ed4:	83 c4 10             	add    $0x10,%esp
81004ed7:	8b 43 30             	mov    0x30(%ebx),%eax
81004eda:	85 c0                	test   %eax,%eax
81004edc:	74 23                	je     81004f01 <_fclose_r+0xcf>
81004ede:	8b 53 30             	mov    0x30(%ebx),%edx
81004ee1:	8d 43 40             	lea    0x40(%ebx),%eax
81004ee4:	39 c2                	cmp    %eax,%edx
81004ee6:	74 12                	je     81004efa <_fclose_r+0xc8>
81004ee8:	8b 43 30             	mov    0x30(%ebx),%eax
81004eeb:	83 ec 08             	sub    $0x8,%esp
81004eee:	50                   	push   %eax
81004eef:	ff 75 08             	pushl  0x8(%ebp)
81004ef2:	e8 3b c3 ff ff       	call   81001232 <_free_r>
81004ef7:	83 c4 10             	add    $0x10,%esp
81004efa:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004f01:	8b 43 44             	mov    0x44(%ebx),%eax
81004f04:	85 c0                	test   %eax,%eax
81004f06:	74 19                	je     81004f21 <_fclose_r+0xef>
81004f08:	8b 43 44             	mov    0x44(%ebx),%eax
81004f0b:	83 ec 08             	sub    $0x8,%esp
81004f0e:	50                   	push   %eax
81004f0f:	ff 75 08             	pushl  0x8(%ebp)
81004f12:	e8 1b c3 ff ff       	call   81001232 <_free_r>
81004f17:	83 c4 10             	add    $0x10,%esp
81004f1a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004f21:	e8 43 c2 ff ff       	call   81001169 <__sfp_lock_acquire>
81004f26:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004f2c:	e8 3e c2 ff ff       	call   8100116f <__sfp_lock_release>
81004f31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f34:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004f37:	c9                   	leave  
81004f38:	c3                   	ret    

81004f39 <fclose>:
81004f39:	55                   	push   %ebp
81004f3a:	89 e5                	mov    %esp,%ebp
81004f3c:	83 ec 08             	sub    $0x8,%esp
81004f3f:	8b 55 08             	mov    0x8(%ebp),%edx
81004f42:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004f47:	83 ec 08             	sub    $0x8,%esp
81004f4a:	52                   	push   %edx
81004f4b:	50                   	push   %eax
81004f4c:	e8 e1 fe ff ff       	call   81004e32 <_fclose_r>
81004f51:	83 c4 10             	add    $0x10,%esp
81004f54:	c9                   	leave  
81004f55:	c3                   	ret    

81004f56 <_fputc_r>:
81004f56:	55                   	push   %ebp
81004f57:	89 e5                	mov    %esp,%ebp
81004f59:	83 ec 18             	sub    $0x18,%esp
81004f5c:	8b 45 08             	mov    0x8(%ebp),%eax
81004f5f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f62:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004f66:	74 18                	je     81004f80 <_fputc_r+0x2a>
81004f68:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f6b:	8b 40 38             	mov    0x38(%eax),%eax
81004f6e:	85 c0                	test   %eax,%eax
81004f70:	75 0e                	jne    81004f80 <_fputc_r+0x2a>
81004f72:	83 ec 0c             	sub    $0xc,%esp
81004f75:	ff 75 f4             	pushl  -0xc(%ebp)
81004f78:	e8 53 c1 ff ff       	call   810010d0 <__sinit>
81004f7d:	83 c4 10             	add    $0x10,%esp
81004f80:	83 ec 04             	sub    $0x4,%esp
81004f83:	ff 75 10             	pushl  0x10(%ebp)
81004f86:	ff 75 0c             	pushl  0xc(%ebp)
81004f89:	ff 75 08             	pushl  0x8(%ebp)
81004f8c:	e8 d5 13 00 00       	call   81006366 <_putc_r>
81004f91:	83 c4 10             	add    $0x10,%esp
81004f94:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004f97:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004f9a:	c9                   	leave  
81004f9b:	c3                   	ret    

81004f9c <fputc>:
81004f9c:	55                   	push   %ebp
81004f9d:	89 e5                	mov    %esp,%ebp
81004f9f:	83 ec 18             	sub    $0x18,%esp
81004fa2:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81004fa7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004faa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004fad:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004fb0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004fb4:	74 18                	je     81004fce <fputc+0x32>
81004fb6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004fb9:	8b 40 38             	mov    0x38(%eax),%eax
81004fbc:	85 c0                	test   %eax,%eax
81004fbe:	75 0e                	jne    81004fce <fputc+0x32>
81004fc0:	83 ec 0c             	sub    $0xc,%esp
81004fc3:	ff 75 f0             	pushl  -0x10(%ebp)
81004fc6:	e8 05 c1 ff ff       	call   810010d0 <__sinit>
81004fcb:	83 c4 10             	add    $0x10,%esp
81004fce:	83 ec 04             	sub    $0x4,%esp
81004fd1:	ff 75 0c             	pushl  0xc(%ebp)
81004fd4:	ff 75 08             	pushl  0x8(%ebp)
81004fd7:	ff 75 f4             	pushl  -0xc(%ebp)
81004fda:	e8 87 13 00 00       	call   81006366 <_putc_r>
81004fdf:	83 c4 10             	add    $0x10,%esp
81004fe2:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004fe5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004fe8:	c9                   	leave  
81004fe9:	c3                   	ret    

81004fea <_fputs_r>:
81004fea:	55                   	push   %ebp
81004feb:	89 e5                	mov    %esp,%ebp
81004fed:	83 ec 28             	sub    $0x28,%esp
81004ff0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ff3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004ff6:	83 ec 0c             	sub    $0xc,%esp
81004ff9:	ff 75 0c             	pushl  0xc(%ebp)
81004ffc:	e8 1f f6 ff ff       	call   81004620 <strlen>
81005001:	83 c4 10             	add    $0x10,%esp
81005004:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005007:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100500a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100500d:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005010:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005013:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100501a:	8b 45 08             	mov    0x8(%ebp),%eax
8100501d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005020:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005024:	74 18                	je     8100503e <_fputs_r+0x54>
81005026:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005029:	8b 40 38             	mov    0x38(%eax),%eax
8100502c:	85 c0                	test   %eax,%eax
8100502e:	75 0e                	jne    8100503e <_fputs_r+0x54>
81005030:	83 ec 0c             	sub    $0xc,%esp
81005033:	ff 75 f4             	pushl  -0xc(%ebp)
81005036:	e8 95 c0 ff ff       	call   810010d0 <__sinit>
8100503b:	83 c4 10             	add    $0x10,%esp
8100503e:	8b 45 10             	mov    0x10(%ebp),%eax
81005041:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005045:	98                   	cwtl   
81005046:	25 00 20 00 00       	and    $0x2000,%eax
8100504b:	85 c0                	test   %eax,%eax
8100504d:	75 24                	jne    81005073 <_fputs_r+0x89>
8100504f:	8b 45 10             	mov    0x10(%ebp),%eax
81005052:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005056:	80 cc 20             	or     $0x20,%ah
81005059:	89 c2                	mov    %eax,%edx
8100505b:	8b 45 10             	mov    0x10(%ebp),%eax
8100505e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005062:	8b 45 10             	mov    0x10(%ebp),%eax
81005065:	8b 40 64             	mov    0x64(%eax),%eax
81005068:	80 e4 df             	and    $0xdf,%ah
8100506b:	89 c2                	mov    %eax,%edx
8100506d:	8b 45 10             	mov    0x10(%ebp),%eax
81005070:	89 50 64             	mov    %edx,0x64(%eax)
81005073:	83 ec 04             	sub    $0x4,%esp
81005076:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81005079:	50                   	push   %eax
8100507a:	ff 75 10             	pushl  0x10(%ebp)
8100507d:	ff 75 08             	pushl  0x8(%ebp)
81005080:	e8 df 01 00 00       	call   81005264 <__sfvwrite_r>
81005085:	83 c4 10             	add    $0x10,%esp
81005088:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100508b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100508e:	c9                   	leave  
8100508f:	c3                   	ret    

81005090 <fputs>:
81005090:	55                   	push   %ebp
81005091:	89 e5                	mov    %esp,%ebp
81005093:	83 ec 08             	sub    $0x8,%esp
81005096:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
8100509b:	83 ec 04             	sub    $0x4,%esp
8100509e:	ff 75 0c             	pushl  0xc(%ebp)
810050a1:	ff 75 08             	pushl  0x8(%ebp)
810050a4:	50                   	push   %eax
810050a5:	e8 40 ff ff ff       	call   81004fea <_fputs_r>
810050aa:	83 c4 10             	add    $0x10,%esp
810050ad:	c9                   	leave  
810050ae:	c3                   	ret    

810050af <__sputc_r>:
810050af:	55                   	push   %ebp
810050b0:	89 e5                	mov    %esp,%ebp
810050b2:	83 ec 08             	sub    $0x8,%esp
810050b5:	8b 45 10             	mov    0x10(%ebp),%eax
810050b8:	8b 40 08             	mov    0x8(%eax),%eax
810050bb:	8d 50 ff             	lea    -0x1(%eax),%edx
810050be:	8b 45 10             	mov    0x10(%ebp),%eax
810050c1:	89 50 08             	mov    %edx,0x8(%eax)
810050c4:	8b 45 10             	mov    0x10(%ebp),%eax
810050c7:	8b 40 08             	mov    0x8(%eax),%eax
810050ca:	85 c0                	test   %eax,%eax
810050cc:	79 17                	jns    810050e5 <__sputc_r+0x36>
810050ce:	8b 45 10             	mov    0x10(%ebp),%eax
810050d1:	8b 50 08             	mov    0x8(%eax),%edx
810050d4:	8b 45 10             	mov    0x10(%ebp),%eax
810050d7:	8b 40 18             	mov    0x18(%eax),%eax
810050da:	39 c2                	cmp    %eax,%edx
810050dc:	7c 21                	jl     810050ff <__sputc_r+0x50>
810050de:	8b 45 0c             	mov    0xc(%ebp),%eax
810050e1:	3c 0a                	cmp    $0xa,%al
810050e3:	74 1a                	je     810050ff <__sputc_r+0x50>
810050e5:	8b 45 10             	mov    0x10(%ebp),%eax
810050e8:	8b 00                	mov    (%eax),%eax
810050ea:	8d 48 01             	lea    0x1(%eax),%ecx
810050ed:	8b 55 10             	mov    0x10(%ebp),%edx
810050f0:	89 0a                	mov    %ecx,(%edx)
810050f2:	8b 55 0c             	mov    0xc(%ebp),%edx
810050f5:	88 10                	mov    %dl,(%eax)
810050f7:	0f b6 00             	movzbl (%eax),%eax
810050fa:	0f b6 c0             	movzbl %al,%eax
810050fd:	eb 14                	jmp    81005113 <__sputc_r+0x64>
810050ff:	83 ec 04             	sub    $0x4,%esp
81005102:	ff 75 10             	pushl  0x10(%ebp)
81005105:	ff 75 0c             	pushl  0xc(%ebp)
81005108:	ff 75 08             	pushl  0x8(%ebp)
8100510b:	e8 ef f8 ff ff       	call   810049ff <__swbuf_r>
81005110:	83 c4 10             	add    $0x10,%esp
81005113:	c9                   	leave  
81005114:	c3                   	ret    

81005115 <__fputwc>:
81005115:	55                   	push   %ebp
81005116:	89 e5                	mov    %esp,%ebp
81005118:	83 ec 18             	sub    $0x18,%esp
8100511b:	e8 9f 07 00 00       	call   810058bf <__locale_mb_cur_max>
81005120:	83 f8 01             	cmp    $0x1,%eax
81005123:	75 1e                	jne    81005143 <__fputwc+0x2e>
81005125:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005129:	7e 18                	jle    81005143 <__fputwc+0x2e>
8100512b:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81005132:	7f 0f                	jg     81005143 <__fputwc+0x2e>
81005134:	8b 45 0c             	mov    0xc(%ebp),%eax
81005137:	88 45 ef             	mov    %al,-0x11(%ebp)
8100513a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81005141:	eb 3c                	jmp    8100517f <__fputwc+0x6a>
81005143:	8b 45 10             	mov    0x10(%ebp),%eax
81005146:	83 c0 5c             	add    $0x5c,%eax
81005149:	50                   	push   %eax
8100514a:	ff 75 0c             	pushl  0xc(%ebp)
8100514d:	8d 45 ef             	lea    -0x11(%ebp),%eax
81005150:	50                   	push   %eax
81005151:	ff 75 08             	pushl  0x8(%ebp)
81005154:	e8 59 1e 00 00       	call   81006fb2 <_wcrtomb_r>
81005159:	83 c4 10             	add    $0x10,%esp
8100515c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100515f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81005163:	75 1a                	jne    8100517f <__fputwc+0x6a>
81005165:	8b 45 10             	mov    0x10(%ebp),%eax
81005168:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100516c:	83 c8 40             	or     $0x40,%eax
8100516f:	89 c2                	mov    %eax,%edx
81005171:	8b 45 10             	mov    0x10(%ebp),%eax
81005174:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100517d:	eb 44                	jmp    810051c3 <__fputwc+0xae>
8100517f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005186:	eb 30                	jmp    810051b8 <__fputwc+0xa3>
81005188:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100518b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100518e:	01 d0                	add    %edx,%eax
81005190:	0f b6 00             	movzbl (%eax),%eax
81005193:	0f b6 c0             	movzbl %al,%eax
81005196:	83 ec 04             	sub    $0x4,%esp
81005199:	ff 75 10             	pushl  0x10(%ebp)
8100519c:	50                   	push   %eax
8100519d:	ff 75 08             	pushl  0x8(%ebp)
810051a0:	e8 0a ff ff ff       	call   810050af <__sputc_r>
810051a5:	83 c4 10             	add    $0x10,%esp
810051a8:	83 f8 ff             	cmp    $0xffffffff,%eax
810051ab:	75 07                	jne    810051b4 <__fputwc+0x9f>
810051ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051b2:	eb 0f                	jmp    810051c3 <__fputwc+0xae>
810051b4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810051b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051bb:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810051be:	72 c8                	jb     81005188 <__fputwc+0x73>
810051c0:	8b 45 0c             	mov    0xc(%ebp),%eax
810051c3:	c9                   	leave  
810051c4:	c3                   	ret    

810051c5 <_fputwc_r>:
810051c5:	55                   	push   %ebp
810051c6:	89 e5                	mov    %esp,%ebp
810051c8:	83 ec 18             	sub    $0x18,%esp
810051cb:	8b 45 10             	mov    0x10(%ebp),%eax
810051ce:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051d2:	98                   	cwtl   
810051d3:	25 00 20 00 00       	and    $0x2000,%eax
810051d8:	85 c0                	test   %eax,%eax
810051da:	75 24                	jne    81005200 <_fputwc_r+0x3b>
810051dc:	8b 45 10             	mov    0x10(%ebp),%eax
810051df:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051e3:	80 cc 20             	or     $0x20,%ah
810051e6:	89 c2                	mov    %eax,%edx
810051e8:	8b 45 10             	mov    0x10(%ebp),%eax
810051eb:	66 89 50 0c          	mov    %dx,0xc(%eax)
810051ef:	8b 45 10             	mov    0x10(%ebp),%eax
810051f2:	8b 40 64             	mov    0x64(%eax),%eax
810051f5:	80 cc 20             	or     $0x20,%ah
810051f8:	89 c2                	mov    %eax,%edx
810051fa:	8b 45 10             	mov    0x10(%ebp),%eax
810051fd:	89 50 64             	mov    %edx,0x64(%eax)
81005200:	83 ec 04             	sub    $0x4,%esp
81005203:	ff 75 10             	pushl  0x10(%ebp)
81005206:	ff 75 0c             	pushl  0xc(%ebp)
81005209:	ff 75 08             	pushl  0x8(%ebp)
8100520c:	e8 04 ff ff ff       	call   81005115 <__fputwc>
81005211:	83 c4 10             	add    $0x10,%esp
81005214:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005217:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100521a:	c9                   	leave  
8100521b:	c3                   	ret    

8100521c <fputwc>:
8100521c:	55                   	push   %ebp
8100521d:	89 e5                	mov    %esp,%ebp
8100521f:	83 ec 18             	sub    $0x18,%esp
81005222:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81005227:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100522a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100522d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005230:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005234:	74 18                	je     8100524e <fputwc+0x32>
81005236:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005239:	8b 40 38             	mov    0x38(%eax),%eax
8100523c:	85 c0                	test   %eax,%eax
8100523e:	75 0e                	jne    8100524e <fputwc+0x32>
81005240:	83 ec 0c             	sub    $0xc,%esp
81005243:	ff 75 f0             	pushl  -0x10(%ebp)
81005246:	e8 85 be ff ff       	call   810010d0 <__sinit>
8100524b:	83 c4 10             	add    $0x10,%esp
8100524e:	83 ec 04             	sub    $0x4,%esp
81005251:	ff 75 0c             	pushl  0xc(%ebp)
81005254:	ff 75 08             	pushl  0x8(%ebp)
81005257:	ff 75 f4             	pushl  -0xc(%ebp)
8100525a:	e8 66 ff ff ff       	call   810051c5 <_fputwc_r>
8100525f:	83 c4 10             	add    $0x10,%esp
81005262:	c9                   	leave  
81005263:	c3                   	ret    

81005264 <__sfvwrite_r>:
81005264:	55                   	push   %ebp
81005265:	89 e5                	mov    %esp,%ebp
81005267:	57                   	push   %edi
81005268:	56                   	push   %esi
81005269:	53                   	push   %ebx
8100526a:	83 ec 3c             	sub    $0x3c,%esp
8100526d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005270:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81005277:	8b 45 10             	mov    0x10(%ebp),%eax
8100527a:	8b 78 08             	mov    0x8(%eax),%edi
8100527d:	85 ff                	test   %edi,%edi
8100527f:	75 0a                	jne    8100528b <__sfvwrite_r+0x27>
81005281:	b8 00 00 00 00       	mov    $0x0,%eax
81005286:	e9 6f 04 00 00       	jmp    810056fa <__sfvwrite_r+0x496>
8100528b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100528f:	98                   	cwtl   
81005290:	83 e0 08             	and    $0x8,%eax
81005293:	85 c0                	test   %eax,%eax
81005295:	74 07                	je     8100529e <__sfvwrite_r+0x3a>
81005297:	8b 43 10             	mov    0x10(%ebx),%eax
8100529a:	85 c0                	test   %eax,%eax
8100529c:	75 1d                	jne    810052bb <__sfvwrite_r+0x57>
8100529e:	83 ec 08             	sub    $0x8,%esp
810052a1:	53                   	push   %ebx
810052a2:	ff 75 08             	pushl  0x8(%ebp)
810052a5:	e8 ce f8 ff ff       	call   81004b78 <__swsetup_r>
810052aa:	83 c4 10             	add    $0x10,%esp
810052ad:	85 c0                	test   %eax,%eax
810052af:	74 0a                	je     810052bb <__sfvwrite_r+0x57>
810052b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810052b6:	e9 3f 04 00 00       	jmp    810056fa <__sfvwrite_r+0x496>
810052bb:	8b 45 10             	mov    0x10(%ebp),%eax
810052be:	8b 00                	mov    (%eax),%eax
810052c0:	89 45 c0             	mov    %eax,-0x40(%ebp)
810052c3:	bf 00 00 00 00       	mov    $0x0,%edi
810052c8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052cc:	98                   	cwtl   
810052cd:	83 e0 02             	and    $0x2,%eax
810052d0:	85 c0                	test   %eax,%eax
810052d2:	74 68                	je     8100533c <__sfvwrite_r+0xd8>
810052d4:	eb 11                	jmp    810052e7 <__sfvwrite_r+0x83>
810052d6:	8b 45 c0             	mov    -0x40(%ebp),%eax
810052d9:	8b 08                	mov    (%eax),%ecx
810052db:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810052de:	8b 78 04             	mov    0x4(%eax),%edi
810052e1:	83 c0 08             	add    $0x8,%eax
810052e4:	89 45 c0             	mov    %eax,-0x40(%ebp)
810052e7:	85 ff                	test   %edi,%edi
810052e9:	74 eb                	je     810052d6 <__sfvwrite_r+0x72>
810052eb:	8b 4b 24             	mov    0x24(%ebx),%ecx
810052ee:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810052f3:	39 c7                	cmp    %eax,%edi
810052f5:	0f 46 c7             	cmovbe %edi,%eax
810052f8:	89 c2                	mov    %eax,%edx
810052fa:	8b 43 1c             	mov    0x1c(%ebx),%eax
810052fd:	52                   	push   %edx
810052fe:	ff 75 c4             	pushl  -0x3c(%ebp)
81005301:	50                   	push   %eax
81005302:	ff 75 08             	pushl  0x8(%ebp)
81005305:	ff d1                	call   *%ecx
81005307:	83 c4 10             	add    $0x10,%esp
8100530a:	89 c6                	mov    %eax,%esi
8100530c:	85 f6                	test   %esi,%esi
8100530e:	0f 8e cf 03 00 00    	jle    810056e3 <__sfvwrite_r+0x47f>
81005314:	89 f0                	mov    %esi,%eax
81005316:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005319:	89 f0                	mov    %esi,%eax
8100531b:	29 c7                	sub    %eax,%edi
8100531d:	8b 45 10             	mov    0x10(%ebp),%eax
81005320:	8b 40 08             	mov    0x8(%eax),%eax
81005323:	89 f2                	mov    %esi,%edx
81005325:	29 d0                	sub    %edx,%eax
81005327:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100532a:	89 41 08             	mov    %eax,0x8(%ecx)
8100532d:	8b 45 10             	mov    0x10(%ebp),%eax
81005330:	8b 40 08             	mov    0x8(%eax),%eax
81005333:	85 c0                	test   %eax,%eax
81005335:	75 b0                	jne    810052e7 <__sfvwrite_r+0x83>
81005337:	e9 a0 03 00 00       	jmp    810056dc <__sfvwrite_r+0x478>
8100533c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005340:	98                   	cwtl   
81005341:	83 e0 01             	and    $0x1,%eax
81005344:	85 c0                	test   %eax,%eax
81005346:	0f 85 44 02 00 00    	jne    81005590 <__sfvwrite_r+0x32c>
8100534c:	eb 11                	jmp    8100535f <__sfvwrite_r+0xfb>
8100534e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005351:	8b 08                	mov    (%eax),%ecx
81005353:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81005356:	8b 78 04             	mov    0x4(%eax),%edi
81005359:	83 c0 08             	add    $0x8,%eax
8100535c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100535f:	85 ff                	test   %edi,%edi
81005361:	74 eb                	je     8100534e <__sfvwrite_r+0xea>
81005363:	8b 73 08             	mov    0x8(%ebx),%esi
81005366:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100536a:	98                   	cwtl   
8100536b:	25 00 02 00 00       	and    $0x200,%eax
81005370:	85 c0                	test   %eax,%eax
81005372:	0f 84 4f 01 00 00    	je     810054c7 <__sfvwrite_r+0x263>
81005378:	89 f0                	mov    %esi,%eax
8100537a:	39 c7                	cmp    %eax,%edi
8100537c:	0f 82 12 01 00 00    	jb     81005494 <__sfvwrite_r+0x230>
81005382:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005386:	98                   	cwtl   
81005387:	25 80 04 00 00       	and    $0x480,%eax
8100538c:	85 c0                	test   %eax,%eax
8100538e:	0f 84 00 01 00 00    	je     81005494 <__sfvwrite_r+0x230>
81005394:	8b 03                	mov    (%ebx),%eax
81005396:	8b 53 10             	mov    0x10(%ebx),%edx
81005399:	29 d0                	sub    %edx,%eax
8100539b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100539e:	8b 53 14             	mov    0x14(%ebx),%edx
810053a1:	89 d0                	mov    %edx,%eax
810053a3:	01 c0                	add    %eax,%eax
810053a5:	01 d0                	add    %edx,%eax
810053a7:	89 c2                	mov    %eax,%edx
810053a9:	c1 ea 1f             	shr    $0x1f,%edx
810053ac:	01 d0                	add    %edx,%eax
810053ae:	d1 f8                	sar    %eax
810053b0:	89 45 d8             	mov    %eax,-0x28(%ebp)
810053b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810053b6:	01 f8                	add    %edi,%eax
810053b8:	8d 50 01             	lea    0x1(%eax),%edx
810053bb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810053be:	39 c2                	cmp    %eax,%edx
810053c0:	76 0b                	jbe    810053cd <__sfvwrite_r+0x169>
810053c2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810053c5:	01 f8                	add    %edi,%eax
810053c7:	83 c0 01             	add    $0x1,%eax
810053ca:	89 45 d8             	mov    %eax,-0x28(%ebp)
810053cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053d1:	98                   	cwtl   
810053d2:	25 00 04 00 00       	and    $0x400,%eax
810053d7:	85 c0                	test   %eax,%eax
810053d9:	74 4f                	je     8100542a <__sfvwrite_r+0x1c6>
810053db:	8b 45 d8             	mov    -0x28(%ebp),%eax
810053de:	83 ec 08             	sub    $0x8,%esp
810053e1:	50                   	push   %eax
810053e2:	ff 75 08             	pushl  0x8(%ebp)
810053e5:	e8 b5 d5 ff ff       	call   8100299f <_malloc_r>
810053ea:	83 c4 10             	add    $0x10,%esp
810053ed:	89 45 dc             	mov    %eax,-0x24(%ebp)
810053f0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810053f4:	75 0e                	jne    81005404 <__sfvwrite_r+0x1a0>
810053f6:	8b 45 08             	mov    0x8(%ebp),%eax
810053f9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810053ff:	e9 e6 02 00 00       	jmp    810056ea <__sfvwrite_r+0x486>
81005404:	8b 55 d0             	mov    -0x30(%ebp),%edx
81005407:	8b 43 10             	mov    0x10(%ebx),%eax
8100540a:	83 ec 04             	sub    $0x4,%esp
8100540d:	52                   	push   %edx
8100540e:	50                   	push   %eax
8100540f:	ff 75 dc             	pushl  -0x24(%ebp)
81005412:	e8 a1 de ff ff       	call   810032b8 <memcpy>
81005417:	83 c4 10             	add    $0x10,%esp
8100541a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100541e:	66 25 7f fb          	and    $0xfb7f,%ax
81005422:	0c 80                	or     $0x80,%al
81005424:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005428:	eb 49                	jmp    81005473 <__sfvwrite_r+0x20f>
8100542a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100542d:	8b 43 10             	mov    0x10(%ebx),%eax
81005430:	83 ec 04             	sub    $0x4,%esp
81005433:	52                   	push   %edx
81005434:	50                   	push   %eax
81005435:	ff 75 08             	pushl  0x8(%ebp)
81005438:	e8 0d 10 00 00       	call   8100644a <_realloc_r>
8100543d:	83 c4 10             	add    $0x10,%esp
81005440:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005443:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005447:	75 2a                	jne    81005473 <__sfvwrite_r+0x20f>
81005449:	8b 43 10             	mov    0x10(%ebx),%eax
8100544c:	83 ec 08             	sub    $0x8,%esp
8100544f:	50                   	push   %eax
81005450:	ff 75 08             	pushl  0x8(%ebp)
81005453:	e8 da bd ff ff       	call   81001232 <_free_r>
81005458:	83 c4 10             	add    $0x10,%esp
8100545b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100545f:	24 7f                	and    $0x7f,%al
81005461:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005465:	8b 45 08             	mov    0x8(%ebp),%eax
81005468:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100546e:	e9 77 02 00 00       	jmp    810056ea <__sfvwrite_r+0x486>
81005473:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005476:	89 43 10             	mov    %eax,0x10(%ebx)
81005479:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100547c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100547f:	01 d0                	add    %edx,%eax
81005481:	89 03                	mov    %eax,(%ebx)
81005483:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005486:	89 43 14             	mov    %eax,0x14(%ebx)
81005489:	89 fe                	mov    %edi,%esi
8100548b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100548e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81005491:	89 43 08             	mov    %eax,0x8(%ebx)
81005494:	89 f0                	mov    %esi,%eax
81005496:	39 c7                	cmp    %eax,%edi
81005498:	73 02                	jae    8100549c <__sfvwrite_r+0x238>
8100549a:	89 fe                	mov    %edi,%esi
8100549c:	89 f2                	mov    %esi,%edx
8100549e:	8b 03                	mov    (%ebx),%eax
810054a0:	83 ec 04             	sub    $0x4,%esp
810054a3:	52                   	push   %edx
810054a4:	ff 75 c4             	pushl  -0x3c(%ebp)
810054a7:	50                   	push   %eax
810054a8:	e8 a3 06 00 00       	call   81005b50 <memmove>
810054ad:	83 c4 10             	add    $0x10,%esp
810054b0:	8b 43 08             	mov    0x8(%ebx),%eax
810054b3:	29 f0                	sub    %esi,%eax
810054b5:	89 43 08             	mov    %eax,0x8(%ebx)
810054b8:	8b 03                	mov    (%ebx),%eax
810054ba:	89 f2                	mov    %esi,%edx
810054bc:	01 d0                	add    %edx,%eax
810054be:	89 03                	mov    %eax,(%ebx)
810054c0:	89 fe                	mov    %edi,%esi
810054c2:	e9 9d 00 00 00       	jmp    81005564 <__sfvwrite_r+0x300>
810054c7:	8b 13                	mov    (%ebx),%edx
810054c9:	8b 43 10             	mov    0x10(%ebx),%eax
810054cc:	39 c2                	cmp    %eax,%edx
810054ce:	77 07                	ja     810054d7 <__sfvwrite_r+0x273>
810054d0:	8b 43 14             	mov    0x14(%ebx),%eax
810054d3:	39 c7                	cmp    %eax,%edi
810054d5:	73 4c                	jae    81005523 <__sfvwrite_r+0x2bf>
810054d7:	89 f0                	mov    %esi,%eax
810054d9:	39 c7                	cmp    %eax,%edi
810054db:	0f 46 c7             	cmovbe %edi,%eax
810054de:	89 c6                	mov    %eax,%esi
810054e0:	89 f2                	mov    %esi,%edx
810054e2:	8b 03                	mov    (%ebx),%eax
810054e4:	83 ec 04             	sub    $0x4,%esp
810054e7:	52                   	push   %edx
810054e8:	ff 75 c4             	pushl  -0x3c(%ebp)
810054eb:	50                   	push   %eax
810054ec:	e8 5f 06 00 00       	call   81005b50 <memmove>
810054f1:	83 c4 10             	add    $0x10,%esp
810054f4:	8b 43 08             	mov    0x8(%ebx),%eax
810054f7:	29 f0                	sub    %esi,%eax
810054f9:	89 43 08             	mov    %eax,0x8(%ebx)
810054fc:	8b 03                	mov    (%ebx),%eax
810054fe:	89 f2                	mov    %esi,%edx
81005500:	01 d0                	add    %edx,%eax
81005502:	89 03                	mov    %eax,(%ebx)
81005504:	8b 43 08             	mov    0x8(%ebx),%eax
81005507:	85 c0                	test   %eax,%eax
81005509:	75 58                	jne    81005563 <__sfvwrite_r+0x2ff>
8100550b:	83 ec 08             	sub    $0x8,%esp
8100550e:	53                   	push   %ebx
8100550f:	ff 75 08             	pushl  0x8(%ebp)
81005512:	e8 b6 b6 ff ff       	call   81000bcd <_fflush_r>
81005517:	83 c4 10             	add    $0x10,%esp
8100551a:	85 c0                	test   %eax,%eax
8100551c:	74 45                	je     81005563 <__sfvwrite_r+0x2ff>
8100551e:	e9 c7 01 00 00       	jmp    810056ea <__sfvwrite_r+0x486>
81005523:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81005529:	77 04                	ja     8100552f <__sfvwrite_r+0x2cb>
8100552b:	89 f8                	mov    %edi,%eax
8100552d:	eb 05                	jmp    81005534 <__sfvwrite_r+0x2d0>
8100552f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005534:	8b 4b 14             	mov    0x14(%ebx),%ecx
81005537:	99                   	cltd   
81005538:	f7 f9                	idiv   %ecx
8100553a:	89 c2                	mov    %eax,%edx
8100553c:	8b 43 14             	mov    0x14(%ebx),%eax
8100553f:	89 d6                	mov    %edx,%esi
81005541:	0f af f0             	imul   %eax,%esi
81005544:	8b 53 24             	mov    0x24(%ebx),%edx
81005547:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100554a:	56                   	push   %esi
8100554b:	ff 75 c4             	pushl  -0x3c(%ebp)
8100554e:	50                   	push   %eax
8100554f:	ff 75 08             	pushl  0x8(%ebp)
81005552:	ff d2                	call   *%edx
81005554:	83 c4 10             	add    $0x10,%esp
81005557:	89 c6                	mov    %eax,%esi
81005559:	85 f6                	test   %esi,%esi
8100555b:	0f 8e 85 01 00 00    	jle    810056e6 <__sfvwrite_r+0x482>
81005561:	eb 01                	jmp    81005564 <__sfvwrite_r+0x300>
81005563:	90                   	nop
81005564:	89 f0                	mov    %esi,%eax
81005566:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005569:	89 f0                	mov    %esi,%eax
8100556b:	29 c7                	sub    %eax,%edi
8100556d:	8b 45 10             	mov    0x10(%ebp),%eax
81005570:	8b 40 08             	mov    0x8(%eax),%eax
81005573:	89 f2                	mov    %esi,%edx
81005575:	29 d0                	sub    %edx,%eax
81005577:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100557a:	89 41 08             	mov    %eax,0x8(%ecx)
8100557d:	8b 45 10             	mov    0x10(%ebp),%eax
81005580:	8b 40 08             	mov    0x8(%eax),%eax
81005583:	85 c0                	test   %eax,%eax
81005585:	0f 85 d4 fd ff ff    	jne    8100535f <__sfvwrite_r+0xfb>
8100558b:	e9 4c 01 00 00       	jmp    810056dc <__sfvwrite_r+0x478>
81005590:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005597:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100559e:	eb 18                	jmp    810055b8 <__sfvwrite_r+0x354>
810055a0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810055a7:	8b 45 c0             	mov    -0x40(%ebp),%eax
810055aa:	8b 08                	mov    (%eax),%ecx
810055ac:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810055af:	8b 78 04             	mov    0x4(%eax),%edi
810055b2:	83 c0 08             	add    $0x8,%eax
810055b5:	89 45 c0             	mov    %eax,-0x40(%ebp)
810055b8:	85 ff                	test   %edi,%edi
810055ba:	74 e4                	je     810055a0 <__sfvwrite_r+0x33c>
810055bc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810055c0:	75 32                	jne    810055f4 <__sfvwrite_r+0x390>
810055c2:	83 ec 04             	sub    $0x4,%esp
810055c5:	57                   	push   %edi
810055c6:	6a 0a                	push   $0xa
810055c8:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810055cb:	56                   	push   %esi
810055cc:	e8 ff db ff ff       	call   810031d0 <memchr>
810055d1:	83 c4 10             	add    $0x10,%esp
810055d4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810055d7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810055db:	74 0a                	je     810055e7 <__sfvwrite_r+0x383>
810055dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810055e0:	83 c0 01             	add    $0x1,%eax
810055e3:	29 f0                	sub    %esi,%eax
810055e5:	eb 03                	jmp    810055ea <__sfvwrite_r+0x386>
810055e7:	8d 47 01             	lea    0x1(%edi),%eax
810055ea:	89 45 e0             	mov    %eax,-0x20(%ebp)
810055ed:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810055f4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810055f7:	39 c7                	cmp    %eax,%edi
810055f9:	0f 46 c7             	cmovbe %edi,%eax
810055fc:	89 c1                	mov    %eax,%ecx
810055fe:	8b 53 08             	mov    0x8(%ebx),%edx
81005601:	8b 43 14             	mov    0x14(%ebx),%eax
81005604:	8d 34 02             	lea    (%edx,%eax,1),%esi
81005607:	8b 13                	mov    (%ebx),%edx
81005609:	8b 43 10             	mov    0x10(%ebx),%eax
8100560c:	39 c2                	cmp    %eax,%edx
8100560e:	76 38                	jbe    81005648 <__sfvwrite_r+0x3e4>
81005610:	39 f1                	cmp    %esi,%ecx
81005612:	7e 34                	jle    81005648 <__sfvwrite_r+0x3e4>
81005614:	89 f2                	mov    %esi,%edx
81005616:	8b 03                	mov    (%ebx),%eax
81005618:	83 ec 04             	sub    $0x4,%esp
8100561b:	52                   	push   %edx
8100561c:	ff 75 c4             	pushl  -0x3c(%ebp)
8100561f:	50                   	push   %eax
81005620:	e8 2b 05 00 00       	call   81005b50 <memmove>
81005625:	83 c4 10             	add    $0x10,%esp
81005628:	8b 03                	mov    (%ebx),%eax
8100562a:	89 f2                	mov    %esi,%edx
8100562c:	01 d0                	add    %edx,%eax
8100562e:	89 03                	mov    %eax,(%ebx)
81005630:	83 ec 08             	sub    $0x8,%esp
81005633:	53                   	push   %ebx
81005634:	ff 75 08             	pushl  0x8(%ebp)
81005637:	e8 91 b5 ff ff       	call   81000bcd <_fflush_r>
8100563c:	83 c4 10             	add    $0x10,%esp
8100563f:	85 c0                	test   %eax,%eax
81005641:	74 4f                	je     81005692 <__sfvwrite_r+0x42e>
81005643:	e9 a2 00 00 00       	jmp    810056ea <__sfvwrite_r+0x486>
81005648:	8b 73 14             	mov    0x14(%ebx),%esi
8100564b:	89 c8                	mov    %ecx,%eax
8100564d:	39 c6                	cmp    %eax,%esi
8100564f:	7f 1b                	jg     8100566c <__sfvwrite_r+0x408>
81005651:	8b 53 24             	mov    0x24(%ebx),%edx
81005654:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005657:	56                   	push   %esi
81005658:	ff 75 c4             	pushl  -0x3c(%ebp)
8100565b:	50                   	push   %eax
8100565c:	ff 75 08             	pushl  0x8(%ebp)
8100565f:	ff d2                	call   *%edx
81005661:	83 c4 10             	add    $0x10,%esp
81005664:	89 c6                	mov    %eax,%esi
81005666:	85 f6                	test   %esi,%esi
81005668:	7f 28                	jg     81005692 <__sfvwrite_r+0x42e>
8100566a:	eb 7e                	jmp    810056ea <__sfvwrite_r+0x486>
8100566c:	89 ce                	mov    %ecx,%esi
8100566e:	89 f2                	mov    %esi,%edx
81005670:	8b 03                	mov    (%ebx),%eax
81005672:	83 ec 04             	sub    $0x4,%esp
81005675:	52                   	push   %edx
81005676:	ff 75 c4             	pushl  -0x3c(%ebp)
81005679:	50                   	push   %eax
8100567a:	e8 d1 04 00 00       	call   81005b50 <memmove>
8100567f:	83 c4 10             	add    $0x10,%esp
81005682:	8b 43 08             	mov    0x8(%ebx),%eax
81005685:	29 f0                	sub    %esi,%eax
81005687:	89 43 08             	mov    %eax,0x8(%ebx)
8100568a:	8b 03                	mov    (%ebx),%eax
8100568c:	89 f2                	mov    %esi,%edx
8100568e:	01 d0                	add    %edx,%eax
81005690:	89 03                	mov    %eax,(%ebx)
81005692:	29 75 e0             	sub    %esi,-0x20(%ebp)
81005695:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005699:	75 1a                	jne    810056b5 <__sfvwrite_r+0x451>
8100569b:	83 ec 08             	sub    $0x8,%esp
8100569e:	53                   	push   %ebx
8100569f:	ff 75 08             	pushl  0x8(%ebp)
810056a2:	e8 26 b5 ff ff       	call   81000bcd <_fflush_r>
810056a7:	83 c4 10             	add    $0x10,%esp
810056aa:	85 c0                	test   %eax,%eax
810056ac:	75 3b                	jne    810056e9 <__sfvwrite_r+0x485>
810056ae:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810056b5:	89 f0                	mov    %esi,%eax
810056b7:	01 45 c4             	add    %eax,-0x3c(%ebp)
810056ba:	89 f0                	mov    %esi,%eax
810056bc:	29 c7                	sub    %eax,%edi
810056be:	8b 45 10             	mov    0x10(%ebp),%eax
810056c1:	8b 40 08             	mov    0x8(%eax),%eax
810056c4:	89 f2                	mov    %esi,%edx
810056c6:	29 d0                	sub    %edx,%eax
810056c8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810056cb:	89 41 08             	mov    %eax,0x8(%ecx)
810056ce:	8b 45 10             	mov    0x10(%ebp),%eax
810056d1:	8b 40 08             	mov    0x8(%eax),%eax
810056d4:	85 c0                	test   %eax,%eax
810056d6:	0f 85 dc fe ff ff    	jne    810055b8 <__sfvwrite_r+0x354>
810056dc:	b8 00 00 00 00       	mov    $0x0,%eax
810056e1:	eb 17                	jmp    810056fa <__sfvwrite_r+0x496>
810056e3:	90                   	nop
810056e4:	eb 04                	jmp    810056ea <__sfvwrite_r+0x486>
810056e6:	90                   	nop
810056e7:	eb 01                	jmp    810056ea <__sfvwrite_r+0x486>
810056e9:	90                   	nop
810056ea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810056ee:	83 c8 40             	or     $0x40,%eax
810056f1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810056f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810056fa:	8d 65 f4             	lea    -0xc(%ebp),%esp
810056fd:	5b                   	pop    %ebx
810056fe:	5e                   	pop    %esi
810056ff:	5f                   	pop    %edi
81005700:	5d                   	pop    %ebp
81005701:	c3                   	ret    

81005702 <_findenv>:
81005702:	55                   	push   %ebp
81005703:	89 e5                	mov    %esp,%ebp
81005705:	83 ec 08             	sub    $0x8,%esp
81005708:	8b 55 08             	mov    0x8(%ebp),%edx
8100570b:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81005710:	83 ec 04             	sub    $0x4,%esp
81005713:	ff 75 0c             	pushl  0xc(%ebp)
81005716:	52                   	push   %edx
81005717:	50                   	push   %eax
81005718:	e8 25 00 00 00       	call   81005742 <_findenv_r>
8100571d:	83 c4 10             	add    $0x10,%esp
81005720:	c9                   	leave  
81005721:	c3                   	ret    

81005722 <getenv>:
81005722:	55                   	push   %ebp
81005723:	89 e5                	mov    %esp,%ebp
81005725:	83 ec 18             	sub    $0x18,%esp
81005728:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
8100572d:	83 ec 04             	sub    $0x4,%esp
81005730:	8d 55 f4             	lea    -0xc(%ebp),%edx
81005733:	52                   	push   %edx
81005734:	ff 75 08             	pushl  0x8(%ebp)
81005737:	50                   	push   %eax
81005738:	e8 05 00 00 00       	call   81005742 <_findenv_r>
8100573d:	83 c4 10             	add    $0x10,%esp
81005740:	c9                   	leave  
81005741:	c3                   	ret    

81005742 <_findenv_r>:
81005742:	55                   	push   %ebp
81005743:	89 e5                	mov    %esp,%ebp
81005745:	57                   	push   %edi
81005746:	56                   	push   %esi
81005747:	53                   	push   %ebx
81005748:	83 ec 1c             	sub    $0x1c,%esp
8100574b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100574e:	83 ec 0c             	sub    $0xc,%esp
81005751:	ff 75 08             	pushl  0x8(%ebp)
81005754:	e8 ca 19 00 00       	call   81007123 <__env_lock>
81005759:	83 c4 10             	add    $0x10,%esp
8100575c:	a1 d0 7f 00 81       	mov    0x81007fd0,%eax
81005761:	8b 00                	mov    (%eax),%eax
81005763:	85 c0                	test   %eax,%eax
81005765:	75 18                	jne    8100577f <_findenv_r+0x3d>
81005767:	83 ec 0c             	sub    $0xc,%esp
8100576a:	ff 75 08             	pushl  0x8(%ebp)
8100576d:	e8 b7 19 00 00       	call   81007129 <__env_unlock>
81005772:	83 c4 10             	add    $0x10,%esp
81005775:	b8 00 00 00 00       	mov    $0x0,%eax
8100577a:	e9 a8 00 00 00       	jmp    81005827 <_findenv_r+0xe5>
8100577f:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81005782:	eb 04                	jmp    81005788 <_findenv_r+0x46>
81005784:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005788:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100578b:	0f b6 00             	movzbl (%eax),%eax
8100578e:	84 c0                	test   %al,%al
81005790:	74 0a                	je     8100579c <_findenv_r+0x5a>
81005792:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005795:	0f b6 00             	movzbl (%eax),%eax
81005798:	3c 3d                	cmp    $0x3d,%al
8100579a:	75 e8                	jne    81005784 <_findenv_r+0x42>
8100579c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100579f:	0f b6 00             	movzbl (%eax),%eax
810057a2:	3c 3d                	cmp    $0x3d,%al
810057a4:	74 6e                	je     81005814 <_findenv_r+0xd2>
810057a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057a9:	29 f8                	sub    %edi,%eax
810057ab:	89 c6                	mov    %eax,%esi
810057ad:	a1 d0 7f 00 81       	mov    0x81007fd0,%eax
810057b2:	8b 18                	mov    (%eax),%ebx
810057b4:	eb 58                	jmp    8100580e <_findenv_r+0xcc>
810057b6:	89 f2                	mov    %esi,%edx
810057b8:	8b 03                	mov    (%ebx),%eax
810057ba:	83 ec 04             	sub    $0x4,%esp
810057bd:	52                   	push   %edx
810057be:	57                   	push   %edi
810057bf:	50                   	push   %eax
810057c0:	e8 f6 16 00 00       	call   81006ebb <strncmp>
810057c5:	83 c4 10             	add    $0x10,%esp
810057c8:	85 c0                	test   %eax,%eax
810057ca:	75 3f                	jne    8100580b <_findenv_r+0xc9>
810057cc:	8b 03                	mov    (%ebx),%eax
810057ce:	89 f2                	mov    %esi,%edx
810057d0:	01 d0                	add    %edx,%eax
810057d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810057d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057d8:	0f b6 00             	movzbl (%eax),%eax
810057db:	3c 3d                	cmp    $0x3d,%al
810057dd:	75 2c                	jne    8100580b <_findenv_r+0xc9>
810057df:	a1 d0 7f 00 81       	mov    0x81007fd0,%eax
810057e4:	8b 10                	mov    (%eax),%edx
810057e6:	89 d8                	mov    %ebx,%eax
810057e8:	29 d0                	sub    %edx,%eax
810057ea:	c1 f8 02             	sar    $0x2,%eax
810057ed:	89 c2                	mov    %eax,%edx
810057ef:	8b 45 10             	mov    0x10(%ebp),%eax
810057f2:	89 10                	mov    %edx,(%eax)
810057f4:	83 ec 0c             	sub    $0xc,%esp
810057f7:	ff 75 08             	pushl  0x8(%ebp)
810057fa:	e8 2a 19 00 00       	call   81007129 <__env_unlock>
810057ff:	83 c4 10             	add    $0x10,%esp
81005802:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005806:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005809:	eb 1c                	jmp    81005827 <_findenv_r+0xe5>
8100580b:	83 c3 04             	add    $0x4,%ebx
8100580e:	8b 03                	mov    (%ebx),%eax
81005810:	85 c0                	test   %eax,%eax
81005812:	75 a2                	jne    810057b6 <_findenv_r+0x74>
81005814:	83 ec 0c             	sub    $0xc,%esp
81005817:	ff 75 08             	pushl  0x8(%ebp)
8100581a:	e8 0a 19 00 00       	call   81007129 <__env_unlock>
8100581f:	83 c4 10             	add    $0x10,%esp
81005822:	b8 00 00 00 00       	mov    $0x0,%eax
81005827:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100582a:	5b                   	pop    %ebx
8100582b:	5e                   	pop    %esi
8100582c:	5f                   	pop    %edi
8100582d:	5d                   	pop    %ebp
8100582e:	c3                   	ret    

8100582f <_getenv_r>:
8100582f:	55                   	push   %ebp
81005830:	89 e5                	mov    %esp,%ebp
81005832:	83 ec 18             	sub    $0x18,%esp
81005835:	83 ec 04             	sub    $0x4,%esp
81005838:	8d 45 f4             	lea    -0xc(%ebp),%eax
8100583b:	50                   	push   %eax
8100583c:	ff 75 0c             	pushl  0xc(%ebp)
8100583f:	ff 75 08             	pushl  0x8(%ebp)
81005842:	e8 fb fe ff ff       	call   81005742 <_findenv_r>
81005847:	83 c4 10             	add    $0x10,%esp
8100584a:	c9                   	leave  
8100584b:	c3                   	ret    

8100584c <__get_global_locale>:
8100584c:	55                   	push   %ebp
8100584d:	89 e5                	mov    %esp,%ebp
8100584f:	b8 e0 7f 00 81       	mov    $0x81007fe0,%eax
81005854:	5d                   	pop    %ebp
81005855:	c3                   	ret    

81005856 <__get_current_locale>:
81005856:	55                   	push   %ebp
81005857:	89 e5                	mov    %esp,%ebp
81005859:	e8 ee ff ff ff       	call   8100584c <__get_global_locale>
8100585e:	5d                   	pop    %ebp
8100585f:	c3                   	ret    

81005860 <_setlocale_r>:
81005860:	55                   	push   %ebp
81005861:	89 e5                	mov    %esp,%ebp
81005863:	83 ec 08             	sub    $0x8,%esp
81005866:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100586a:	74 4c                	je     810058b8 <_setlocale_r+0x58>
8100586c:	83 ec 08             	sub    $0x8,%esp
8100586f:	68 44 77 00 81       	push   $0x81007744
81005874:	ff 75 10             	pushl  0x10(%ebp)
81005877:	e8 f0 ec ff ff       	call   8100456c <strcmp>
8100587c:	83 c4 10             	add    $0x10,%esp
8100587f:	85 c0                	test   %eax,%eax
81005881:	74 35                	je     810058b8 <_setlocale_r+0x58>
81005883:	83 ec 08             	sub    $0x8,%esp
81005886:	68 4a 77 00 81       	push   $0x8100774a
8100588b:	ff 75 10             	pushl  0x10(%ebp)
8100588e:	e8 d9 ec ff ff       	call   8100456c <strcmp>
81005893:	83 c4 10             	add    $0x10,%esp
81005896:	85 c0                	test   %eax,%eax
81005898:	74 1e                	je     810058b8 <_setlocale_r+0x58>
8100589a:	83 ec 08             	sub    $0x8,%esp
8100589d:	68 43 77 00 81       	push   $0x81007743
810058a2:	ff 75 10             	pushl  0x10(%ebp)
810058a5:	e8 c2 ec ff ff       	call   8100456c <strcmp>
810058aa:	83 c4 10             	add    $0x10,%esp
810058ad:	85 c0                	test   %eax,%eax
810058af:	74 07                	je     810058b8 <_setlocale_r+0x58>
810058b1:	b8 00 00 00 00       	mov    $0x0,%eax
810058b6:	eb 05                	jmp    810058bd <_setlocale_r+0x5d>
810058b8:	b8 4a 77 00 81       	mov    $0x8100774a,%eax
810058bd:	c9                   	leave  
810058be:	c3                   	ret    

810058bf <__locale_mb_cur_max>:
810058bf:	55                   	push   %ebp
810058c0:	89 e5                	mov    %esp,%ebp
810058c2:	e8 8f ff ff ff       	call   81005856 <__get_current_locale>
810058c7:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
810058ce:	0f be c0             	movsbl %al,%eax
810058d1:	5d                   	pop    %ebp
810058d2:	c3                   	ret    

810058d3 <setlocale>:
810058d3:	55                   	push   %ebp
810058d4:	89 e5                	mov    %esp,%ebp
810058d6:	83 ec 08             	sub    $0x8,%esp
810058d9:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810058de:	83 ec 04             	sub    $0x4,%esp
810058e1:	ff 75 0c             	pushl  0xc(%ebp)
810058e4:	ff 75 08             	pushl  0x8(%ebp)
810058e7:	50                   	push   %eax
810058e8:	e8 73 ff ff ff       	call   81005860 <_setlocale_r>
810058ed:	83 c4 10             	add    $0x10,%esp
810058f0:	c9                   	leave  
810058f1:	c3                   	ret    

810058f2 <_lseek_r>:
810058f2:	55                   	push   %ebp
810058f3:	89 e5                	mov    %esp,%ebp
810058f5:	83 ec 18             	sub    $0x18,%esp
810058f8:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
810058ff:	00 00 00 
81005902:	83 ec 04             	sub    $0x4,%esp
81005905:	ff 75 14             	pushl  0x14(%ebp)
81005908:	ff 75 10             	pushl  0x10(%ebp)
8100590b:	ff 75 0c             	pushl  0xc(%ebp)
8100590e:	e8 23 af ff ff       	call   81000836 <lseek>
81005913:	83 c4 10             	add    $0x10,%esp
81005916:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005919:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100591d:	75 14                	jne    81005933 <_lseek_r+0x41>
8100591f:	a1 f4 86 00 81       	mov    0x810086f4,%eax
81005924:	85 c0                	test   %eax,%eax
81005926:	74 0b                	je     81005933 <_lseek_r+0x41>
81005928:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
8100592e:	8b 45 08             	mov    0x8(%ebp),%eax
81005931:	89 10                	mov    %edx,(%eax)
81005933:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005936:	c9                   	leave  
81005937:	c3                   	ret    

81005938 <__smakebuf_r>:
81005938:	55                   	push   %ebp
81005939:	89 e5                	mov    %esp,%ebp
8100593b:	56                   	push   %esi
8100593c:	53                   	push   %ebx
8100593d:	83 ec 10             	sub    $0x10,%esp
81005940:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005943:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005947:	98                   	cwtl   
81005948:	83 e0 02             	and    $0x2,%eax
8100594b:	85 c0                	test   %eax,%eax
8100594d:	74 16                	je     81005965 <__smakebuf_r+0x2d>
8100594f:	8d 43 43             	lea    0x43(%ebx),%eax
81005952:	89 03                	mov    %eax,(%ebx)
81005954:	8b 03                	mov    (%ebx),%eax
81005956:	89 43 10             	mov    %eax,0x10(%ebx)
81005959:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005960:	e9 b9 00 00 00       	jmp    81005a1e <__smakebuf_r+0xe6>
81005965:	8d 45 ec             	lea    -0x14(%ebp),%eax
81005968:	50                   	push   %eax
81005969:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100596c:	50                   	push   %eax
8100596d:	53                   	push   %ebx
8100596e:	ff 75 08             	pushl  0x8(%ebp)
81005971:	e8 af 00 00 00       	call   81005a25 <__swhatbuf_r>
81005976:	83 c4 10             	add    $0x10,%esp
81005979:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100597c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100597f:	83 ec 08             	sub    $0x8,%esp
81005982:	50                   	push   %eax
81005983:	ff 75 08             	pushl  0x8(%ebp)
81005986:	e8 14 d0 ff ff       	call   8100299f <_malloc_r>
8100598b:	83 c4 10             	add    $0x10,%esp
8100598e:	89 c6                	mov    %eax,%esi
81005990:	85 f6                	test   %esi,%esi
81005992:	75 2f                	jne    810059c3 <__smakebuf_r+0x8b>
81005994:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005998:	98                   	cwtl   
81005999:	25 00 02 00 00       	and    $0x200,%eax
8100599e:	85 c0                	test   %eax,%eax
810059a0:	75 7c                	jne    81005a1e <__smakebuf_r+0xe6>
810059a2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059a6:	83 e0 fc             	and    $0xfffffffc,%eax
810059a9:	83 c8 02             	or     $0x2,%eax
810059ac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059b0:	8d 43 43             	lea    0x43(%ebx),%eax
810059b3:	89 03                	mov    %eax,(%ebx)
810059b5:	8b 03                	mov    (%ebx),%eax
810059b7:	89 43 10             	mov    %eax,0x10(%ebx)
810059ba:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810059c1:	eb 5b                	jmp    81005a1e <__smakebuf_r+0xe6>
810059c3:	8b 45 08             	mov    0x8(%ebp),%eax
810059c6:	c7 40 3c 95 10 00 81 	movl   $0x81001095,0x3c(%eax)
810059cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059d1:	0c 80                	or     $0x80,%al
810059d3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059d7:	89 33                	mov    %esi,(%ebx)
810059d9:	8b 03                	mov    (%ebx),%eax
810059db:	89 43 10             	mov    %eax,0x10(%ebx)
810059de:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059e1:	89 43 14             	mov    %eax,0x14(%ebx)
810059e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059e7:	85 c0                	test   %eax,%eax
810059e9:	74 26                	je     81005a11 <__smakebuf_r+0xd9>
810059eb:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059ef:	98                   	cwtl   
810059f0:	83 ec 08             	sub    $0x8,%esp
810059f3:	50                   	push   %eax
810059f4:	ff 75 08             	pushl  0x8(%ebp)
810059f7:	e8 76 17 00 00       	call   81007172 <_isatty_r>
810059fc:	83 c4 10             	add    $0x10,%esp
810059ff:	85 c0                	test   %eax,%eax
81005a01:	74 0e                	je     81005a11 <__smakebuf_r+0xd9>
81005a03:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a07:	83 e0 fc             	and    $0xfffffffc,%eax
81005a0a:	83 c8 01             	or     $0x1,%eax
81005a0d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a11:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005a15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a18:	09 d0                	or     %edx,%eax
81005a1a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a1e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a21:	5b                   	pop    %ebx
81005a22:	5e                   	pop    %esi
81005a23:	5d                   	pop    %ebp
81005a24:	c3                   	ret    

81005a25 <__swhatbuf_r>:
81005a25:	55                   	push   %ebp
81005a26:	89 e5                	mov    %esp,%ebp
81005a28:	83 ec 58             	sub    $0x58,%esp
81005a2b:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81005a32:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a35:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a39:	66 85 c0             	test   %ax,%ax
81005a3c:	78 1f                	js     81005a5d <__swhatbuf_r+0x38>
81005a3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a41:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a45:	98                   	cwtl   
81005a46:	83 ec 04             	sub    $0x4,%esp
81005a49:	8d 55 ac             	lea    -0x54(%ebp),%edx
81005a4c:	52                   	push   %edx
81005a4d:	50                   	push   %eax
81005a4e:	ff 75 08             	pushl  0x8(%ebp)
81005a51:	e8 d9 16 00 00       	call   8100712f <_fstat_r>
81005a56:	83 c4 10             	add    $0x10,%esp
81005a59:	85 c0                	test   %eax,%eax
81005a5b:	79 35                	jns    81005a92 <__swhatbuf_r+0x6d>
81005a5d:	8b 45 14             	mov    0x14(%ebp),%eax
81005a60:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005a66:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a69:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005a6d:	98                   	cwtl   
81005a6e:	25 80 00 00 00       	and    $0x80,%eax
81005a73:	85 c0                	test   %eax,%eax
81005a75:	74 0b                	je     81005a82 <__swhatbuf_r+0x5d>
81005a77:	8b 45 10             	mov    0x10(%ebp),%eax
81005a7a:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005a80:	eb 09                	jmp    81005a8b <__swhatbuf_r+0x66>
81005a82:	8b 45 10             	mov    0x10(%ebp),%eax
81005a85:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005a8b:	b8 00 00 00 00       	mov    $0x0,%eax
81005a90:	eb 24                	jmp    81005ab6 <__swhatbuf_r+0x91>
81005a92:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005a95:	25 00 f0 00 00       	and    $0xf000,%eax
81005a9a:	3d 00 20 00 00       	cmp    $0x2000,%eax
81005a9f:	0f 94 c0             	sete   %al
81005aa2:	0f b6 d0             	movzbl %al,%edx
81005aa5:	8b 45 14             	mov    0x14(%ebp),%eax
81005aa8:	89 10                	mov    %edx,(%eax)
81005aaa:	8b 45 10             	mov    0x10(%ebp),%eax
81005aad:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005ab3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ab6:	c9                   	leave  
81005ab7:	c3                   	ret    

81005ab8 <__get_global_locale>:
81005ab8:	55                   	push   %ebp
81005ab9:	89 e5                	mov    %esp,%ebp
81005abb:	b8 e0 7f 00 81       	mov    $0x81007fe0,%eax
81005ac0:	5d                   	pop    %ebp
81005ac1:	c3                   	ret    

81005ac2 <__get_current_locale>:
81005ac2:	55                   	push   %ebp
81005ac3:	89 e5                	mov    %esp,%ebp
81005ac5:	e8 ee ff ff ff       	call   81005ab8 <__get_global_locale>
81005aca:	5d                   	pop    %ebp
81005acb:	c3                   	ret    

81005acc <_mbtowc_r>:
81005acc:	55                   	push   %ebp
81005acd:	89 e5                	mov    %esp,%ebp
81005acf:	83 ec 08             	sub    $0x8,%esp
81005ad2:	e8 eb ff ff ff       	call   81005ac2 <__get_current_locale>
81005ad7:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81005add:	83 ec 0c             	sub    $0xc,%esp
81005ae0:	ff 75 18             	pushl  0x18(%ebp)
81005ae3:	ff 75 14             	pushl  0x14(%ebp)
81005ae6:	ff 75 10             	pushl  0x10(%ebp)
81005ae9:	ff 75 0c             	pushl  0xc(%ebp)
81005aec:	ff 75 08             	pushl  0x8(%ebp)
81005aef:	ff d0                	call   *%eax
81005af1:	83 c4 20             	add    $0x20,%esp
81005af4:	c9                   	leave  
81005af5:	c3                   	ret    

81005af6 <__ascii_mbtowc>:
81005af6:	55                   	push   %ebp
81005af7:	89 e5                	mov    %esp,%ebp
81005af9:	83 ec 10             	sub    $0x10,%esp
81005afc:	8b 45 10             	mov    0x10(%ebp),%eax
81005aff:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005b02:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005b06:	75 06                	jne    81005b0e <__ascii_mbtowc+0x18>
81005b08:	8d 45 f8             	lea    -0x8(%ebp),%eax
81005b0b:	89 45 0c             	mov    %eax,0xc(%ebp)
81005b0e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005b12:	75 07                	jne    81005b1b <__ascii_mbtowc+0x25>
81005b14:	b8 00 00 00 00       	mov    $0x0,%eax
81005b19:	eb 31                	jmp    81005b4c <__ascii_mbtowc+0x56>
81005b1b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005b1f:	75 07                	jne    81005b28 <__ascii_mbtowc+0x32>
81005b21:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81005b26:	eb 24                	jmp    81005b4c <__ascii_mbtowc+0x56>
81005b28:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b2b:	0f b6 00             	movzbl (%eax),%eax
81005b2e:	0f b6 d0             	movzbl %al,%edx
81005b31:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b34:	89 10                	mov    %edx,(%eax)
81005b36:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b39:	0f b6 00             	movzbl (%eax),%eax
81005b3c:	84 c0                	test   %al,%al
81005b3e:	75 07                	jne    81005b47 <__ascii_mbtowc+0x51>
81005b40:	b8 00 00 00 00       	mov    $0x0,%eax
81005b45:	eb 05                	jmp    81005b4c <__ascii_mbtowc+0x56>
81005b47:	b8 01 00 00 00       	mov    $0x1,%eax
81005b4c:	c9                   	leave  
81005b4d:	c3                   	ret    
81005b4e:	66 90                	xchg   %ax,%ax

81005b50 <memmove>:
81005b50:	55                   	push   %ebp
81005b51:	89 e5                	mov    %esp,%ebp
81005b53:	56                   	push   %esi
81005b54:	57                   	push   %edi
81005b55:	53                   	push   %ebx
81005b56:	8b 7d 08             	mov    0x8(%ebp),%edi
81005b59:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005b5c:	8b 75 0c             	mov    0xc(%ebp),%esi
81005b5f:	fc                   	cld    
81005b60:	39 fe                	cmp    %edi,%esi
81005b62:	73 43                	jae    81005ba7 <memmove+0x57>
81005b64:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005b68:	39 df                	cmp    %ebx,%edi
81005b6a:	77 3b                	ja     81005ba7 <memmove+0x57>
81005b6c:	01 ce                	add    %ecx,%esi
81005b6e:	01 cf                	add    %ecx,%edi
81005b70:	fd                   	std    
81005b71:	83 f9 08             	cmp    $0x8,%ecx
81005b74:	76 2b                	jbe    81005ba1 <memmove+0x51>
81005b76:	89 fa                	mov    %edi,%edx
81005b78:	89 cb                	mov    %ecx,%ebx
81005b7a:	83 e2 03             	and    $0x3,%edx
81005b7d:	74 0c                	je     81005b8b <memmove+0x3b>
81005b7f:	89 d1                	mov    %edx,%ecx
81005b81:	4e                   	dec    %esi
81005b82:	4f                   	dec    %edi
81005b83:	29 cb                	sub    %ecx,%ebx
81005b85:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005b87:	89 d9                	mov    %ebx,%ecx
81005b89:	46                   	inc    %esi
81005b8a:	47                   	inc    %edi
81005b8b:	c1 e9 02             	shr    $0x2,%ecx
81005b8e:	83 ee 04             	sub    $0x4,%esi
81005b91:	83 ef 04             	sub    $0x4,%edi
81005b94:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005b96:	83 c6 04             	add    $0x4,%esi
81005b99:	83 c7 04             	add    $0x4,%edi
81005b9c:	89 d9                	mov    %ebx,%ecx
81005b9e:	83 e1 03             	and    $0x3,%ecx
81005ba1:	4e                   	dec    %esi
81005ba2:	4f                   	dec    %edi
81005ba3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005ba5:	eb 2a                	jmp    81005bd1 <memmove+0x81>
81005ba7:	83 f9 08             	cmp    $0x8,%ecx
81005baa:	76 23                	jbe    81005bcf <memmove+0x7f>
81005bac:	89 fa                	mov    %edi,%edx
81005bae:	89 cb                	mov    %ecx,%ebx
81005bb0:	83 e2 03             	and    $0x3,%edx
81005bb3:	74 10                	je     81005bc5 <memmove+0x75>
81005bb5:	b9 04 00 00 00       	mov    $0x4,%ecx
81005bba:	29 d1                	sub    %edx,%ecx
81005bbc:	83 e1 03             	and    $0x3,%ecx
81005bbf:	29 cb                	sub    %ecx,%ebx
81005bc1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005bc3:	89 d9                	mov    %ebx,%ecx
81005bc5:	c1 e9 02             	shr    $0x2,%ecx
81005bc8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005bca:	89 d9                	mov    %ebx,%ecx
81005bcc:	83 e1 03             	and    $0x3,%ecx
81005bcf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005bd1:	8b 45 08             	mov    0x8(%ebp),%eax
81005bd4:	fc                   	cld    
81005bd5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005bd8:	5b                   	pop    %ebx
81005bd9:	5f                   	pop    %edi
81005bda:	5e                   	pop    %esi
81005bdb:	c9                   	leave  
81005bdc:	c3                   	ret    

81005bdd <__ssputs_r>:
81005bdd:	55                   	push   %ebp
81005bde:	89 e5                	mov    %esp,%ebp
81005be0:	53                   	push   %ebx
81005be1:	83 ec 14             	sub    $0x14,%esp
81005be4:	8b 45 0c             	mov    0xc(%ebp),%eax
81005be7:	8b 58 08             	mov    0x8(%eax),%ebx
81005bea:	89 d8                	mov    %ebx,%eax
81005bec:	39 45 14             	cmp    %eax,0x14(%ebp)
81005bef:	0f 82 3c 01 00 00    	jb     81005d31 <__ssputs_r+0x154>
81005bf5:	8b 45 0c             	mov    0xc(%ebp),%eax
81005bf8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005bfc:	98                   	cwtl   
81005bfd:	25 80 04 00 00       	and    $0x480,%eax
81005c02:	85 c0                	test   %eax,%eax
81005c04:	0f 84 27 01 00 00    	je     81005d31 <__ssputs_r+0x154>
81005c0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c0d:	8b 10                	mov    (%eax),%edx
81005c0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c12:	8b 48 10             	mov    0x10(%eax),%ecx
81005c15:	89 d0                	mov    %edx,%eax
81005c17:	29 c8                	sub    %ecx,%eax
81005c19:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c1f:	8b 50 14             	mov    0x14(%eax),%edx
81005c22:	89 d0                	mov    %edx,%eax
81005c24:	01 c0                	add    %eax,%eax
81005c26:	01 d0                	add    %edx,%eax
81005c28:	89 c2                	mov    %eax,%edx
81005c2a:	c1 ea 1f             	shr    $0x1f,%edx
81005c2d:	01 d0                	add    %edx,%eax
81005c2f:	d1 f8                	sar    %eax
81005c31:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005c34:	8b 55 ec             	mov    -0x14(%ebp),%edx
81005c37:	8b 45 14             	mov    0x14(%ebp),%eax
81005c3a:	01 d0                	add    %edx,%eax
81005c3c:	8d 50 01             	lea    0x1(%eax),%edx
81005c3f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c42:	39 c2                	cmp    %eax,%edx
81005c44:	76 0e                	jbe    81005c54 <__ssputs_r+0x77>
81005c46:	8b 55 ec             	mov    -0x14(%ebp),%edx
81005c49:	8b 45 14             	mov    0x14(%ebp),%eax
81005c4c:	01 d0                	add    %edx,%eax
81005c4e:	83 c0 01             	add    $0x1,%eax
81005c51:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005c54:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c57:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005c5b:	98                   	cwtl   
81005c5c:	25 00 04 00 00       	and    $0x400,%eax
81005c61:	85 c0                	test   %eax,%eax
81005c63:	74 5a                	je     81005cbf <__ssputs_r+0xe2>
81005c65:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c68:	83 ec 08             	sub    $0x8,%esp
81005c6b:	50                   	push   %eax
81005c6c:	ff 75 08             	pushl  0x8(%ebp)
81005c6f:	e8 2b cd ff ff       	call   8100299f <_malloc_r>
81005c74:	83 c4 10             	add    $0x10,%esp
81005c77:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005c7a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005c7e:	75 0e                	jne    81005c8e <__ssputs_r+0xb1>
81005c80:	8b 45 08             	mov    0x8(%ebp),%eax
81005c83:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005c89:	e9 e9 00 00 00       	jmp    81005d77 <__ssputs_r+0x19a>
81005c8e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81005c91:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c94:	8b 40 10             	mov    0x10(%eax),%eax
81005c97:	83 ec 04             	sub    $0x4,%esp
81005c9a:	52                   	push   %edx
81005c9b:	50                   	push   %eax
81005c9c:	ff 75 f4             	pushl  -0xc(%ebp)
81005c9f:	e8 14 d6 ff ff       	call   810032b8 <memcpy>
81005ca4:	83 c4 10             	add    $0x10,%esp
81005ca7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005caa:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005cae:	66 25 7f fb          	and    $0xfb7f,%ax
81005cb2:	0c 80                	or     $0x80,%al
81005cb4:	89 c2                	mov    %eax,%edx
81005cb6:	8b 45 0c             	mov    0xc(%ebp),%eax
81005cb9:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005cbd:	eb 42                	jmp    81005d01 <__ssputs_r+0x124>
81005cbf:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005cc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81005cc5:	8b 40 10             	mov    0x10(%eax),%eax
81005cc8:	83 ec 04             	sub    $0x4,%esp
81005ccb:	52                   	push   %edx
81005ccc:	50                   	push   %eax
81005ccd:	ff 75 08             	pushl  0x8(%ebp)
81005cd0:	e8 75 07 00 00       	call   8100644a <_realloc_r>
81005cd5:	83 c4 10             	add    $0x10,%esp
81005cd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005cdb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005cdf:	75 20                	jne    81005d01 <__ssputs_r+0x124>
81005ce1:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ce4:	8b 40 10             	mov    0x10(%eax),%eax
81005ce7:	83 ec 08             	sub    $0x8,%esp
81005cea:	50                   	push   %eax
81005ceb:	ff 75 08             	pushl  0x8(%ebp)
81005cee:	e8 3f b5 ff ff       	call   81001232 <_free_r>
81005cf3:	83 c4 10             	add    $0x10,%esp
81005cf6:	8b 45 08             	mov    0x8(%ebp),%eax
81005cf9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005cff:	eb 76                	jmp    81005d77 <__ssputs_r+0x19a>
81005d01:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d04:	8b 55 f4             	mov    -0xc(%ebp),%edx
81005d07:	89 50 10             	mov    %edx,0x10(%eax)
81005d0a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81005d0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d10:	01 c2                	add    %eax,%edx
81005d12:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d15:	89 10                	mov    %edx,(%eax)
81005d17:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d1a:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005d1d:	89 50 14             	mov    %edx,0x14(%eax)
81005d20:	8b 5d 14             	mov    0x14(%ebp),%ebx
81005d23:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d26:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005d29:	89 c2                	mov    %eax,%edx
81005d2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d2e:	89 50 08             	mov    %edx,0x8(%eax)
81005d31:	89 d8                	mov    %ebx,%eax
81005d33:	39 45 14             	cmp    %eax,0x14(%ebp)
81005d36:	73 03                	jae    81005d3b <__ssputs_r+0x15e>
81005d38:	8b 5d 14             	mov    0x14(%ebp),%ebx
81005d3b:	89 da                	mov    %ebx,%edx
81005d3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d40:	8b 00                	mov    (%eax),%eax
81005d42:	83 ec 04             	sub    $0x4,%esp
81005d45:	52                   	push   %edx
81005d46:	ff 75 10             	pushl  0x10(%ebp)
81005d49:	50                   	push   %eax
81005d4a:	e8 01 fe ff ff       	call   81005b50 <memmove>
81005d4f:	83 c4 10             	add    $0x10,%esp
81005d52:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d55:	8b 40 08             	mov    0x8(%eax),%eax
81005d58:	29 d8                	sub    %ebx,%eax
81005d5a:	89 c2                	mov    %eax,%edx
81005d5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d5f:	89 50 08             	mov    %edx,0x8(%eax)
81005d62:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d65:	8b 00                	mov    (%eax),%eax
81005d67:	89 da                	mov    %ebx,%edx
81005d69:	01 c2                	add    %eax,%edx
81005d6b:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d6e:	89 10                	mov    %edx,(%eax)
81005d70:	b8 00 00 00 00       	mov    $0x0,%eax
81005d75:	eb 18                	jmp    81005d8f <__ssputs_r+0x1b2>
81005d77:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d7a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005d7e:	83 c8 40             	or     $0x40,%eax
81005d81:	89 c2                	mov    %eax,%edx
81005d83:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d86:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005d8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d8f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005d92:	c9                   	leave  
81005d93:	c3                   	ret    

81005d94 <__ssprint_r>:
81005d94:	55                   	push   %ebp
81005d95:	89 e5                	mov    %esp,%ebp
81005d97:	57                   	push   %edi
81005d98:	56                   	push   %esi
81005d99:	53                   	push   %ebx
81005d9a:	83 ec 2c             	sub    $0x2c,%esp
81005d9d:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005da0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81005da7:	8b 03                	mov    (%ebx),%eax
81005da9:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005dac:	be 00 00 00 00       	mov    $0x0,%esi
81005db1:	8b 43 08             	mov    0x8(%ebx),%eax
81005db4:	85 c0                	test   %eax,%eax
81005db6:	75 22                	jne    81005dda <__ssprint_r+0x46>
81005db8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005dbf:	b8 00 00 00 00       	mov    $0x0,%eax
81005dc4:	e9 f5 01 00 00       	jmp    81005fbe <__ssprint_r+0x22a>
81005dc9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005dcc:	8b 08                	mov    (%eax),%ecx
81005dce:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81005dd1:	8b 70 04             	mov    0x4(%eax),%esi
81005dd4:	83 c0 08             	add    $0x8,%eax
81005dd7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005dda:	85 f6                	test   %esi,%esi
81005ddc:	74 eb                	je     81005dc9 <__ssprint_r+0x35>
81005dde:	8b 45 0c             	mov    0xc(%ebp),%eax
81005de1:	8b 78 08             	mov    0x8(%eax),%edi
81005de4:	89 f8                	mov    %edi,%eax
81005de6:	39 c6                	cmp    %eax,%esi
81005de8:	0f 82 38 01 00 00    	jb     81005f26 <__ssprint_r+0x192>
81005dee:	8b 45 0c             	mov    0xc(%ebp),%eax
81005df1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005df5:	98                   	cwtl   
81005df6:	25 80 04 00 00       	and    $0x480,%eax
81005dfb:	85 c0                	test   %eax,%eax
81005dfd:	0f 84 23 01 00 00    	je     81005f26 <__ssprint_r+0x192>
81005e03:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e06:	8b 10                	mov    (%eax),%edx
81005e08:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e0b:	8b 48 10             	mov    0x10(%eax),%ecx
81005e0e:	89 d0                	mov    %edx,%eax
81005e10:	29 c8                	sub    %ecx,%eax
81005e12:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e15:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e18:	8b 50 14             	mov    0x14(%eax),%edx
81005e1b:	89 d0                	mov    %edx,%eax
81005e1d:	01 c0                	add    %eax,%eax
81005e1f:	01 d0                	add    %edx,%eax
81005e21:	89 c2                	mov    %eax,%edx
81005e23:	c1 ea 1f             	shr    $0x1f,%edx
81005e26:	01 d0                	add    %edx,%eax
81005e28:	d1 f8                	sar    %eax
81005e2a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005e2d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005e30:	01 f0                	add    %esi,%eax
81005e32:	8d 50 01             	lea    0x1(%eax),%edx
81005e35:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e38:	39 c2                	cmp    %eax,%edx
81005e3a:	76 0b                	jbe    81005e47 <__ssprint_r+0xb3>
81005e3c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005e3f:	01 f0                	add    %esi,%eax
81005e41:	83 c0 01             	add    $0x1,%eax
81005e44:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005e47:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005e4e:	98                   	cwtl   
81005e4f:	25 00 04 00 00       	and    $0x400,%eax
81005e54:	85 c0                	test   %eax,%eax
81005e56:	74 5a                	je     81005eb2 <__ssprint_r+0x11e>
81005e58:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e5b:	83 ec 08             	sub    $0x8,%esp
81005e5e:	50                   	push   %eax
81005e5f:	ff 75 08             	pushl  0x8(%ebp)
81005e62:	e8 38 cb ff ff       	call   8100299f <_malloc_r>
81005e67:	83 c4 10             	add    $0x10,%esp
81005e6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e6d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005e71:	75 0e                	jne    81005e81 <__ssprint_r+0xed>
81005e73:	8b 45 08             	mov    0x8(%ebp),%eax
81005e76:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005e7c:	e9 17 01 00 00       	jmp    81005f98 <__ssprint_r+0x204>
81005e81:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e84:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e87:	8b 40 10             	mov    0x10(%eax),%eax
81005e8a:	83 ec 04             	sub    $0x4,%esp
81005e8d:	52                   	push   %edx
81005e8e:	50                   	push   %eax
81005e8f:	ff 75 e4             	pushl  -0x1c(%ebp)
81005e92:	e8 21 d4 ff ff       	call   810032b8 <memcpy>
81005e97:	83 c4 10             	add    $0x10,%esp
81005e9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e9d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005ea1:	66 25 7f fb          	and    $0xfb7f,%ax
81005ea5:	0c 80                	or     $0x80,%al
81005ea7:	89 c2                	mov    %eax,%edx
81005ea9:	8b 45 0c             	mov    0xc(%ebp),%eax
81005eac:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005eb0:	eb 45                	jmp    81005ef7 <__ssprint_r+0x163>
81005eb2:	8b 55 e0             	mov    -0x20(%ebp),%edx
81005eb5:	8b 45 0c             	mov    0xc(%ebp),%eax
81005eb8:	8b 40 10             	mov    0x10(%eax),%eax
81005ebb:	83 ec 04             	sub    $0x4,%esp
81005ebe:	52                   	push   %edx
81005ebf:	50                   	push   %eax
81005ec0:	ff 75 08             	pushl  0x8(%ebp)
81005ec3:	e8 82 05 00 00       	call   8100644a <_realloc_r>
81005ec8:	83 c4 10             	add    $0x10,%esp
81005ecb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ece:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005ed2:	75 23                	jne    81005ef7 <__ssprint_r+0x163>
81005ed4:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ed7:	8b 40 10             	mov    0x10(%eax),%eax
81005eda:	83 ec 08             	sub    $0x8,%esp
81005edd:	50                   	push   %eax
81005ede:	ff 75 08             	pushl  0x8(%ebp)
81005ee1:	e8 4c b3 ff ff       	call   81001232 <_free_r>
81005ee6:	83 c4 10             	add    $0x10,%esp
81005ee9:	8b 45 08             	mov    0x8(%ebp),%eax
81005eec:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005ef2:	e9 a1 00 00 00       	jmp    81005f98 <__ssprint_r+0x204>
81005ef7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005efa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005efd:	89 50 10             	mov    %edx,0x10(%eax)
81005f00:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005f03:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005f06:	01 c2                	add    %eax,%edx
81005f08:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f0b:	89 10                	mov    %edx,(%eax)
81005f0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f10:	8b 55 e0             	mov    -0x20(%ebp),%edx
81005f13:	89 50 14             	mov    %edx,0x14(%eax)
81005f16:	89 f7                	mov    %esi,%edi
81005f18:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f1b:	2b 45 dc             	sub    -0x24(%ebp),%eax
81005f1e:	89 c2                	mov    %eax,%edx
81005f20:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f23:	89 50 08             	mov    %edx,0x8(%eax)
81005f26:	89 f8                	mov    %edi,%eax
81005f28:	39 c6                	cmp    %eax,%esi
81005f2a:	73 02                	jae    81005f2e <__ssprint_r+0x19a>
81005f2c:	89 f7                	mov    %esi,%edi
81005f2e:	89 fa                	mov    %edi,%edx
81005f30:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f33:	8b 00                	mov    (%eax),%eax
81005f35:	83 ec 04             	sub    $0x4,%esp
81005f38:	52                   	push   %edx
81005f39:	ff 75 d4             	pushl  -0x2c(%ebp)
81005f3c:	50                   	push   %eax
81005f3d:	e8 0e fc ff ff       	call   81005b50 <memmove>
81005f42:	83 c4 10             	add    $0x10,%esp
81005f45:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f48:	8b 40 08             	mov    0x8(%eax),%eax
81005f4b:	29 f8                	sub    %edi,%eax
81005f4d:	89 c2                	mov    %eax,%edx
81005f4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f52:	89 50 08             	mov    %edx,0x8(%eax)
81005f55:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f58:	8b 00                	mov    (%eax),%eax
81005f5a:	89 fa                	mov    %edi,%edx
81005f5c:	01 c2                	add    %eax,%edx
81005f5e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f61:	89 10                	mov    %edx,(%eax)
81005f63:	89 f7                	mov    %esi,%edi
81005f65:	89 f8                	mov    %edi,%eax
81005f67:	01 45 d4             	add    %eax,-0x2c(%ebp)
81005f6a:	89 f8                	mov    %edi,%eax
81005f6c:	29 c6                	sub    %eax,%esi
81005f6e:	8b 43 08             	mov    0x8(%ebx),%eax
81005f71:	89 fa                	mov    %edi,%edx
81005f73:	29 d0                	sub    %edx,%eax
81005f75:	89 43 08             	mov    %eax,0x8(%ebx)
81005f78:	8b 43 08             	mov    0x8(%ebx),%eax
81005f7b:	85 c0                	test   %eax,%eax
81005f7d:	0f 85 57 fe ff ff    	jne    81005dda <__ssprint_r+0x46>
81005f83:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005f8a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005f91:	b8 00 00 00 00       	mov    $0x0,%eax
81005f96:	eb 26                	jmp    81005fbe <__ssprint_r+0x22a>
81005f98:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f9b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005f9f:	83 c8 40             	or     $0x40,%eax
81005fa2:	89 c2                	mov    %eax,%edx
81005fa4:	8b 45 0c             	mov    0xc(%ebp),%eax
81005fa7:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005fab:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005fb2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005fb9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005fbe:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005fc1:	5b                   	pop    %ebx
81005fc2:	5e                   	pop    %esi
81005fc3:	5f                   	pop    %edi
81005fc4:	5d                   	pop    %ebp
81005fc5:	c3                   	ret    

81005fc6 <_svfiprintf_r>:
81005fc6:	55                   	push   %ebp
81005fc7:	89 e5                	mov    %esp,%ebp
81005fc9:	57                   	push   %edi
81005fca:	56                   	push   %esi
81005fcb:	53                   	push   %ebx
81005fcc:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81005fd2:	c7 45 e4 dd 5b 00 81 	movl   $0x81005bdd,-0x1c(%ebp)
81005fd9:	8b 45 0c             	mov    0xc(%ebp),%eax
81005fdc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005fe0:	98                   	cwtl   
81005fe1:	25 80 00 00 00       	and    $0x80,%eax
81005fe6:	85 c0                	test   %eax,%eax
81005fe8:	74 50                	je     8100603a <_svfiprintf_r+0x74>
81005fea:	8b 45 0c             	mov    0xc(%ebp),%eax
81005fed:	8b 40 10             	mov    0x10(%eax),%eax
81005ff0:	85 c0                	test   %eax,%eax
81005ff2:	75 46                	jne    8100603a <_svfiprintf_r+0x74>
81005ff4:	83 ec 08             	sub    $0x8,%esp
81005ff7:	6a 40                	push   $0x40
81005ff9:	ff 75 08             	pushl  0x8(%ebp)
81005ffc:	e8 9e c9 ff ff       	call   8100299f <_malloc_r>
81006001:	83 c4 10             	add    $0x10,%esp
81006004:	8b 55 0c             	mov    0xc(%ebp),%edx
81006007:	89 02                	mov    %eax,(%edx)
81006009:	8b 45 0c             	mov    0xc(%ebp),%eax
8100600c:	8b 10                	mov    (%eax),%edx
8100600e:	8b 45 0c             	mov    0xc(%ebp),%eax
81006011:	89 50 10             	mov    %edx,0x10(%eax)
81006014:	8b 45 0c             	mov    0xc(%ebp),%eax
81006017:	8b 00                	mov    (%eax),%eax
81006019:	85 c0                	test   %eax,%eax
8100601b:	75 13                	jne    81006030 <_svfiprintf_r+0x6a>
8100601d:	8b 45 08             	mov    0x8(%ebp),%eax
81006020:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006026:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100602b:	e9 c8 02 00 00       	jmp    810062f8 <_svfiprintf_r+0x332>
81006030:	8b 45 0c             	mov    0xc(%ebp),%eax
81006033:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
8100603a:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100603d:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81006044:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81006048:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
8100604c:	8b 45 14             	mov    0x14(%ebp),%eax
8100604f:	89 45 80             	mov    %eax,-0x80(%ebp)
81006052:	89 de                	mov    %ebx,%esi
81006054:	eb 03                	jmp    81006059 <_svfiprintf_r+0x93>
81006056:	83 c3 01             	add    $0x1,%ebx
81006059:	0f b6 03             	movzbl (%ebx),%eax
8100605c:	84 c0                	test   %al,%al
8100605e:	74 07                	je     81006067 <_svfiprintf_r+0xa1>
81006060:	0f b6 03             	movzbl (%ebx),%eax
81006063:	3c 25                	cmp    $0x25,%al
81006065:	75 ef                	jne    81006056 <_svfiprintf_r+0x90>
81006067:	89 d8                	mov    %ebx,%eax
81006069:	29 f0                	sub    %esi,%eax
8100606b:	85 c0                	test   %eax,%eax
8100606d:	74 2b                	je     8100609a <_svfiprintf_r+0xd4>
8100606f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81006075:	50                   	push   %eax
81006076:	56                   	push   %esi
81006077:	ff 75 0c             	pushl  0xc(%ebp)
8100607a:	ff 75 08             	pushl  0x8(%ebp)
8100607d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006080:	ff d0                	call   *%eax
81006082:	83 c4 10             	add    $0x10,%esp
81006085:	83 f8 ff             	cmp    $0xffffffff,%eax
81006088:	0f 84 4a 02 00 00    	je     810062d8 <_svfiprintf_r+0x312>
8100608e:	8b 45 98             	mov    -0x68(%ebp),%eax
81006091:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81006097:	89 45 98             	mov    %eax,-0x68(%ebp)
8100609a:	0f b6 03             	movzbl (%ebx),%eax
8100609d:	84 c0                	test   %al,%al
8100609f:	0f 84 36 02 00 00    	je     810062db <_svfiprintf_r+0x315>
810060a5:	83 c3 01             	add    $0x1,%ebx
810060a8:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810060af:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
810060b6:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
810060bd:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810060c4:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
810060c8:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810060cf:	c7 45 e0 4c 77 00 81 	movl   $0x8100774c,-0x20(%ebp)
810060d6:	eb 1b                	jmp    810060f3 <_svfiprintf_r+0x12d>
810060d8:	8b 55 84             	mov    -0x7c(%ebp),%edx
810060db:	89 f0                	mov    %esi,%eax
810060dd:	2b 45 e0             	sub    -0x20(%ebp),%eax
810060e0:	be 01 00 00 00       	mov    $0x1,%esi
810060e5:	89 c1                	mov    %eax,%ecx
810060e7:	d3 e6                	shl    %cl,%esi
810060e9:	89 f0                	mov    %esi,%eax
810060eb:	09 d0                	or     %edx,%eax
810060ed:	89 45 84             	mov    %eax,-0x7c(%ebp)
810060f0:	83 c3 01             	add    $0x1,%ebx
810060f3:	0f b6 03             	movzbl (%ebx),%eax
810060f6:	0f be c0             	movsbl %al,%eax
810060f9:	83 ec 04             	sub    $0x4,%esp
810060fc:	6a 05                	push   $0x5
810060fe:	50                   	push   %eax
810060ff:	ff 75 e0             	pushl  -0x20(%ebp)
81006102:	e8 c9 d0 ff ff       	call   810031d0 <memchr>
81006107:	83 c4 10             	add    $0x10,%esp
8100610a:	89 c6                	mov    %eax,%esi
8100610c:	85 f6                	test   %esi,%esi
8100610e:	75 c8                	jne    810060d8 <_svfiprintf_r+0x112>
81006110:	8b 45 84             	mov    -0x7c(%ebp),%eax
81006113:	83 e0 10             	and    $0x10,%eax
81006116:	85 c0                	test   %eax,%eax
81006118:	74 04                	je     8100611e <_svfiprintf_r+0x158>
8100611a:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
8100611e:	8b 45 84             	mov    -0x7c(%ebp),%eax
81006121:	83 e0 08             	and    $0x8,%eax
81006124:	85 c0                	test   %eax,%eax
81006126:	74 04                	je     8100612c <_svfiprintf_r+0x166>
81006128:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
8100612c:	0f b6 03             	movzbl (%ebx),%eax
8100612f:	3c 2a                	cmp    $0x2a,%al
81006131:	75 4a                	jne    8100617d <_svfiprintf_r+0x1b7>
81006133:	8b 45 80             	mov    -0x80(%ebp),%eax
81006136:	8d 50 04             	lea    0x4(%eax),%edx
81006139:	89 55 80             	mov    %edx,-0x80(%ebp)
8100613c:	8b 00                	mov    (%eax),%eax
8100613e:	89 45 90             	mov    %eax,-0x70(%ebp)
81006141:	8b 45 90             	mov    -0x70(%ebp),%eax
81006144:	85 c0                	test   %eax,%eax
81006146:	79 11                	jns    81006159 <_svfiprintf_r+0x193>
81006148:	8b 45 90             	mov    -0x70(%ebp),%eax
8100614b:	f7 d8                	neg    %eax
8100614d:	89 45 90             	mov    %eax,-0x70(%ebp)
81006150:	8b 45 84             	mov    -0x7c(%ebp),%eax
81006153:	83 c8 02             	or     $0x2,%eax
81006156:	89 45 84             	mov    %eax,-0x7c(%ebp)
81006159:	83 c3 01             	add    $0x1,%ebx
8100615c:	eb 2d                	jmp    8100618b <_svfiprintf_r+0x1c5>
8100615e:	8b 55 90             	mov    -0x70(%ebp),%edx
81006161:	89 d0                	mov    %edx,%eax
81006163:	c1 e0 02             	shl    $0x2,%eax
81006166:	01 d0                	add    %edx,%eax
81006168:	01 c0                	add    %eax,%eax
8100616a:	89 c2                	mov    %eax,%edx
8100616c:	0f b6 03             	movzbl (%ebx),%eax
8100616f:	0f be c0             	movsbl %al,%eax
81006172:	83 e8 30             	sub    $0x30,%eax
81006175:	01 d0                	add    %edx,%eax
81006177:	89 45 90             	mov    %eax,-0x70(%ebp)
8100617a:	83 c3 01             	add    $0x1,%ebx
8100617d:	0f b6 03             	movzbl (%ebx),%eax
81006180:	0f be c0             	movsbl %al,%eax
81006183:	83 e8 30             	sub    $0x30,%eax
81006186:	83 f8 09             	cmp    $0x9,%eax
81006189:	76 d3                	jbe    8100615e <_svfiprintf_r+0x198>
8100618b:	0f b6 03             	movzbl (%ebx),%eax
8100618e:	3c 2e                	cmp    $0x2e,%al
81006190:	75 61                	jne    810061f3 <_svfiprintf_r+0x22d>
81006192:	83 c3 01             	add    $0x1,%ebx
81006195:	0f b6 03             	movzbl (%ebx),%eax
81006198:	3c 2a                	cmp    $0x2a,%al
8100619a:	75 21                	jne    810061bd <_svfiprintf_r+0x1f7>
8100619c:	83 c3 01             	add    $0x1,%ebx
8100619f:	8b 45 80             	mov    -0x80(%ebp),%eax
810061a2:	8d 50 04             	lea    0x4(%eax),%edx
810061a5:	89 55 80             	mov    %edx,-0x80(%ebp)
810061a8:	8b 00                	mov    (%eax),%eax
810061aa:	89 45 88             	mov    %eax,-0x78(%ebp)
810061ad:	8b 45 88             	mov    -0x78(%ebp),%eax
810061b0:	85 c0                	test   %eax,%eax
810061b2:	79 3f                	jns    810061f3 <_svfiprintf_r+0x22d>
810061b4:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
810061bb:	eb 36                	jmp    810061f3 <_svfiprintf_r+0x22d>
810061bd:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810061c4:	eb 1f                	jmp    810061e5 <_svfiprintf_r+0x21f>
810061c6:	8b 55 88             	mov    -0x78(%ebp),%edx
810061c9:	89 d0                	mov    %edx,%eax
810061cb:	c1 e0 02             	shl    $0x2,%eax
810061ce:	01 d0                	add    %edx,%eax
810061d0:	01 c0                	add    %eax,%eax
810061d2:	89 c2                	mov    %eax,%edx
810061d4:	0f b6 03             	movzbl (%ebx),%eax
810061d7:	0f be c0             	movsbl %al,%eax
810061da:	83 e8 30             	sub    $0x30,%eax
810061dd:	01 d0                	add    %edx,%eax
810061df:	89 45 88             	mov    %eax,-0x78(%ebp)
810061e2:	83 c3 01             	add    $0x1,%ebx
810061e5:	0f b6 03             	movzbl (%ebx),%eax
810061e8:	0f be c0             	movsbl %al,%eax
810061eb:	83 e8 30             	sub    $0x30,%eax
810061ee:	83 f8 09             	cmp    $0x9,%eax
810061f1:	76 d3                	jbe    810061c6 <_svfiprintf_r+0x200>
810061f3:	c7 45 e0 52 77 00 81 	movl   $0x81007752,-0x20(%ebp)
810061fa:	0f b6 03             	movzbl (%ebx),%eax
810061fd:	0f be c0             	movsbl %al,%eax
81006200:	83 ec 04             	sub    $0x4,%esp
81006203:	6a 03                	push   $0x3
81006205:	50                   	push   %eax
81006206:	ff 75 e0             	pushl  -0x20(%ebp)
81006209:	e8 c2 cf ff ff       	call   810031d0 <memchr>
8100620e:	83 c4 10             	add    $0x10,%esp
81006211:	89 c6                	mov    %eax,%esi
81006213:	85 f6                	test   %esi,%esi
81006215:	74 1b                	je     81006232 <_svfiprintf_r+0x26c>
81006217:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100621a:	89 f0                	mov    %esi,%eax
8100621c:	2b 45 e0             	sub    -0x20(%ebp),%eax
8100621f:	be 40 00 00 00       	mov    $0x40,%esi
81006224:	89 c1                	mov    %eax,%ecx
81006226:	d3 e6                	shl    %cl,%esi
81006228:	89 f0                	mov    %esi,%eax
8100622a:	09 d0                	or     %edx,%eax
8100622c:	89 45 84             	mov    %eax,-0x7c(%ebp)
8100622f:	83 c3 01             	add    $0x1,%ebx
81006232:	89 d8                	mov    %ebx,%eax
81006234:	8d 58 01             	lea    0x1(%eax),%ebx
81006237:	0f b6 00             	movzbl (%eax),%eax
8100623a:	88 45 9c             	mov    %al,-0x64(%ebp)
8100623d:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
81006241:	0f be c0             	movsbl %al,%eax
81006244:	83 ec 04             	sub    $0x4,%esp
81006247:	6a 06                	push   $0x6
81006249:	50                   	push   %eax
8100624a:	68 56 77 00 81       	push   $0x81007756
8100624f:	e8 7c cf ff ff       	call   810031d0 <memchr>
81006254:	83 c4 10             	add    $0x10,%esp
81006257:	89 c6                	mov    %eax,%esi
81006259:	85 f6                	test   %esi,%esi
8100625b:	74 4b                	je     810062a8 <_svfiprintf_r+0x2e2>
8100625d:	b8 00 00 00 00       	mov    $0x0,%eax
81006262:	85 c0                	test   %eax,%eax
81006264:	75 22                	jne    81006288 <_svfiprintf_r+0x2c2>
81006266:	8b 45 84             	mov    -0x7c(%ebp),%eax
81006269:	25 00 01 00 00       	and    $0x100,%eax
8100626e:	85 c0                	test   %eax,%eax
81006270:	74 0b                	je     8100627d <_svfiprintf_r+0x2b7>
81006272:	8b 45 80             	mov    -0x80(%ebp),%eax
81006275:	83 c0 0c             	add    $0xc,%eax
81006278:	89 45 80             	mov    %eax,-0x80(%ebp)
8100627b:	eb 49                	jmp    810062c6 <_svfiprintf_r+0x300>
8100627d:	8b 45 80             	mov    -0x80(%ebp),%eax
81006280:	83 c0 08             	add    $0x8,%eax
81006283:	89 45 80             	mov    %eax,-0x80(%ebp)
81006286:	eb 3e                	jmp    810062c6 <_svfiprintf_r+0x300>
81006288:	83 ec 0c             	sub    $0xc,%esp
8100628b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100628e:	50                   	push   %eax
8100628f:	ff 75 e4             	pushl  -0x1c(%ebp)
81006292:	ff 75 0c             	pushl  0xc(%ebp)
81006295:	8d 45 84             	lea    -0x7c(%ebp),%eax
81006298:	50                   	push   %eax
81006299:	ff 75 08             	pushl  0x8(%ebp)
8100629c:	e8 5f 9d ff 7e       	call   0 <show_promot-0x81000000>
810062a1:	83 c4 20             	add    $0x20,%esp
810062a4:	89 c7                	mov    %eax,%edi
810062a6:	eb 1e                	jmp    810062c6 <_svfiprintf_r+0x300>
810062a8:	83 ec 0c             	sub    $0xc,%esp
810062ab:	8d 45 80             	lea    -0x80(%ebp),%eax
810062ae:	50                   	push   %eax
810062af:	ff 75 e4             	pushl  -0x1c(%ebp)
810062b2:	ff 75 0c             	pushl  0xc(%ebp)
810062b5:	8d 45 84             	lea    -0x7c(%ebp),%eax
810062b8:	50                   	push   %eax
810062b9:	ff 75 08             	pushl  0x8(%ebp)
810062bc:	e8 d3 d7 ff ff       	call   81003a94 <_printf_i>
810062c1:	83 c4 20             	add    $0x20,%esp
810062c4:	89 c7                	mov    %eax,%edi
810062c6:	83 ff ff             	cmp    $0xffffffff,%edi
810062c9:	74 13                	je     810062de <_svfiprintf_r+0x318>
810062cb:	8b 45 98             	mov    -0x68(%ebp),%eax
810062ce:	01 f8                	add    %edi,%eax
810062d0:	89 45 98             	mov    %eax,-0x68(%ebp)
810062d3:	e9 7a fd ff ff       	jmp    81006052 <_svfiprintf_r+0x8c>
810062d8:	90                   	nop
810062d9:	eb 04                	jmp    810062df <_svfiprintf_r+0x319>
810062db:	90                   	nop
810062dc:	eb 01                	jmp    810062df <_svfiprintf_r+0x319>
810062de:	90                   	nop
810062df:	8b 45 0c             	mov    0xc(%ebp),%eax
810062e2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810062e6:	98                   	cwtl   
810062e7:	83 e0 40             	and    $0x40,%eax
810062ea:	85 c0                	test   %eax,%eax
810062ec:	75 05                	jne    810062f3 <_svfiprintf_r+0x32d>
810062ee:	8b 45 98             	mov    -0x68(%ebp),%eax
810062f1:	eb 05                	jmp    810062f8 <_svfiprintf_r+0x332>
810062f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810062f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810062fb:	5b                   	pop    %ebx
810062fc:	5e                   	pop    %esi
810062fd:	5f                   	pop    %edi
810062fe:	5d                   	pop    %ebp
810062ff:	c3                   	ret    

81006300 <__sputc_r>:
81006300:	55                   	push   %ebp
81006301:	89 e5                	mov    %esp,%ebp
81006303:	83 ec 08             	sub    $0x8,%esp
81006306:	8b 45 10             	mov    0x10(%ebp),%eax
81006309:	8b 40 08             	mov    0x8(%eax),%eax
8100630c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100630f:	8b 45 10             	mov    0x10(%ebp),%eax
81006312:	89 50 08             	mov    %edx,0x8(%eax)
81006315:	8b 45 10             	mov    0x10(%ebp),%eax
81006318:	8b 40 08             	mov    0x8(%eax),%eax
8100631b:	85 c0                	test   %eax,%eax
8100631d:	79 17                	jns    81006336 <__sputc_r+0x36>
8100631f:	8b 45 10             	mov    0x10(%ebp),%eax
81006322:	8b 50 08             	mov    0x8(%eax),%edx
81006325:	8b 45 10             	mov    0x10(%ebp),%eax
81006328:	8b 40 18             	mov    0x18(%eax),%eax
8100632b:	39 c2                	cmp    %eax,%edx
8100632d:	7c 21                	jl     81006350 <__sputc_r+0x50>
8100632f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006332:	3c 0a                	cmp    $0xa,%al
81006334:	74 1a                	je     81006350 <__sputc_r+0x50>
81006336:	8b 45 10             	mov    0x10(%ebp),%eax
81006339:	8b 00                	mov    (%eax),%eax
8100633b:	8d 48 01             	lea    0x1(%eax),%ecx
8100633e:	8b 55 10             	mov    0x10(%ebp),%edx
81006341:	89 0a                	mov    %ecx,(%edx)
81006343:	8b 55 0c             	mov    0xc(%ebp),%edx
81006346:	88 10                	mov    %dl,(%eax)
81006348:	0f b6 00             	movzbl (%eax),%eax
8100634b:	0f b6 c0             	movzbl %al,%eax
8100634e:	eb 14                	jmp    81006364 <__sputc_r+0x64>
81006350:	83 ec 04             	sub    $0x4,%esp
81006353:	ff 75 10             	pushl  0x10(%ebp)
81006356:	ff 75 0c             	pushl  0xc(%ebp)
81006359:	ff 75 08             	pushl  0x8(%ebp)
8100635c:	e8 9e e6 ff ff       	call   810049ff <__swbuf_r>
81006361:	83 c4 10             	add    $0x10,%esp
81006364:	c9                   	leave  
81006365:	c3                   	ret    

81006366 <_putc_r>:
81006366:	55                   	push   %ebp
81006367:	89 e5                	mov    %esp,%ebp
81006369:	53                   	push   %ebx
8100636a:	83 ec 14             	sub    $0x14,%esp
8100636d:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006370:	8b 45 08             	mov    0x8(%ebp),%eax
81006373:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006376:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100637a:	74 18                	je     81006394 <_putc_r+0x2e>
8100637c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100637f:	8b 40 38             	mov    0x38(%eax),%eax
81006382:	85 c0                	test   %eax,%eax
81006384:	75 0e                	jne    81006394 <_putc_r+0x2e>
81006386:	83 ec 0c             	sub    $0xc,%esp
81006389:	ff 75 f4             	pushl  -0xc(%ebp)
8100638c:	e8 3f ad ff ff       	call   810010d0 <__sinit>
81006391:	83 c4 10             	add    $0x10,%esp
81006394:	83 ec 04             	sub    $0x4,%esp
81006397:	53                   	push   %ebx
81006398:	ff 75 0c             	pushl  0xc(%ebp)
8100639b:	ff 75 08             	pushl  0x8(%ebp)
8100639e:	e8 5d ff ff ff       	call   81006300 <__sputc_r>
810063a3:	83 c4 10             	add    $0x10,%esp
810063a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810063a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810063ac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810063af:	c9                   	leave  
810063b0:	c3                   	ret    

810063b1 <putc>:
810063b1:	55                   	push   %ebp
810063b2:	89 e5                	mov    %esp,%ebp
810063b4:	53                   	push   %ebx
810063b5:	83 ec 14             	sub    $0x14,%esp
810063b8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810063bb:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
810063c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810063c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063c6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810063c9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810063cd:	74 18                	je     810063e7 <putc+0x36>
810063cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810063d2:	8b 40 38             	mov    0x38(%eax),%eax
810063d5:	85 c0                	test   %eax,%eax
810063d7:	75 0e                	jne    810063e7 <putc+0x36>
810063d9:	83 ec 0c             	sub    $0xc,%esp
810063dc:	ff 75 f0             	pushl  -0x10(%ebp)
810063df:	e8 ec ac ff ff       	call   810010d0 <__sinit>
810063e4:	83 c4 10             	add    $0x10,%esp
810063e7:	83 ec 04             	sub    $0x4,%esp
810063ea:	53                   	push   %ebx
810063eb:	ff 75 08             	pushl  0x8(%ebp)
810063ee:	ff 75 f4             	pushl  -0xc(%ebp)
810063f1:	e8 0a ff ff ff       	call   81006300 <__sputc_r>
810063f6:	83 c4 10             	add    $0x10,%esp
810063f9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810063fc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810063ff:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006402:	c9                   	leave  
81006403:	c3                   	ret    

81006404 <_read_r>:
81006404:	55                   	push   %ebp
81006405:	89 e5                	mov    %esp,%ebp
81006407:	83 ec 18             	sub    $0x18,%esp
8100640a:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
81006411:	00 00 00 
81006414:	83 ec 04             	sub    $0x4,%esp
81006417:	ff 75 14             	pushl  0x14(%ebp)
8100641a:	ff 75 10             	pushl  0x10(%ebp)
8100641d:	ff 75 0c             	pushl  0xc(%ebp)
81006420:	e8 96 a3 ff ff       	call   810007bb <read>
81006425:	83 c4 10             	add    $0x10,%esp
81006428:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100642b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100642f:	75 14                	jne    81006445 <_read_r+0x41>
81006431:	a1 f4 86 00 81       	mov    0x810086f4,%eax
81006436:	85 c0                	test   %eax,%eax
81006438:	74 0b                	je     81006445 <_read_r+0x41>
8100643a:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
81006440:	8b 45 08             	mov    0x8(%ebp),%eax
81006443:	89 10                	mov    %edx,(%eax)
81006445:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006448:	c9                   	leave  
81006449:	c3                   	ret    

8100644a <_realloc_r>:
8100644a:	55                   	push   %ebp
8100644b:	89 e5                	mov    %esp,%ebp
8100644d:	83 ec 78             	sub    $0x78,%esp
81006450:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006454:	75 16                	jne    8100646c <_realloc_r+0x22>
81006456:	83 ec 08             	sub    $0x8,%esp
81006459:	ff 75 10             	pushl  0x10(%ebp)
8100645c:	ff 75 08             	pushl  0x8(%ebp)
8100645f:	e8 3b c5 ff ff       	call   8100299f <_malloc_r>
81006464:	83 c4 10             	add    $0x10,%esp
81006467:	e9 b6 08 00 00       	jmp    81006d22 <_realloc_r+0x8d8>
8100646c:	83 ec 0c             	sub    $0xc,%esp
8100646f:	ff 75 08             	pushl  0x8(%ebp)
81006472:	e8 11 cf ff ff       	call   81003388 <__malloc_lock>
81006477:	83 c4 10             	add    $0x10,%esp
8100647a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100647d:	83 e8 08             	sub    $0x8,%eax
81006480:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81006483:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006486:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006489:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100648c:	8b 40 04             	mov    0x4(%eax),%eax
8100648f:	83 e0 fc             	and    $0xfffffffc,%eax
81006492:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006495:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006498:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100649b:	8b 45 10             	mov    0x10(%ebp),%eax
8100649e:	83 c0 0b             	add    $0xb,%eax
810064a1:	83 f8 16             	cmp    $0x16,%eax
810064a4:	76 0b                	jbe    810064b1 <_realloc_r+0x67>
810064a6:	8b 45 10             	mov    0x10(%ebp),%eax
810064a9:	83 c0 0b             	add    $0xb,%eax
810064ac:	83 e0 f8             	and    $0xfffffff8,%eax
810064af:	eb 05                	jmp    810064b6 <_realloc_r+0x6c>
810064b1:	b8 10 00 00 00       	mov    $0x10,%eax
810064b6:	89 45 bc             	mov    %eax,-0x44(%ebp)
810064b9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810064bc:	85 c0                	test   %eax,%eax
810064be:	78 08                	js     810064c8 <_realloc_r+0x7e>
810064c0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810064c3:	3b 45 10             	cmp    0x10(%ebp),%eax
810064c6:	73 13                	jae    810064db <_realloc_r+0x91>
810064c8:	8b 45 08             	mov    0x8(%ebp),%eax
810064cb:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810064d1:	b8 00 00 00 00       	mov    $0x0,%eax
810064d6:	e9 47 08 00 00       	jmp    81006d22 <_realloc_r+0x8d8>
810064db:	8b 55 c0             	mov    -0x40(%ebp),%edx
810064de:	8b 45 bc             	mov    -0x44(%ebp),%eax
810064e1:	39 c2                	cmp    %eax,%edx
810064e3:	0f 8d 8b 07 00 00    	jge    81006c74 <_realloc_r+0x82a>
810064e9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810064ec:	8b 45 c0             	mov    -0x40(%ebp),%eax
810064ef:	01 d0                	add    %edx,%eax
810064f1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810064f4:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810064f9:	8b 40 08             	mov    0x8(%eax),%eax
810064fc:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810064ff:	74 1e                	je     8100651f <_realloc_r+0xd5>
81006501:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006504:	8b 40 04             	mov    0x4(%eax),%eax
81006507:	83 e0 fe             	and    $0xfffffffe,%eax
8100650a:	89 c2                	mov    %eax,%edx
8100650c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100650f:	01 d0                	add    %edx,%eax
81006511:	8b 40 04             	mov    0x4(%eax),%eax
81006514:	83 e0 01             	and    $0x1,%eax
81006517:	85 c0                	test   %eax,%eax
81006519:	0f 85 ca 00 00 00    	jne    810065e9 <_realloc_r+0x19f>
8100651f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006522:	8b 40 04             	mov    0x4(%eax),%eax
81006525:	83 e0 fc             	and    $0xfffffffc,%eax
81006528:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100652b:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81006530:	8b 40 08             	mov    0x8(%eax),%eax
81006533:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006536:	75 71                	jne    810065a9 <_realloc_r+0x15f>
81006538:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100653b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100653e:	01 d0                	add    %edx,%eax
81006540:	89 c2                	mov    %eax,%edx
81006542:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006545:	83 c0 10             	add    $0x10,%eax
81006548:	39 c2                	cmp    %eax,%edx
8100654a:	0f 8c a9 00 00 00    	jl     810065f9 <_realloc_r+0x1af>
81006550:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006553:	01 45 f0             	add    %eax,-0x10(%ebp)
81006556:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
8100655b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
8100655e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006561:	01 c8                	add    %ecx,%eax
81006563:	89 42 08             	mov    %eax,0x8(%edx)
81006566:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006569:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100656c:	89 c2                	mov    %eax,%edx
8100656e:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81006573:	8b 40 08             	mov    0x8(%eax),%eax
81006576:	83 ca 01             	or     $0x1,%edx
81006579:	89 50 04             	mov    %edx,0x4(%eax)
8100657c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100657f:	8b 40 04             	mov    0x4(%eax),%eax
81006582:	83 e0 01             	and    $0x1,%eax
81006585:	0b 45 bc             	or     -0x44(%ebp),%eax
81006588:	89 c2                	mov    %eax,%edx
8100658a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100658d:	89 50 04             	mov    %edx,0x4(%eax)
81006590:	83 ec 0c             	sub    $0xc,%esp
81006593:	ff 75 08             	pushl  0x8(%ebp)
81006596:	e8 f3 cd ff ff       	call   8100338e <__malloc_unlock>
8100659b:	83 c4 10             	add    $0x10,%esp
8100659e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810065a1:	83 c0 08             	add    $0x8,%eax
810065a4:	e9 79 07 00 00       	jmp    81006d22 <_realloc_r+0x8d8>
810065a9:	8b 55 e8             	mov    -0x18(%ebp),%edx
810065ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810065af:	01 d0                	add    %edx,%eax
810065b1:	89 c2                	mov    %eax,%edx
810065b3:	8b 45 bc             	mov    -0x44(%ebp),%eax
810065b6:	39 c2                	cmp    %eax,%edx
810065b8:	7c 3f                	jl     810065f9 <_realloc_r+0x1af>
810065ba:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065bd:	8b 40 0c             	mov    0xc(%eax),%eax
810065c0:	89 45 b8             	mov    %eax,-0x48(%ebp)
810065c3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065c6:	8b 40 08             	mov    0x8(%eax),%eax
810065c9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810065cc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810065cf:	8b 55 b8             	mov    -0x48(%ebp),%edx
810065d2:	89 50 0c             	mov    %edx,0xc(%eax)
810065d5:	8b 45 b8             	mov    -0x48(%ebp),%eax
810065d8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810065db:	89 50 08             	mov    %edx,0x8(%eax)
810065de:	8b 45 e8             	mov    -0x18(%ebp),%eax
810065e1:	01 45 f0             	add    %eax,-0x10(%ebp)
810065e4:	e9 8c 06 00 00       	jmp    81006c75 <_realloc_r+0x82b>
810065e9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810065f0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810065f7:	eb 01                	jmp    810065fa <_realloc_r+0x1b0>
810065f9:	90                   	nop
810065fa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810065fd:	8b 40 04             	mov    0x4(%eax),%eax
81006600:	83 e0 01             	and    $0x1,%eax
81006603:	85 c0                	test   %eax,%eax
81006605:	0f 85 d6 04 00 00    	jne    81006ae1 <_realloc_r+0x697>
8100660b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100660e:	8b 00                	mov    (%eax),%eax
81006610:	f7 d8                	neg    %eax
81006612:	89 c2                	mov    %eax,%edx
81006614:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006617:	01 d0                	add    %edx,%eax
81006619:	89 45 b0             	mov    %eax,-0x50(%ebp)
8100661c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100661f:	8b 40 04             	mov    0x4(%eax),%eax
81006622:	83 e0 fc             	and    $0xfffffffc,%eax
81006625:	89 45 ac             	mov    %eax,-0x54(%ebp)
81006628:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100662c:	0f 84 4a 03 00 00    	je     8100697c <_realloc_r+0x532>
81006632:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
81006637:	8b 40 08             	mov    0x8(%eax),%eax
8100663a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100663d:	0f 85 b0 01 00 00    	jne    810067f3 <_realloc_r+0x3a9>
81006643:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006646:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006649:	01 c2                	add    %eax,%edx
8100664b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100664e:	01 d0                	add    %edx,%eax
81006650:	89 c2                	mov    %eax,%edx
81006652:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006655:	83 c0 10             	add    $0x10,%eax
81006658:	39 c2                	cmp    %eax,%edx
8100665a:	0f 8c 1c 03 00 00    	jl     8100697c <_realloc_r+0x532>
81006660:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006663:	8b 40 0c             	mov    0xc(%eax),%eax
81006666:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006669:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100666c:	8b 40 08             	mov    0x8(%eax),%eax
8100666f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006672:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006675:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006678:	89 50 0c             	mov    %edx,0xc(%eax)
8100667b:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100667e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006681:	89 50 08             	mov    %edx,0x8(%eax)
81006684:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006687:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100668a:	8b 55 ac             	mov    -0x54(%ebp),%edx
8100668d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006690:	01 d0                	add    %edx,%eax
81006692:	01 45 f0             	add    %eax,-0x10(%ebp)
81006695:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006698:	83 c0 08             	add    $0x8,%eax
8100669b:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100669e:	8b 45 c0             	mov    -0x40(%ebp),%eax
810066a1:	83 e8 04             	sub    $0x4,%eax
810066a4:	89 45 a0             	mov    %eax,-0x60(%ebp)
810066a7:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810066ab:	0f 87 de 00 00 00    	ja     8100678f <_realloc_r+0x345>
810066b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810066b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810066b7:	8b 45 a8             	mov    -0x58(%ebp),%eax
810066ba:	89 45 e0             	mov    %eax,-0x20(%ebp)
810066bd:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810066c1:	0f 86 90 00 00 00    	jbe    81006757 <_realloc_r+0x30d>
810066c7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810066ca:	8d 42 04             	lea    0x4(%edx),%eax
810066cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810066d0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810066d3:	8d 48 04             	lea    0x4(%eax),%ecx
810066d6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810066d9:	8b 12                	mov    (%edx),%edx
810066db:	89 10                	mov    %edx,(%eax)
810066dd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810066e0:	8d 42 04             	lea    0x4(%edx),%eax
810066e3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810066e6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810066e9:	8d 48 04             	lea    0x4(%eax),%ecx
810066ec:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810066ef:	8b 12                	mov    (%edx),%edx
810066f1:	89 10                	mov    %edx,(%eax)
810066f3:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810066f7:	76 5e                	jbe    81006757 <_realloc_r+0x30d>
810066f9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810066fc:	8d 42 04             	lea    0x4(%edx),%eax
810066ff:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006702:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006705:	8d 48 04             	lea    0x4(%eax),%ecx
81006708:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100670b:	8b 12                	mov    (%edx),%edx
8100670d:	89 10                	mov    %edx,(%eax)
8100670f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006712:	8d 42 04             	lea    0x4(%edx),%eax
81006715:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006718:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100671b:	8d 48 04             	lea    0x4(%eax),%ecx
8100671e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006721:	8b 12                	mov    (%edx),%edx
81006723:	89 10                	mov    %edx,(%eax)
81006725:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81006729:	76 2c                	jbe    81006757 <_realloc_r+0x30d>
8100672b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100672e:	8d 42 04             	lea    0x4(%edx),%eax
81006731:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006734:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006737:	8d 48 04             	lea    0x4(%eax),%ecx
8100673a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100673d:	8b 12                	mov    (%edx),%edx
8100673f:	89 10                	mov    %edx,(%eax)
81006741:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006744:	8d 42 04             	lea    0x4(%edx),%eax
81006747:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100674a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100674d:	8d 48 04             	lea    0x4(%eax),%ecx
81006750:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006753:	8b 12                	mov    (%edx),%edx
81006755:	89 10                	mov    %edx,(%eax)
81006757:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100675a:	8d 42 04             	lea    0x4(%edx),%eax
8100675d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006760:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006763:	8d 48 04             	lea    0x4(%eax),%ecx
81006766:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006769:	8b 12                	mov    (%edx),%edx
8100676b:	89 10                	mov    %edx,(%eax)
8100676d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006770:	8d 42 04             	lea    0x4(%edx),%eax
81006773:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006776:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006779:	8d 48 04             	lea    0x4(%eax),%ecx
8100677c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100677f:	8b 12                	mov    (%edx),%edx
81006781:	89 10                	mov    %edx,(%eax)
81006783:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006786:	8b 10                	mov    (%eax),%edx
81006788:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100678b:	89 10                	mov    %edx,(%eax)
8100678d:	eb 14                	jmp    810067a3 <_realloc_r+0x359>
8100678f:	83 ec 04             	sub    $0x4,%esp
81006792:	ff 75 a0             	pushl  -0x60(%ebp)
81006795:	ff 75 0c             	pushl  0xc(%ebp)
81006798:	ff 75 a8             	pushl  -0x58(%ebp)
8100679b:	e8 b0 f3 ff ff       	call   81005b50 <memmove>
810067a0:	83 c4 10             	add    $0x10,%esp
810067a3:	ba c0 7b 00 81       	mov    $0x81007bc0,%edx
810067a8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810067ab:	8b 45 bc             	mov    -0x44(%ebp),%eax
810067ae:	01 c8                	add    %ecx,%eax
810067b0:	89 42 08             	mov    %eax,0x8(%edx)
810067b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810067b6:	2b 45 bc             	sub    -0x44(%ebp),%eax
810067b9:	89 c2                	mov    %eax,%edx
810067bb:	b8 c0 7b 00 81       	mov    $0x81007bc0,%eax
810067c0:	8b 40 08             	mov    0x8(%eax),%eax
810067c3:	83 ca 01             	or     $0x1,%edx
810067c6:	89 50 04             	mov    %edx,0x4(%eax)
810067c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067cc:	8b 40 04             	mov    0x4(%eax),%eax
810067cf:	83 e0 01             	and    $0x1,%eax
810067d2:	0b 45 bc             	or     -0x44(%ebp),%eax
810067d5:	89 c2                	mov    %eax,%edx
810067d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067da:	89 50 04             	mov    %edx,0x4(%eax)
810067dd:	83 ec 0c             	sub    $0xc,%esp
810067e0:	ff 75 08             	pushl  0x8(%ebp)
810067e3:	e8 a6 cb ff ff       	call   8100338e <__malloc_unlock>
810067e8:	83 c4 10             	add    $0x10,%esp
810067eb:	8b 45 a8             	mov    -0x58(%ebp),%eax
810067ee:	e9 2f 05 00 00       	jmp    81006d22 <_realloc_r+0x8d8>
810067f3:	8b 55 e8             	mov    -0x18(%ebp),%edx
810067f6:	8b 45 ac             	mov    -0x54(%ebp),%eax
810067f9:	01 c2                	add    %eax,%edx
810067fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810067fe:	01 d0                	add    %edx,%eax
81006800:	89 c2                	mov    %eax,%edx
81006802:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006805:	39 c2                	cmp    %eax,%edx
81006807:	0f 8c 6f 01 00 00    	jl     8100697c <_realloc_r+0x532>
8100680d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006810:	8b 40 0c             	mov    0xc(%eax),%eax
81006813:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006816:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006819:	8b 40 08             	mov    0x8(%eax),%eax
8100681c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100681f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006822:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006825:	89 50 0c             	mov    %edx,0xc(%eax)
81006828:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100682b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100682e:	89 50 08             	mov    %edx,0x8(%eax)
81006831:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006834:	8b 40 0c             	mov    0xc(%eax),%eax
81006837:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100683a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100683d:	8b 40 08             	mov    0x8(%eax),%eax
81006840:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006843:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006846:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006849:	89 50 0c             	mov    %edx,0xc(%eax)
8100684c:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100684f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006852:	89 50 08             	mov    %edx,0x8(%eax)
81006855:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006858:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100685b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100685e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006861:	01 d0                	add    %edx,%eax
81006863:	01 45 f0             	add    %eax,-0x10(%ebp)
81006866:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006869:	83 c0 08             	add    $0x8,%eax
8100686c:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100686f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006872:	83 e8 04             	sub    $0x4,%eax
81006875:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81006878:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
8100687c:	0f 87 e1 00 00 00    	ja     81006963 <_realloc_r+0x519>
81006882:	8b 45 0c             	mov    0xc(%ebp),%eax
81006885:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006888:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100688b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100688e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81006892:	0f 86 90 00 00 00    	jbe    81006928 <_realloc_r+0x4de>
81006898:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100689b:	8d 42 04             	lea    0x4(%edx),%eax
8100689e:	89 45 dc             	mov    %eax,-0x24(%ebp)
810068a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810068a4:	8d 48 04             	lea    0x4(%eax),%ecx
810068a7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810068aa:	8b 12                	mov    (%edx),%edx
810068ac:	89 10                	mov    %edx,(%eax)
810068ae:	8b 55 dc             	mov    -0x24(%ebp),%edx
810068b1:	8d 42 04             	lea    0x4(%edx),%eax
810068b4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810068b7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810068ba:	8d 48 04             	lea    0x4(%eax),%ecx
810068bd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810068c0:	8b 12                	mov    (%edx),%edx
810068c2:	89 10                	mov    %edx,(%eax)
810068c4:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
810068c8:	76 5e                	jbe    81006928 <_realloc_r+0x4de>
810068ca:	8b 55 dc             	mov    -0x24(%ebp),%edx
810068cd:	8d 42 04             	lea    0x4(%edx),%eax
810068d0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810068d3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810068d6:	8d 48 04             	lea    0x4(%eax),%ecx
810068d9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810068dc:	8b 12                	mov    (%edx),%edx
810068de:	89 10                	mov    %edx,(%eax)
810068e0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810068e3:	8d 42 04             	lea    0x4(%edx),%eax
810068e6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810068e9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810068ec:	8d 48 04             	lea    0x4(%eax),%ecx
810068ef:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810068f2:	8b 12                	mov    (%edx),%edx
810068f4:	89 10                	mov    %edx,(%eax)
810068f6:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810068fa:	76 2c                	jbe    81006928 <_realloc_r+0x4de>
810068fc:	8b 55 dc             	mov    -0x24(%ebp),%edx
810068ff:	8d 42 04             	lea    0x4(%edx),%eax
81006902:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006905:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006908:	8d 48 04             	lea    0x4(%eax),%ecx
8100690b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100690e:	8b 12                	mov    (%edx),%edx
81006910:	89 10                	mov    %edx,(%eax)
81006912:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006915:	8d 42 04             	lea    0x4(%edx),%eax
81006918:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100691b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100691e:	8d 48 04             	lea    0x4(%eax),%ecx
81006921:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006924:	8b 12                	mov    (%edx),%edx
81006926:	89 10                	mov    %edx,(%eax)
81006928:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100692b:	8d 42 04             	lea    0x4(%edx),%eax
8100692e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006931:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006934:	8d 48 04             	lea    0x4(%eax),%ecx
81006937:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100693a:	8b 12                	mov    (%edx),%edx
8100693c:	89 10                	mov    %edx,(%eax)
8100693e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006941:	8d 42 04             	lea    0x4(%edx),%eax
81006944:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006947:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100694a:	8d 48 04             	lea    0x4(%eax),%ecx
8100694d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006950:	8b 12                	mov    (%edx),%edx
81006952:	89 10                	mov    %edx,(%eax)
81006954:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006957:	8b 10                	mov    (%eax),%edx
81006959:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100695c:	89 10                	mov    %edx,(%eax)
8100695e:	e9 12 03 00 00       	jmp    81006c75 <_realloc_r+0x82b>
81006963:	83 ec 04             	sub    $0x4,%esp
81006966:	ff 75 a4             	pushl  -0x5c(%ebp)
81006969:	ff 75 0c             	pushl  0xc(%ebp)
8100696c:	ff 75 a8             	pushl  -0x58(%ebp)
8100696f:	e8 dc f1 ff ff       	call   81005b50 <memmove>
81006974:	83 c4 10             	add    $0x10,%esp
81006977:	e9 f9 02 00 00       	jmp    81006c75 <_realloc_r+0x82b>
8100697c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81006980:	0f 84 5b 01 00 00    	je     81006ae1 <_realloc_r+0x697>
81006986:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006989:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100698c:	01 d0                	add    %edx,%eax
8100698e:	89 c2                	mov    %eax,%edx
81006990:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006993:	39 c2                	cmp    %eax,%edx
81006995:	0f 8c 46 01 00 00    	jl     81006ae1 <_realloc_r+0x697>
8100699b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100699e:	8b 40 0c             	mov    0xc(%eax),%eax
810069a1:	89 45 b8             	mov    %eax,-0x48(%ebp)
810069a4:	8b 45 b0             	mov    -0x50(%ebp),%eax
810069a7:	8b 40 08             	mov    0x8(%eax),%eax
810069aa:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810069ad:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810069b0:	8b 55 b8             	mov    -0x48(%ebp),%edx
810069b3:	89 50 0c             	mov    %edx,0xc(%eax)
810069b6:	8b 45 b8             	mov    -0x48(%ebp),%eax
810069b9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810069bc:	89 50 08             	mov    %edx,0x8(%eax)
810069bf:	8b 45 b0             	mov    -0x50(%ebp),%eax
810069c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069c5:	8b 45 ac             	mov    -0x54(%ebp),%eax
810069c8:	01 45 f0             	add    %eax,-0x10(%ebp)
810069cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069ce:	83 c0 08             	add    $0x8,%eax
810069d1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810069d4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810069d7:	83 e8 04             	sub    $0x4,%eax
810069da:	89 45 9c             	mov    %eax,-0x64(%ebp)
810069dd:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810069e1:	0f 87 e1 00 00 00    	ja     81006ac8 <_realloc_r+0x67e>
810069e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810069ea:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810069ed:	8b 45 a8             	mov    -0x58(%ebp),%eax
810069f0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810069f3:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810069f7:	0f 86 90 00 00 00    	jbe    81006a8d <_realloc_r+0x643>
810069fd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a00:	8d 42 04             	lea    0x4(%edx),%eax
81006a03:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a06:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a09:	8d 48 04             	lea    0x4(%eax),%ecx
81006a0c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a0f:	8b 12                	mov    (%edx),%edx
81006a11:	89 10                	mov    %edx,(%eax)
81006a13:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a16:	8d 42 04             	lea    0x4(%edx),%eax
81006a19:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a1c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a1f:	8d 48 04             	lea    0x4(%eax),%ecx
81006a22:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a25:	8b 12                	mov    (%edx),%edx
81006a27:	89 10                	mov    %edx,(%eax)
81006a29:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81006a2d:	76 5e                	jbe    81006a8d <_realloc_r+0x643>
81006a2f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a32:	8d 42 04             	lea    0x4(%edx),%eax
81006a35:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a38:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a3b:	8d 48 04             	lea    0x4(%eax),%ecx
81006a3e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a41:	8b 12                	mov    (%edx),%edx
81006a43:	89 10                	mov    %edx,(%eax)
81006a45:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a48:	8d 42 04             	lea    0x4(%edx),%eax
81006a4b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a4e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a51:	8d 48 04             	lea    0x4(%eax),%ecx
81006a54:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a57:	8b 12                	mov    (%edx),%edx
81006a59:	89 10                	mov    %edx,(%eax)
81006a5b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81006a5f:	76 2c                	jbe    81006a8d <_realloc_r+0x643>
81006a61:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a64:	8d 42 04             	lea    0x4(%edx),%eax
81006a67:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a6a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a6d:	8d 48 04             	lea    0x4(%eax),%ecx
81006a70:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a73:	8b 12                	mov    (%edx),%edx
81006a75:	89 10                	mov    %edx,(%eax)
81006a77:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a7a:	8d 42 04             	lea    0x4(%edx),%eax
81006a7d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a80:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a83:	8d 48 04             	lea    0x4(%eax),%ecx
81006a86:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a89:	8b 12                	mov    (%edx),%edx
81006a8b:	89 10                	mov    %edx,(%eax)
81006a8d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006a90:	8d 42 04             	lea    0x4(%edx),%eax
81006a93:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006a96:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006a99:	8d 48 04             	lea    0x4(%eax),%ecx
81006a9c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006a9f:	8b 12                	mov    (%edx),%edx
81006aa1:	89 10                	mov    %edx,(%eax)
81006aa3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006aa6:	8d 42 04             	lea    0x4(%edx),%eax
81006aa9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006aac:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006aaf:	8d 48 04             	lea    0x4(%eax),%ecx
81006ab2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006ab5:	8b 12                	mov    (%edx),%edx
81006ab7:	89 10                	mov    %edx,(%eax)
81006ab9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006abc:	8b 10                	mov    (%eax),%edx
81006abe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006ac1:	89 10                	mov    %edx,(%eax)
81006ac3:	e9 ad 01 00 00       	jmp    81006c75 <_realloc_r+0x82b>
81006ac8:	83 ec 04             	sub    $0x4,%esp
81006acb:	ff 75 9c             	pushl  -0x64(%ebp)
81006ace:	ff 75 0c             	pushl  0xc(%ebp)
81006ad1:	ff 75 a8             	pushl  -0x58(%ebp)
81006ad4:	e8 77 f0 ff ff       	call   81005b50 <memmove>
81006ad9:	83 c4 10             	add    $0x10,%esp
81006adc:	e9 94 01 00 00       	jmp    81006c75 <_realloc_r+0x82b>
81006ae1:	83 ec 08             	sub    $0x8,%esp
81006ae4:	ff 75 10             	pushl  0x10(%ebp)
81006ae7:	ff 75 08             	pushl  0x8(%ebp)
81006aea:	e8 b0 be ff ff       	call   8100299f <_malloc_r>
81006aef:	83 c4 10             	add    $0x10,%esp
81006af2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006af5:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81006af9:	75 18                	jne    81006b13 <_realloc_r+0x6c9>
81006afb:	83 ec 0c             	sub    $0xc,%esp
81006afe:	ff 75 08             	pushl  0x8(%ebp)
81006b01:	e8 88 c8 ff ff       	call   8100338e <__malloc_unlock>
81006b06:	83 c4 10             	add    $0x10,%esp
81006b09:	b8 00 00 00 00       	mov    $0x0,%eax
81006b0e:	e9 0f 02 00 00       	jmp    81006d22 <_realloc_r+0x8d8>
81006b13:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006b16:	83 e8 08             	sub    $0x8,%eax
81006b19:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b1c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006b1f:	8b 40 04             	mov    0x4(%eax),%eax
81006b22:	83 e0 fe             	and    $0xfffffffe,%eax
81006b25:	89 c2                	mov    %eax,%edx
81006b27:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006b2a:	01 d0                	add    %edx,%eax
81006b2c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81006b2f:	75 17                	jne    81006b48 <_realloc_r+0x6fe>
81006b31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b34:	8b 40 04             	mov    0x4(%eax),%eax
81006b37:	83 e0 fc             	and    $0xfffffffc,%eax
81006b3a:	01 45 f0             	add    %eax,-0x10(%ebp)
81006b3d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006b40:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b43:	e9 2d 01 00 00       	jmp    81006c75 <_realloc_r+0x82b>
81006b48:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006b4b:	83 e8 04             	sub    $0x4,%eax
81006b4e:	89 45 98             	mov    %eax,-0x68(%ebp)
81006b51:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006b55:	0f 87 de 00 00 00    	ja     81006c39 <_realloc_r+0x7ef>
81006b5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b5e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006b61:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006b64:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006b67:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81006b6b:	0f 86 90 00 00 00    	jbe    81006c01 <_realloc_r+0x7b7>
81006b71:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006b74:	8d 42 04             	lea    0x4(%edx),%eax
81006b77:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006b7a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006b7d:	8d 48 04             	lea    0x4(%eax),%ecx
81006b80:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006b83:	8b 12                	mov    (%edx),%edx
81006b85:	89 10                	mov    %edx,(%eax)
81006b87:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006b8a:	8d 42 04             	lea    0x4(%edx),%eax
81006b8d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006b90:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006b93:	8d 48 04             	lea    0x4(%eax),%ecx
81006b96:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006b99:	8b 12                	mov    (%edx),%edx
81006b9b:	89 10                	mov    %edx,(%eax)
81006b9d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81006ba1:	76 5e                	jbe    81006c01 <_realloc_r+0x7b7>
81006ba3:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006ba6:	8d 42 04             	lea    0x4(%edx),%eax
81006ba9:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006bac:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006baf:	8d 48 04             	lea    0x4(%eax),%ecx
81006bb2:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006bb5:	8b 12                	mov    (%edx),%edx
81006bb7:	89 10                	mov    %edx,(%eax)
81006bb9:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006bbc:	8d 42 04             	lea    0x4(%edx),%eax
81006bbf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006bc2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006bc5:	8d 48 04             	lea    0x4(%eax),%ecx
81006bc8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006bcb:	8b 12                	mov    (%edx),%edx
81006bcd:	89 10                	mov    %edx,(%eax)
81006bcf:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006bd3:	76 2c                	jbe    81006c01 <_realloc_r+0x7b7>
81006bd5:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006bd8:	8d 42 04             	lea    0x4(%edx),%eax
81006bdb:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006bde:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006be1:	8d 48 04             	lea    0x4(%eax),%ecx
81006be4:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006be7:	8b 12                	mov    (%edx),%edx
81006be9:	89 10                	mov    %edx,(%eax)
81006beb:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006bee:	8d 42 04             	lea    0x4(%edx),%eax
81006bf1:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006bf4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006bf7:	8d 48 04             	lea    0x4(%eax),%ecx
81006bfa:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006bfd:	8b 12                	mov    (%edx),%edx
81006bff:	89 10                	mov    %edx,(%eax)
81006c01:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006c04:	8d 42 04             	lea    0x4(%edx),%eax
81006c07:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006c0a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006c0d:	8d 48 04             	lea    0x4(%eax),%ecx
81006c10:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006c13:	8b 12                	mov    (%edx),%edx
81006c15:	89 10                	mov    %edx,(%eax)
81006c17:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006c1a:	8d 42 04             	lea    0x4(%edx),%eax
81006c1d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006c20:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006c23:	8d 48 04             	lea    0x4(%eax),%ecx
81006c26:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006c29:	8b 12                	mov    (%edx),%edx
81006c2b:	89 10                	mov    %edx,(%eax)
81006c2d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81006c30:	8b 10                	mov    (%eax),%edx
81006c32:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006c35:	89 10                	mov    %edx,(%eax)
81006c37:	eb 14                	jmp    81006c4d <_realloc_r+0x803>
81006c39:	83 ec 04             	sub    $0x4,%esp
81006c3c:	ff 75 98             	pushl  -0x68(%ebp)
81006c3f:	ff 75 0c             	pushl  0xc(%ebp)
81006c42:	ff 75 a8             	pushl  -0x58(%ebp)
81006c45:	e8 06 ef ff ff       	call   81005b50 <memmove>
81006c4a:	83 c4 10             	add    $0x10,%esp
81006c4d:	83 ec 08             	sub    $0x8,%esp
81006c50:	ff 75 0c             	pushl  0xc(%ebp)
81006c53:	ff 75 08             	pushl  0x8(%ebp)
81006c56:	e8 d7 a5 ff ff       	call   81001232 <_free_r>
81006c5b:	83 c4 10             	add    $0x10,%esp
81006c5e:	83 ec 0c             	sub    $0xc,%esp
81006c61:	ff 75 08             	pushl  0x8(%ebp)
81006c64:	e8 25 c7 ff ff       	call   8100338e <__malloc_unlock>
81006c69:	83 c4 10             	add    $0x10,%esp
81006c6c:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006c6f:	e9 ae 00 00 00       	jmp    81006d22 <_realloc_r+0x8d8>
81006c74:	90                   	nop
81006c75:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c78:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006c7b:	89 45 94             	mov    %eax,-0x6c(%ebp)
81006c7e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81006c82:	76 5d                	jbe    81006ce1 <_realloc_r+0x897>
81006c84:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006c87:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006c8a:	01 d0                	add    %edx,%eax
81006c8c:	89 45 90             	mov    %eax,-0x70(%ebp)
81006c8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c92:	8b 40 04             	mov    0x4(%eax),%eax
81006c95:	83 e0 01             	and    $0x1,%eax
81006c98:	0b 45 bc             	or     -0x44(%ebp),%eax
81006c9b:	89 c2                	mov    %eax,%edx
81006c9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ca0:	89 50 04             	mov    %edx,0x4(%eax)
81006ca3:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006ca6:	83 c8 01             	or     $0x1,%eax
81006ca9:	89 c2                	mov    %eax,%edx
81006cab:	8b 45 90             	mov    -0x70(%ebp),%eax
81006cae:	89 50 04             	mov    %edx,0x4(%eax)
81006cb1:	8b 55 90             	mov    -0x70(%ebp),%edx
81006cb4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006cb7:	01 d0                	add    %edx,%eax
81006cb9:	8b 50 04             	mov    0x4(%eax),%edx
81006cbc:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81006cbf:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006cc2:	01 c8                	add    %ecx,%eax
81006cc4:	83 ca 01             	or     $0x1,%edx
81006cc7:	89 50 04             	mov    %edx,0x4(%eax)
81006cca:	8b 45 90             	mov    -0x70(%ebp),%eax
81006ccd:	83 c0 08             	add    $0x8,%eax
81006cd0:	83 ec 08             	sub    $0x8,%esp
81006cd3:	50                   	push   %eax
81006cd4:	ff 75 08             	pushl  0x8(%ebp)
81006cd7:	e8 56 a5 ff ff       	call   81001232 <_free_r>
81006cdc:	83 c4 10             	add    $0x10,%esp
81006cdf:	eb 2d                	jmp    81006d0e <_realloc_r+0x8c4>
81006ce1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ce4:	8b 40 04             	mov    0x4(%eax),%eax
81006ce7:	83 e0 01             	and    $0x1,%eax
81006cea:	0b 45 f0             	or     -0x10(%ebp),%eax
81006ced:	89 c2                	mov    %eax,%edx
81006cef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cf2:	89 50 04             	mov    %edx,0x4(%eax)
81006cf5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006cf8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006cfb:	01 d0                	add    %edx,%eax
81006cfd:	8b 50 04             	mov    0x4(%eax),%edx
81006d00:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006d03:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d06:	01 c8                	add    %ecx,%eax
81006d08:	83 ca 01             	or     $0x1,%edx
81006d0b:	89 50 04             	mov    %edx,0x4(%eax)
81006d0e:	83 ec 0c             	sub    $0xc,%esp
81006d11:	ff 75 08             	pushl  0x8(%ebp)
81006d14:	e8 75 c6 ff ff       	call   8100338e <__malloc_unlock>
81006d19:	83 c4 10             	add    $0x10,%esp
81006d1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006d1f:	83 c0 08             	add    $0x8,%eax
81006d22:	c9                   	leave  
81006d23:	c3                   	ret    

81006d24 <cleanup_glue>:
81006d24:	55                   	push   %ebp
81006d25:	89 e5                	mov    %esp,%ebp
81006d27:	83 ec 08             	sub    $0x8,%esp
81006d2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d2d:	8b 00                	mov    (%eax),%eax
81006d2f:	85 c0                	test   %eax,%eax
81006d31:	74 14                	je     81006d47 <cleanup_glue+0x23>
81006d33:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d36:	8b 00                	mov    (%eax),%eax
81006d38:	83 ec 08             	sub    $0x8,%esp
81006d3b:	50                   	push   %eax
81006d3c:	ff 75 08             	pushl  0x8(%ebp)
81006d3f:	e8 e0 ff ff ff       	call   81006d24 <cleanup_glue>
81006d44:	83 c4 10             	add    $0x10,%esp
81006d47:	83 ec 08             	sub    $0x8,%esp
81006d4a:	ff 75 0c             	pushl  0xc(%ebp)
81006d4d:	ff 75 08             	pushl  0x8(%ebp)
81006d50:	e8 dd a4 ff ff       	call   81001232 <_free_r>
81006d55:	83 c4 10             	add    $0x10,%esp
81006d58:	90                   	nop
81006d59:	c9                   	leave  
81006d5a:	c3                   	ret    

81006d5b <_reclaim_reent>:
81006d5b:	55                   	push   %ebp
81006d5c:	89 e5                	mov    %esp,%ebp
81006d5e:	83 ec 28             	sub    $0x28,%esp
81006d61:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
81006d66:	39 45 08             	cmp    %eax,0x8(%ebp)
81006d69:	0f 84 49 01 00 00    	je     81006eb8 <_reclaim_reent+0x15d>
81006d6f:	8b 45 08             	mov    0x8(%ebp),%eax
81006d72:	8b 40 4c             	mov    0x4c(%eax),%eax
81006d75:	85 c0                	test   %eax,%eax
81006d77:	74 64                	je     81006ddd <_reclaim_reent+0x82>
81006d79:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006d80:	eb 3e                	jmp    81006dc0 <_reclaim_reent+0x65>
81006d82:	8b 45 08             	mov    0x8(%ebp),%eax
81006d85:	8b 50 4c             	mov    0x4c(%eax),%edx
81006d88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006d8b:	c1 e0 02             	shl    $0x2,%eax
81006d8e:	01 d0                	add    %edx,%eax
81006d90:	8b 00                	mov    (%eax),%eax
81006d92:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006d95:	eb 1f                	jmp    81006db6 <_reclaim_reent+0x5b>
81006d97:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d9a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81006d9d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006da0:	8b 00                	mov    (%eax),%eax
81006da2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006da5:	83 ec 08             	sub    $0x8,%esp
81006da8:	ff 75 e8             	pushl  -0x18(%ebp)
81006dab:	ff 75 08             	pushl  0x8(%ebp)
81006dae:	e8 7f a4 ff ff       	call   81001232 <_free_r>
81006db3:	83 c4 10             	add    $0x10,%esp
81006db6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006dba:	75 db                	jne    81006d97 <_reclaim_reent+0x3c>
81006dbc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006dc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006dc3:	83 f8 1f             	cmp    $0x1f,%eax
81006dc6:	76 ba                	jbe    81006d82 <_reclaim_reent+0x27>
81006dc8:	8b 45 08             	mov    0x8(%ebp),%eax
81006dcb:	8b 40 4c             	mov    0x4c(%eax),%eax
81006dce:	83 ec 08             	sub    $0x8,%esp
81006dd1:	50                   	push   %eax
81006dd2:	ff 75 08             	pushl  0x8(%ebp)
81006dd5:	e8 58 a4 ff ff       	call   81001232 <_free_r>
81006dda:	83 c4 10             	add    $0x10,%esp
81006ddd:	8b 45 08             	mov    0x8(%ebp),%eax
81006de0:	8b 40 40             	mov    0x40(%eax),%eax
81006de3:	85 c0                	test   %eax,%eax
81006de5:	74 15                	je     81006dfc <_reclaim_reent+0xa1>
81006de7:	8b 45 08             	mov    0x8(%ebp),%eax
81006dea:	8b 40 40             	mov    0x40(%eax),%eax
81006ded:	83 ec 08             	sub    $0x8,%esp
81006df0:	50                   	push   %eax
81006df1:	ff 75 08             	pushl  0x8(%ebp)
81006df4:	e8 39 a4 ff ff       	call   81001232 <_free_r>
81006df9:	83 c4 10             	add    $0x10,%esp
81006dfc:	8b 45 08             	mov    0x8(%ebp),%eax
81006dff:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006e05:	85 c0                	test   %eax,%eax
81006e07:	74 50                	je     81006e59 <_reclaim_reent+0xfe>
81006e09:	8b 45 08             	mov    0x8(%ebp),%eax
81006e0c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006e12:	8b 55 08             	mov    0x8(%ebp),%edx
81006e15:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81006e1b:	39 d0                	cmp    %edx,%eax
81006e1d:	74 3a                	je     81006e59 <_reclaim_reent+0xfe>
81006e1f:	8b 45 08             	mov    0x8(%ebp),%eax
81006e22:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006e28:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006e2b:	eb 1f                	jmp    81006e4c <_reclaim_reent+0xf1>
81006e2d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006e30:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006e33:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006e36:	8b 00                	mov    (%eax),%eax
81006e38:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006e3b:	83 ec 08             	sub    $0x8,%esp
81006e3e:	ff 75 e4             	pushl  -0x1c(%ebp)
81006e41:	ff 75 08             	pushl  0x8(%ebp)
81006e44:	e8 e9 a3 ff ff       	call   81001232 <_free_r>
81006e49:	83 c4 10             	add    $0x10,%esp
81006e4c:	8b 45 08             	mov    0x8(%ebp),%eax
81006e4f:	05 4c 01 00 00       	add    $0x14c,%eax
81006e54:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006e57:	75 d4                	jne    81006e2d <_reclaim_reent+0xd2>
81006e59:	8b 45 08             	mov    0x8(%ebp),%eax
81006e5c:	8b 40 54             	mov    0x54(%eax),%eax
81006e5f:	85 c0                	test   %eax,%eax
81006e61:	74 15                	je     81006e78 <_reclaim_reent+0x11d>
81006e63:	8b 45 08             	mov    0x8(%ebp),%eax
81006e66:	8b 40 54             	mov    0x54(%eax),%eax
81006e69:	83 ec 08             	sub    $0x8,%esp
81006e6c:	50                   	push   %eax
81006e6d:	ff 75 08             	pushl  0x8(%ebp)
81006e70:	e8 bd a3 ff ff       	call   81001232 <_free_r>
81006e75:	83 c4 10             	add    $0x10,%esp
81006e78:	8b 45 08             	mov    0x8(%ebp),%eax
81006e7b:	8b 40 38             	mov    0x38(%eax),%eax
81006e7e:	85 c0                	test   %eax,%eax
81006e80:	74 36                	je     81006eb8 <_reclaim_reent+0x15d>
81006e82:	8b 45 08             	mov    0x8(%ebp),%eax
81006e85:	8b 40 3c             	mov    0x3c(%eax),%eax
81006e88:	83 ec 0c             	sub    $0xc,%esp
81006e8b:	ff 75 08             	pushl  0x8(%ebp)
81006e8e:	ff d0                	call   *%eax
81006e90:	83 c4 10             	add    $0x10,%esp
81006e93:	8b 45 08             	mov    0x8(%ebp),%eax
81006e96:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006e9c:	85 c0                	test   %eax,%eax
81006e9e:	74 18                	je     81006eb8 <_reclaim_reent+0x15d>
81006ea0:	8b 45 08             	mov    0x8(%ebp),%eax
81006ea3:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006ea9:	83 ec 08             	sub    $0x8,%esp
81006eac:	50                   	push   %eax
81006ead:	ff 75 08             	pushl  0x8(%ebp)
81006eb0:	e8 6f fe ff ff       	call   81006d24 <cleanup_glue>
81006eb5:	83 c4 10             	add    $0x10,%esp
81006eb8:	90                   	nop
81006eb9:	c9                   	leave  
81006eba:	c3                   	ret    

81006ebb <strncmp>:
81006ebb:	55                   	push   %ebp
81006ebc:	89 e5                	mov    %esp,%ebp
81006ebe:	83 ec 10             	sub    $0x10,%esp
81006ec1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006ec5:	75 0a                	jne    81006ed1 <strncmp+0x16>
81006ec7:	b8 00 00 00 00       	mov    $0x0,%eax
81006ecc:	e9 cb 00 00 00       	jmp    81006f9c <strncmp+0xe1>
81006ed1:	8b 55 08             	mov    0x8(%ebp),%edx
81006ed4:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ed7:	09 d0                	or     %edx,%eax
81006ed9:	83 e0 03             	and    $0x3,%eax
81006edc:	85 c0                	test   %eax,%eax
81006ede:	0f 85 85 00 00 00    	jne    81006f69 <strncmp+0xae>
81006ee4:	8b 45 08             	mov    0x8(%ebp),%eax
81006ee7:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006eea:	8b 45 0c             	mov    0xc(%ebp),%eax
81006eed:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006ef0:	eb 36                	jmp    81006f28 <strncmp+0x6d>
81006ef2:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81006ef6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006efa:	74 1d                	je     81006f19 <strncmp+0x5e>
81006efc:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006eff:	8b 00                	mov    (%eax),%eax
81006f01:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006f07:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006f0a:	8b 00                	mov    (%eax),%eax
81006f0c:	f7 d0                	not    %eax
81006f0e:	21 d0                	and    %edx,%eax
81006f10:	25 80 80 80 80       	and    $0x80808080,%eax
81006f15:	85 c0                	test   %eax,%eax
81006f17:	74 07                	je     81006f20 <strncmp+0x65>
81006f19:	b8 00 00 00 00       	mov    $0x0,%eax
81006f1e:	eb 7c                	jmp    81006f9c <strncmp+0xe1>
81006f20:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006f24:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006f28:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81006f2c:	76 0e                	jbe    81006f3c <strncmp+0x81>
81006f2e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006f31:	8b 10                	mov    (%eax),%edx
81006f33:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006f36:	8b 00                	mov    (%eax),%eax
81006f38:	39 c2                	cmp    %eax,%edx
81006f3a:	74 b6                	je     81006ef2 <strncmp+0x37>
81006f3c:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006f3f:	89 45 08             	mov    %eax,0x8(%ebp)
81006f42:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006f45:	89 45 0c             	mov    %eax,0xc(%ebp)
81006f48:	eb 1f                	jmp    81006f69 <strncmp+0xae>
81006f4a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f4e:	74 0a                	je     81006f5a <strncmp+0x9f>
81006f50:	8b 45 08             	mov    0x8(%ebp),%eax
81006f53:	0f b6 00             	movzbl (%eax),%eax
81006f56:	84 c0                	test   %al,%al
81006f58:	75 07                	jne    81006f61 <strncmp+0xa6>
81006f5a:	b8 00 00 00 00       	mov    $0x0,%eax
81006f5f:	eb 3b                	jmp    81006f9c <strncmp+0xe1>
81006f61:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006f65:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006f69:	8b 45 10             	mov    0x10(%ebp),%eax
81006f6c:	8d 50 ff             	lea    -0x1(%eax),%edx
81006f6f:	89 55 10             	mov    %edx,0x10(%ebp)
81006f72:	85 c0                	test   %eax,%eax
81006f74:	74 10                	je     81006f86 <strncmp+0xcb>
81006f76:	8b 45 08             	mov    0x8(%ebp),%eax
81006f79:	0f b6 10             	movzbl (%eax),%edx
81006f7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f7f:	0f b6 00             	movzbl (%eax),%eax
81006f82:	38 c2                	cmp    %al,%dl
81006f84:	74 c4                	je     81006f4a <strncmp+0x8f>
81006f86:	8b 45 08             	mov    0x8(%ebp),%eax
81006f89:	0f b6 00             	movzbl (%eax),%eax
81006f8c:	0f b6 d0             	movzbl %al,%edx
81006f8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f92:	0f b6 00             	movzbl (%eax),%eax
81006f95:	0f b6 c8             	movzbl %al,%ecx
81006f98:	89 d0                	mov    %edx,%eax
81006f9a:	29 c8                	sub    %ecx,%eax
81006f9c:	c9                   	leave  
81006f9d:	c3                   	ret    

81006f9e <__get_global_locale>:
81006f9e:	55                   	push   %ebp
81006f9f:	89 e5                	mov    %esp,%ebp
81006fa1:	b8 e0 7f 00 81       	mov    $0x81007fe0,%eax
81006fa6:	5d                   	pop    %ebp
81006fa7:	c3                   	ret    

81006fa8 <__get_current_locale>:
81006fa8:	55                   	push   %ebp
81006fa9:	89 e5                	mov    %esp,%ebp
81006fab:	e8 ee ff ff ff       	call   81006f9e <__get_global_locale>
81006fb0:	5d                   	pop    %ebp
81006fb1:	c3                   	ret    

81006fb2 <_wcrtomb_r>:
81006fb2:	55                   	push   %ebp
81006fb3:	89 e5                	mov    %esp,%ebp
81006fb5:	83 ec 18             	sub    $0x18,%esp
81006fb8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006fbf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006fc3:	75 21                	jne    81006fe6 <_wcrtomb_r+0x34>
81006fc5:	e8 de ff ff ff       	call   81006fa8 <__get_current_locale>
81006fca:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81006fd0:	ff 75 14             	pushl  0x14(%ebp)
81006fd3:	6a 00                	push   $0x0
81006fd5:	8d 55 ea             	lea    -0x16(%ebp),%edx
81006fd8:	52                   	push   %edx
81006fd9:	ff 75 08             	pushl  0x8(%ebp)
81006fdc:	ff d0                	call   *%eax
81006fde:	83 c4 10             	add    $0x10,%esp
81006fe1:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006fe4:	eb 1f                	jmp    81007005 <_wcrtomb_r+0x53>
81006fe6:	e8 bd ff ff ff       	call   81006fa8 <__get_current_locale>
81006feb:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81006ff1:	ff 75 14             	pushl  0x14(%ebp)
81006ff4:	ff 75 10             	pushl  0x10(%ebp)
81006ff7:	ff 75 0c             	pushl  0xc(%ebp)
81006ffa:	ff 75 08             	pushl  0x8(%ebp)
81006ffd:	ff d0                	call   *%eax
81006fff:	83 c4 10             	add    $0x10,%esp
81007002:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007005:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007009:	75 19                	jne    81007024 <_wcrtomb_r+0x72>
8100700b:	8b 45 14             	mov    0x14(%ebp),%eax
8100700e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007014:	8b 45 08             	mov    0x8(%ebp),%eax
81007017:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100701d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007022:	eb 03                	jmp    81007027 <_wcrtomb_r+0x75>
81007024:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007027:	c9                   	leave  
81007028:	c3                   	ret    

81007029 <wcrtomb>:
81007029:	55                   	push   %ebp
8100702a:	89 e5                	mov    %esp,%ebp
8100702c:	83 ec 28             	sub    $0x28,%esp
8100702f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007036:	a1 a4 7b 00 81       	mov    0x81007ba4,%eax
8100703b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100703e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007042:	75 21                	jne    81007065 <wcrtomb+0x3c>
81007044:	e8 5f ff ff ff       	call   81006fa8 <__get_current_locale>
81007049:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100704f:	ff 75 10             	pushl  0x10(%ebp)
81007052:	6a 00                	push   $0x0
81007054:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81007057:	52                   	push   %edx
81007058:	ff 75 f0             	pushl  -0x10(%ebp)
8100705b:	ff d0                	call   *%eax
8100705d:	83 c4 10             	add    $0x10,%esp
81007060:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007063:	eb 1f                	jmp    81007084 <wcrtomb+0x5b>
81007065:	e8 3e ff ff ff       	call   81006fa8 <__get_current_locale>
8100706a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007070:	ff 75 10             	pushl  0x10(%ebp)
81007073:	ff 75 0c             	pushl  0xc(%ebp)
81007076:	ff 75 08             	pushl  0x8(%ebp)
81007079:	ff 75 f0             	pushl  -0x10(%ebp)
8100707c:	ff d0                	call   *%eax
8100707e:	83 c4 10             	add    $0x10,%esp
81007081:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007084:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007088:	75 19                	jne    810070a3 <wcrtomb+0x7a>
8100708a:	8b 45 10             	mov    0x10(%ebp),%eax
8100708d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007093:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007096:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100709c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070a1:	eb 03                	jmp    810070a6 <wcrtomb+0x7d>
810070a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810070a6:	c9                   	leave  
810070a7:	c3                   	ret    

810070a8 <__get_global_locale>:
810070a8:	55                   	push   %ebp
810070a9:	89 e5                	mov    %esp,%ebp
810070ab:	b8 e0 7f 00 81       	mov    $0x81007fe0,%eax
810070b0:	5d                   	pop    %ebp
810070b1:	c3                   	ret    

810070b2 <__get_current_locale>:
810070b2:	55                   	push   %ebp
810070b3:	89 e5                	mov    %esp,%ebp
810070b5:	e8 ee ff ff ff       	call   810070a8 <__get_global_locale>
810070ba:	5d                   	pop    %ebp
810070bb:	c3                   	ret    

810070bc <_wctomb_r>:
810070bc:	55                   	push   %ebp
810070bd:	89 e5                	mov    %esp,%ebp
810070bf:	83 ec 08             	sub    $0x8,%esp
810070c2:	e8 eb ff ff ff       	call   810070b2 <__get_current_locale>
810070c7:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810070cd:	ff 75 14             	pushl  0x14(%ebp)
810070d0:	ff 75 10             	pushl  0x10(%ebp)
810070d3:	ff 75 0c             	pushl  0xc(%ebp)
810070d6:	ff 75 08             	pushl  0x8(%ebp)
810070d9:	ff d0                	call   *%eax
810070db:	83 c4 10             	add    $0x10,%esp
810070de:	c9                   	leave  
810070df:	c3                   	ret    

810070e0 <__ascii_wctomb>:
810070e0:	55                   	push   %ebp
810070e1:	89 e5                	mov    %esp,%ebp
810070e3:	83 ec 10             	sub    $0x10,%esp
810070e6:	8b 45 10             	mov    0x10(%ebp),%eax
810070e9:	89 45 fc             	mov    %eax,-0x4(%ebp)
810070ec:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810070f0:	75 07                	jne    810070f9 <__ascii_wctomb+0x19>
810070f2:	b8 00 00 00 00       	mov    $0x0,%eax
810070f7:	eb 28                	jmp    81007121 <__ascii_wctomb+0x41>
810070f9:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81007100:	76 10                	jbe    81007112 <__ascii_wctomb+0x32>
81007102:	8b 45 08             	mov    0x8(%ebp),%eax
81007105:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100710b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007110:	eb 0f                	jmp    81007121 <__ascii_wctomb+0x41>
81007112:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007115:	89 c2                	mov    %eax,%edx
81007117:	8b 45 0c             	mov    0xc(%ebp),%eax
8100711a:	88 10                	mov    %dl,(%eax)
8100711c:	b8 01 00 00 00       	mov    $0x1,%eax
81007121:	c9                   	leave  
81007122:	c3                   	ret    

81007123 <__env_lock>:
81007123:	55                   	push   %ebp
81007124:	89 e5                	mov    %esp,%ebp
81007126:	90                   	nop
81007127:	5d                   	pop    %ebp
81007128:	c3                   	ret    

81007129 <__env_unlock>:
81007129:	55                   	push   %ebp
8100712a:	89 e5                	mov    %esp,%ebp
8100712c:	90                   	nop
8100712d:	5d                   	pop    %ebp
8100712e:	c3                   	ret    

8100712f <_fstat_r>:
8100712f:	55                   	push   %ebp
81007130:	89 e5                	mov    %esp,%ebp
81007132:	83 ec 18             	sub    $0x18,%esp
81007135:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
8100713c:	00 00 00 
8100713f:	83 ec 08             	sub    $0x8,%esp
81007142:	ff 75 10             	pushl  0x10(%ebp)
81007145:	ff 75 0c             	pushl  0xc(%ebp)
81007148:	e8 16 97 ff ff       	call   81000863 <fstat>
8100714d:	83 c4 10             	add    $0x10,%esp
81007150:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007153:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007157:	75 14                	jne    8100716d <_fstat_r+0x3e>
81007159:	a1 f4 86 00 81       	mov    0x810086f4,%eax
8100715e:	85 c0                	test   %eax,%eax
81007160:	74 0b                	je     8100716d <_fstat_r+0x3e>
81007162:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
81007168:	8b 45 08             	mov    0x8(%ebp),%eax
8100716b:	89 10                	mov    %edx,(%eax)
8100716d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007170:	c9                   	leave  
81007171:	c3                   	ret    

81007172 <_isatty_r>:
81007172:	55                   	push   %ebp
81007173:	89 e5                	mov    %esp,%ebp
81007175:	83 ec 18             	sub    $0x18,%esp
81007178:	c7 05 f4 86 00 81 00 	movl   $0x0,0x810086f4
8100717f:	00 00 00 
81007182:	83 ec 0c             	sub    $0xc,%esp
81007185:	ff 75 0c             	pushl  0xc(%ebp)
81007188:	e8 fd 96 ff ff       	call   8100088a <isatty>
8100718d:	83 c4 10             	add    $0x10,%esp
81007190:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007193:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007197:	75 14                	jne    810071ad <_isatty_r+0x3b>
81007199:	a1 f4 86 00 81       	mov    0x810086f4,%eax
8100719e:	85 c0                	test   %eax,%eax
810071a0:	74 0b                	je     810071ad <_isatty_r+0x3b>
810071a2:	8b 15 f4 86 00 81    	mov    0x810086f4,%edx
810071a8:	8b 45 08             	mov    0x8(%ebp),%eax
810071ab:	89 10                	mov    %edx,(%eax)
810071ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810071b0:	c9                   	leave  
810071b1:	c3                   	ret    
