
C:/diy-x86os-master/start/start/build/source/shell/shell.elf:     file format elf32-i386
C:/diy-x86os-master/start/start/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000aed

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009650 memsz 0x00009c00 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000853a  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000071d  81008540  81008540  00009540  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008c60  81008c60  00009c60  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  81009660  81009660  0000a650  2**5
                  ALLOC
  4 .debug_info   0002a878  00000000  00000000  0000a650  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00009790  00000000  00000000  00034ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000988  00000000  00000000  0003e658  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_ranges 00000030  00000000  00000000  0003efe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005eb7  00000000  00000000  0003f010  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000017ef  00000000  00000000  00044ec7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000023  00000000  00000000  000466b6  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001ea4  00000000  00000000  000466dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line_str 00001422  00000000  00000000  00048580  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_rnglists 0000004e  00000000  00000000  000499a2  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81008540 l    d  .rodata	00000000 .rodata
81008c60 l    d  .data	00000000 .data
81009660 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81009660 l     O .bss	0000040c cli
81008c60 l     O .data	00000004 promot
81000000 l     F .text	00000033 show_promot
81000033 l     F .text	00000042 do_help
81000075 l     F .text	00000037 do_clear
810000ac l     F .text	000000aa do_ls
81000156 l     F .text	000001a0 do_echo
810002f6 l     F .text	00000010 do_exit
81000306 l     F .text	0000029c do_less
810005a2 l     F .text	00000107 do_cp
810006a9 l     F .text	00000078 do_remove
81008780 l     O .rodata	00000060 cmd_list
81000721 l     F .text	00000048 cli_init
81000769 l     F .text	00000044 find_builtin
810007ad l     F .text	00000042 run_builtin
810007ef l     F .text	00000081 find_exec_path
81009a80 l     O .bss	000000ff path.3905
81000870 l     F .text	000000b2 run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000b3b l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810015df l     F .text	000000ad std
8100168c l     F .text	0000001b stdin_init
810016a7 l     F .text	0000001b stdout_init
810016c2 l     F .text	0000001b stderr_init
81009b80 l     O .bss	00000004 __sfp_recursive_mutex
81009b84 l     O .bss	00000004 __sinit_recursive_mutex
81001985 l     F .text	0000000a __fp_lock
8100198f l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81009b90 l     O .bss	00000004 optwhere
81009b94 l     O .bss	00000004 permute_from
81009b98 l     O .bss	00000004 num_nonopts
81002f64 l     F .text	0000007b reverse_argv_elements
81002fdf l     F .text	00000036 permute
81003015 l     F .text	00000031 is_option
81003046 l     F .text	00000059 read_globals
8100309f l     F .text	00000052 write_globals
810030f1 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81008c80 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003f0b l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81004a4d l       .text	00000000 L20
81004a04 l       .text	00000000 L5
81004a4a l       .text	00000000 L15
81004a10 l       .text	00000000 L8
81004a31 l       .text	00000000 L9
81004a40 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81004a9f l       .text	00000000 L4
81004a91 l       .text	00000000 BYTECMP
81004a8c l       .text	00000000 L5
81004a93 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009be8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004ced l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
8100636b l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81006adb l       .text	00000000 L25
81006a82 l       .text	00000000 L5
81006ace l       .text	00000000 L14
81006ad4 l       .text	00000000 L19
81006a93 l       .text	00000000 L10
81006ac0 l       .text	00000000 L9
81006ac3 l       .text	00000000 L15
81006b0e l       .text	00000000 L26
81006b11 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006c16 l       .text	00000000 L5
81006c4e l       .text	00000000 L15
81006c20 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strlwr.c
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81006db4 l     F .text	0000000a __locale_ctype_ptr_l
81006dbe l     F .text	0000000a __get_global_locale
81006dc8 l     F .text	0000000a __get_current_locale
81006dd2 l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009bf0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
81007598 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810094d0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
810078d7 l     F .text	0000000a __get_global_locale
810078e1 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810079c3 l     F .text	0000000a __get_global_locale
810079cd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
8100817c l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810083a9 l     F .text	0000000a __get_global_locale
810083b3 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810084b3 l     F .text	0000000a __get_global_locale
810084bd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009bf8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009bfc l     O .bss	00000004 __env_recursive_mutex
81007897 g     F .text	00000040 _isatty_r
810061d4 g     F .text	00000037 cleanup_glue
81005808 g     F .text	000000d6 _puts_r
8100797d g     F .text	00000046 _lseek_r
81000c3c g     F .text	0000001b yield
81006865 g     F .text	00000055 _siprintf_r
8100744a g     F .text	000000ba __sflags
81000ef2 g     F .text	00000033 ioctl
81006d9a g     F .text	0000001a strtok_r
810057d3 g     F .text	00000035 printf
810083bd g     F .text	00000077 _wcrtomb_r
810069bb g     F .text	0000004a __sseek
810018d4 g     F .text	00000099 __sinit
81007017 g     F .text	00000112 __swbuf_r
810078eb g     F .text	0000005f _setlocale_r
810016dd g     F .text	0000006f __sfmoreglue
81004c0b g     F .text	00000006 __malloc_unlock
81006c59 g     F .text	00000058 strlwr
81004af0 g       .text	00000000 memmove
81003c4d g     F .text	00000049 getopt_long
810018ba g     F .text	0000001a _cleanup
81006cda g     F .text	000000c0 __strtok_r
81007440 g     F .text	0000000a __errno
8100776d g     F .text	00000020 getenv
810028d3 g     F .text	00000043 _fstat_r
81009bec g     O .bss	00000004 errno
810065fc g     F .text	0000001d __srget
81006956 g     F .text	0000000a __seofread
81000c0f g     F .text	0000002d execve
81000bb1 g     F .text	0000001b getpid
810015c0 g     F .text	0000001f fgets
81004aa8 g       .text	00000000 memcpy
81006659 g     F .text	0000020c setvbuf
81001899 g     F .text	00000021 _cleanup_r
81007e42 g     F .text	0000033a _svfprintf_r
810058de g     F .text	0000001c puts
81003ed2 g     F .text	0000001c malloc
810057a6 g     F .text	0000002d _printf_r
81000d4d g     F .text	00000021 isatty
81009b88 g     O .bss	00000004 optarg
81009ba0 g     O .bss	00000004 __malloc_top_pad
81009660 g       .bss	00000000 __bss_start__
81002916 g     F .text	0000049e __sfvwrite_r
81006619 g     F .text	00000040 _sbrk_r
81008c64 g     O .data	00000004 opterr
81000e5d g     F .text	00000040 readdir
81008280 g     F .text	00000046 _read_r
81000f9d g     F .text	00000107 _fclose_r
8100133f g     F .text	00000039 fflush
81009ba4 g     O .bss	00000004 __malloc_max_sbrked_mem
81001378 g     F .text	00000071 _fgetc_r
81000cf9 g     F .text	0000002d lseek
810088e4 g     O .rodata	00000004 _global_impure_ptr
810058fa g     F .text	000008da _realloc_r
81006fc9 g     F .text	00000025 strtol_l
810076ae g     F .text	00000057 _fputwc_r
81001999 g     F .text	00000024 __fp_lock_all
81006fee g     F .text	00000029 strtol
81002402 g     F .text	000004b1 _fseeko_r
8100620b g     F .text	00000160 _reclaim_reent
81007504 g     F .text	00000046 _fputc_r
81000cab g     F .text	0000002d write
810081e2 g     F .text	0000004b _putc_r
8100964c g     O .data	00000004 environ
81000d26 g     F .text	00000027 fstat
81001afe g     F .text	0000002c fprintf
81003d2b g     F .text	00000027 __getopt_long_only_r
810028b3 g     F .text	00000020 fseeko
81000f3f g     F .text	0000001a _atoi_r
81007a59 g     F .text	000001b7 __ssputs_r
810023e2 g     F .text	00000020 fseek
81004d53 g     F .text	000000a8 __sfputs_r
81009b8c g     O .bss	00000004 optind
8100196d g     F .text	00000006 __sfp_lock_acquire
810049c0 g       .text	00000000 memchr
81006865 g     F .text	00000055 _sprintf_r
81009c00 g       .bss	00000000 __bss_end__
81001e89 g     F .text	000003db _free_r
81000db0 g     F .text	00000021 wait
810089c0 g     O .rodata	00000180 _ctype_b
8100794a g     F .text	00000014 __locale_mb_cur_max
81006599 g     F .text	00000063 __srget_r
810072eb g     F .text	00000115 __call_exitprocs
810094cc g     O .data	00000004 __malloc_sbrk_base
81000aed g       .text	00000000 _start
81000c7e g     F .text	0000002d read
81007c10 g     F .text	00000232 __ssprint_r
81005760 g     F .text	00000046 _open_r
810082c6 g     F .text	000000e3 strncmp
81003d04 g     F .text	00000027 __getopt_long_r
81009bc0 g     O .bss	00000028 __malloc_current_mallinfo
81000ed1 g     F .text	00000021 unlink
810057a6 g     F .text	0000002d _iprintf_r
81007400 g     F .text	00000040 _close_r
81006cb1 g     F .text	00000029 strtok
81004a55 g       .text	00000000 memcmp
81002e87 g     F .text	000000b8 _fwrite_r
81000bf4 g     F .text	0000001b fork
81007190 g     F .text	0000015b __swsetup_r
8100174c g     F .text	0000014d __sfp
810090c0 g     O .data	00000408 __malloc_av_
8100197f g     F .text	00000006 __sinit_lock_release
81006912 g     F .text	00000044 __sread
81001e64 g     F .text	00000025 fread
81004c05 g     F .text	00000006 __malloc_lock
81001ad5 g     F .text	00000029 _fprintf_r
81000d6e g     F .text	00000021 sbrk
810012e7 g     F .text	00000058 _fflush_r
81000afd g     F .text	0000003e cstart
81001ab6 g     F .text	0000001f fopen
81003c06 g     F .text	00000047 getopt
81004b7d g       .text	00000000 memset
81000922 g     F .text	000001cb main
81009ba8 g     O .bss	00000004 __malloc_max_total_mem
81007129 g     F .text	00000021 __swbuf
81001bef g     F .text	00000275 _fread_r
81006a05 g     F .text	00000025 __sclose
810010a4 g     F .text	0000001d fclose
81006fa4 g     F .text	00000025 _strtol_r
8100778d g     F .text	000000ed _findenv_r
8100419e g     F .text	00000822 _malloc_r
810084eb g     F .text	00000043 __ascii_wctomb
81000df2 g     F .text	0000006b opendir
81001ad5 g     F .text	00000029 _fiprintf_r
81008534 g     F .text	00000006 __env_unlock
8100774d g     F .text	00000020 _findenv
81002db4 g     F .text	00000068 _fwalk
81001462 g     F .text	0000015e _fgets_r
810079d7 g     F .text	0000002a _mbtowc_r
8100822d g     F .text	00000053 putc
81003c96 g     F .text	00000049 getopt_long_only
81002264 g     F .text	00000161 _malloc_trim_r
81006b2c g     F .text	000000a5 strcmp
81004dfb g     F .text	00000025 vfiprintf
81000d8f g     F .text	00000021 dup
810057d3 g     F .text	00000035 iprintf
810013e9 g     F .text	00000079 fgetc
810068ba g     F .text	00000058 sprintf
81009bf4 g     O .bss	00000004 _PathLocale
8100714a g     F .text	00000046 _write_r
8100795e g     F .text	0000001f setlocale
81005176 g     F .text	0000019b _printf_common
810090a4 g     O .data	00000004 _impure_ptr
810010c1 g     F .text	00000226 __sflush_r
810023c5 g     F .text	0000001d _fseek_r
81007e42 g     F .text	0000033a _svfiprintf_r
81006398 g     F .text	00000201 __srefill_r
81007a01 g     F .text	00000058 __ascii_mbtowc
810019bd g     F .text	00000024 __fp_unlock_all
8100754a g     F .text	0000004e fputc
81000bcc g     F .text	00000028 print_msg
81008c68 g     O .data	00000004 optopt
81003e3f g     F .text	00000093 __swhatbuf_r
81002f3f g     F .text	00000025 fwrite
810075fe g     F .text	000000b0 __fputwc
81001b2a g     F .text	000000a6 _fputs_r
81006960 g     F .text	0000005b __swrite
810094c8 g     O .data	00000004 __malloc_trim_threshold
81000f59 g     F .text	00000044 exit
81001afe g     F .text	0000002c fiprintf
81004e20 g     F .text	00000356 _vfiprintf_r
81002e1c g     F .text	0000006b _fwalk_reent
81001973 g     F .text	00000006 __sfp_lock_release
810068ba g     F .text	00000058 siprintf
81000f25 g     F .text	0000001a atoi
81008b40 g     O .rodata	00000101 _ctype_
81003cdf g     F .text	00000025 __getopt_r
810019e1 g     F .text	000000d5 _fopen_r
81000dd1 g     F .text	00000021 _exit
81003d52 g     F .text	000000ed __smakebuf_r
81006be0 g       .text	00000000 strlen
81005311 g     F .text	0000044f _printf_i
81000c57 g     F .text	00000027 open
81004c11 g     F .text	000000dc __sprint_r
81006a30 g       .text	00000000 strchr
81001bd0 g     F .text	0000001f fputs
81000e9d g     F .text	00000034 closedir
810084c7 g     F .text	00000024 _wctomb_r
8100852e g     F .text	00000006 __env_lock
81004e20 g     F .text	00000356 _vfprintf_r
81000b87 g     F .text	0000002a msleep
81008434 g     F .text	0000007f wcrtomb
81000cd8 g     F .text	00000021 close
810094e0 g     O .data	0000016c __global_locale
81004dfb g     F .text	00000025 vfprintf
81007705 g     F .text	00000048 fputwc
81003eee g     F .text	0000001d free
81001979 g     F .text	00000006 __sinit_lock_acquire
8100787a g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <show_promot>:

/**
 * 显示命令行提示符
 */
static void show_promot(void)
{
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.promot);
81000006:	a1 68 9a 00 81       	mov    0x81009a68,%eax
8100000b:	83 ec 08             	sub    $0x8,%esp
8100000e:	50                   	push   %eax
8100000f:	68 46 85 00 81       	push   $0x81008546
81000014:	e8 ba 57 00 00       	call   810057d3 <iprintf>
81000019:	83 c4 10             	add    $0x10,%esp
    fflush(stdout); // printf不加回车会被缓存
8100001c:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000021:	8b 40 08             	mov    0x8(%eax),%eax
81000024:	83 ec 0c             	sub    $0xc,%esp
81000027:	50                   	push   %eax
81000028:	e8 12 13 00 00       	call   8100133f <fflush>
8100002d:	83 c4 10             	add    $0x10,%esp
}
81000030:	90                   	nop
81000031:	c9                   	leave  
81000032:	c3                   	ret    

81000033 <do_help>:

/**
 * help命令
 */
static int do_help(int argc, char **argv)
{
81000033:	55                   	push   %ebp
81000034:	89 e5                	mov    %esp,%ebp
81000036:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t *start = cli.cmd_start;
81000039:	a1 60 9a 00 81       	mov    0x81009a60,%eax
8100003e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    // 循环打印名称及用法
    while (start < cli.cmd_end)
81000041:	eb 21                	jmp    81000064 <do_help+0x31>
    {
        printf("%s %s\n", start->name, start->useage);
81000043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000046:	8b 50 04             	mov    0x4(%eax),%edx
81000049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100004c:	8b 00                	mov    (%eax),%eax
8100004e:	83 ec 04             	sub    $0x4,%esp
81000051:	52                   	push   %edx
81000052:	50                   	push   %eax
81000053:	68 49 85 00 81       	push   $0x81008549
81000058:	e8 76 57 00 00       	call   810057d3 <iprintf>
8100005d:	83 c4 10             	add    $0x10,%esp
        start++;
81000060:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end)
81000064:	a1 64 9a 00 81       	mov    0x81009a64,%eax
81000069:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100006c:	72 d5                	jb     81000043 <do_help+0x10>
    }
    return 0;
8100006e:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_clear>:

/**
 * 清屏命令
 */
static int do_clear(int argc, char **argv)
{
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8100007b:	83 ec 08             	sub    $0x8,%esp
8100007e:	68 50 85 00 81       	push   $0x81008550
81000083:	68 46 85 00 81       	push   $0x81008546
81000088:	e8 46 57 00 00       	call   810057d3 <iprintf>
8100008d:	83 c4 10             	add    $0x10,%esp
    printf("%s", ESC_MOVE_CURSOR(0, 0));
81000090:	83 ec 08             	sub    $0x8,%esp
81000093:	68 55 85 00 81       	push   $0x81008555
81000098:	68 46 85 00 81       	push   $0x81008546
8100009d:	e8 31 57 00 00       	call   810057d3 <iprintf>
810000a2:	83 c4 10             	add    $0x10,%esp
    return 0;
810000a5:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000aa:	c9                   	leave  
810000ab:	c3                   	ret    

810000ac <do_ls>:

/**
 * @brief 列出目录内容
 */
static int do_ls(int argc, char **argv)
{
810000ac:	55                   	push   %ebp
810000ad:	89 e5                	mov    %esp,%ebp
810000af:	83 ec 18             	sub    $0x18,%esp
    // 打开目录
    DIR *p_dir = opendir("temp"); // 未使用
810000b2:	83 ec 0c             	sub    $0xc,%esp
810000b5:	68 5c 85 00 81       	push   $0x8100855c
810000ba:	e8 33 0d 00 00       	call   81000df2 <opendir>
810000bf:	83 c4 10             	add    $0x10,%esp
810000c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (p_dir == NULL)
810000c5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810000c9:	75 5f                	jne    8100012a <do_ls+0x7e>
    {
        printf("open dir failed\n");
810000cb:	83 ec 0c             	sub    $0xc,%esp
810000ce:	68 61 85 00 81       	push   $0x81008561
810000d3:	e8 06 58 00 00       	call   810058de <puts>
810000d8:	83 c4 10             	add    $0x10,%esp
        return -1;
810000db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810000e0:	eb 72                	jmp    81000154 <do_ls+0xa8>

    // 然后进行遍历
    struct dirent *entry;
    while ((entry = readdir(p_dir)) != NULL)
    {
        strlwr(entry->name);
810000e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810000e5:	83 c0 08             	add    $0x8,%eax
810000e8:	83 ec 0c             	sub    $0xc,%esp
810000eb:	50                   	push   %eax
810000ec:	e8 68 6b 00 00       	call   81006c59 <strlwr>
810000f1:	83 c4 10             	add    $0x10,%esp
        printf("%c %s %d\n",
810000f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810000f7:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
               entry->type == FILE_DIR ? 'd' : 'f',
               entry->name,
810000fd:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000100:	8d 4a 08             	lea    0x8(%edx),%ecx
               entry->type == FILE_DIR ? 'd' : 'f',
81000103:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000106:	8b 52 04             	mov    0x4(%edx),%edx
        printf("%c %s %d\n",
81000109:	83 fa 03             	cmp    $0x3,%edx
8100010c:	75 07                	jne    81000115 <do_ls+0x69>
8100010e:	ba 64 00 00 00       	mov    $0x64,%edx
81000113:	eb 05                	jmp    8100011a <do_ls+0x6e>
81000115:	ba 66 00 00 00       	mov    $0x66,%edx
8100011a:	50                   	push   %eax
8100011b:	51                   	push   %ecx
8100011c:	52                   	push   %edx
8100011d:	68 71 85 00 81       	push   $0x81008571
81000122:	e8 ac 56 00 00       	call   810057d3 <iprintf>
81000127:	83 c4 10             	add    $0x10,%esp
    while ((entry = readdir(p_dir)) != NULL)
8100012a:	83 ec 0c             	sub    $0xc,%esp
8100012d:	ff 75 f4             	pushl  -0xc(%ebp)
81000130:	e8 28 0d 00 00       	call   81000e5d <readdir>
81000135:	83 c4 10             	add    $0x10,%esp
81000138:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100013b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100013f:	75 a1                	jne    810000e2 <do_ls+0x36>
               entry->size);
    }
    closedir(p_dir);
81000141:	83 ec 0c             	sub    $0xc,%esp
81000144:	ff 75 f4             	pushl  -0xc(%ebp)
81000147:	e8 51 0d 00 00       	call   81000e9d <closedir>
8100014c:	83 c4 10             	add    $0x10,%esp

    return 0;
8100014f:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000154:	c9                   	leave  
81000155:	c3                   	ret    

81000156 <do_echo>:

/**
 * 回显命令
 */
static int do_echo(int argc, char **argv)
{
81000156:	55                   	push   %ebp
81000157:	89 e5                	mov    %esp,%ebp
81000159:	81 ec 98 00 00 00    	sub    $0x98,%esp
    // 只有一个参数，需要先手动输入，再输出
    if (argc == 1)
8100015f:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000163:	75 40                	jne    810001a5 <do_echo+0x4f>
    {
        char msg_buf[128];

        fgets(msg_buf, sizeof(msg_buf), stdin);
81000165:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100016a:	8b 40 04             	mov    0x4(%eax),%eax
8100016d:	83 ec 04             	sub    $0x4,%esp
81000170:	50                   	push   %eax
81000171:	68 80 00 00 00       	push   $0x80
81000176:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
8100017c:	50                   	push   %eax
8100017d:	e8 3e 14 00 00       	call   810015c0 <fgets>
81000182:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf) - 1] = '\0';
81000185:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
81000189:	83 ec 0c             	sub    $0xc,%esp
8100018c:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
81000192:	50                   	push   %eax
81000193:	e8 46 57 00 00       	call   810058de <puts>
81000198:	83 c4 10             	add    $0x10,%esp
        return 0;
8100019b:	b8 00 00 00 00       	mov    $0x0,%eax
810001a0:	e9 4f 01 00 00       	jmp    810002f4 <do_echo+0x19e>
    }

    // https://www.cnblogs.com/yinghao-liu/p/7123622.html
    // optind是下一个要处理的元素在argv中的索引
    // 当没有选项时，变为argv第一个不是选项元素的索引。
    int count = 1; // 缺省只打印一次
810001a5:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "n:h")) != -1)
810001ac:	e9 9e 00 00 00       	jmp    8100024f <do_echo+0xf9>
    {
        switch (ch)
810001b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810001b4:	83 f8 68             	cmp    $0x68,%eax
810001b7:	74 0f                	je     810001c8 <do_echo+0x72>
810001b9:	83 f8 6e             	cmp    $0x6e,%eax
810001bc:	74 3e                	je     810001fc <do_echo+0xa6>
810001be:	83 f8 3f             	cmp    $0x3f,%eax
810001c1:	74 4f                	je     81000212 <do_echo+0xbc>
810001c3:	e9 87 00 00 00       	jmp    8100024f <do_echo+0xf9>
        {
        case 'h':
            puts("echo echo any message");
810001c8:	83 ec 0c             	sub    $0xc,%esp
810001cb:	68 7b 85 00 81       	push   $0x8100857b
810001d0:	e8 09 57 00 00       	call   810058de <puts>
810001d5:	83 c4 10             	add    $0x10,%esp
            puts("Usage: echo [-n count] msg");
810001d8:	83 ec 0c             	sub    $0xc,%esp
810001db:	68 91 85 00 81       	push   $0x81008591
810001e0:	e8 f9 56 00 00       	call   810058de <puts>
810001e5:	83 c4 10             	add    $0x10,%esp
            optind = 1; // getopt需要多次调用，需要重置
810001e8:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810001ef:	00 00 00 
            return 0;
810001f2:	b8 00 00 00 00       	mov    $0x0,%eax
810001f7:	e9 f8 00 00 00       	jmp    810002f4 <do_echo+0x19e>
        case 'n':
            count = atoi(optarg);
810001fc:	a1 88 9b 00 81       	mov    0x81009b88,%eax
81000201:	83 ec 0c             	sub    $0xc,%esp
81000204:	50                   	push   %eax
81000205:	e8 1b 0d 00 00       	call   81000f25 <atoi>
8100020a:	83 c4 10             	add    $0x10,%esp
8100020d:	89 45 f4             	mov    %eax,-0xc(%ebp)
            break;
81000210:	eb 3d                	jmp    8100024f <do_echo+0xf9>
        case '?':
            if (optarg)
81000212:	a1 88 9b 00 81       	mov    0x81009b88,%eax
81000217:	85 c0                	test   %eax,%eax
81000219:	74 20                	je     8100023b <do_echo+0xe5>
            {
                fprintf(stderr, "Unknown option: -%s\n", optarg);
8100021b:	8b 15 88 9b 00 81    	mov    0x81009b88,%edx
81000221:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000226:	8b 40 0c             	mov    0xc(%eax),%eax
81000229:	83 ec 04             	sub    $0x4,%esp
8100022c:	52                   	push   %edx
8100022d:	68 ac 85 00 81       	push   $0x810085ac
81000232:	50                   	push   %eax
81000233:	e8 c6 18 00 00       	call   81001afe <fiprintf>
81000238:	83 c4 10             	add    $0x10,%esp
            }
            optind = 1; // getopt需要多次调用，需要重置
8100023b:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000242:	00 00 00 
            return -1;
81000245:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100024a:	e9 a5 00 00 00       	jmp    810002f4 <do_echo+0x19e>
    while ((ch = getopt(argc, argv, "n:h")) != -1)
8100024f:	83 ec 04             	sub    $0x4,%esp
81000252:	68 c1 85 00 81       	push   $0x810085c1
81000257:	ff 75 0c             	pushl  0xc(%ebp)
8100025a:	ff 75 08             	pushl  0x8(%ebp)
8100025d:	e8 a4 39 00 00       	call   81003c06 <getopt>
81000262:	83 c4 10             	add    $0x10,%esp
81000265:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000268:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100026c:	0f 85 3f ff ff ff    	jne    810001b1 <do_echo+0x5b>
        }
    }
    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1)
81000272:	8b 45 08             	mov    0x8(%ebp),%eax
81000275:	8d 50 ff             	lea    -0x1(%eax),%edx
81000278:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
8100027d:	39 c2                	cmp    %eax,%edx
8100027f:	7d 2b                	jge    810002ac <do_echo+0x156>
    {
        fprintf(stderr, "Message is empty \n");
81000281:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000286:	8b 40 0c             	mov    0xc(%eax),%eax
81000289:	50                   	push   %eax
8100028a:	6a 12                	push   $0x12
8100028c:	6a 01                	push   $0x1
8100028e:	68 c5 85 00 81       	push   $0x810085c5
81000293:	e8 a7 2c 00 00       	call   81002f3f <fwrite>
81000298:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
8100029b:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810002a2:	00 00 00 
        return -1;
810002a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810002aa:	eb 48                	jmp    810002f4 <do_echo+0x19e>
    }

    // 循环打印消息
    char *msg = argv[optind];
810002ac:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
810002b1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810002b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810002bb:	01 d0                	add    %edx,%eax
810002bd:	8b 00                	mov    (%eax),%eax
810002bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++)
810002c2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810002c9:	eb 12                	jmp    810002dd <do_echo+0x187>
    {
        puts(msg);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 e8             	pushl  -0x18(%ebp)
810002d1:	e8 08 56 00 00       	call   810058de <puts>
810002d6:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++)
810002d9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810002dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810002e0:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810002e3:	7c e6                	jl     810002cb <do_echo+0x175>
    }
    optind = 1; // getopt需要多次调用，需要重置
810002e5:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810002ec:	00 00 00 
    return 0;
810002ef:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002f4:	c9                   	leave  
810002f5:	c3                   	ret    

810002f6 <do_exit>:

/**
 * 程序退出命令
 */
static int do_exit(int argc, char **argv)
{
810002f6:	55                   	push   %ebp
810002f7:	89 e5                	mov    %esp,%ebp
810002f9:	83 ec 08             	sub    $0x8,%esp
    exit(0);
810002fc:	83 ec 0c             	sub    $0xc,%esp
810002ff:	6a 00                	push   $0x0
81000301:	e8 53 0c 00 00       	call   81000f59 <exit>

81000306 <do_less>:

/**
 * @brief 列出文本文件内容
 */
static int do_less(int argc, char **argv)
{
81000306:	55                   	push   %ebp
81000307:	89 e5                	mov    %esp,%ebp
81000309:	83 ec 28             	sub    $0x28,%esp
    int line_mode = 0;
8100030c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "lh")) != -1)
81000313:	e9 8c 00 00 00       	jmp    810003a4 <do_less+0x9e>
    {
        switch (ch)
81000318:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100031b:	83 f8 68             	cmp    $0x68,%eax
8100031e:	74 0c                	je     8100032c <do_less+0x26>
81000320:	83 f8 6c             	cmp    $0x6c,%eax
81000323:	74 39                	je     8100035e <do_less+0x58>
81000325:	83 f8 3f             	cmp    $0x3f,%eax
81000328:	74 3d                	je     81000367 <do_less+0x61>
8100032a:	eb 78                	jmp    810003a4 <do_less+0x9e>
        {
        case 'h':
            puts("show file content");
8100032c:	83 ec 0c             	sub    $0xc,%esp
8100032f:	68 d8 85 00 81       	push   $0x810085d8
81000334:	e8 a5 55 00 00       	call   810058de <puts>
81000339:	83 c4 10             	add    $0x10,%esp
            puts("less [-l] file");
8100033c:	83 ec 0c             	sub    $0xc,%esp
8100033f:	68 ea 85 00 81       	push   $0x810085ea
81000344:	e8 95 55 00 00       	call   810058de <puts>
81000349:	83 c4 10             	add    $0x10,%esp
            puts("-l show file line by line.");
8100034c:	83 ec 0c             	sub    $0xc,%esp
8100034f:	68 f9 85 00 81       	push   $0x810085f9
81000354:	e8 85 55 00 00       	call   810058de <puts>
81000359:	83 c4 10             	add    $0x10,%esp
            break;
8100035c:	eb 46                	jmp    810003a4 <do_less+0x9e>
        case 'l':
            line_mode = 1;
8100035e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
            break;
81000365:	eb 3d                	jmp    810003a4 <do_less+0x9e>
        case '?':
            if (optarg)
81000367:	a1 88 9b 00 81       	mov    0x81009b88,%eax
8100036c:	85 c0                	test   %eax,%eax
8100036e:	74 20                	je     81000390 <do_less+0x8a>
            {
                fprintf(stderr, "Unknown option: -%s\n", optarg);
81000370:	8b 15 88 9b 00 81    	mov    0x81009b88,%edx
81000376:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100037b:	8b 40 0c             	mov    0xc(%eax),%eax
8100037e:	83 ec 04             	sub    $0x4,%esp
81000381:	52                   	push   %edx
81000382:	68 ac 85 00 81       	push   $0x810085ac
81000387:	50                   	push   %eax
81000388:	e8 71 17 00 00       	call   81001afe <fiprintf>
8100038d:	83 c4 10             	add    $0x10,%esp
            }
            optind = 1; // getopt需要多次调用，需要重置
81000390:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000397:	00 00 00 
            return -1;
8100039a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100039f:	e9 fc 01 00 00       	jmp    810005a0 <do_less+0x29a>
    while ((ch = getopt(argc, argv, "lh")) != -1)
810003a4:	83 ec 04             	sub    $0x4,%esp
810003a7:	68 14 86 00 81       	push   $0x81008614
810003ac:	ff 75 0c             	pushl  0xc(%ebp)
810003af:	ff 75 08             	pushl  0x8(%ebp)
810003b2:	e8 4f 38 00 00       	call   81003c06 <getopt>
810003b7:	83 c4 10             	add    $0x10,%esp
810003ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003bd:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003c1:	0f 85 51 ff ff ff    	jne    81000318 <do_less+0x12>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1)
810003c7:	8b 45 08             	mov    0x8(%ebp),%eax
810003ca:	8d 50 ff             	lea    -0x1(%eax),%edx
810003cd:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
810003d2:	39 c2                	cmp    %eax,%edx
810003d4:	7d 2e                	jge    81000404 <do_less+0xfe>
    {
        fprintf(stderr, "no file\n");
810003d6:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810003db:	8b 40 0c             	mov    0xc(%eax),%eax
810003de:	50                   	push   %eax
810003df:	6a 08                	push   $0x8
810003e1:	6a 01                	push   $0x1
810003e3:	68 17 86 00 81       	push   $0x81008617
810003e8:	e8 52 2b 00 00       	call   81002f3f <fwrite>
810003ed:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
810003f0:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810003f7:	00 00 00 
        return -1;
810003fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003ff:	e9 9c 01 00 00       	jmp    810005a0 <do_less+0x29a>
    }

    FILE *file = fopen(argv[optind], "r");
81000404:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
81000409:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000410:	8b 45 0c             	mov    0xc(%ebp),%eax
81000413:	01 d0                	add    %edx,%eax
81000415:	8b 00                	mov    (%eax),%eax
81000417:	83 ec 08             	sub    $0x8,%esp
8100041a:	68 20 86 00 81       	push   $0x81008620
8100041f:	50                   	push   %eax
81000420:	e8 91 16 00 00       	call   81001ab6 <fopen>
81000425:	83 c4 10             	add    $0x10,%esp
81000428:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (file == NULL)
8100042b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100042f:	75 41                	jne    81000472 <do_less+0x16c>
    {
        fprintf(stderr, "open file failed. %s", argv[optind]);
81000431:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
81000436:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100043d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000440:	01 d0                	add    %edx,%eax
81000442:	8b 10                	mov    (%eax),%edx
81000444:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000449:	8b 40 0c             	mov    0xc(%eax),%eax
8100044c:	83 ec 04             	sub    $0x4,%esp
8100044f:	52                   	push   %edx
81000450:	68 22 86 00 81       	push   $0x81008622
81000455:	50                   	push   %eax
81000456:	e8 a3 16 00 00       	call   81001afe <fiprintf>
8100045b:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
8100045e:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000465:	00 00 00 
        return -1;
81000468:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100046d:	e9 2e 01 00 00       	jmp    810005a0 <do_less+0x29a>
    }

    char *buf = (char *)malloc(255);
81000472:	83 ec 0c             	sub    $0xc,%esp
81000475:	68 ff 00 00 00       	push   $0xff
8100047a:	e8 53 3a 00 00       	call   81003ed2 <malloc>
8100047f:	83 c4 10             	add    $0x10,%esp
81000482:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (line_mode == 0)
81000485:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000489:	75 38                	jne    810004c3 <do_less+0x1bd>
    {
        while (fgets(buf, 255, file) != NULL)
8100048b:	eb 17                	jmp    810004a4 <do_less+0x19e>
        {
            fputs(buf, stdout);
8100048d:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000492:	8b 40 08             	mov    0x8(%eax),%eax
81000495:	83 ec 08             	sub    $0x8,%esp
81000498:	50                   	push   %eax
81000499:	ff 75 e8             	pushl  -0x18(%ebp)
8100049c:	e8 2f 17 00 00       	call   81001bd0 <fputs>
810004a1:	83 c4 10             	add    $0x10,%esp
        while (fgets(buf, 255, file) != NULL)
810004a4:	83 ec 04             	sub    $0x4,%esp
810004a7:	ff 75 ec             	pushl  -0x14(%ebp)
810004aa:	68 ff 00 00 00       	push   $0xff
810004af:	ff 75 e8             	pushl  -0x18(%ebp)
810004b2:	e8 09 11 00 00       	call   810015c0 <fgets>
810004b7:	83 c4 10             	add    $0x10,%esp
810004ba:	85 c0                	test   %eax,%eax
810004bc:	75 cf                	jne    8100048d <do_less+0x187>
810004be:	e9 b2 00 00 00       	jmp    81000575 <do_less+0x26f>
        }
    }
    else
    {
        // 不使用行缓存，这样能直接立即读取到输入而不用等回车
        setvbuf(stdin, NULL, _IONBF, 0);
810004c3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810004c8:	8b 40 04             	mov    0x4(%eax),%eax
810004cb:	6a 00                	push   $0x0
810004cd:	6a 02                	push   $0x2
810004cf:	6a 00                	push   $0x0
810004d1:	50                   	push   %eax
810004d2:	e8 82 61 00 00       	call   81006659 <setvbuf>
810004d7:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 0, 0);
810004da:	6a 00                	push   $0x0
810004dc:	6a 00                	push   $0x0
810004de:	6a 01                	push   $0x1
810004e0:	6a 00                	push   $0x0
810004e2:	e8 0b 0a 00 00       	call   81000ef2 <ioctl>
810004e7:	83 c4 10             	add    $0x10,%esp
        while (1)
        {
            char *b = fgets(buf, 255, file);
810004ea:	83 ec 04             	sub    $0x4,%esp
810004ed:	ff 75 ec             	pushl  -0x14(%ebp)
810004f0:	68 ff 00 00 00       	push   $0xff
810004f5:	ff 75 e8             	pushl  -0x18(%ebp)
810004f8:	e8 c3 10 00 00       	call   810015c0 <fgets>
810004fd:	83 c4 10             	add    $0x10,%esp
81000500:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if (b == NULL)
81000503:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000507:	74 3e                	je     81000547 <do_less+0x241>
            {
                break;
            }
            fputs(buf, stdout);
81000509:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100050e:	8b 40 08             	mov    0x8(%eax),%eax
81000511:	83 ec 08             	sub    $0x8,%esp
81000514:	50                   	push   %eax
81000515:	ff 75 e8             	pushl  -0x18(%ebp)
81000518:	e8 b3 16 00 00       	call   81001bd0 <fputs>
8100051d:	83 c4 10             	add    $0x10,%esp

            int ch;
            while ((ch = fgetc(stdin)) != 'n')
81000520:	eb 06                	jmp    81000528 <do_less+0x222>
            {
                if (ch == 'q')
81000522:	83 7d e0 71          	cmpl   $0x71,-0x20(%ebp)
81000526:	74 22                	je     8100054a <do_less+0x244>
            while ((ch = fgetc(stdin)) != 'n')
81000528:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100052d:	8b 40 04             	mov    0x4(%eax),%eax
81000530:	83 ec 0c             	sub    $0xc,%esp
81000533:	50                   	push   %eax
81000534:	e8 b0 0e 00 00       	call   810013e9 <fgetc>
81000539:	83 c4 10             	add    $0x10,%esp
8100053c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100053f:	83 7d e0 6e          	cmpl   $0x6e,-0x20(%ebp)
81000543:	75 dd                	jne    81000522 <do_less+0x21c>
        {
81000545:	eb a3                	jmp    810004ea <do_less+0x1e4>
                break;
81000547:	90                   	nop
81000548:	eb 01                	jmp    8100054b <do_less+0x245>
                {
                    goto less_quit;
8100054a:	90                   	nop
                }
            }
        }
    less_quit:
        // 恢复为行缓存
        setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
8100054b:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000550:	8b 40 04             	mov    0x4(%eax),%eax
81000553:	68 00 04 00 00       	push   $0x400
81000558:	6a 01                	push   $0x1
8100055a:	6a 00                	push   $0x0
8100055c:	50                   	push   %eax
8100055d:	e8 f7 60 00 00       	call   81006659 <setvbuf>
81000562:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 1, 0);
81000565:	6a 00                	push   $0x0
81000567:	6a 01                	push   $0x1
81000569:	6a 01                	push   $0x1
8100056b:	6a 00                	push   $0x0
8100056d:	e8 80 09 00 00       	call   81000ef2 <ioctl>
81000572:	83 c4 10             	add    $0x10,%esp
    }

    free(buf);
81000575:	83 ec 0c             	sub    $0xc,%esp
81000578:	ff 75 e8             	pushl  -0x18(%ebp)
8100057b:	e8 6e 39 00 00       	call   81003eee <free>
81000580:	83 c4 10             	add    $0x10,%esp
    fclose(file);
81000583:	83 ec 0c             	sub    $0xc,%esp
81000586:	ff 75 ec             	pushl  -0x14(%ebp)
81000589:	e8 16 0b 00 00       	call   810010a4 <fclose>
8100058e:	83 c4 10             	add    $0x10,%esp
    optind = 1; // getopt需要多次调用，需要重置
81000591:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000598:	00 00 00 
    return 0;
8100059b:	b8 00 00 00 00       	mov    $0x0,%eax
}
810005a0:	c9                   	leave  
810005a1:	c3                   	ret    

810005a2 <do_cp>:

/**
 * @brief 复制文件命令
 */
static int do_cp(int argc, char **argv)
{
810005a2:	55                   	push   %ebp
810005a3:	89 e5                	mov    %esp,%ebp
810005a5:	83 ec 18             	sub    $0x18,%esp
    if (argc < 3)
810005a8:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
810005ac:	7f 1a                	jg     810005c8 <do_cp+0x26>
    {
        puts("no [from] or no [to]");
810005ae:	83 ec 0c             	sub    $0xc,%esp
810005b1:	68 37 86 00 81       	push   $0x81008637
810005b6:	e8 23 53 00 00       	call   810058de <puts>
810005bb:	83 c4 10             	add    $0x10,%esp
        return -1;
810005be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005c3:	e9 df 00 00 00       	jmp    810006a7 <do_cp+0x105>
    }

    FILE *from, *to;
    from = fopen(argv[1], "rb");
810005c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810005cb:	83 c0 04             	add    $0x4,%eax
810005ce:	8b 00                	mov    (%eax),%eax
810005d0:	83 ec 08             	sub    $0x8,%esp
810005d3:	68 4c 86 00 81       	push   $0x8100864c
810005d8:	50                   	push   %eax
810005d9:	e8 d8 14 00 00       	call   81001ab6 <fopen>
810005de:	83 c4 10             	add    $0x10,%esp
810005e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    to = fopen(argv[2], "wb");
810005e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810005e7:	83 c0 08             	add    $0x8,%eax
810005ea:	8b 00                	mov    (%eax),%eax
810005ec:	83 ec 08             	sub    $0x8,%esp
810005ef:	68 4f 86 00 81       	push   $0x8100864f
810005f4:	50                   	push   %eax
810005f5:	e8 bc 14 00 00       	call   81001ab6 <fopen>
810005fa:	83 c4 10             	add    $0x10,%esp
810005fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (!from || !to)
81000600:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000604:	74 06                	je     8100060c <do_cp+0x6a>
81000606:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100060a:	75 12                	jne    8100061e <do_cp+0x7c>
    {
        puts("open file failed.");
8100060c:	83 ec 0c             	sub    $0xc,%esp
8100060f:	68 52 86 00 81       	push   $0x81008652
81000614:	e8 c5 52 00 00       	call   810058de <puts>
81000619:	83 c4 10             	add    $0x10,%esp
        goto ls_failed;
8100061c:	eb 5c                	jmp    8100067a <do_cp+0xd8>
    }

    char *buf = (char *)malloc(255);
8100061e:	83 ec 0c             	sub    $0xc,%esp
81000621:	68 ff 00 00 00       	push   $0xff
81000626:	e8 a7 38 00 00       	call   81003ed2 <malloc>
8100062b:	83 c4 10             	add    $0x10,%esp
8100062e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    int size = 0;
81000631:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    while ((size = fread(buf, 1, 255, from)) > 0)
81000638:	eb 14                	jmp    8100064e <do_cp+0xac>
    {
        fwrite(buf, 1, size, to);
8100063a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100063d:	ff 75 f0             	pushl  -0x10(%ebp)
81000640:	50                   	push   %eax
81000641:	6a 01                	push   $0x1
81000643:	ff 75 ec             	pushl  -0x14(%ebp)
81000646:	e8 f4 28 00 00       	call   81002f3f <fwrite>
8100064b:	83 c4 10             	add    $0x10,%esp
    while ((size = fread(buf, 1, 255, from)) > 0)
8100064e:	ff 75 f4             	pushl  -0xc(%ebp)
81000651:	68 ff 00 00 00       	push   $0xff
81000656:	6a 01                	push   $0x1
81000658:	ff 75 ec             	pushl  -0x14(%ebp)
8100065b:	e8 04 18 00 00       	call   81001e64 <fread>
81000660:	83 c4 10             	add    $0x10,%esp
81000663:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000666:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100066a:	7f ce                	jg     8100063a <do_cp+0x98>
    }
    free(buf);
8100066c:	83 ec 0c             	sub    $0xc,%esp
8100066f:	ff 75 ec             	pushl  -0x14(%ebp)
81000672:	e8 77 38 00 00       	call   81003eee <free>
81000677:	83 c4 10             	add    $0x10,%esp

ls_failed:
    if (from)
8100067a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100067e:	74 0e                	je     8100068e <do_cp+0xec>
    {
        fclose(from);
81000680:	83 ec 0c             	sub    $0xc,%esp
81000683:	ff 75 f4             	pushl  -0xc(%ebp)
81000686:	e8 19 0a 00 00       	call   810010a4 <fclose>
8100068b:	83 c4 10             	add    $0x10,%esp
    }
    if (to)
8100068e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000692:	74 0e                	je     810006a2 <do_cp+0x100>
    {
        fclose(to);
81000694:	83 ec 0c             	sub    $0xc,%esp
81000697:	ff 75 f0             	pushl  -0x10(%ebp)
8100069a:	e8 05 0a 00 00       	call   810010a4 <fclose>
8100069f:	83 c4 10             	add    $0x10,%esp
    }
    return 0;
810006a2:	b8 00 00 00 00       	mov    $0x0,%eax
}
810006a7:	c9                   	leave  
810006a8:	c3                   	ret    

810006a9 <do_remove>:

/**
 * @brief 删除文件命令
 */
static int do_remove(int argc, char **argv)
{
810006a9:	55                   	push   %ebp
810006aa:	89 e5                	mov    %esp,%ebp
810006ac:	83 ec 18             	sub    $0x18,%esp
    if (argc < 2)
810006af:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810006b3:	7f 21                	jg     810006d6 <do_remove+0x2d>
    {
        fprintf(stderr, "no file");
810006b5:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810006ba:	8b 40 0c             	mov    0xc(%eax),%eax
810006bd:	50                   	push   %eax
810006be:	6a 07                	push   $0x7
810006c0:	6a 01                	push   $0x1
810006c2:	68 64 86 00 81       	push   $0x81008664
810006c7:	e8 73 28 00 00       	call   81002f3f <fwrite>
810006cc:	83 c4 10             	add    $0x10,%esp
        return -1;
810006cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810006d4:	eb 49                	jmp    8100071f <do_remove+0x76>
    }

    int err = unlink(argv[1]);
810006d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810006d9:	83 c0 04             	add    $0x4,%eax
810006dc:	8b 00                	mov    (%eax),%eax
810006de:	83 ec 0c             	sub    $0xc,%esp
810006e1:	50                   	push   %eax
810006e2:	e8 ea 07 00 00       	call   81000ed1 <unlink>
810006e7:	83 c4 10             	add    $0x10,%esp
810006ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (err < 0)
810006ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006f1:	79 27                	jns    8100071a <do_remove+0x71>
    {
        fprintf(stderr, "rm file failed: %s", argv[1]);
810006f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810006f6:	83 c0 04             	add    $0x4,%eax
810006f9:	8b 10                	mov    (%eax),%edx
810006fb:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000700:	8b 40 0c             	mov    0xc(%eax),%eax
81000703:	83 ec 04             	sub    $0x4,%esp
81000706:	52                   	push   %edx
81000707:	68 6c 86 00 81       	push   $0x8100866c
8100070c:	50                   	push   %eax
8100070d:	e8 ec 13 00 00       	call   81001afe <fiprintf>
81000712:	83 c4 10             	add    $0x10,%esp
        return err;
81000715:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000718:	eb 05                	jmp    8100071f <do_remove+0x76>
    }

    return 0;
8100071a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100071f:	c9                   	leave  
81000720:	c3                   	ret    

81000721 <cli_init>:

/**
 * 命令行初始化
 */
static void cli_init(const char *promot, const cli_cmd_t *cmd_list, int cnt)
{
81000721:	55                   	push   %ebp
81000722:	89 e5                	mov    %esp,%ebp
81000724:	83 ec 08             	sub    $0x8,%esp
    cli.promot = promot;
81000727:	8b 45 08             	mov    0x8(%ebp),%eax
8100072a:	a3 68 9a 00 81       	mov    %eax,0x81009a68

    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100072f:	83 ec 04             	sub    $0x4,%esp
81000732:	68 00 04 00 00       	push   $0x400
81000737:	6a 00                	push   $0x0
81000739:	68 60 96 00 81       	push   $0x81009660
8100073e:	e8 3a 44 00 00       	call   81004b7d <memset>
81000743:	83 c4 10             	add    $0x10,%esp

    cli.cmd_start = cmd_list;
81000746:	8b 45 0c             	mov    0xc(%ebp),%eax
81000749:	a3 60 9a 00 81       	mov    %eax,0x81009a60
    cli.cmd_end = cmd_list + cnt;
8100074e:	8b 55 10             	mov    0x10(%ebp),%edx
81000751:	89 d0                	mov    %edx,%eax
81000753:	01 c0                	add    %eax,%eax
81000755:	01 d0                	add    %edx,%eax
81000757:	c1 e0 02             	shl    $0x2,%eax
8100075a:	89 c2                	mov    %eax,%edx
8100075c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100075f:	01 d0                	add    %edx,%eax
81000761:	a3 64 9a 00 81       	mov    %eax,0x81009a64
}
81000766:	90                   	nop
81000767:	c9                   	leave  
81000768:	c3                   	ret    

81000769 <find_builtin>:

/**
 * 在内部命令中搜索
 */
static const cli_cmd_t *find_builtin(const char *name)
{
81000769:	55                   	push   %ebp
8100076a:	89 e5                	mov    %esp,%ebp
8100076c:	83 ec 18             	sub    $0x18,%esp
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
8100076f:	a1 60 9a 00 81       	mov    0x81009a60,%eax
81000774:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000777:	eb 23                	jmp    8100079c <find_builtin+0x33>
    {
        if (strcmp(cmd->name, name) != 0)
81000779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100077c:	8b 00                	mov    (%eax),%eax
8100077e:	83 ec 08             	sub    $0x8,%esp
81000781:	ff 75 08             	pushl  0x8(%ebp)
81000784:	50                   	push   %eax
81000785:	e8 a2 63 00 00       	call   81006b2c <strcmp>
8100078a:	83 c4 10             	add    $0x10,%esp
8100078d:	85 c0                	test   %eax,%eax
8100078f:	74 06                	je     81000797 <find_builtin+0x2e>
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
81000791:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000795:	eb 05                	jmp    8100079c <find_builtin+0x33>
        {
            continue;
        }

        return cmd;
81000797:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100079a:	eb 0f                	jmp    810007ab <find_builtin+0x42>
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
8100079c:	a1 64 9a 00 81       	mov    0x81009a64,%eax
810007a1:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810007a4:	72 d3                	jb     81000779 <find_builtin+0x10>
    }

    return (const cli_cmd_t *)0;
810007a6:	b8 00 00 00 00       	mov    $0x0,%eax
}
810007ab:	c9                   	leave  
810007ac:	c3                   	ret    

810007ad <run_builtin>:

/**
 * 运行内部命令
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, char **argv)
{
810007ad:	55                   	push   %ebp
810007ae:	89 e5                	mov    %esp,%ebp
810007b0:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810007b3:	8b 45 08             	mov    0x8(%ebp),%eax
810007b6:	8b 40 08             	mov    0x8(%eax),%eax
810007b9:	83 ec 08             	sub    $0x8,%esp
810007bc:	ff 75 10             	pushl  0x10(%ebp)
810007bf:	ff 75 0c             	pushl  0xc(%ebp)
810007c2:	ff d0                	call   *%eax
810007c4:	83 c4 10             	add    $0x10,%esp
810007c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (ret < 0)
810007ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007ce:	79 1c                	jns    810007ec <run_builtin+0x3f>
    {
        fprintf(stderr, ESC_COLOR_ERROR "error: %d\n" ESC_COLOR_DEFAULT, ret);
810007d0:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810007d5:	8b 40 0c             	mov    0xc(%eax),%eax
810007d8:	83 ec 04             	sub    $0x4,%esp
810007db:	ff 75 f4             	pushl  -0xc(%ebp)
810007de:	68 e0 87 00 81       	push   $0x810087e0
810007e3:	50                   	push   %eax
810007e4:	e8 15 13 00 00       	call   81001afe <fiprintf>
810007e9:	83 c4 10             	add    $0x10,%esp
    }
}
810007ec:	90                   	nop
810007ed:	c9                   	leave  
810007ee:	c3                   	ret    

810007ef <find_exec_path>:

/**
 * 遍历搜索目录，看看文件是否存在，存在返回文件所在路径
 */
static const char *find_exec_path(const char *file_name)
{
810007ef:	55                   	push   %ebp
810007f0:	89 e5                	mov    %esp,%ebp
810007f2:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
810007f5:	83 ec 08             	sub    $0x8,%esp
810007f8:	6a 00                	push   $0x0
810007fa:	ff 75 08             	pushl  0x8(%ebp)
810007fd:	e8 55 04 00 00       	call   81000c57 <open>
81000802:	83 c4 10             	add    $0x10,%esp
81000805:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0)
81000808:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100080c:	79 4f                	jns    8100085d <find_exec_path+0x6e>
    {
        sprintf(path, "%s.elf", file_name);
8100080e:	83 ec 04             	sub    $0x4,%esp
81000811:	ff 75 08             	pushl  0x8(%ebp)
81000814:	68 f5 87 00 81       	push   $0x810087f5
81000819:	68 80 9a 00 81       	push   $0x81009a80
8100081e:	e8 97 60 00 00       	call   810068ba <siprintf>
81000823:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
81000826:	83 ec 08             	sub    $0x8,%esp
81000829:	6a 00                	push   $0x0
8100082b:	68 80 9a 00 81       	push   $0x81009a80
81000830:	e8 22 04 00 00       	call   81000c57 <open>
81000835:	83 c4 10             	add    $0x10,%esp
81000838:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0)
8100083b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100083f:	79 07                	jns    81000848 <find_exec_path+0x59>
        {
            return (const char *)0;
81000841:	b8 00 00 00 00       	mov    $0x0,%eax
81000846:	eb 26                	jmp    8100086e <find_exec_path+0x7f>
        }
        close(fd);
81000848:	83 ec 0c             	sub    $0xc,%esp
8100084b:	ff 75 f4             	pushl  -0xc(%ebp)
8100084e:	e8 85 04 00 00       	call   81000cd8 <close>
81000853:	83 c4 10             	add    $0x10,%esp
        return path;
81000856:	b8 80 9a 00 81       	mov    $0x81009a80,%eax
8100085b:	eb 11                	jmp    8100086e <find_exec_path+0x7f>
    }
    else
    {
        close(fd);
8100085d:	83 ec 0c             	sub    $0xc,%esp
81000860:	ff 75 f4             	pushl  -0xc(%ebp)
81000863:	e8 70 04 00 00       	call   81000cd8 <close>
81000868:	83 c4 10             	add    $0x10,%esp
        return file_name;
8100086b:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
8100086e:	c9                   	leave  
8100086f:	c3                   	ret    

81000870 <run_exec_file>:

/**
 * 试图运行当前文件
 */
static void run_exec_file(const char *path, int argc, char **argv)
{
81000870:	55                   	push   %ebp
81000871:	89 e5                	mov    %esp,%ebp
81000873:	83 ec 18             	sub    $0x18,%esp
    int pid = fork();
81000876:	e8 79 03 00 00       	call   81000bf4 <fork>
8100087b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (pid < 0)
8100087e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000882:	79 1e                	jns    810008a2 <run_exec_file+0x32>
    {
        fprintf(stderr, "fork failed: %s", path);
81000884:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000889:	8b 40 0c             	mov    0xc(%eax),%eax
8100088c:	83 ec 04             	sub    $0x4,%esp
8100088f:	ff 75 08             	pushl  0x8(%ebp)
81000892:	68 fc 87 00 81       	push   $0x810087fc
81000897:	50                   	push   %eax
81000898:	e8 61 12 00 00       	call   81001afe <fiprintf>
8100089d:	83 c4 10             	add    $0x10,%esp
        // 等待子进程执行完毕
        int status;
        int pid = wait(&status);
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
    }
}
810008a0:	eb 7d                	jmp    8100091f <run_exec_file+0xaf>
    else if (pid == 0)
810008a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008a6:	75 42                	jne    810008ea <run_exec_file+0x7a>
        int err = execve(path, argv, (char *const *)0);
810008a8:	83 ec 04             	sub    $0x4,%esp
810008ab:	6a 00                	push   $0x0
810008ad:	ff 75 10             	pushl  0x10(%ebp)
810008b0:	ff 75 08             	pushl  0x8(%ebp)
810008b3:	e8 57 03 00 00       	call   81000c0f <execve>
810008b8:	83 c4 10             	add    $0x10,%esp
810008bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (err < 0)
810008be:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810008c2:	79 1c                	jns    810008e0 <run_exec_file+0x70>
            fprintf(stderr, "exec failed: %s", path);
810008c4:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810008c9:	8b 40 0c             	mov    0xc(%eax),%eax
810008cc:	83 ec 04             	sub    $0x4,%esp
810008cf:	ff 75 08             	pushl  0x8(%ebp)
810008d2:	68 0c 88 00 81       	push   $0x8100880c
810008d7:	50                   	push   %eax
810008d8:	e8 21 12 00 00       	call   81001afe <fiprintf>
810008dd:	83 c4 10             	add    $0x10,%esp
        exit(-1);
810008e0:	83 ec 0c             	sub    $0xc,%esp
810008e3:	6a ff                	push   $0xffffffff
810008e5:	e8 6f 06 00 00       	call   81000f59 <exit>
        int pid = wait(&status);
810008ea:	83 ec 0c             	sub    $0xc,%esp
810008ed:	8d 45 e8             	lea    -0x18(%ebp),%eax
810008f0:	50                   	push   %eax
810008f1:	e8 ba 04 00 00       	call   81000db0 <wait>
810008f6:	83 c4 10             	add    $0x10,%esp
810008f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
810008fc:	8b 55 e8             	mov    -0x18(%ebp),%edx
810008ff:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000904:	8b 40 0c             	mov    0xc(%eax),%eax
81000907:	83 ec 0c             	sub    $0xc,%esp
8100090a:	ff 75 f0             	pushl  -0x10(%ebp)
8100090d:	52                   	push   %edx
8100090e:	ff 75 08             	pushl  0x8(%ebp)
81000911:	68 1c 88 00 81       	push   $0x8100881c
81000916:	50                   	push   %eax
81000917:	e8 e2 11 00 00       	call   81001afe <fiprintf>
8100091c:	83 c4 20             	add    $0x20,%esp
}
8100091f:	90                   	nop
81000920:	c9                   	leave  
81000921:	c3                   	ret    

81000922 <main>:

int main(int argc, char **argv)
{
81000922:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000926:	83 e4 f0             	and    $0xfffffff0,%esp
81000929:	ff 71 fc             	pushl  -0x4(%ecx)
8100092c:	55                   	push   %ebp
8100092d:	89 e5                	mov    %esp,%ebp
8100092f:	51                   	push   %ecx
81000930:	83 ec 54             	sub    $0x54,%esp
81000933:	89 c8                	mov    %ecx,%eax
    open(argv[0], O_RDWR); // int fd=0;
81000935:	8b 40 04             	mov    0x4(%eax),%eax
81000938:	8b 00                	mov    (%eax),%eax
8100093a:	83 ec 08             	sub    $0x8,%esp
8100093d:	6a 02                	push   $0x2
8100093f:	50                   	push   %eax
81000940:	e8 12 03 00 00       	call   81000c57 <open>
81000945:	83 c4 10             	add    $0x10,%esp
    dup(0);                // 标准输出
81000948:	83 ec 0c             	sub    $0xc,%esp
8100094b:	6a 00                	push   $0x0
8100094d:	e8 3d 04 00 00       	call   81000d8f <dup>
81000952:	83 c4 10             	add    $0x10,%esp
    dup(0);                // 标准错误输出
81000955:	83 ec 0c             	sub    $0xc,%esp
81000958:	6a 00                	push   $0x0
8100095a:	e8 30 04 00 00       	call   81000d8f <dup>
8100095f:	83 c4 10             	add    $0x10,%esp

    cli_init(promot, cmd_list, sizeof(cmd_list) / sizeof(cli_cmd_t));
81000962:	a1 60 8c 00 81       	mov    0x81008c60,%eax
81000967:	83 ec 04             	sub    $0x4,%esp
8100096a:	6a 08                	push   $0x8
8100096c:	68 80 87 00 81       	push   $0x81008780
81000971:	50                   	push   %eax
81000972:	e8 aa fd ff ff       	call   81000721 <cli_init>
81000977:	83 c4 10             	add    $0x10,%esp

    for (;;)
    {
        // 显示提示符，开始工作
        show_promot();
8100097a:	e8 81 f6 ff ff       	call   81000000 <show_promot>

        // 获取输入的字符串，然后进行处理.
        // 注意，读取到的字符串结尾中会包含换行符和0
        char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
8100097f:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000984:	8b 40 04             	mov    0x4(%eax),%eax
81000987:	83 ec 04             	sub    $0x4,%esp
8100098a:	50                   	push   %eax
8100098b:	68 00 04 00 00       	push   $0x400
81000990:	68 60 96 00 81       	push   $0x81009660
81000995:	e8 26 0c 00 00       	call   810015c0 <fgets>
8100099a:	83 c4 10             	add    $0x10,%esp
8100099d:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (str == (char *)0)
810009a0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810009a4:	75 0a                	jne    810009b0 <main+0x8e>
810009a6:	b8 00 00 00 00       	mov    $0x0,%eax
810009ab:	e9 35 01 00 00       	jmp    81000ae5 <main+0x1c3>
            // 读不到错误，或f发生错误，则退出
            break;
        }

        // 读取的字符串中结尾可能有换行符
        char *cr = strchr(cli.curr_input, '\n');
810009b0:	83 ec 08             	sub    $0x8,%esp
810009b3:	6a 0a                	push   $0xa
810009b5:	68 60 96 00 81       	push   $0x81009660
810009ba:	e8 71 60 00 00       	call   81006a30 <strchr>
810009bf:	83 c4 10             	add    $0x10,%esp
810009c2:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr)
810009c5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009c9:	74 06                	je     810009d1 <main+0xaf>
        {
            *cr = '\0';
810009cb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009ce:	c6 00 00             	movb   $0x0,(%eax)
        }
        cr = strchr(cli.curr_input, '\r');
810009d1:	83 ec 08             	sub    $0x8,%esp
810009d4:	6a 0d                	push   $0xd
810009d6:	68 60 96 00 81       	push   $0x81009660
810009db:	e8 50 60 00 00       	call   81006a30 <strchr>
810009e0:	83 c4 10             	add    $0x10,%esp
810009e3:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr)
810009e6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009ea:	74 06                	je     810009f2 <main+0xd0>
        {
            *cr = '\0';
810009ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009ef:	c6 00 00             	movb   $0x0,(%eax)
        }

        int argc = 0;
810009f2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        char *argv[CLI_MAX_ARG_COUNT];
        memset(argv, 0, sizeof(argv));
810009f9:	83 ec 04             	sub    $0x4,%esp
810009fc:	6a 28                	push   $0x28
810009fe:	6a 00                	push   $0x0
81000a00:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a03:	50                   	push   %eax
81000a04:	e8 74 41 00 00       	call   81004b7d <memset>
81000a09:	83 c4 10             	add    $0x10,%esp

        // 提取出命令，找命令表
        const char *space = " "; // 字符分割器
81000a0c:	c7 45 e4 39 88 00 81 	movl   $0x81008839,-0x1c(%ebp)
        char *token = strtok(cli.curr_input, space);
81000a13:	83 ec 08             	sub    $0x8,%esp
81000a16:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a19:	68 60 96 00 81       	push   $0x81009660
81000a1e:	e8 8e 62 00 00       	call   81006cb1 <strtok>
81000a23:	83 c4 10             	add    $0x10,%esp
81000a26:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token)
81000a29:	eb 23                	jmp    81000a4e <main+0x12c>
        {
            // 记录参数
            argv[argc++] = token;
81000a2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a2e:	8d 50 01             	lea    0x1(%eax),%edx
81000a31:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a34:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000a37:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)

            // 先获取下一位置
            token = strtok(NULL, space);
81000a3b:	83 ec 08             	sub    $0x8,%esp
81000a3e:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a41:	6a 00                	push   $0x0
81000a43:	e8 69 62 00 00       	call   81006cb1 <strtok>
81000a48:	83 c4 10             	add    $0x10,%esp
81000a4b:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token)
81000a4e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a52:	75 d7                	jne    81000a2b <main+0x109>
        }

        // 没有任何输入，则x继续循环
        if (argc == 0)
81000a54:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a58:	0f 84 81 00 00 00    	je     81000adf <main+0x1bd>
        {
            continue;
        }

        // 试图作为内部命令加载执行
        const cli_cmd_t *cmd = find_builtin(argv[0]);
81000a5e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a61:	83 ec 0c             	sub    $0xc,%esp
81000a64:	50                   	push   %eax
81000a65:	e8 ff fc ff ff       	call   81000769 <find_builtin>
81000a6a:	83 c4 10             	add    $0x10,%esp
81000a6d:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if (cmd)
81000a70:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a74:	74 17                	je     81000a8d <main+0x16b>
        {
            run_builtin(cmd, argc, argv);
81000a76:	83 ec 04             	sub    $0x4,%esp
81000a79:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a7c:	50                   	push   %eax
81000a7d:	ff 75 f4             	pushl  -0xc(%ebp)
81000a80:	ff 75 e0             	pushl  -0x20(%ebp)
81000a83:	e8 25 fd ff ff       	call   810007ad <run_builtin>
81000a88:	83 c4 10             	add    $0x10,%esp
            continue;
81000a8b:	eb 53                	jmp    81000ae0 <main+0x1be>
        }

        // 试图作为外部命令执行。只检查文件是否存在，不考虑是否可执行
        const char *path = find_exec_path(argv[0]);
81000a8d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a90:	83 ec 0c             	sub    $0xc,%esp
81000a93:	50                   	push   %eax
81000a94:	e8 56 fd ff ff       	call   810007ef <find_exec_path>
81000a99:	83 c4 10             	add    $0x10,%esp
81000a9c:	89 45 dc             	mov    %eax,-0x24(%ebp)
        if (path)
81000a9f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000aa3:	74 17                	je     81000abc <main+0x19a>
        {
            run_exec_file(path, argc, argv);
81000aa5:	83 ec 04             	sub    $0x4,%esp
81000aa8:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000aab:	50                   	push   %eax
81000aac:	ff 75 f4             	pushl  -0xc(%ebp)
81000aaf:	ff 75 dc             	pushl  -0x24(%ebp)
81000ab2:	e8 b9 fd ff ff       	call   81000870 <run_exec_file>
81000ab7:	83 c4 10             	add    $0x10,%esp
            continue;
81000aba:	eb 24                	jmp    81000ae0 <main+0x1be>
        }

        // 找不到命令，提示错误
        fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT, cli.curr_input);
81000abc:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000ac1:	8b 40 0c             	mov    0xc(%eax),%eax
81000ac4:	83 ec 04             	sub    $0x4,%esp
81000ac7:	68 60 96 00 81       	push   $0x81009660
81000acc:	68 3c 88 00 81       	push   $0x8100883c
81000ad1:	50                   	push   %eax
81000ad2:	e8 27 10 00 00       	call   81001afe <fiprintf>
81000ad7:	83 c4 10             	add    $0x10,%esp
81000ada:	e9 9b fe ff ff       	jmp    8100097a <main+0x58>
            continue;
81000adf:	90                   	nop
    {
81000ae0:	e9 95 fe ff ff       	jmp    8100097a <main+0x58>
    }
81000ae5:	8b 4d fc             	mov    -0x4(%ebp),%ecx
81000ae8:	c9                   	leave  
81000ae9:	8d 61 fc             	lea    -0x4(%ecx),%esp
81000aec:	c3                   	ret    

81000aed <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
81000aed:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
81000af0:	8e d8                	mov    %eax,%ds
    mov %ax, %es
81000af2:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000af4:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
81000af6:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
81000af8:	e9 00 00 00 00       	jmp    81000afd <cstart>

81000afd <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];
/**
 * @brief 应用的初始化，C部分
 */
void cstart(int argc, char **argv)
{
81000afd:	55                   	push   %ebp
81000afe:	89 e5                	mov    %esp,%ebp
81000b00:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t *start = __bss_start__;
81000b03:	c7 45 f4 60 96 00 81 	movl   $0x81009660,-0xc(%ebp)
    while (start < __bss_end__)
81000b0a:	eb 0c                	jmp    81000b18 <cstart+0x1b>
    {
        *start++ = 0;
81000b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b0f:	8d 50 01             	lea    0x1(%eax),%edx
81000b12:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000b15:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__)
81000b18:	81 7d f4 00 9c 00 81 	cmpl   $0x81009c00,-0xc(%ebp)
81000b1f:	72 eb                	jb     81000b0c <cstart+0xf>
    }
    exit(main(argc, argv));
81000b21:	83 ec 08             	sub    $0x8,%esp
81000b24:	ff 75 0c             	pushl  0xc(%ebp)
81000b27:	ff 75 08             	pushl  0x8(%ebp)
81000b2a:	e8 f3 fd ff ff       	call   81000922 <main>
81000b2f:	83 c4 10             	add    $0x10,%esp
81000b32:	83 ec 0c             	sub    $0xc,%esp
81000b35:	50                   	push   %eax
81000b36:	e8 1e 04 00 00       	call   81000f59 <exit>

81000b3b <sys_call>:

/**
 * 执行系统调用
 */
static inline int sys_call(syscall_args_t *args)
{
81000b3b:	55                   	push   %ebp
81000b3c:	89 e5                	mov    %esp,%ebp
81000b3e:	57                   	push   %edi
81000b3f:	56                   	push   %esi
81000b40:	53                   	push   %ebx
81000b41:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0}; // 使用特权级0
81000b44:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000b4b:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[gate])\n\n"
        : "=a"(ret)
        : [arg3] "r"(args->arg3), [arg2] "r"(args->arg2), [arg1] "r"(args->arg1),
81000b52:	8b 45 08             	mov    0x8(%ebp),%eax
81000b55:	8b 40 10             	mov    0x10(%eax),%eax
81000b58:	8b 55 08             	mov    0x8(%ebp),%edx
81000b5b:	8b 52 0c             	mov    0xc(%edx),%edx
81000b5e:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000b61:	8b 49 08             	mov    0x8(%ecx),%ecx
          [arg0] "r"(args->arg0), [id] "r"(args->id),
81000b64:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000b67:	8b 5b 04             	mov    0x4(%ebx),%ebx
81000b6a:	8b 75 08             	mov    0x8(%ebp),%esi
81000b6d:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
81000b6f:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000b72:	50                   	push   %eax
81000b73:	52                   	push   %edx
81000b74:	51                   	push   %ecx
81000b75:	53                   	push   %ebx
81000b76:	56                   	push   %esi
81000b77:	ff 1f                	lcall  *(%edi)
81000b79:	89 45 f0             	mov    %eax,-0x10(%ebp)
          [gate] "r"(sys_gate_addr));
    return ret;
81000b7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b7f:	83 c4 10             	add    $0x10,%esp
81000b82:	5b                   	pop    %ebx
81000b83:	5e                   	pop    %esi
81000b84:	5f                   	pop    %edi
81000b85:	5d                   	pop    %ebp
81000b86:	c3                   	ret    

81000b87 <msleep>:

int msleep(int ms)
{
81000b87:	55                   	push   %ebp
81000b88:	89 e5                	mov    %esp,%ebp
81000b8a:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0)
81000b8d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b91:	7e 1b                	jle    81000bae <msleep+0x27>
    {
        return;
    }

    syscall_args_t args;
    args.id = SYS_msleep;
81000b93:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000b9a:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000ba0:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ba3:	50                   	push   %eax
81000ba4:	e8 92 ff ff ff       	call   81000b3b <sys_call>
81000ba9:	83 c4 04             	add    $0x4,%esp
81000bac:	eb 01                	jmp    81000baf <msleep+0x28>
        return;
81000bae:	90                   	nop
}
81000baf:	c9                   	leave  
81000bb0:	c3                   	ret    

81000bb1 <getpid>:

int getpid(void)
{
81000bb1:	55                   	push   %ebp
81000bb2:	89 e5                	mov    %esp,%ebp
81000bb4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000bb7:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000bbe:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bc1:	50                   	push   %eax
81000bc2:	e8 74 ff ff ff       	call   81000b3b <sys_call>
81000bc7:	83 c4 04             	add    $0x4,%esp
}
81000bca:	c9                   	leave  
81000bcb:	c3                   	ret    

81000bcc <print_msg>:

void print_msg(const char *fmt, int arg)
{
81000bcc:	55                   	push   %ebp
81000bcd:	89 e5                	mov    %esp,%ebp
81000bcf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000bd2:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000bd9:	8b 45 08             	mov    0x8(%ebp),%eax
81000bdc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000bdf:	8b 45 0c             	mov    0xc(%ebp),%eax
81000be2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000be5:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000be8:	50                   	push   %eax
81000be9:	e8 4d ff ff ff       	call   81000b3b <sys_call>
81000bee:	83 c4 04             	add    $0x4,%esp
}
81000bf1:	90                   	nop
81000bf2:	c9                   	leave  
81000bf3:	c3                   	ret    

81000bf4 <fork>:

int fork(void)
{
81000bf4:	55                   	push   %ebp
81000bf5:	89 e5                	mov    %esp,%ebp
81000bf7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000bfa:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000c01:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c04:	50                   	push   %eax
81000c05:	e8 31 ff ff ff       	call   81000b3b <sys_call>
81000c0a:	83 c4 04             	add    $0x4,%esp
}
81000c0d:	c9                   	leave  
81000c0e:	c3                   	ret    

81000c0f <execve>:

int execve(const char *name, char *const *argv, char *const *env)
{
81000c0f:	55                   	push   %ebp
81000c10:	89 e5                	mov    %esp,%ebp
81000c12:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000c15:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000c1c:	8b 45 08             	mov    0x8(%ebp),%eax
81000c1f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000c22:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c25:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000c28:	8b 45 10             	mov    0x10(%ebp),%eax
81000c2b:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000c2e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c31:	50                   	push   %eax
81000c32:	e8 04 ff ff ff       	call   81000b3b <sys_call>
81000c37:	83 c4 04             	add    $0x4,%esp
}
81000c3a:	c9                   	leave  
81000c3b:	c3                   	ret    

81000c3c <yield>:

int yield(void)
{
81000c3c:	55                   	push   %ebp
81000c3d:	89 e5                	mov    %esp,%ebp
81000c3f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000c42:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
81000c49:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c4c:	50                   	push   %eax
81000c4d:	e8 e9 fe ff ff       	call   81000b3b <sys_call>
81000c52:	83 c4 04             	add    $0x4,%esp
}
81000c55:	c9                   	leave  
81000c56:	c3                   	ret    

81000c57 <open>:

int open(const char *name, int flags, ...)
{
81000c57:	55                   	push   %ebp
81000c58:	89 e5                	mov    %esp,%ebp
81000c5a:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
81000c5d:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000c64:	8b 45 08             	mov    0x8(%ebp),%eax
81000c67:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
81000c6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000c70:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c73:	50                   	push   %eax
81000c74:	e8 c2 fe ff ff       	call   81000b3b <sys_call>
81000c79:	83 c4 04             	add    $0x4,%esp
}
81000c7c:	c9                   	leave  
81000c7d:	c3                   	ret    

81000c7e <read>:

int read(int file, char *ptr, int len)
{
81000c7e:	55                   	push   %ebp
81000c7f:	89 e5                	mov    %esp,%ebp
81000c81:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000c84:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
81000c8b:	8b 45 08             	mov    0x8(%ebp),%eax
81000c8e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000c91:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c94:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000c97:	8b 45 10             	mov    0x10(%ebp),%eax
81000c9a:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000c9d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ca0:	50                   	push   %eax
81000ca1:	e8 95 fe ff ff       	call   81000b3b <sys_call>
81000ca6:	83 c4 04             	add    $0x4,%esp
}
81000ca9:	c9                   	leave  
81000caa:	c3                   	ret    

81000cab <write>:

int write(int file, char *ptr, int len)
{
81000cab:	55                   	push   %ebp
81000cac:	89 e5                	mov    %esp,%ebp
81000cae:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000cb1:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
81000cb8:	8b 45 08             	mov    0x8(%ebp),%eax
81000cbb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cc1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cc4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cc7:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000cca:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ccd:	50                   	push   %eax
81000cce:	e8 68 fe ff ff       	call   81000b3b <sys_call>
81000cd3:	83 c4 04             	add    $0x4,%esp
}
81000cd6:	c9                   	leave  
81000cd7:	c3                   	ret    

81000cd8 <close>:

int close(int file)
{
81000cd8:	55                   	push   %ebp
81000cd9:	89 e5                	mov    %esp,%ebp
81000cdb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000cde:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000ce5:	8b 45 08             	mov    0x8(%ebp),%eax
81000ce8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000ceb:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cee:	50                   	push   %eax
81000cef:	e8 47 fe ff ff       	call   81000b3b <sys_call>
81000cf4:	83 c4 04             	add    $0x4,%esp
}
81000cf7:	c9                   	leave  
81000cf8:	c3                   	ret    

81000cf9 <lseek>:

int lseek(int file, int ptr, int dir)
{
81000cf9:	55                   	push   %ebp
81000cfa:	89 e5                	mov    %esp,%ebp
81000cfc:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000cff:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
81000d06:	8b 45 08             	mov    0x8(%ebp),%eax
81000d09:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000d0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000d12:	8b 45 10             	mov    0x10(%ebp),%eax
81000d15:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000d18:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d1b:	50                   	push   %eax
81000d1c:	e8 1a fe ff ff       	call   81000b3b <sys_call>
81000d21:	83 c4 04             	add    $0x4,%esp
}
81000d24:	c9                   	leave  
81000d25:	c3                   	ret    

81000d26 <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st)
{
81000d26:	55                   	push   %ebp
81000d27:	89 e5                	mov    %esp,%ebp
81000d29:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000d2c:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
81000d33:	8b 45 08             	mov    0x8(%ebp),%eax
81000d36:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000d39:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d3c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000d3f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d42:	50                   	push   %eax
81000d43:	e8 f3 fd ff ff       	call   81000b3b <sys_call>
81000d48:	83 c4 04             	add    $0x4,%esp
}
81000d4b:	c9                   	leave  
81000d4c:	c3                   	ret    

81000d4d <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file)
{
81000d4d:	55                   	push   %ebp
81000d4e:	89 e5                	mov    %esp,%ebp
81000d50:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000d53:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
81000d5a:	8b 45 08             	mov    0x8(%ebp),%eax
81000d5d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000d60:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d63:	50                   	push   %eax
81000d64:	e8 d2 fd ff ff       	call   81000b3b <sys_call>
81000d69:	83 c4 04             	add    $0x4,%esp
}
81000d6c:	c9                   	leave  
81000d6d:	c3                   	ret    

81000d6e <sbrk>:

void *sbrk(ptrdiff_t incr)
{
81000d6e:	55                   	push   %ebp
81000d6f:	89 e5                	mov    %esp,%ebp
81000d71:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000d74:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
81000d7b:	8b 45 08             	mov    0x8(%ebp),%eax
81000d7e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000d81:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d84:	50                   	push   %eax
81000d85:	e8 b1 fd ff ff       	call   81000b3b <sys_call>
81000d8a:	83 c4 04             	add    $0x4,%esp
}
81000d8d:	c9                   	leave  
81000d8e:	c3                   	ret    

81000d8f <dup>:

int dup(int file)
{
81000d8f:	55                   	push   %ebp
81000d90:	89 e5                	mov    %esp,%ebp
81000d92:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000d95:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000d9c:	8b 45 08             	mov    0x8(%ebp),%eax
81000d9f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000da2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000da5:	50                   	push   %eax
81000da6:	e8 90 fd ff ff       	call   81000b3b <sys_call>
81000dab:	83 c4 04             	add    $0x4,%esp
}
81000dae:	c9                   	leave  
81000daf:	c3                   	ret    

81000db0 <wait>:

int wait(int *status)
{
81000db0:	55                   	push   %ebp
81000db1:	89 e5                	mov    %esp,%ebp
81000db3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000db6:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000dbd:	8b 45 08             	mov    0x8(%ebp),%eax
81000dc0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000dc3:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dc6:	50                   	push   %eax
81000dc7:	e8 6f fd ff ff       	call   81000b3b <sys_call>
81000dcc:	83 c4 04             	add    $0x4,%esp
}
81000dcf:	c9                   	leave  
81000dd0:	c3                   	ret    

81000dd1 <_exit>:

void _exit(int status)
{
81000dd1:	55                   	push   %ebp
81000dd2:	89 e5                	mov    %esp,%ebp
81000dd4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000dd7:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
81000dde:	8b 45 08             	mov    0x8(%ebp),%eax
81000de1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000de4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000de7:	50                   	push   %eax
81000de8:	e8 4e fd ff ff       	call   81000b3b <sys_call>
81000ded:	83 c4 04             	add    $0x4,%esp
    for (;;)
81000df0:	eb fe                	jmp    81000df0 <_exit+0x1f>

81000df2 <opendir>:
    {
    }
}

DIR *opendir(const char *name)
{
81000df2:	55                   	push   %ebp
81000df3:	89 e5                	mov    %esp,%ebp
81000df5:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR *)malloc(sizeof(DIR));
81000df8:	83 ec 0c             	sub    $0xc,%esp
81000dfb:	68 10 01 00 00       	push   $0x110
81000e00:	e8 cd 30 00 00       	call   81003ed2 <malloc>
81000e05:	83 c4 10             	add    $0x10,%esp
81000e08:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR *)0)
81000e0b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e0f:	75 07                	jne    81000e18 <opendir+0x26>
    {
        return (DIR *)0;
81000e11:	b8 00 00 00 00       	mov    $0x0,%eax
81000e16:	eb 43                	jmp    81000e5b <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000e18:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)name;
81000e1f:	8b 45 08             	mov    0x8(%ebp),%eax
81000e22:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000e25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e28:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
81000e2b:	83 ec 0c             	sub    $0xc,%esp
81000e2e:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000e31:	50                   	push   %eax
81000e32:	e8 04 fd ff ff       	call   81000b3b <sys_call>
81000e37:	83 c4 10             	add    $0x10,%esp
81000e3a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (err < 0)
81000e3d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e41:	79 15                	jns    81000e58 <opendir+0x66>
    {
        free(dir);
81000e43:	83 ec 0c             	sub    $0xc,%esp
81000e46:	ff 75 f4             	pushl  -0xc(%ebp)
81000e49:	e8 a0 30 00 00       	call   81003eee <free>
81000e4e:	83 c4 10             	add    $0x10,%esp
        return (DIR *)0;
81000e51:	b8 00 00 00 00       	mov    $0x0,%eax
81000e56:	eb 03                	jmp    81000e5b <opendir+0x69>
    }
    return dir;
81000e58:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000e5b:	c9                   	leave  
81000e5c:	c3                   	ret    

81000e5d <readdir>:

struct dirent *readdir(DIR *dir)
{
81000e5d:	55                   	push   %ebp
81000e5e:	89 e5                	mov    %esp,%ebp
81000e60:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;
    args.id = SYS_readdir;
81000e63:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000e6a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6d:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
81000e70:	8b 45 08             	mov    0x8(%ebp),%eax
81000e73:	83 c0 04             	add    $0x4,%eax
81000e76:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
81000e79:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e7c:	50                   	push   %eax
81000e7d:	e8 b9 fc ff ff       	call   81000b3b <sys_call>
81000e82:	83 c4 04             	add    $0x4,%esp
81000e85:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0)
81000e88:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000e8c:	79 07                	jns    81000e95 <readdir+0x38>
    {
        return (struct dirent *)0;
81000e8e:	b8 00 00 00 00       	mov    $0x0,%eax
81000e93:	eb 06                	jmp    81000e9b <readdir+0x3e>
    }
    return &dir->dirent;
81000e95:	8b 45 08             	mov    0x8(%ebp),%eax
81000e98:	83 c0 04             	add    $0x4,%eax
}
81000e9b:	c9                   	leave  
81000e9c:	c3                   	ret    

81000e9d <closedir>:

int closedir(DIR *dir)
{
81000e9d:	55                   	push   %ebp
81000e9e:	89 e5                	mov    %esp,%ebp
81000ea0:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000ea3:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
    args.arg0 = (int)dir;
81000eaa:	8b 45 08             	mov    0x8(%ebp),%eax
81000ead:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
81000eb0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81000eb3:	50                   	push   %eax
81000eb4:	e8 82 fc ff ff       	call   81000b3b <sys_call>
81000eb9:	83 c4 04             	add    $0x4,%esp

    free(dir);
81000ebc:	83 ec 0c             	sub    $0xc,%esp
81000ebf:	ff 75 08             	pushl  0x8(%ebp)
81000ec2:	e8 27 30 00 00       	call   81003eee <free>
81000ec7:	83 c4 10             	add    $0x10,%esp
    return 0;
81000eca:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000ecf:	c9                   	leave  
81000ed0:	c3                   	ret    

81000ed1 <unlink>:

int unlink(const char *path)
{
81000ed1:	55                   	push   %ebp
81000ed2:	89 e5                	mov    %esp,%ebp
81000ed4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
81000ed7:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)path;
81000ede:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000ee4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ee7:	50                   	push   %eax
81000ee8:	e8 4e fc ff ff       	call   81000b3b <sys_call>
81000eed:	83 c4 04             	add    $0x4,%esp
}
81000ef0:	c9                   	leave  
81000ef1:	c3                   	ret    

81000ef2 <ioctl>:

int ioctl(int fd, int cmd, int arg0, int arg1)
{
81000ef2:	55                   	push   %ebp
81000ef3:	89 e5                	mov    %esp,%ebp
81000ef5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000ef8:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = fd;
81000eff:	8b 45 08             	mov    0x8(%ebp),%eax
81000f02:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
81000f05:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f08:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
81000f0b:	8b 45 10             	mov    0x10(%ebp),%eax
81000f0e:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
81000f11:	8b 45 14             	mov    0x14(%ebp),%eax
81000f14:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
81000f17:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000f1a:	50                   	push   %eax
81000f1b:	e8 1b fc ff ff       	call   81000b3b <sys_call>
81000f20:	83 c4 04             	add    $0x4,%esp
81000f23:	c9                   	leave  
81000f24:	c3                   	ret    

81000f25 <atoi>:
81000f25:	55                   	push   %ebp
81000f26:	89 e5                	mov    %esp,%ebp
81000f28:	83 ec 08             	sub    $0x8,%esp
81000f2b:	83 ec 04             	sub    $0x4,%esp
81000f2e:	6a 0a                	push   $0xa
81000f30:	6a 00                	push   $0x0
81000f32:	ff 75 08             	pushl  0x8(%ebp)
81000f35:	e8 b4 60 00 00       	call   81006fee <strtol>
81000f3a:	83 c4 10             	add    $0x10,%esp
81000f3d:	c9                   	leave  
81000f3e:	c3                   	ret    

81000f3f <_atoi_r>:
81000f3f:	55                   	push   %ebp
81000f40:	89 e5                	mov    %esp,%ebp
81000f42:	83 ec 08             	sub    $0x8,%esp
81000f45:	6a 0a                	push   $0xa
81000f47:	6a 00                	push   $0x0
81000f49:	ff 75 0c             	pushl  0xc(%ebp)
81000f4c:	ff 75 08             	pushl  0x8(%ebp)
81000f4f:	e8 50 60 00 00       	call   81006fa4 <_strtol_r>
81000f54:	83 c4 10             	add    $0x10,%esp
81000f57:	c9                   	leave  
81000f58:	c3                   	ret    

81000f59 <exit>:
81000f59:	55                   	push   %ebp
81000f5a:	89 e5                	mov    %esp,%ebp
81000f5c:	83 ec 08             	sub    $0x8,%esp
81000f5f:	83 ec 08             	sub    $0x8,%esp
81000f62:	6a 00                	push   $0x0
81000f64:	ff 75 08             	pushl  0x8(%ebp)
81000f67:	e8 7f 63 00 00       	call   810072eb <__call_exitprocs>
81000f6c:	83 c4 10             	add    $0x10,%esp
81000f6f:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81000f74:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f77:	85 c0                	test   %eax,%eax
81000f79:	74 17                	je     81000f92 <exit+0x39>
81000f7b:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81000f80:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f83:	8b 15 e4 88 00 81    	mov    0x810088e4,%edx
81000f89:	83 ec 0c             	sub    $0xc,%esp
81000f8c:	52                   	push   %edx
81000f8d:	ff d0                	call   *%eax
81000f8f:	83 c4 10             	add    $0x10,%esp
81000f92:	83 ec 0c             	sub    $0xc,%esp
81000f95:	ff 75 08             	pushl  0x8(%ebp)
81000f98:	e8 34 fe ff ff       	call   81000dd1 <_exit>

81000f9d <_fclose_r>:
81000f9d:	55                   	push   %ebp
81000f9e:	89 e5                	mov    %esp,%ebp
81000fa0:	53                   	push   %ebx
81000fa1:	83 ec 14             	sub    $0x14,%esp
81000fa4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fa7:	85 db                	test   %ebx,%ebx
81000fa9:	75 0a                	jne    81000fb5 <_fclose_r+0x18>
81000fab:	b8 00 00 00 00       	mov    $0x0,%eax
81000fb0:	e9 ea 00 00 00       	jmp    8100109f <_fclose_r+0x102>
81000fb5:	8b 45 08             	mov    0x8(%ebp),%eax
81000fb8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fbb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000fbf:	74 18                	je     81000fd9 <_fclose_r+0x3c>
81000fc1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fc4:	8b 40 38             	mov    0x38(%eax),%eax
81000fc7:	85 c0                	test   %eax,%eax
81000fc9:	75 0e                	jne    81000fd9 <_fclose_r+0x3c>
81000fcb:	83 ec 0c             	sub    $0xc,%esp
81000fce:	ff 75 f0             	pushl  -0x10(%ebp)
81000fd1:	e8 fe 08 00 00       	call   810018d4 <__sinit>
81000fd6:	83 c4 10             	add    $0x10,%esp
81000fd9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fdd:	66 85 c0             	test   %ax,%ax
81000fe0:	75 0a                	jne    81000fec <_fclose_r+0x4f>
81000fe2:	b8 00 00 00 00       	mov    $0x0,%eax
81000fe7:	e9 b3 00 00 00       	jmp    8100109f <_fclose_r+0x102>
81000fec:	83 ec 08             	sub    $0x8,%esp
81000fef:	53                   	push   %ebx
81000ff0:	ff 75 08             	pushl  0x8(%ebp)
81000ff3:	e8 c9 00 00 00       	call   810010c1 <__sflush_r>
81000ff8:	83 c4 10             	add    $0x10,%esp
81000ffb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ffe:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001001:	85 c0                	test   %eax,%eax
81001003:	74 1d                	je     81001022 <_fclose_r+0x85>
81001005:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001008:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100100b:	83 ec 08             	sub    $0x8,%esp
8100100e:	52                   	push   %edx
8100100f:	ff 75 08             	pushl  0x8(%ebp)
81001012:	ff d0                	call   *%eax
81001014:	83 c4 10             	add    $0x10,%esp
81001017:	85 c0                	test   %eax,%eax
81001019:	79 07                	jns    81001022 <_fclose_r+0x85>
8100101b:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81001022:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001026:	98                   	cwtl   
81001027:	25 80 00 00 00       	and    $0x80,%eax
8100102c:	85 c0                	test   %eax,%eax
8100102e:	74 12                	je     81001042 <_fclose_r+0xa5>
81001030:	8b 43 10             	mov    0x10(%ebx),%eax
81001033:	83 ec 08             	sub    $0x8,%esp
81001036:	50                   	push   %eax
81001037:	ff 75 08             	pushl  0x8(%ebp)
8100103a:	e8 4a 0e 00 00       	call   81001e89 <_free_r>
8100103f:	83 c4 10             	add    $0x10,%esp
81001042:	8b 43 30             	mov    0x30(%ebx),%eax
81001045:	85 c0                	test   %eax,%eax
81001047:	74 23                	je     8100106c <_fclose_r+0xcf>
81001049:	8b 53 30             	mov    0x30(%ebx),%edx
8100104c:	8d 43 40             	lea    0x40(%ebx),%eax
8100104f:	39 c2                	cmp    %eax,%edx
81001051:	74 12                	je     81001065 <_fclose_r+0xc8>
81001053:	8b 43 30             	mov    0x30(%ebx),%eax
81001056:	83 ec 08             	sub    $0x8,%esp
81001059:	50                   	push   %eax
8100105a:	ff 75 08             	pushl  0x8(%ebp)
8100105d:	e8 27 0e 00 00       	call   81001e89 <_free_r>
81001062:	83 c4 10             	add    $0x10,%esp
81001065:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100106c:	8b 43 44             	mov    0x44(%ebx),%eax
8100106f:	85 c0                	test   %eax,%eax
81001071:	74 19                	je     8100108c <_fclose_r+0xef>
81001073:	8b 43 44             	mov    0x44(%ebx),%eax
81001076:	83 ec 08             	sub    $0x8,%esp
81001079:	50                   	push   %eax
8100107a:	ff 75 08             	pushl  0x8(%ebp)
8100107d:	e8 07 0e 00 00       	call   81001e89 <_free_r>
81001082:	83 c4 10             	add    $0x10,%esp
81001085:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8100108c:	e8 dc 08 00 00       	call   8100196d <__sfp_lock_acquire>
81001091:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001097:	e8 d7 08 00 00       	call   81001973 <__sfp_lock_release>
8100109c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100109f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010a2:	c9                   	leave  
810010a3:	c3                   	ret    

810010a4 <fclose>:
810010a4:	55                   	push   %ebp
810010a5:	89 e5                	mov    %esp,%ebp
810010a7:	83 ec 08             	sub    $0x8,%esp
810010aa:	8b 55 08             	mov    0x8(%ebp),%edx
810010ad:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810010b2:	83 ec 08             	sub    $0x8,%esp
810010b5:	52                   	push   %edx
810010b6:	50                   	push   %eax
810010b7:	e8 e1 fe ff ff       	call   81000f9d <_fclose_r>
810010bc:	83 c4 10             	add    $0x10,%esp
810010bf:	c9                   	leave  
810010c0:	c3                   	ret    

810010c1 <__sflush_r>:
810010c1:	55                   	push   %ebp
810010c2:	89 e5                	mov    %esp,%ebp
810010c4:	57                   	push   %edi
810010c5:	56                   	push   %esi
810010c6:	53                   	push   %ebx
810010c7:	83 ec 1c             	sub    $0x1c,%esp
810010ca:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810010cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010d1:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810010d5:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010d9:	83 e0 08             	and    $0x8,%eax
810010dc:	85 c0                	test   %eax,%eax
810010de:	0f 85 93 01 00 00    	jne    81001277 <__sflush_r+0x1b6>
810010e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010e8:	80 cc 08             	or     $0x8,%ah
810010eb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010ef:	8b 43 04             	mov    0x4(%ebx),%eax
810010f2:	85 c0                	test   %eax,%eax
810010f4:	7f 0b                	jg     81001101 <__sflush_r+0x40>
810010f6:	8b 43 3c             	mov    0x3c(%ebx),%eax
810010f9:	85 c0                	test   %eax,%eax
810010fb:	0f 8e 6f 01 00 00    	jle    81001270 <__sflush_r+0x1af>
81001101:	8b 43 28             	mov    0x28(%ebx),%eax
81001104:	85 c0                	test   %eax,%eax
81001106:	0f 84 64 01 00 00    	je     81001270 <__sflush_r+0x1af>
8100110c:	8b 45 08             	mov    0x8(%ebp),%eax
8100110f:	8b 00                	mov    (%eax),%eax
81001111:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001114:	8b 45 08             	mov    0x8(%ebp),%eax
81001117:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100111d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001121:	98                   	cwtl   
81001122:	25 00 10 00 00       	and    $0x1000,%eax
81001127:	85 c0                	test   %eax,%eax
81001129:	74 08                	je     81001133 <__sflush_r+0x72>
8100112b:	8b 43 50             	mov    0x50(%ebx),%eax
8100112e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001131:	eb 64                	jmp    81001197 <__sflush_r+0xd6>
81001133:	8b 43 28             	mov    0x28(%ebx),%eax
81001136:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001139:	6a 01                	push   $0x1
8100113b:	6a 00                	push   $0x0
8100113d:	52                   	push   %edx
8100113e:	ff 75 08             	pushl  0x8(%ebp)
81001141:	ff d0                	call   *%eax
81001143:	83 c4 10             	add    $0x10,%esp
81001146:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001149:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100114d:	75 48                	jne    81001197 <__sflush_r+0xd6>
8100114f:	8b 45 08             	mov    0x8(%ebp),%eax
81001152:	8b 00                	mov    (%eax),%eax
81001154:	85 c0                	test   %eax,%eax
81001156:	74 3f                	je     81001197 <__sflush_r+0xd6>
81001158:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
8100115f:	8b 45 08             	mov    0x8(%ebp),%eax
81001162:	8b 00                	mov    (%eax),%eax
81001164:	83 f8 1d             	cmp    $0x1d,%eax
81001167:	74 0a                	je     81001173 <__sflush_r+0xb2>
81001169:	8b 45 08             	mov    0x8(%ebp),%eax
8100116c:	8b 00                	mov    (%eax),%eax
8100116e:	83 f8 16             	cmp    $0x16,%eax
81001171:	75 11                	jne    81001184 <__sflush_r+0xc3>
81001173:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100117a:	8b 45 08             	mov    0x8(%ebp),%eax
8100117d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001180:	89 10                	mov    %edx,(%eax)
81001182:	eb 0b                	jmp    8100118f <__sflush_r+0xce>
81001184:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001188:	83 c8 40             	or     $0x40,%eax
8100118b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100118f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001192:	e9 48 01 00 00       	jmp    810012df <__sflush_r+0x21e>
81001197:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100119b:	98                   	cwtl   
8100119c:	83 e0 04             	and    $0x4,%eax
8100119f:	85 c0                	test   %eax,%eax
810011a1:	74 13                	je     810011b6 <__sflush_r+0xf5>
810011a3:	8b 43 04             	mov    0x4(%ebx),%eax
810011a6:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011a9:	8b 43 30             	mov    0x30(%ebx),%eax
810011ac:	85 c0                	test   %eax,%eax
810011ae:	74 06                	je     810011b6 <__sflush_r+0xf5>
810011b0:	8b 43 3c             	mov    0x3c(%ebx),%eax
810011b3:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011b6:	8b 43 28             	mov    0x28(%ebx),%eax
810011b9:	8b 53 1c             	mov    0x1c(%ebx),%edx
810011bc:	6a 00                	push   $0x0
810011be:	ff 75 e4             	pushl  -0x1c(%ebp)
810011c1:	52                   	push   %edx
810011c2:	ff 75 08             	pushl  0x8(%ebp)
810011c5:	ff d0                	call   *%eax
810011c7:	83 c4 10             	add    $0x10,%esp
810011ca:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011cd:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011d1:	75 1d                	jne    810011f0 <__sflush_r+0x12f>
810011d3:	8b 45 08             	mov    0x8(%ebp),%eax
810011d6:	8b 00                	mov    (%eax),%eax
810011d8:	85 c0                	test   %eax,%eax
810011da:	74 14                	je     810011f0 <__sflush_r+0x12f>
810011dc:	8b 45 08             	mov    0x8(%ebp),%eax
810011df:	8b 00                	mov    (%eax),%eax
810011e1:	83 f8 1d             	cmp    $0x1d,%eax
810011e4:	74 0a                	je     810011f0 <__sflush_r+0x12f>
810011e6:	8b 45 08             	mov    0x8(%ebp),%eax
810011e9:	8b 00                	mov    (%eax),%eax
810011eb:	83 f8 16             	cmp    $0x16,%eax
810011ee:	75 6e                	jne    8100125e <__sflush_r+0x19d>
810011f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011f4:	80 e4 f7             	and    $0xf7,%ah
810011f7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011fb:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001202:	8b 43 10             	mov    0x10(%ebx),%eax
81001205:	89 03                	mov    %eax,(%ebx)
81001207:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100120b:	98                   	cwtl   
8100120c:	25 00 10 00 00       	and    $0x1000,%eax
81001211:	85 c0                	test   %eax,%eax
81001213:	74 15                	je     8100122a <__sflush_r+0x169>
81001215:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001219:	75 09                	jne    81001224 <__sflush_r+0x163>
8100121b:	8b 45 08             	mov    0x8(%ebp),%eax
8100121e:	8b 00                	mov    (%eax),%eax
81001220:	85 c0                	test   %eax,%eax
81001222:	75 06                	jne    8100122a <__sflush_r+0x169>
81001224:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001227:	89 43 50             	mov    %eax,0x50(%ebx)
8100122a:	8b 45 08             	mov    0x8(%ebp),%eax
8100122d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001230:	89 10                	mov    %edx,(%eax)
81001232:	8b 43 30             	mov    0x30(%ebx),%eax
81001235:	85 c0                	test   %eax,%eax
81001237:	74 37                	je     81001270 <__sflush_r+0x1af>
81001239:	8b 53 30             	mov    0x30(%ebx),%edx
8100123c:	8d 43 40             	lea    0x40(%ebx),%eax
8100123f:	39 c2                	cmp    %eax,%edx
81001241:	74 12                	je     81001255 <__sflush_r+0x194>
81001243:	8b 43 30             	mov    0x30(%ebx),%eax
81001246:	83 ec 08             	sub    $0x8,%esp
81001249:	50                   	push   %eax
8100124a:	ff 75 08             	pushl  0x8(%ebp)
8100124d:	e8 37 0c 00 00       	call   81001e89 <_free_r>
81001252:	83 c4 10             	add    $0x10,%esp
81001255:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100125c:	eb 12                	jmp    81001270 <__sflush_r+0x1af>
8100125e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001262:	83 c8 40             	or     $0x40,%eax
81001265:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001269:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100126e:	eb 6f                	jmp    810012df <__sflush_r+0x21e>
81001270:	b8 00 00 00 00       	mov    $0x0,%eax
81001275:	eb 68                	jmp    810012df <__sflush_r+0x21e>
81001277:	8b 73 10             	mov    0x10(%ebx),%esi
8100127a:	85 f6                	test   %esi,%esi
8100127c:	75 07                	jne    81001285 <__sflush_r+0x1c4>
8100127e:	b8 00 00 00 00       	mov    $0x0,%eax
81001283:	eb 5a                	jmp    810012df <__sflush_r+0x21e>
81001285:	8b 03                	mov    (%ebx),%eax
81001287:	29 f0                	sub    %esi,%eax
81001289:	89 c7                	mov    %eax,%edi
8100128b:	89 33                	mov    %esi,(%ebx)
8100128d:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001291:	83 e0 03             	and    $0x3,%eax
81001294:	85 c0                	test   %eax,%eax
81001296:	75 05                	jne    8100129d <__sflush_r+0x1dc>
81001298:	8b 43 14             	mov    0x14(%ebx),%eax
8100129b:	eb 05                	jmp    810012a2 <__sflush_r+0x1e1>
8100129d:	b8 00 00 00 00       	mov    $0x0,%eax
810012a2:	89 43 08             	mov    %eax,0x8(%ebx)
810012a5:	eb 2f                	jmp    810012d6 <__sflush_r+0x215>
810012a7:	8b 43 24             	mov    0x24(%ebx),%eax
810012aa:	8b 53 1c             	mov    0x1c(%ebx),%edx
810012ad:	57                   	push   %edi
810012ae:	56                   	push   %esi
810012af:	52                   	push   %edx
810012b0:	ff 75 08             	pushl  0x8(%ebp)
810012b3:	ff d0                	call   *%eax
810012b5:	83 c4 10             	add    $0x10,%esp
810012b8:	85 c0                	test   %eax,%eax
810012ba:	7f 12                	jg     810012ce <__sflush_r+0x20d>
810012bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012c0:	83 c8 40             	or     $0x40,%eax
810012c3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810012c7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810012cc:	eb 11                	jmp    810012df <__sflush_r+0x21e>
810012ce:	89 c1                	mov    %eax,%ecx
810012d0:	89 c8                	mov    %ecx,%eax
810012d2:	01 c6                	add    %eax,%esi
810012d4:	29 cf                	sub    %ecx,%edi
810012d6:	85 ff                	test   %edi,%edi
810012d8:	7f cd                	jg     810012a7 <__sflush_r+0x1e6>
810012da:	b8 00 00 00 00       	mov    $0x0,%eax
810012df:	8d 65 f4             	lea    -0xc(%ebp),%esp
810012e2:	5b                   	pop    %ebx
810012e3:	5e                   	pop    %esi
810012e4:	5f                   	pop    %edi
810012e5:	5d                   	pop    %ebp
810012e6:	c3                   	ret    

810012e7 <_fflush_r>:
810012e7:	55                   	push   %ebp
810012e8:	89 e5                	mov    %esp,%ebp
810012ea:	53                   	push   %ebx
810012eb:	83 ec 14             	sub    $0x14,%esp
810012ee:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012f1:	8b 45 08             	mov    0x8(%ebp),%eax
810012f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012f7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810012fb:	74 18                	je     81001315 <_fflush_r+0x2e>
810012fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001300:	8b 40 38             	mov    0x38(%eax),%eax
81001303:	85 c0                	test   %eax,%eax
81001305:	75 0e                	jne    81001315 <_fflush_r+0x2e>
81001307:	83 ec 0c             	sub    $0xc,%esp
8100130a:	ff 75 f4             	pushl  -0xc(%ebp)
8100130d:	e8 c2 05 00 00       	call   810018d4 <__sinit>
81001312:	83 c4 10             	add    $0x10,%esp
81001315:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001319:	66 85 c0             	test   %ax,%ax
8100131c:	75 07                	jne    81001325 <_fflush_r+0x3e>
8100131e:	b8 00 00 00 00       	mov    $0x0,%eax
81001323:	eb 15                	jmp    8100133a <_fflush_r+0x53>
81001325:	83 ec 08             	sub    $0x8,%esp
81001328:	53                   	push   %ebx
81001329:	ff 75 08             	pushl  0x8(%ebp)
8100132c:	e8 90 fd ff ff       	call   810010c1 <__sflush_r>
81001331:	83 c4 10             	add    $0x10,%esp
81001334:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001337:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100133a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100133d:	c9                   	leave  
8100133e:	c3                   	ret    

8100133f <fflush>:
8100133f:	55                   	push   %ebp
81001340:	89 e5                	mov    %esp,%ebp
81001342:	83 ec 08             	sub    $0x8,%esp
81001345:	8b 55 08             	mov    0x8(%ebp),%edx
81001348:	85 d2                	test   %edx,%edx
8100134a:	75 18                	jne    81001364 <fflush+0x25>
8100134c:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81001351:	83 ec 08             	sub    $0x8,%esp
81001354:	68 e7 12 00 81       	push   $0x810012e7
81001359:	50                   	push   %eax
8100135a:	e8 bd 1a 00 00       	call   81002e1c <_fwalk_reent>
8100135f:	83 c4 10             	add    $0x10,%esp
81001362:	eb 12                	jmp    81001376 <fflush+0x37>
81001364:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001369:	83 ec 08             	sub    $0x8,%esp
8100136c:	52                   	push   %edx
8100136d:	50                   	push   %eax
8100136e:	e8 74 ff ff ff       	call   810012e7 <_fflush_r>
81001373:	83 c4 10             	add    $0x10,%esp
81001376:	c9                   	leave  
81001377:	c3                   	ret    

81001378 <_fgetc_r>:
81001378:	55                   	push   %ebp
81001379:	89 e5                	mov    %esp,%ebp
8100137b:	83 ec 18             	sub    $0x18,%esp
8100137e:	8b 45 08             	mov    0x8(%ebp),%eax
81001381:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001384:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001388:	74 18                	je     810013a2 <_fgetc_r+0x2a>
8100138a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100138d:	8b 40 38             	mov    0x38(%eax),%eax
81001390:	85 c0                	test   %eax,%eax
81001392:	75 0e                	jne    810013a2 <_fgetc_r+0x2a>
81001394:	83 ec 0c             	sub    $0xc,%esp
81001397:	ff 75 f4             	pushl  -0xc(%ebp)
8100139a:	e8 35 05 00 00       	call   810018d4 <__sinit>
8100139f:	83 c4 10             	add    $0x10,%esp
810013a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810013a5:	8b 40 04             	mov    0x4(%eax),%eax
810013a8:	8d 50 ff             	lea    -0x1(%eax),%edx
810013ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810013ae:	89 50 04             	mov    %edx,0x4(%eax)
810013b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810013b4:	8b 40 04             	mov    0x4(%eax),%eax
810013b7:	85 c0                	test   %eax,%eax
810013b9:	79 13                	jns    810013ce <_fgetc_r+0x56>
810013bb:	83 ec 08             	sub    $0x8,%esp
810013be:	ff 75 0c             	pushl  0xc(%ebp)
810013c1:	ff 75 08             	pushl  0x8(%ebp)
810013c4:	e8 d0 51 00 00       	call   81006599 <__srget_r>
810013c9:	83 c4 10             	add    $0x10,%esp
810013cc:	eb 13                	jmp    810013e1 <_fgetc_r+0x69>
810013ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810013d1:	8b 00                	mov    (%eax),%eax
810013d3:	8d 48 01             	lea    0x1(%eax),%ecx
810013d6:	8b 55 0c             	mov    0xc(%ebp),%edx
810013d9:	89 0a                	mov    %ecx,(%edx)
810013db:	0f b6 00             	movzbl (%eax),%eax
810013de:	0f b6 c0             	movzbl %al,%eax
810013e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013e7:	c9                   	leave  
810013e8:	c3                   	ret    

810013e9 <fgetc>:
810013e9:	55                   	push   %ebp
810013ea:	89 e5                	mov    %esp,%ebp
810013ec:	83 ec 18             	sub    $0x18,%esp
810013ef:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810013f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013fa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013fd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001401:	74 18                	je     8100141b <fgetc+0x32>
81001403:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001406:	8b 40 38             	mov    0x38(%eax),%eax
81001409:	85 c0                	test   %eax,%eax
8100140b:	75 0e                	jne    8100141b <fgetc+0x32>
8100140d:	83 ec 0c             	sub    $0xc,%esp
81001410:	ff 75 f0             	pushl  -0x10(%ebp)
81001413:	e8 bc 04 00 00       	call   810018d4 <__sinit>
81001418:	83 c4 10             	add    $0x10,%esp
8100141b:	8b 45 08             	mov    0x8(%ebp),%eax
8100141e:	8b 40 04             	mov    0x4(%eax),%eax
81001421:	8d 50 ff             	lea    -0x1(%eax),%edx
81001424:	8b 45 08             	mov    0x8(%ebp),%eax
81001427:	89 50 04             	mov    %edx,0x4(%eax)
8100142a:	8b 45 08             	mov    0x8(%ebp),%eax
8100142d:	8b 40 04             	mov    0x4(%eax),%eax
81001430:	85 c0                	test   %eax,%eax
81001432:	79 13                	jns    81001447 <fgetc+0x5e>
81001434:	83 ec 08             	sub    $0x8,%esp
81001437:	ff 75 08             	pushl  0x8(%ebp)
8100143a:	ff 75 f4             	pushl  -0xc(%ebp)
8100143d:	e8 57 51 00 00       	call   81006599 <__srget_r>
81001442:	83 c4 10             	add    $0x10,%esp
81001445:	eb 13                	jmp    8100145a <fgetc+0x71>
81001447:	8b 45 08             	mov    0x8(%ebp),%eax
8100144a:	8b 00                	mov    (%eax),%eax
8100144c:	8d 48 01             	lea    0x1(%eax),%ecx
8100144f:	8b 55 08             	mov    0x8(%ebp),%edx
81001452:	89 0a                	mov    %ecx,(%edx)
81001454:	0f b6 00             	movzbl (%eax),%eax
81001457:	0f b6 c0             	movzbl %al,%eax
8100145a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100145d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001460:	c9                   	leave  
81001461:	c3                   	ret    

81001462 <_fgets_r>:
81001462:	55                   	push   %ebp
81001463:	89 e5                	mov    %esp,%ebp
81001465:	83 ec 28             	sub    $0x28,%esp
81001468:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100146c:	7f 0a                	jg     81001478 <_fgets_r+0x16>
8100146e:	b8 00 00 00 00       	mov    $0x0,%eax
81001473:	e9 46 01 00 00       	jmp    810015be <_fgets_r+0x15c>
81001478:	8b 45 0c             	mov    0xc(%ebp),%eax
8100147b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100147e:	8b 45 08             	mov    0x8(%ebp),%eax
81001481:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001484:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001488:	74 18                	je     810014a2 <_fgets_r+0x40>
8100148a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100148d:	8b 40 38             	mov    0x38(%eax),%eax
81001490:	85 c0                	test   %eax,%eax
81001492:	75 0e                	jne    810014a2 <_fgets_r+0x40>
81001494:	83 ec 0c             	sub    $0xc,%esp
81001497:	ff 75 ec             	pushl  -0x14(%ebp)
8100149a:	e8 35 04 00 00       	call   810018d4 <__sinit>
8100149f:	83 c4 10             	add    $0x10,%esp
810014a2:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
810014a6:	8b 45 14             	mov    0x14(%ebp),%eax
810014a9:	8b 40 04             	mov    0x4(%eax),%eax
810014ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014af:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810014b3:	75 34                	jne    810014e9 <_fgets_r+0x87>
810014b5:	83 ec 08             	sub    $0x8,%esp
810014b8:	ff 75 14             	pushl  0x14(%ebp)
810014bb:	ff 75 08             	pushl  0x8(%ebp)
810014be:	e8 d5 4e 00 00       	call   81006398 <__srefill_r>
810014c3:	83 c4 10             	add    $0x10,%esp
810014c6:	85 c0                	test   %eax,%eax
810014c8:	74 16                	je     810014e0 <_fgets_r+0x7e>
810014ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014cd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810014d0:	0f 85 de 00 00 00    	jne    810015b4 <_fgets_r+0x152>
810014d6:	b8 00 00 00 00       	mov    $0x0,%eax
810014db:	e9 de 00 00 00       	jmp    810015be <_fgets_r+0x15c>
810014e0:	8b 45 14             	mov    0x14(%ebp),%eax
810014e3:	8b 40 04             	mov    0x4(%eax),%eax
810014e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014e9:	8b 45 14             	mov    0x14(%ebp),%eax
810014ec:	8b 00                	mov    (%eax),%eax
810014ee:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014f1:	8b 45 10             	mov    0x10(%ebp),%eax
810014f4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810014f7:	76 06                	jbe    810014ff <_fgets_r+0x9d>
810014f9:	8b 45 10             	mov    0x10(%ebp),%eax
810014fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014ff:	83 ec 04             	sub    $0x4,%esp
81001502:	ff 75 f4             	pushl  -0xc(%ebp)
81001505:	6a 0a                	push   $0xa
81001507:	ff 75 e8             	pushl  -0x18(%ebp)
8100150a:	e8 b1 34 00 00       	call   810049c0 <memchr>
8100150f:	83 c4 10             	add    $0x10,%esp
81001512:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001515:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001519:	74 4a                	je     81001565 <_fgets_r+0x103>
8100151b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100151f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001522:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001525:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001528:	8b 45 14             	mov    0x14(%ebp),%eax
8100152b:	8b 40 04             	mov    0x4(%eax),%eax
8100152e:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001531:	89 c2                	mov    %eax,%edx
81001533:	8b 45 14             	mov    0x14(%ebp),%eax
81001536:	89 50 04             	mov    %edx,0x4(%eax)
81001539:	8b 45 14             	mov    0x14(%ebp),%eax
8100153c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100153f:	89 10                	mov    %edx,(%eax)
81001541:	83 ec 04             	sub    $0x4,%esp
81001544:	ff 75 f4             	pushl  -0xc(%ebp)
81001547:	ff 75 e8             	pushl  -0x18(%ebp)
8100154a:	ff 75 f0             	pushl  -0x10(%ebp)
8100154d:	e8 56 35 00 00       	call   81004aa8 <memcpy>
81001552:	83 c4 10             	add    $0x10,%esp
81001555:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001558:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100155b:	01 d0                	add    %edx,%eax
8100155d:	c6 00 00             	movb   $0x0,(%eax)
81001560:	8b 45 0c             	mov    0xc(%ebp),%eax
81001563:	eb 59                	jmp    810015be <_fgets_r+0x15c>
81001565:	8b 45 14             	mov    0x14(%ebp),%eax
81001568:	8b 40 04             	mov    0x4(%eax),%eax
8100156b:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100156e:	89 c2                	mov    %eax,%edx
81001570:	8b 45 14             	mov    0x14(%ebp),%eax
81001573:	89 50 04             	mov    %edx,0x4(%eax)
81001576:	8b 45 14             	mov    0x14(%ebp),%eax
81001579:	8b 10                	mov    (%eax),%edx
8100157b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100157e:	01 c2                	add    %eax,%edx
81001580:	8b 45 14             	mov    0x14(%ebp),%eax
81001583:	89 10                	mov    %edx,(%eax)
81001585:	83 ec 04             	sub    $0x4,%esp
81001588:	ff 75 f4             	pushl  -0xc(%ebp)
8100158b:	ff 75 e8             	pushl  -0x18(%ebp)
8100158e:	ff 75 f0             	pushl  -0x10(%ebp)
81001591:	e8 12 35 00 00       	call   81004aa8 <memcpy>
81001596:	83 c4 10             	add    $0x10,%esp
81001599:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100159c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100159f:	8b 45 10             	mov    0x10(%ebp),%eax
810015a2:	2b 45 f4             	sub    -0xc(%ebp),%eax
810015a5:	89 45 10             	mov    %eax,0x10(%ebp)
810015a8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810015ac:	0f 85 f4 fe ff ff    	jne    810014a6 <_fgets_r+0x44>
810015b2:	eb 01                	jmp    810015b5 <_fgets_r+0x153>
810015b4:	90                   	nop
810015b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015b8:	c6 00 00             	movb   $0x0,(%eax)
810015bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810015be:	c9                   	leave  
810015bf:	c3                   	ret    

810015c0 <fgets>:
810015c0:	55                   	push   %ebp
810015c1:	89 e5                	mov    %esp,%ebp
810015c3:	83 ec 08             	sub    $0x8,%esp
810015c6:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810015cb:	ff 75 10             	pushl  0x10(%ebp)
810015ce:	ff 75 0c             	pushl  0xc(%ebp)
810015d1:	ff 75 08             	pushl  0x8(%ebp)
810015d4:	50                   	push   %eax
810015d5:	e8 88 fe ff ff       	call   81001462 <_fgets_r>
810015da:	83 c4 10             	add    $0x10,%esp
810015dd:	c9                   	leave  
810015de:	c3                   	ret    

810015df <std>:
810015df:	55                   	push   %ebp
810015e0:	89 e5                	mov    %esp,%ebp
810015e2:	83 ec 08             	sub    $0x8,%esp
810015e5:	8b 45 08             	mov    0x8(%ebp),%eax
810015e8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810015ee:	8b 45 08             	mov    0x8(%ebp),%eax
810015f1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810015f8:	8b 45 08             	mov    0x8(%ebp),%eax
810015fb:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001602:	8b 45 0c             	mov    0xc(%ebp),%eax
81001605:	89 c2                	mov    %eax,%edx
81001607:	8b 45 08             	mov    0x8(%ebp),%eax
8100160a:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100160e:	8b 45 08             	mov    0x8(%ebp),%eax
81001611:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001618:	8b 45 10             	mov    0x10(%ebp),%eax
8100161b:	89 c2                	mov    %eax,%edx
8100161d:	8b 45 08             	mov    0x8(%ebp),%eax
81001620:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001624:	8b 45 08             	mov    0x8(%ebp),%eax
81001627:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100162e:	8b 45 08             	mov    0x8(%ebp),%eax
81001631:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001638:	8b 45 08             	mov    0x8(%ebp),%eax
8100163b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001642:	8b 45 08             	mov    0x8(%ebp),%eax
81001645:	83 c0 5c             	add    $0x5c,%eax
81001648:	83 ec 04             	sub    $0x4,%esp
8100164b:	6a 08                	push   $0x8
8100164d:	6a 00                	push   $0x0
8100164f:	50                   	push   %eax
81001650:	e8 28 35 00 00       	call   81004b7d <memset>
81001655:	83 c4 10             	add    $0x10,%esp
81001658:	8b 45 08             	mov    0x8(%ebp),%eax
8100165b:	8b 55 08             	mov    0x8(%ebp),%edx
8100165e:	89 50 1c             	mov    %edx,0x1c(%eax)
81001661:	8b 45 08             	mov    0x8(%ebp),%eax
81001664:	c7 40 20 12 69 00 81 	movl   $0x81006912,0x20(%eax)
8100166b:	8b 45 08             	mov    0x8(%ebp),%eax
8100166e:	c7 40 24 60 69 00 81 	movl   $0x81006960,0x24(%eax)
81001675:	8b 45 08             	mov    0x8(%ebp),%eax
81001678:	c7 40 28 bb 69 00 81 	movl   $0x810069bb,0x28(%eax)
8100167f:	8b 45 08             	mov    0x8(%ebp),%eax
81001682:	c7 40 2c 05 6a 00 81 	movl   $0x81006a05,0x2c(%eax)
81001689:	90                   	nop
8100168a:	c9                   	leave  
8100168b:	c3                   	ret    

8100168c <stdin_init>:
8100168c:	55                   	push   %ebp
8100168d:	89 e5                	mov    %esp,%ebp
8100168f:	83 ec 08             	sub    $0x8,%esp
81001692:	83 ec 04             	sub    $0x4,%esp
81001695:	6a 00                	push   $0x0
81001697:	6a 04                	push   $0x4
81001699:	ff 75 08             	pushl  0x8(%ebp)
8100169c:	e8 3e ff ff ff       	call   810015df <std>
810016a1:	83 c4 10             	add    $0x10,%esp
810016a4:	90                   	nop
810016a5:	c9                   	leave  
810016a6:	c3                   	ret    

810016a7 <stdout_init>:
810016a7:	55                   	push   %ebp
810016a8:	89 e5                	mov    %esp,%ebp
810016aa:	83 ec 08             	sub    $0x8,%esp
810016ad:	83 ec 04             	sub    $0x4,%esp
810016b0:	6a 01                	push   $0x1
810016b2:	6a 09                	push   $0x9
810016b4:	ff 75 08             	pushl  0x8(%ebp)
810016b7:	e8 23 ff ff ff       	call   810015df <std>
810016bc:	83 c4 10             	add    $0x10,%esp
810016bf:	90                   	nop
810016c0:	c9                   	leave  
810016c1:	c3                   	ret    

810016c2 <stderr_init>:
810016c2:	55                   	push   %ebp
810016c3:	89 e5                	mov    %esp,%ebp
810016c5:	83 ec 08             	sub    $0x8,%esp
810016c8:	83 ec 04             	sub    $0x4,%esp
810016cb:	6a 02                	push   $0x2
810016cd:	6a 12                	push   $0x12
810016cf:	ff 75 08             	pushl  0x8(%ebp)
810016d2:	e8 08 ff ff ff       	call   810015df <std>
810016d7:	83 c4 10             	add    $0x10,%esp
810016da:	90                   	nop
810016db:	c9                   	leave  
810016dc:	c3                   	ret    

810016dd <__sfmoreglue>:
810016dd:	55                   	push   %ebp
810016de:	89 e5                	mov    %esp,%ebp
810016e0:	53                   	push   %ebx
810016e1:	83 ec 14             	sub    $0x14,%esp
810016e4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810016e7:	8d 43 ff             	lea    -0x1(%ebx),%eax
810016ea:	6b c0 68             	imul   $0x68,%eax,%eax
810016ed:	83 c0 74             	add    $0x74,%eax
810016f0:	83 ec 08             	sub    $0x8,%esp
810016f3:	50                   	push   %eax
810016f4:	ff 75 08             	pushl  0x8(%ebp)
810016f7:	e8 a2 2a 00 00       	call   8100419e <_malloc_r>
810016fc:	83 c4 10             	add    $0x10,%esp
810016ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001702:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001706:	75 07                	jne    8100170f <__sfmoreglue+0x32>
81001708:	b8 00 00 00 00       	mov    $0x0,%eax
8100170d:	eb 38                	jmp    81001747 <__sfmoreglue+0x6a>
8100170f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001712:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001718:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100171b:	89 58 04             	mov    %ebx,0x4(%eax)
8100171e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001721:	8d 50 0c             	lea    0xc(%eax),%edx
81001724:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001727:	89 50 08             	mov    %edx,0x8(%eax)
8100172a:	89 d8                	mov    %ebx,%eax
8100172c:	6b c0 68             	imul   $0x68,%eax,%eax
8100172f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001732:	83 c2 0c             	add    $0xc,%edx
81001735:	83 ec 04             	sub    $0x4,%esp
81001738:	50                   	push   %eax
81001739:	6a 00                	push   $0x0
8100173b:	52                   	push   %edx
8100173c:	e8 3c 34 00 00       	call   81004b7d <memset>
81001741:	83 c4 10             	add    $0x10,%esp
81001744:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001747:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100174a:	c9                   	leave  
8100174b:	c3                   	ret    

8100174c <__sfp>:
8100174c:	55                   	push   %ebp
8100174d:	89 e5                	mov    %esp,%ebp
8100174f:	83 ec 18             	sub    $0x18,%esp
81001752:	e8 16 02 00 00       	call   8100196d <__sfp_lock_acquire>
81001757:	a1 e4 88 00 81       	mov    0x810088e4,%eax
8100175c:	8b 40 38             	mov    0x38(%eax),%eax
8100175f:	85 c0                	test   %eax,%eax
81001761:	75 11                	jne    81001774 <__sfp+0x28>
81001763:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81001768:	83 ec 0c             	sub    $0xc,%esp
8100176b:	50                   	push   %eax
8100176c:	e8 63 01 00 00       	call   810018d4 <__sinit>
81001771:	83 c4 10             	add    $0x10,%esp
81001774:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81001779:	05 e0 02 00 00       	add    $0x2e0,%eax
8100177e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001781:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001784:	8b 40 08             	mov    0x8(%eax),%eax
81001787:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100178a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100178d:	8b 40 04             	mov    0x4(%eax),%eax
81001790:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001793:	eb 10                	jmp    810017a5 <__sfp+0x59>
81001795:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001798:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100179c:	66 85 c0             	test   %ax,%ax
8100179f:	74 58                	je     810017f9 <__sfp+0xad>
810017a1:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810017a5:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810017a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810017ad:	79 e6                	jns    81001795 <__sfp+0x49>
810017af:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017b2:	8b 00                	mov    (%eax),%eax
810017b4:	85 c0                	test   %eax,%eax
810017b6:	75 1e                	jne    810017d6 <__sfp+0x8a>
810017b8:	83 ec 08             	sub    $0x8,%esp
810017bb:	6a 04                	push   $0x4
810017bd:	ff 75 08             	pushl  0x8(%ebp)
810017c0:	e8 18 ff ff ff       	call   810016dd <__sfmoreglue>
810017c5:	83 c4 10             	add    $0x10,%esp
810017c8:	8b 55 ec             	mov    -0x14(%ebp),%edx
810017cb:	89 02                	mov    %eax,(%edx)
810017cd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017d0:	8b 00                	mov    (%eax),%eax
810017d2:	85 c0                	test   %eax,%eax
810017d4:	74 0a                	je     810017e0 <__sfp+0x94>
810017d6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017d9:	8b 00                	mov    (%eax),%eax
810017db:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017de:	eb a1                	jmp    81001781 <__sfp+0x35>
810017e0:	90                   	nop
810017e1:	e8 8d 01 00 00       	call   81001973 <__sfp_lock_release>
810017e6:	8b 45 08             	mov    0x8(%ebp),%eax
810017e9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810017ef:	b8 00 00 00 00       	mov    $0x0,%eax
810017f4:	e9 9e 00 00 00       	jmp    81001897 <__sfp+0x14b>
810017f9:	90                   	nop
810017fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017fd:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001803:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001806:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
8100180c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100180f:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001816:	e8 58 01 00 00       	call   81001973 <__sfp_lock_release>
8100181b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100181e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001824:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001827:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100182e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001831:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001838:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183b:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001842:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001845:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100184c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100184f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001856:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001859:	83 c0 5c             	add    $0x5c,%eax
8100185c:	83 ec 04             	sub    $0x4,%esp
8100185f:	6a 08                	push   $0x8
81001861:	6a 00                	push   $0x0
81001863:	50                   	push   %eax
81001864:	e8 14 33 00 00       	call   81004b7d <memset>
81001869:	83 c4 10             	add    $0x10,%esp
8100186c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186f:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001876:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001879:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001880:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001883:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100188a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100188d:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001894:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001897:	c9                   	leave  
81001898:	c3                   	ret    

81001899 <_cleanup_r>:
81001899:	55                   	push   %ebp
8100189a:	89 e5                	mov    %esp,%ebp
8100189c:	83 ec 18             	sub    $0x18,%esp
8100189f:	c7 45 f4 9d 0f 00 81 	movl   $0x81000f9d,-0xc(%ebp)
810018a6:	83 ec 08             	sub    $0x8,%esp
810018a9:	ff 75 f4             	pushl  -0xc(%ebp)
810018ac:	ff 75 08             	pushl  0x8(%ebp)
810018af:	e8 68 15 00 00       	call   81002e1c <_fwalk_reent>
810018b4:	83 c4 10             	add    $0x10,%esp
810018b7:	90                   	nop
810018b8:	c9                   	leave  
810018b9:	c3                   	ret    

810018ba <_cleanup>:
810018ba:	55                   	push   %ebp
810018bb:	89 e5                	mov    %esp,%ebp
810018bd:	83 ec 08             	sub    $0x8,%esp
810018c0:	a1 e4 88 00 81       	mov    0x810088e4,%eax
810018c5:	83 ec 0c             	sub    $0xc,%esp
810018c8:	50                   	push   %eax
810018c9:	e8 cb ff ff ff       	call   81001899 <_cleanup_r>
810018ce:	83 c4 10             	add    $0x10,%esp
810018d1:	90                   	nop
810018d2:	c9                   	leave  
810018d3:	c3                   	ret    

810018d4 <__sinit>:
810018d4:	55                   	push   %ebp
810018d5:	89 e5                	mov    %esp,%ebp
810018d7:	83 ec 08             	sub    $0x8,%esp
810018da:	e8 9a 00 00 00       	call   81001979 <__sinit_lock_acquire>
810018df:	8b 45 08             	mov    0x8(%ebp),%eax
810018e2:	8b 40 38             	mov    0x38(%eax),%eax
810018e5:	85 c0                	test   %eax,%eax
810018e7:	74 07                	je     810018f0 <__sinit+0x1c>
810018e9:	e8 91 00 00 00       	call   8100197f <__sinit_lock_release>
810018ee:	eb 7b                	jmp    8100196b <__sinit+0x97>
810018f0:	8b 45 08             	mov    0x8(%ebp),%eax
810018f3:	c7 40 3c 99 18 00 81 	movl   $0x81001899,0x3c(%eax)
810018fa:	8b 45 08             	mov    0x8(%ebp),%eax
810018fd:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001904:	00 00 00 
81001907:	8b 45 08             	mov    0x8(%ebp),%eax
8100190a:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001911:	00 00 00 
81001914:	8b 45 08             	mov    0x8(%ebp),%eax
81001917:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100191d:	8b 45 08             	mov    0x8(%ebp),%eax
81001920:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001926:	8b 45 08             	mov    0x8(%ebp),%eax
81001929:	8b 40 04             	mov    0x4(%eax),%eax
8100192c:	83 ec 0c             	sub    $0xc,%esp
8100192f:	50                   	push   %eax
81001930:	e8 57 fd ff ff       	call   8100168c <stdin_init>
81001935:	83 c4 10             	add    $0x10,%esp
81001938:	8b 45 08             	mov    0x8(%ebp),%eax
8100193b:	8b 40 08             	mov    0x8(%eax),%eax
8100193e:	83 ec 0c             	sub    $0xc,%esp
81001941:	50                   	push   %eax
81001942:	e8 60 fd ff ff       	call   810016a7 <stdout_init>
81001947:	83 c4 10             	add    $0x10,%esp
8100194a:	8b 45 08             	mov    0x8(%ebp),%eax
8100194d:	8b 40 0c             	mov    0xc(%eax),%eax
81001950:	83 ec 0c             	sub    $0xc,%esp
81001953:	50                   	push   %eax
81001954:	e8 69 fd ff ff       	call   810016c2 <stderr_init>
81001959:	83 c4 10             	add    $0x10,%esp
8100195c:	8b 45 08             	mov    0x8(%ebp),%eax
8100195f:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001966:	e8 14 00 00 00       	call   8100197f <__sinit_lock_release>
8100196b:	c9                   	leave  
8100196c:	c3                   	ret    

8100196d <__sfp_lock_acquire>:
8100196d:	55                   	push   %ebp
8100196e:	89 e5                	mov    %esp,%ebp
81001970:	90                   	nop
81001971:	5d                   	pop    %ebp
81001972:	c3                   	ret    

81001973 <__sfp_lock_release>:
81001973:	55                   	push   %ebp
81001974:	89 e5                	mov    %esp,%ebp
81001976:	90                   	nop
81001977:	5d                   	pop    %ebp
81001978:	c3                   	ret    

81001979 <__sinit_lock_acquire>:
81001979:	55                   	push   %ebp
8100197a:	89 e5                	mov    %esp,%ebp
8100197c:	90                   	nop
8100197d:	5d                   	pop    %ebp
8100197e:	c3                   	ret    

8100197f <__sinit_lock_release>:
8100197f:	55                   	push   %ebp
81001980:	89 e5                	mov    %esp,%ebp
81001982:	90                   	nop
81001983:	5d                   	pop    %ebp
81001984:	c3                   	ret    

81001985 <__fp_lock>:
81001985:	55                   	push   %ebp
81001986:	89 e5                	mov    %esp,%ebp
81001988:	b8 00 00 00 00       	mov    $0x0,%eax
8100198d:	5d                   	pop    %ebp
8100198e:	c3                   	ret    

8100198f <__fp_unlock>:
8100198f:	55                   	push   %ebp
81001990:	89 e5                	mov    %esp,%ebp
81001992:	b8 00 00 00 00       	mov    $0x0,%eax
81001997:	5d                   	pop    %ebp
81001998:	c3                   	ret    

81001999 <__fp_lock_all>:
81001999:	55                   	push   %ebp
8100199a:	89 e5                	mov    %esp,%ebp
8100199c:	83 ec 08             	sub    $0x8,%esp
8100199f:	e8 c9 ff ff ff       	call   8100196d <__sfp_lock_acquire>
810019a4:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810019a9:	83 ec 08             	sub    $0x8,%esp
810019ac:	68 85 19 00 81       	push   $0x81001985
810019b1:	50                   	push   %eax
810019b2:	e8 fd 13 00 00       	call   81002db4 <_fwalk>
810019b7:	83 c4 10             	add    $0x10,%esp
810019ba:	90                   	nop
810019bb:	c9                   	leave  
810019bc:	c3                   	ret    

810019bd <__fp_unlock_all>:
810019bd:	55                   	push   %ebp
810019be:	89 e5                	mov    %esp,%ebp
810019c0:	83 ec 08             	sub    $0x8,%esp
810019c3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810019c8:	83 ec 08             	sub    $0x8,%esp
810019cb:	68 8f 19 00 81       	push   $0x8100198f
810019d0:	50                   	push   %eax
810019d1:	e8 de 13 00 00       	call   81002db4 <_fwalk>
810019d6:	83 c4 10             	add    $0x10,%esp
810019d9:	e8 95 ff ff ff       	call   81001973 <__sfp_lock_release>
810019de:	90                   	nop
810019df:	c9                   	leave  
810019e0:	c3                   	ret    

810019e1 <_fopen_r>:
810019e1:	55                   	push   %ebp
810019e2:	89 e5                	mov    %esp,%ebp
810019e4:	56                   	push   %esi
810019e5:	53                   	push   %ebx
810019e6:	83 ec 10             	sub    $0x10,%esp
810019e9:	83 ec 04             	sub    $0x4,%esp
810019ec:	8d 45 f0             	lea    -0x10(%ebp),%eax
810019ef:	50                   	push   %eax
810019f0:	ff 75 10             	pushl  0x10(%ebp)
810019f3:	ff 75 08             	pushl  0x8(%ebp)
810019f6:	e8 4f 5a 00 00       	call   8100744a <__sflags>
810019fb:	83 c4 10             	add    $0x10,%esp
810019fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a01:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001a05:	75 0a                	jne    81001a11 <_fopen_r+0x30>
81001a07:	b8 00 00 00 00       	mov    $0x0,%eax
81001a0c:	e9 9e 00 00 00       	jmp    81001aaf <_fopen_r+0xce>
81001a11:	83 ec 0c             	sub    $0xc,%esp
81001a14:	ff 75 08             	pushl  0x8(%ebp)
81001a17:	e8 30 fd ff ff       	call   8100174c <__sfp>
81001a1c:	83 c4 10             	add    $0x10,%esp
81001a1f:	89 c3                	mov    %eax,%ebx
81001a21:	85 db                	test   %ebx,%ebx
81001a23:	75 0a                	jne    81001a2f <_fopen_r+0x4e>
81001a25:	b8 00 00 00 00       	mov    $0x0,%eax
81001a2a:	e9 80 00 00 00       	jmp    81001aaf <_fopen_r+0xce>
81001a2f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a32:	68 b6 01 00 00       	push   $0x1b6
81001a37:	50                   	push   %eax
81001a38:	ff 75 0c             	pushl  0xc(%ebp)
81001a3b:	ff 75 08             	pushl  0x8(%ebp)
81001a3e:	e8 1d 3d 00 00       	call   81005760 <_open_r>
81001a43:	83 c4 10             	add    $0x10,%esp
81001a46:	89 c6                	mov    %eax,%esi
81001a48:	85 f6                	test   %esi,%esi
81001a4a:	79 17                	jns    81001a63 <_fopen_r+0x82>
81001a4c:	e8 1c ff ff ff       	call   8100196d <__sfp_lock_acquire>
81001a51:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001a57:	e8 17 ff ff ff       	call   81001973 <__sfp_lock_release>
81001a5c:	b8 00 00 00 00       	mov    $0x0,%eax
81001a61:	eb 4c                	jmp    81001aaf <_fopen_r+0xce>
81001a63:	89 f0                	mov    %esi,%eax
81001a65:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001a69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a6c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001a70:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001a73:	c7 43 20 12 69 00 81 	movl   $0x81006912,0x20(%ebx)
81001a7a:	c7 43 24 60 69 00 81 	movl   $0x81006960,0x24(%ebx)
81001a81:	c7 43 28 bb 69 00 81 	movl   $0x810069bb,0x28(%ebx)
81001a88:	c7 43 2c 05 6a 00 81 	movl   $0x81006a05,0x2c(%ebx)
81001a8f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001a93:	98                   	cwtl   
81001a94:	25 00 01 00 00       	and    $0x100,%eax
81001a99:	85 c0                	test   %eax,%eax
81001a9b:	74 10                	je     81001aad <_fopen_r+0xcc>
81001a9d:	6a 02                	push   $0x2
81001a9f:	6a 00                	push   $0x0
81001aa1:	53                   	push   %ebx
81001aa2:	ff 75 08             	pushl  0x8(%ebp)
81001aa5:	e8 1b 09 00 00       	call   810023c5 <_fseek_r>
81001aaa:	83 c4 10             	add    $0x10,%esp
81001aad:	89 d8                	mov    %ebx,%eax
81001aaf:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001ab2:	5b                   	pop    %ebx
81001ab3:	5e                   	pop    %esi
81001ab4:	5d                   	pop    %ebp
81001ab5:	c3                   	ret    

81001ab6 <fopen>:
81001ab6:	55                   	push   %ebp
81001ab7:	89 e5                	mov    %esp,%ebp
81001ab9:	83 ec 08             	sub    $0x8,%esp
81001abc:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001ac1:	83 ec 04             	sub    $0x4,%esp
81001ac4:	ff 75 0c             	pushl  0xc(%ebp)
81001ac7:	ff 75 08             	pushl  0x8(%ebp)
81001aca:	50                   	push   %eax
81001acb:	e8 11 ff ff ff       	call   810019e1 <_fopen_r>
81001ad0:	83 c4 10             	add    $0x10,%esp
81001ad3:	c9                   	leave  
81001ad4:	c3                   	ret    

81001ad5 <_fiprintf_r>:
81001ad5:	55                   	push   %ebp
81001ad6:	89 e5                	mov    %esp,%ebp
81001ad8:	83 ec 18             	sub    $0x18,%esp
81001adb:	8d 45 14             	lea    0x14(%ebp),%eax
81001ade:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ae1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ae4:	50                   	push   %eax
81001ae5:	ff 75 10             	pushl  0x10(%ebp)
81001ae8:	ff 75 0c             	pushl  0xc(%ebp)
81001aeb:	ff 75 08             	pushl  0x8(%ebp)
81001aee:	e8 2d 33 00 00       	call   81004e20 <_vfiprintf_r>
81001af3:	83 c4 10             	add    $0x10,%esp
81001af6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001af9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001afc:	c9                   	leave  
81001afd:	c3                   	ret    

81001afe <fiprintf>:
81001afe:	55                   	push   %ebp
81001aff:	89 e5                	mov    %esp,%ebp
81001b01:	83 ec 18             	sub    $0x18,%esp
81001b04:	8d 45 10             	lea    0x10(%ebp),%eax
81001b07:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b0a:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001b0d:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001b12:	52                   	push   %edx
81001b13:	ff 75 0c             	pushl  0xc(%ebp)
81001b16:	ff 75 08             	pushl  0x8(%ebp)
81001b19:	50                   	push   %eax
81001b1a:	e8 01 33 00 00       	call   81004e20 <_vfiprintf_r>
81001b1f:	83 c4 10             	add    $0x10,%esp
81001b22:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b28:	c9                   	leave  
81001b29:	c3                   	ret    

81001b2a <_fputs_r>:
81001b2a:	55                   	push   %ebp
81001b2b:	89 e5                	mov    %esp,%ebp
81001b2d:	83 ec 28             	sub    $0x28,%esp
81001b30:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b33:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b36:	83 ec 0c             	sub    $0xc,%esp
81001b39:	ff 75 0c             	pushl  0xc(%ebp)
81001b3c:	e8 9f 50 00 00       	call   81006be0 <strlen>
81001b41:	83 c4 10             	add    $0x10,%esp
81001b44:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b47:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b4a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001b4d:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001b50:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001b53:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001b5a:	8b 45 08             	mov    0x8(%ebp),%eax
81001b5d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b60:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001b64:	74 18                	je     81001b7e <_fputs_r+0x54>
81001b66:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b69:	8b 40 38             	mov    0x38(%eax),%eax
81001b6c:	85 c0                	test   %eax,%eax
81001b6e:	75 0e                	jne    81001b7e <_fputs_r+0x54>
81001b70:	83 ec 0c             	sub    $0xc,%esp
81001b73:	ff 75 f4             	pushl  -0xc(%ebp)
81001b76:	e8 59 fd ff ff       	call   810018d4 <__sinit>
81001b7b:	83 c4 10             	add    $0x10,%esp
81001b7e:	8b 45 10             	mov    0x10(%ebp),%eax
81001b81:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b85:	98                   	cwtl   
81001b86:	25 00 20 00 00       	and    $0x2000,%eax
81001b8b:	85 c0                	test   %eax,%eax
81001b8d:	75 24                	jne    81001bb3 <_fputs_r+0x89>
81001b8f:	8b 45 10             	mov    0x10(%ebp),%eax
81001b92:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b96:	80 cc 20             	or     $0x20,%ah
81001b99:	89 c2                	mov    %eax,%edx
81001b9b:	8b 45 10             	mov    0x10(%ebp),%eax
81001b9e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001ba2:	8b 45 10             	mov    0x10(%ebp),%eax
81001ba5:	8b 40 64             	mov    0x64(%eax),%eax
81001ba8:	80 e4 df             	and    $0xdf,%ah
81001bab:	89 c2                	mov    %eax,%edx
81001bad:	8b 45 10             	mov    0x10(%ebp),%eax
81001bb0:	89 50 64             	mov    %edx,0x64(%eax)
81001bb3:	83 ec 04             	sub    $0x4,%esp
81001bb6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001bb9:	50                   	push   %eax
81001bba:	ff 75 10             	pushl  0x10(%ebp)
81001bbd:	ff 75 08             	pushl  0x8(%ebp)
81001bc0:	e8 51 0d 00 00       	call   81002916 <__sfvwrite_r>
81001bc5:	83 c4 10             	add    $0x10,%esp
81001bc8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bcb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bce:	c9                   	leave  
81001bcf:	c3                   	ret    

81001bd0 <fputs>:
81001bd0:	55                   	push   %ebp
81001bd1:	89 e5                	mov    %esp,%ebp
81001bd3:	83 ec 08             	sub    $0x8,%esp
81001bd6:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001bdb:	83 ec 04             	sub    $0x4,%esp
81001bde:	ff 75 0c             	pushl  0xc(%ebp)
81001be1:	ff 75 08             	pushl  0x8(%ebp)
81001be4:	50                   	push   %eax
81001be5:	e8 40 ff ff ff       	call   81001b2a <_fputs_r>
81001bea:	83 c4 10             	add    $0x10,%esp
81001bed:	c9                   	leave  
81001bee:	c3                   	ret    

81001bef <_fread_r>:
81001bef:	55                   	push   %ebp
81001bf0:	89 e5                	mov    %esp,%ebp
81001bf2:	57                   	push   %edi
81001bf3:	56                   	push   %esi
81001bf4:	53                   	push   %ebx
81001bf5:	83 ec 2c             	sub    $0x2c,%esp
81001bf8:	8b 45 14             	mov    0x14(%ebp),%eax
81001bfb:	0f af 45 10          	imul   0x10(%ebp),%eax
81001bff:	89 c3                	mov    %eax,%ebx
81001c01:	85 db                	test   %ebx,%ebx
81001c03:	75 0a                	jne    81001c0f <_fread_r+0x20>
81001c05:	b8 00 00 00 00       	mov    $0x0,%eax
81001c0a:	e9 4d 02 00 00       	jmp    81001e5c <_fread_r+0x26d>
81001c0f:	8b 45 08             	mov    0x8(%ebp),%eax
81001c12:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c15:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001c19:	74 18                	je     81001c33 <_fread_r+0x44>
81001c1b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001c1e:	8b 40 38             	mov    0x38(%eax),%eax
81001c21:	85 c0                	test   %eax,%eax
81001c23:	75 0e                	jne    81001c33 <_fread_r+0x44>
81001c25:	83 ec 0c             	sub    $0xc,%esp
81001c28:	ff 75 e4             	pushl  -0x1c(%ebp)
81001c2b:	e8 a4 fc ff ff       	call   810018d4 <__sinit>
81001c30:	83 c4 10             	add    $0x10,%esp
81001c33:	8b 45 18             	mov    0x18(%ebp),%eax
81001c36:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c3a:	98                   	cwtl   
81001c3b:	25 00 20 00 00       	and    $0x2000,%eax
81001c40:	85 c0                	test   %eax,%eax
81001c42:	75 24                	jne    81001c68 <_fread_r+0x79>
81001c44:	8b 45 18             	mov    0x18(%ebp),%eax
81001c47:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c4b:	80 cc 20             	or     $0x20,%ah
81001c4e:	89 c2                	mov    %eax,%edx
81001c50:	8b 45 18             	mov    0x18(%ebp),%eax
81001c53:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001c57:	8b 45 18             	mov    0x18(%ebp),%eax
81001c5a:	8b 40 64             	mov    0x64(%eax),%eax
81001c5d:	80 e4 df             	and    $0xdf,%ah
81001c60:	89 c2                	mov    %eax,%edx
81001c62:	8b 45 18             	mov    0x18(%ebp),%eax
81001c65:	89 50 64             	mov    %edx,0x64(%eax)
81001c68:	8b 45 18             	mov    0x18(%ebp),%eax
81001c6b:	8b 40 04             	mov    0x4(%eax),%eax
81001c6e:	85 c0                	test   %eax,%eax
81001c70:	79 0a                	jns    81001c7c <_fread_r+0x8d>
81001c72:	8b 45 18             	mov    0x18(%ebp),%eax
81001c75:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c7c:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001c7f:	8b 75 0c             	mov    0xc(%ebp),%esi
81001c82:	8b 45 18             	mov    0x18(%ebp),%eax
81001c85:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c89:	98                   	cwtl   
81001c8a:	83 e0 02             	and    $0x2,%eax
81001c8d:	85 c0                	test   %eax,%eax
81001c8f:	0f 84 88 01 00 00    	je     81001e1d <_fread_r+0x22e>
81001c95:	8b 45 18             	mov    0x18(%ebp),%eax
81001c98:	8b 40 04             	mov    0x4(%eax),%eax
81001c9b:	39 c3                	cmp    %eax,%ebx
81001c9d:	0f 46 c3             	cmovbe %ebx,%eax
81001ca0:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ca3:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001ca6:	8b 45 18             	mov    0x18(%ebp),%eax
81001ca9:	8b 00                	mov    (%eax),%eax
81001cab:	83 ec 04             	sub    $0x4,%esp
81001cae:	52                   	push   %edx
81001caf:	50                   	push   %eax
81001cb0:	56                   	push   %esi
81001cb1:	e8 f2 2d 00 00       	call   81004aa8 <memcpy>
81001cb6:	83 c4 10             	add    $0x10,%esp
81001cb9:	8b 45 18             	mov    0x18(%ebp),%eax
81001cbc:	8b 10                	mov    (%eax),%edx
81001cbe:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cc1:	01 c2                	add    %eax,%edx
81001cc3:	8b 45 18             	mov    0x18(%ebp),%eax
81001cc6:	89 10                	mov    %edx,(%eax)
81001cc8:	8b 45 18             	mov    0x18(%ebp),%eax
81001ccb:	8b 40 04             	mov    0x4(%eax),%eax
81001cce:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001cd1:	89 c2                	mov    %eax,%edx
81001cd3:	8b 45 18             	mov    0x18(%ebp),%eax
81001cd6:	89 50 04             	mov    %edx,0x4(%eax)
81001cd9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cdc:	01 c6                	add    %eax,%esi
81001cde:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ce1:	29 c3                	sub    %eax,%ebx
81001ce3:	8b 45 18             	mov    0x18(%ebp),%eax
81001ce6:	8b 40 30             	mov    0x30(%eax),%eax
81001ce9:	85 c0                	test   %eax,%eax
81001ceb:	0f 84 d0 00 00 00    	je     81001dc1 <_fread_r+0x1d2>
81001cf1:	85 db                	test   %ebx,%ebx
81001cf3:	0f 84 c8 00 00 00    	je     81001dc1 <_fread_r+0x1d2>
81001cf9:	8b 45 18             	mov    0x18(%ebp),%eax
81001cfc:	8b 40 30             	mov    0x30(%eax),%eax
81001cff:	8b 55 18             	mov    0x18(%ebp),%edx
81001d02:	83 c2 40             	add    $0x40,%edx
81001d05:	39 d0                	cmp    %edx,%eax
81001d07:	74 15                	je     81001d1e <_fread_r+0x12f>
81001d09:	8b 45 18             	mov    0x18(%ebp),%eax
81001d0c:	8b 40 30             	mov    0x30(%eax),%eax
81001d0f:	83 ec 08             	sub    $0x8,%esp
81001d12:	50                   	push   %eax
81001d13:	ff 75 08             	pushl  0x8(%ebp)
81001d16:	e8 6e 01 00 00       	call   81001e89 <_free_r>
81001d1b:	83 c4 10             	add    $0x10,%esp
81001d1e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d21:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001d28:	e9 94 00 00 00       	jmp    81001dc1 <_fread_r+0x1d2>
81001d2d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001d34:	8b 45 18             	mov    0x18(%ebp),%eax
81001d37:	8b 40 10             	mov    0x10(%eax),%eax
81001d3a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d3d:	8b 45 18             	mov    0x18(%ebp),%eax
81001d40:	8b 00                	mov    (%eax),%eax
81001d42:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001d45:	8b 45 18             	mov    0x18(%ebp),%eax
81001d48:	8b 40 14             	mov    0x14(%eax),%eax
81001d4b:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001d4e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d51:	89 70 10             	mov    %esi,0x10(%eax)
81001d54:	89 da                	mov    %ebx,%edx
81001d56:	8b 45 18             	mov    0x18(%ebp),%eax
81001d59:	89 50 14             	mov    %edx,0x14(%eax)
81001d5c:	8b 45 18             	mov    0x18(%ebp),%eax
81001d5f:	89 30                	mov    %esi,(%eax)
81001d61:	83 ec 08             	sub    $0x8,%esp
81001d64:	ff 75 18             	pushl  0x18(%ebp)
81001d67:	ff 75 08             	pushl  0x8(%ebp)
81001d6a:	e8 29 46 00 00       	call   81006398 <__srefill_r>
81001d6f:	83 c4 10             	add    $0x10,%esp
81001d72:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d75:	8b 45 18             	mov    0x18(%ebp),%eax
81001d78:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001d7b:	89 50 10             	mov    %edx,0x10(%eax)
81001d7e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d81:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001d84:	89 50 14             	mov    %edx,0x14(%eax)
81001d87:	8b 45 18             	mov    0x18(%ebp),%eax
81001d8a:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001d8d:	89 10                	mov    %edx,(%eax)
81001d8f:	8b 45 18             	mov    0x18(%ebp),%eax
81001d92:	8b 40 04             	mov    0x4(%eax),%eax
81001d95:	29 c3                	sub    %eax,%ebx
81001d97:	8b 45 18             	mov    0x18(%ebp),%eax
81001d9a:	8b 40 04             	mov    0x4(%eax),%eax
81001d9d:	01 c6                	add    %eax,%esi
81001d9f:	8b 45 18             	mov    0x18(%ebp),%eax
81001da2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001da9:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001dad:	74 12                	je     81001dc1 <_fread_r+0x1d2>
81001daf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001db2:	29 d8                	sub    %ebx,%eax
81001db4:	ba 00 00 00 00       	mov    $0x0,%edx
81001db9:	f7 75 10             	divl   0x10(%ebp)
81001dbc:	e9 9b 00 00 00       	jmp    81001e5c <_fread_r+0x26d>
81001dc1:	85 db                	test   %ebx,%ebx
81001dc3:	0f 85 64 ff ff ff    	jne    81001d2d <_fread_r+0x13e>
81001dc9:	e9 8b 00 00 00       	jmp    81001e59 <_fread_r+0x26a>
81001dce:	89 fa                	mov    %edi,%edx
81001dd0:	8b 45 18             	mov    0x18(%ebp),%eax
81001dd3:	8b 00                	mov    (%eax),%eax
81001dd5:	83 ec 04             	sub    $0x4,%esp
81001dd8:	52                   	push   %edx
81001dd9:	50                   	push   %eax
81001dda:	56                   	push   %esi
81001ddb:	e8 c8 2c 00 00       	call   81004aa8 <memcpy>
81001de0:	83 c4 10             	add    $0x10,%esp
81001de3:	8b 45 18             	mov    0x18(%ebp),%eax
81001de6:	8b 00                	mov    (%eax),%eax
81001de8:	89 fa                	mov    %edi,%edx
81001dea:	01 c2                	add    %eax,%edx
81001dec:	8b 45 18             	mov    0x18(%ebp),%eax
81001def:	89 10                	mov    %edx,(%eax)
81001df1:	89 f8                	mov    %edi,%eax
81001df3:	01 c6                	add    %eax,%esi
81001df5:	89 f8                	mov    %edi,%eax
81001df7:	29 c3                	sub    %eax,%ebx
81001df9:	83 ec 08             	sub    $0x8,%esp
81001dfc:	ff 75 18             	pushl  0x18(%ebp)
81001dff:	ff 75 08             	pushl  0x8(%ebp)
81001e02:	e8 91 45 00 00       	call   81006398 <__srefill_r>
81001e07:	83 c4 10             	add    $0x10,%esp
81001e0a:	85 c0                	test   %eax,%eax
81001e0c:	74 0f                	je     81001e1d <_fread_r+0x22e>
81001e0e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e11:	29 d8                	sub    %ebx,%eax
81001e13:	ba 00 00 00 00       	mov    $0x0,%edx
81001e18:	f7 75 10             	divl   0x10(%ebp)
81001e1b:	eb 3f                	jmp    81001e5c <_fread_r+0x26d>
81001e1d:	8b 45 18             	mov    0x18(%ebp),%eax
81001e20:	8b 78 04             	mov    0x4(%eax),%edi
81001e23:	89 f8                	mov    %edi,%eax
81001e25:	39 c3                	cmp    %eax,%ebx
81001e27:	77 a5                	ja     81001dce <_fread_r+0x1df>
81001e29:	8b 45 18             	mov    0x18(%ebp),%eax
81001e2c:	8b 00                	mov    (%eax),%eax
81001e2e:	83 ec 04             	sub    $0x4,%esp
81001e31:	53                   	push   %ebx
81001e32:	50                   	push   %eax
81001e33:	56                   	push   %esi
81001e34:	e8 6f 2c 00 00       	call   81004aa8 <memcpy>
81001e39:	83 c4 10             	add    $0x10,%esp
81001e3c:	8b 45 18             	mov    0x18(%ebp),%eax
81001e3f:	8b 40 04             	mov    0x4(%eax),%eax
81001e42:	29 d8                	sub    %ebx,%eax
81001e44:	89 c2                	mov    %eax,%edx
81001e46:	8b 45 18             	mov    0x18(%ebp),%eax
81001e49:	89 50 04             	mov    %edx,0x4(%eax)
81001e4c:	8b 45 18             	mov    0x18(%ebp),%eax
81001e4f:	8b 00                	mov    (%eax),%eax
81001e51:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001e54:	8b 45 18             	mov    0x18(%ebp),%eax
81001e57:	89 10                	mov    %edx,(%eax)
81001e59:	8b 45 14             	mov    0x14(%ebp),%eax
81001e5c:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001e5f:	5b                   	pop    %ebx
81001e60:	5e                   	pop    %esi
81001e61:	5f                   	pop    %edi
81001e62:	5d                   	pop    %ebp
81001e63:	c3                   	ret    

81001e64 <fread>:
81001e64:	55                   	push   %ebp
81001e65:	89 e5                	mov    %esp,%ebp
81001e67:	83 ec 08             	sub    $0x8,%esp
81001e6a:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001e6f:	83 ec 0c             	sub    $0xc,%esp
81001e72:	ff 75 14             	pushl  0x14(%ebp)
81001e75:	ff 75 10             	pushl  0x10(%ebp)
81001e78:	ff 75 0c             	pushl  0xc(%ebp)
81001e7b:	ff 75 08             	pushl  0x8(%ebp)
81001e7e:	50                   	push   %eax
81001e7f:	e8 6b fd ff ff       	call   81001bef <_fread_r>
81001e84:	83 c4 20             	add    $0x20,%esp
81001e87:	c9                   	leave  
81001e88:	c3                   	ret    

81001e89 <_free_r>:
81001e89:	55                   	push   %ebp
81001e8a:	89 e5                	mov    %esp,%ebp
81001e8c:	53                   	push   %ebx
81001e8d:	83 ec 34             	sub    $0x34,%esp
81001e90:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001e94:	0f 84 c4 03 00 00    	je     8100225e <_free_r+0x3d5>
81001e9a:	83 ec 0c             	sub    $0xc,%esp
81001e9d:	ff 75 08             	pushl  0x8(%ebp)
81001ea0:	e8 60 2d 00 00       	call   81004c05 <__malloc_lock>
81001ea5:	83 c4 10             	add    $0x10,%esp
81001ea8:	8b 45 0c             	mov    0xc(%ebp),%eax
81001eab:	83 e8 08             	sub    $0x8,%eax
81001eae:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001eb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb4:	8b 40 04             	mov    0x4(%eax),%eax
81001eb7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001eba:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ebd:	83 e0 fe             	and    $0xfffffffe,%eax
81001ec0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ec3:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001ec6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ec9:	01 d0                	add    %edx,%eax
81001ecb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ece:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ed1:	8b 40 04             	mov    0x4(%eax),%eax
81001ed4:	83 e0 fc             	and    $0xfffffffc,%eax
81001ed7:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001eda:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81001edf:	8b 40 08             	mov    0x8(%eax),%eax
81001ee2:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001ee5:	0f 85 94 00 00 00    	jne    81001f7f <_free_r+0xf6>
81001eeb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001eee:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ef1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ef4:	83 e0 01             	and    $0x1,%eax
81001ef7:	85 c0                	test   %eax,%eax
81001ef9:	75 3a                	jne    81001f35 <_free_r+0xac>
81001efb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001efe:	8b 00                	mov    (%eax),%eax
81001f00:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001f03:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f06:	f7 d8                	neg    %eax
81001f08:	01 45 f4             	add    %eax,-0xc(%ebp)
81001f0b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f0e:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f11:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f14:	8b 40 0c             	mov    0xc(%eax),%eax
81001f17:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f1d:	8b 40 08             	mov    0x8(%eax),%eax
81001f20:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f23:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f26:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f29:	89 50 0c             	mov    %edx,0xc(%eax)
81001f2c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f2f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f32:	89 50 08             	mov    %edx,0x8(%eax)
81001f35:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f38:	83 c8 01             	or     $0x1,%eax
81001f3b:	89 c2                	mov    %eax,%edx
81001f3d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f40:	89 50 04             	mov    %edx,0x4(%eax)
81001f43:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81001f48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f4b:	89 42 08             	mov    %eax,0x8(%edx)
81001f4e:	a1 c8 94 00 81       	mov    0x810094c8,%eax
81001f53:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001f56:	72 14                	jb     81001f6c <_free_r+0xe3>
81001f58:	a1 a0 9b 00 81       	mov    0x81009ba0,%eax
81001f5d:	83 ec 08             	sub    $0x8,%esp
81001f60:	50                   	push   %eax
81001f61:	ff 75 08             	pushl  0x8(%ebp)
81001f64:	e8 fb 02 00 00       	call   81002264 <_malloc_trim_r>
81001f69:	83 c4 10             	add    $0x10,%esp
81001f6c:	83 ec 0c             	sub    $0xc,%esp
81001f6f:	ff 75 08             	pushl  0x8(%ebp)
81001f72:	e8 94 2c 00 00       	call   81004c0b <__malloc_unlock>
81001f77:	83 c4 10             	add    $0x10,%esp
81001f7a:	e9 e0 02 00 00       	jmp    8100225f <_free_r+0x3d6>
81001f7f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f82:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001f85:	89 50 04             	mov    %edx,0x4(%eax)
81001f88:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001f8f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f92:	83 e0 01             	and    $0x1,%eax
81001f95:	85 c0                	test   %eax,%eax
81001f97:	75 52                	jne    81001feb <_free_r+0x162>
81001f99:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f9c:	8b 00                	mov    (%eax),%eax
81001f9e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001fa1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001fa4:	f7 d8                	neg    %eax
81001fa6:	01 45 f4             	add    %eax,-0xc(%ebp)
81001fa9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001fac:	01 45 f0             	add    %eax,-0x10(%ebp)
81001faf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fb2:	8b 40 08             	mov    0x8(%eax),%eax
81001fb5:	ba c8 90 00 81       	mov    $0x810090c8,%edx
81001fba:	39 d0                	cmp    %edx,%eax
81001fbc:	75 09                	jne    81001fc7 <_free_r+0x13e>
81001fbe:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001fc5:	eb 24                	jmp    81001feb <_free_r+0x162>
81001fc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fca:	8b 40 0c             	mov    0xc(%eax),%eax
81001fcd:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fd3:	8b 40 08             	mov    0x8(%eax),%eax
81001fd6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fd9:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fdc:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001fdf:	89 50 0c             	mov    %edx,0xc(%eax)
81001fe2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fe5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001fe8:	89 50 08             	mov    %edx,0x8(%eax)
81001feb:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fee:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ff1:	01 d0                	add    %edx,%eax
81001ff3:	8b 40 04             	mov    0x4(%eax),%eax
81001ff6:	83 e0 01             	and    $0x1,%eax
81001ff9:	85 c0                	test   %eax,%eax
81001ffb:	75 75                	jne    81002072 <_free_r+0x1e9>
81001ffd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002000:	01 45 f0             	add    %eax,-0x10(%ebp)
81002003:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002007:	75 45                	jne    8100204e <_free_r+0x1c5>
81002009:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100200c:	8b 40 08             	mov    0x8(%eax),%eax
8100200f:	ba c8 90 00 81       	mov    $0x810090c8,%edx
81002014:	39 d0                	cmp    %edx,%eax
81002016:	75 36                	jne    8100204e <_free_r+0x1c5>
81002018:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100201f:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
81002024:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002027:	89 50 0c             	mov    %edx,0xc(%eax)
8100202a:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100202f:	8b 40 0c             	mov    0xc(%eax),%eax
81002032:	89 42 08             	mov    %eax,0x8(%edx)
81002035:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100203a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100203d:	89 50 0c             	mov    %edx,0xc(%eax)
81002040:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002043:	8b 50 0c             	mov    0xc(%eax),%edx
81002046:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002049:	89 50 08             	mov    %edx,0x8(%eax)
8100204c:	eb 24                	jmp    81002072 <_free_r+0x1e9>
8100204e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002051:	8b 40 0c             	mov    0xc(%eax),%eax
81002054:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002057:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100205a:	8b 40 08             	mov    0x8(%eax),%eax
8100205d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002060:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002063:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002066:	89 50 0c             	mov    %edx,0xc(%eax)
81002069:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100206c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100206f:	89 50 08             	mov    %edx,0x8(%eax)
81002072:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002075:	83 c8 01             	or     $0x1,%eax
81002078:	89 c2                	mov    %eax,%edx
8100207a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100207d:	89 50 04             	mov    %edx,0x4(%eax)
81002080:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002083:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002086:	01 c2                	add    %eax,%edx
81002088:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100208b:	89 02                	mov    %eax,(%edx)
8100208d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002091:	0f 85 b7 01 00 00    	jne    8100224e <_free_r+0x3c5>
81002097:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
8100209e:	77 7f                	ja     8100211f <_free_r+0x296>
810020a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020a3:	c1 e8 03             	shr    $0x3,%eax
810020a6:	89 45 d0             	mov    %eax,-0x30(%ebp)
810020a9:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810020ae:	8b 58 04             	mov    0x4(%eax),%ebx
810020b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020b4:	8d 50 03             	lea    0x3(%eax),%edx
810020b7:	85 c0                	test   %eax,%eax
810020b9:	0f 48 c2             	cmovs  %edx,%eax
810020bc:	c1 f8 02             	sar    $0x2,%eax
810020bf:	ba 01 00 00 00       	mov    $0x1,%edx
810020c4:	89 c1                	mov    %eax,%ecx
810020c6:	d3 e2                	shl    %cl,%edx
810020c8:	89 d0                	mov    %edx,%eax
810020ca:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810020cf:	09 d8                	or     %ebx,%eax
810020d1:	89 42 04             	mov    %eax,0x4(%edx)
810020d4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020d7:	83 c0 01             	add    $0x1,%eax
810020da:	01 c0                	add    %eax,%eax
810020dc:	c1 e0 02             	shl    $0x2,%eax
810020df:	05 c0 90 00 81       	add    $0x810090c0,%eax
810020e4:	83 e8 08             	sub    $0x8,%eax
810020e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020ed:	8b 40 08             	mov    0x8(%eax),%eax
810020f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020f6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810020f9:	89 50 0c             	mov    %edx,0xc(%eax)
810020fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020ff:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002102:	89 50 08             	mov    %edx,0x8(%eax)
81002105:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002108:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100210b:	89 50 08             	mov    %edx,0x8(%eax)
8100210e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002111:	8b 50 08             	mov    0x8(%eax),%edx
81002114:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002117:	89 50 0c             	mov    %edx,0xc(%eax)
8100211a:	e9 2f 01 00 00       	jmp    8100224e <_free_r+0x3c5>
8100211f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002122:	c1 e8 09             	shr    $0x9,%eax
81002125:	85 c0                	test   %eax,%eax
81002127:	75 08                	jne    81002131 <_free_r+0x2a8>
81002129:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100212c:	c1 e8 03             	shr    $0x3,%eax
8100212f:	eb 77                	jmp    810021a8 <_free_r+0x31f>
81002131:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002134:	c1 e8 09             	shr    $0x9,%eax
81002137:	83 f8 04             	cmp    $0x4,%eax
8100213a:	77 0b                	ja     81002147 <_free_r+0x2be>
8100213c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100213f:	c1 e8 06             	shr    $0x6,%eax
81002142:	83 c0 38             	add    $0x38,%eax
81002145:	eb 61                	jmp    810021a8 <_free_r+0x31f>
81002147:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100214a:	c1 e8 09             	shr    $0x9,%eax
8100214d:	83 f8 14             	cmp    $0x14,%eax
81002150:	77 0b                	ja     8100215d <_free_r+0x2d4>
81002152:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002155:	c1 e8 09             	shr    $0x9,%eax
81002158:	83 c0 5b             	add    $0x5b,%eax
8100215b:	eb 4b                	jmp    810021a8 <_free_r+0x31f>
8100215d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002160:	c1 e8 09             	shr    $0x9,%eax
81002163:	83 f8 54             	cmp    $0x54,%eax
81002166:	77 0b                	ja     81002173 <_free_r+0x2ea>
81002168:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100216b:	c1 e8 0c             	shr    $0xc,%eax
8100216e:	83 c0 6e             	add    $0x6e,%eax
81002171:	eb 35                	jmp    810021a8 <_free_r+0x31f>
81002173:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002176:	c1 e8 09             	shr    $0x9,%eax
81002179:	3d 54 01 00 00       	cmp    $0x154,%eax
8100217e:	77 0b                	ja     8100218b <_free_r+0x302>
81002180:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002183:	c1 e8 0f             	shr    $0xf,%eax
81002186:	83 c0 77             	add    $0x77,%eax
81002189:	eb 1d                	jmp    810021a8 <_free_r+0x31f>
8100218b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100218e:	c1 e8 09             	shr    $0x9,%eax
81002191:	3d 54 05 00 00       	cmp    $0x554,%eax
81002196:	77 0b                	ja     810021a3 <_free_r+0x31a>
81002198:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100219b:	c1 e8 12             	shr    $0x12,%eax
8100219e:	83 c0 7c             	add    $0x7c,%eax
810021a1:	eb 05                	jmp    810021a8 <_free_r+0x31f>
810021a3:	b8 7e 00 00 00       	mov    $0x7e,%eax
810021a8:	89 45 d0             	mov    %eax,-0x30(%ebp)
810021ab:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021ae:	83 c0 01             	add    $0x1,%eax
810021b1:	01 c0                	add    %eax,%eax
810021b3:	c1 e0 02             	shl    $0x2,%eax
810021b6:	05 c0 90 00 81       	add    $0x810090c0,%eax
810021bb:	83 e8 08             	sub    $0x8,%eax
810021be:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021c1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021c4:	8b 40 08             	mov    0x8(%eax),%eax
810021c7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021ca:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021cd:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810021d0:	75 36                	jne    81002208 <_free_r+0x37f>
810021d2:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810021d7:	8b 58 04             	mov    0x4(%eax),%ebx
810021da:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021dd:	8d 50 03             	lea    0x3(%eax),%edx
810021e0:	85 c0                	test   %eax,%eax
810021e2:	0f 48 c2             	cmovs  %edx,%eax
810021e5:	c1 f8 02             	sar    $0x2,%eax
810021e8:	ba 01 00 00 00       	mov    $0x1,%edx
810021ed:	89 c1                	mov    %eax,%ecx
810021ef:	d3 e2                	shl    %cl,%edx
810021f1:	89 d0                	mov    %edx,%eax
810021f3:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810021f8:	09 d8                	or     %ebx,%eax
810021fa:	89 42 04             	mov    %eax,0x4(%edx)
810021fd:	eb 28                	jmp    81002227 <_free_r+0x39e>
810021ff:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002202:	8b 40 08             	mov    0x8(%eax),%eax
81002205:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002208:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100220b:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100220e:	74 0e                	je     8100221e <_free_r+0x395>
81002210:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002213:	8b 40 04             	mov    0x4(%eax),%eax
81002216:	83 e0 fc             	and    $0xfffffffc,%eax
81002219:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100221c:	72 e1                	jb     810021ff <_free_r+0x376>
8100221e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002221:	8b 40 0c             	mov    0xc(%eax),%eax
81002224:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002227:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100222a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100222d:	89 50 0c             	mov    %edx,0xc(%eax)
81002230:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002233:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002236:	89 50 08             	mov    %edx,0x8(%eax)
81002239:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100223c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100223f:	89 50 08             	mov    %edx,0x8(%eax)
81002242:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002245:	8b 50 08             	mov    0x8(%eax),%edx
81002248:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100224b:	89 50 0c             	mov    %edx,0xc(%eax)
8100224e:	83 ec 0c             	sub    $0xc,%esp
81002251:	ff 75 08             	pushl  0x8(%ebp)
81002254:	e8 b2 29 00 00       	call   81004c0b <__malloc_unlock>
81002259:	83 c4 10             	add    $0x10,%esp
8100225c:	eb 01                	jmp    8100225f <_free_r+0x3d6>
8100225e:	90                   	nop
8100225f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002262:	c9                   	leave  
81002263:	c3                   	ret    

81002264 <_malloc_trim_r>:
81002264:	55                   	push   %ebp
81002265:	89 e5                	mov    %esp,%ebp
81002267:	83 ec 28             	sub    $0x28,%esp
8100226a:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002271:	83 ec 0c             	sub    $0xc,%esp
81002274:	ff 75 08             	pushl  0x8(%ebp)
81002277:	e8 89 29 00 00       	call   81004c05 <__malloc_lock>
8100227c:	83 c4 10             	add    $0x10,%esp
8100227f:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81002284:	8b 40 08             	mov    0x8(%eax),%eax
81002287:	8b 40 04             	mov    0x4(%eax),%eax
8100228a:	83 e0 fc             	and    $0xfffffffc,%eax
8100228d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002290:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002293:	2b 45 0c             	sub    0xc(%ebp),%eax
81002296:	89 c2                	mov    %eax,%edx
81002298:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100229b:	01 d0                	add    %edx,%eax
8100229d:	83 e8 11             	sub    $0x11,%eax
810022a0:	ba 00 00 00 00       	mov    $0x0,%edx
810022a5:	f7 75 f4             	divl   -0xc(%ebp)
810022a8:	83 e8 01             	sub    $0x1,%eax
810022ab:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810022af:	89 45 ec             	mov    %eax,-0x14(%ebp)
810022b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022b5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810022b8:	7d 18                	jge    810022d2 <_malloc_trim_r+0x6e>
810022ba:	83 ec 0c             	sub    $0xc,%esp
810022bd:	ff 75 08             	pushl  0x8(%ebp)
810022c0:	e8 46 29 00 00       	call   81004c0b <__malloc_unlock>
810022c5:	83 c4 10             	add    $0x10,%esp
810022c8:	b8 00 00 00 00       	mov    $0x0,%eax
810022cd:	e9 f1 00 00 00       	jmp    810023c3 <_malloc_trim_r+0x15f>
810022d2:	83 ec 08             	sub    $0x8,%esp
810022d5:	6a 00                	push   $0x0
810022d7:	ff 75 08             	pushl  0x8(%ebp)
810022da:	e8 3a 43 00 00       	call   81006619 <_sbrk_r>
810022df:	83 c4 10             	add    $0x10,%esp
810022e2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022e5:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810022ea:	8b 50 08             	mov    0x8(%eax),%edx
810022ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810022f0:	01 d0                	add    %edx,%eax
810022f2:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810022f5:	74 18                	je     8100230f <_malloc_trim_r+0xab>
810022f7:	83 ec 0c             	sub    $0xc,%esp
810022fa:	ff 75 08             	pushl  0x8(%ebp)
810022fd:	e8 09 29 00 00       	call   81004c0b <__malloc_unlock>
81002302:	83 c4 10             	add    $0x10,%esp
81002305:	b8 00 00 00 00       	mov    $0x0,%eax
8100230a:	e9 b4 00 00 00       	jmp    810023c3 <_malloc_trim_r+0x15f>
8100230f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002312:	f7 d8                	neg    %eax
81002314:	83 ec 08             	sub    $0x8,%esp
81002317:	50                   	push   %eax
81002318:	ff 75 08             	pushl  0x8(%ebp)
8100231b:	e8 f9 42 00 00       	call   81006619 <_sbrk_r>
81002320:	83 c4 10             	add    $0x10,%esp
81002323:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002326:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100232a:	75 61                	jne    8100238d <_malloc_trim_r+0x129>
8100232c:	83 ec 08             	sub    $0x8,%esp
8100232f:	6a 00                	push   $0x0
81002331:	ff 75 08             	pushl  0x8(%ebp)
81002334:	e8 e0 42 00 00       	call   81006619 <_sbrk_r>
81002339:	83 c4 10             	add    $0x10,%esp
8100233c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100233f:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81002344:	8b 50 08             	mov    0x8(%eax),%edx
81002347:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100234a:	29 d0                	sub    %edx,%eax
8100234c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100234f:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002353:	7e 23                	jle    81002378 <_malloc_trim_r+0x114>
81002355:	8b 15 cc 94 00 81    	mov    0x810094cc,%edx
8100235b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100235e:	29 d0                	sub    %edx,%eax
81002360:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
81002365:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002368:	83 c8 01             	or     $0x1,%eax
8100236b:	89 c2                	mov    %eax,%edx
8100236d:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81002372:	8b 40 08             	mov    0x8(%eax),%eax
81002375:	89 50 04             	mov    %edx,0x4(%eax)
81002378:	83 ec 0c             	sub    $0xc,%esp
8100237b:	ff 75 08             	pushl  0x8(%ebp)
8100237e:	e8 88 28 00 00       	call   81004c0b <__malloc_unlock>
81002383:	83 c4 10             	add    $0x10,%esp
81002386:	b8 00 00 00 00       	mov    $0x0,%eax
8100238b:	eb 36                	jmp    810023c3 <_malloc_trim_r+0x15f>
8100238d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002390:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002393:	83 c8 01             	or     $0x1,%eax
81002396:	89 c2                	mov    %eax,%edx
81002398:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
8100239d:	8b 40 08             	mov    0x8(%eax),%eax
810023a0:	89 50 04             	mov    %edx,0x4(%eax)
810023a3:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
810023a8:	2b 45 ec             	sub    -0x14(%ebp),%eax
810023ab:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
810023b0:	83 ec 0c             	sub    $0xc,%esp
810023b3:	ff 75 08             	pushl  0x8(%ebp)
810023b6:	e8 50 28 00 00       	call   81004c0b <__malloc_unlock>
810023bb:	83 c4 10             	add    $0x10,%esp
810023be:	b8 01 00 00 00       	mov    $0x1,%eax
810023c3:	c9                   	leave  
810023c4:	c3                   	ret    

810023c5 <_fseek_r>:
810023c5:	55                   	push   %ebp
810023c6:	89 e5                	mov    %esp,%ebp
810023c8:	83 ec 08             	sub    $0x8,%esp
810023cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810023ce:	ff 75 14             	pushl  0x14(%ebp)
810023d1:	ff 75 10             	pushl  0x10(%ebp)
810023d4:	50                   	push   %eax
810023d5:	ff 75 08             	pushl  0x8(%ebp)
810023d8:	e8 25 00 00 00       	call   81002402 <_fseeko_r>
810023dd:	83 c4 10             	add    $0x10,%esp
810023e0:	c9                   	leave  
810023e1:	c3                   	ret    

810023e2 <fseek>:
810023e2:	55                   	push   %ebp
810023e3:	89 e5                	mov    %esp,%ebp
810023e5:	83 ec 08             	sub    $0x8,%esp
810023e8:	8b 55 08             	mov    0x8(%ebp),%edx
810023eb:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810023f0:	ff 75 10             	pushl  0x10(%ebp)
810023f3:	ff 75 0c             	pushl  0xc(%ebp)
810023f6:	52                   	push   %edx
810023f7:	50                   	push   %eax
810023f8:	e8 c8 ff ff ff       	call   810023c5 <_fseek_r>
810023fd:	83 c4 10             	add    $0x10,%esp
81002400:	c9                   	leave  
81002401:	c3                   	ret    

81002402 <_fseeko_r>:
81002402:	55                   	push   %ebp
81002403:	89 e5                	mov    %esp,%ebp
81002405:	56                   	push   %esi
81002406:	53                   	push   %ebx
81002407:	83 ec 60             	sub    $0x60,%esp
8100240a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100240d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002414:	8b 45 08             	mov    0x8(%ebp),%eax
81002417:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100241a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100241e:	74 18                	je     81002438 <_fseeko_r+0x36>
81002420:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002423:	8b 40 38             	mov    0x38(%eax),%eax
81002426:	85 c0                	test   %eax,%eax
81002428:	75 0e                	jne    81002438 <_fseeko_r+0x36>
8100242a:	83 ec 0c             	sub    $0xc,%esp
8100242d:	ff 75 e4             	pushl  -0x1c(%ebp)
81002430:	e8 9f f4 ff ff       	call   810018d4 <__sinit>
81002435:	83 c4 10             	add    $0x10,%esp
81002438:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100243c:	98                   	cwtl   
8100243d:	25 00 01 00 00       	and    $0x100,%eax
81002442:	85 c0                	test   %eax,%eax
81002444:	74 1b                	je     81002461 <_fseeko_r+0x5f>
81002446:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100244a:	98                   	cwtl   
8100244b:	83 e0 08             	and    $0x8,%eax
8100244e:	85 c0                	test   %eax,%eax
81002450:	74 0f                	je     81002461 <_fseeko_r+0x5f>
81002452:	83 ec 08             	sub    $0x8,%esp
81002455:	53                   	push   %ebx
81002456:	ff 75 08             	pushl  0x8(%ebp)
81002459:	e8 89 ee ff ff       	call   810012e7 <_fflush_r>
8100245e:	83 c4 10             	add    $0x10,%esp
81002461:	8b 43 28             	mov    0x28(%ebx),%eax
81002464:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002467:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100246b:	75 13                	jne    81002480 <_fseeko_r+0x7e>
8100246d:	8b 45 08             	mov    0x8(%ebp),%eax
81002470:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81002476:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100247b:	e9 2c 04 00 00       	jmp    810028ac <_fseeko_r+0x4aa>
81002480:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002484:	0f 84 bc 00 00 00    	je     81002546 <_fseeko_r+0x144>
8100248a:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
8100248e:	0f 8f bb 00 00 00    	jg     8100254f <_fseeko_r+0x14d>
81002494:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002498:	0f 84 a8 00 00 00    	je     81002546 <_fseeko_r+0x144>
8100249e:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810024a2:	0f 85 a7 00 00 00    	jne    8100254f <_fseeko_r+0x14d>
810024a8:	83 ec 08             	sub    $0x8,%esp
810024ab:	53                   	push   %ebx
810024ac:	ff 75 08             	pushl  0x8(%ebp)
810024af:	e8 33 ee ff ff       	call   810012e7 <_fflush_r>
810024b4:	83 c4 10             	add    $0x10,%esp
810024b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024bb:	98                   	cwtl   
810024bc:	25 00 10 00 00       	and    $0x1000,%eax
810024c1:	85 c0                	test   %eax,%eax
810024c3:	74 08                	je     810024cd <_fseeko_r+0xcb>
810024c5:	8b 43 50             	mov    0x50(%ebx),%eax
810024c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024cb:	eb 26                	jmp    810024f3 <_fseeko_r+0xf1>
810024cd:	8b 43 1c             	mov    0x1c(%ebx),%eax
810024d0:	6a 01                	push   $0x1
810024d2:	6a 00                	push   $0x0
810024d4:	50                   	push   %eax
810024d5:	ff 75 08             	pushl  0x8(%ebp)
810024d8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810024db:	ff d0                	call   *%eax
810024dd:	83 c4 10             	add    $0x10,%esp
810024e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024e3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810024e7:	75 0a                	jne    810024f3 <_fseeko_r+0xf1>
810024e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810024ee:	e9 b9 03 00 00       	jmp    810028ac <_fseeko_r+0x4aa>
810024f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024f7:	98                   	cwtl   
810024f8:	83 e0 04             	and    $0x4,%eax
810024fb:	85 c0                	test   %eax,%eax
810024fd:	74 15                	je     81002514 <_fseeko_r+0x112>
810024ff:	8b 43 04             	mov    0x4(%ebx),%eax
81002502:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002505:	8b 43 30             	mov    0x30(%ebx),%eax
81002508:	85 c0                	test   %eax,%eax
8100250a:	74 24                	je     81002530 <_fseeko_r+0x12e>
8100250c:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100250f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002512:	eb 1c                	jmp    81002530 <_fseeko_r+0x12e>
81002514:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002518:	98                   	cwtl   
81002519:	83 e0 08             	and    $0x8,%eax
8100251c:	85 c0                	test   %eax,%eax
8100251e:	74 10                	je     81002530 <_fseeko_r+0x12e>
81002520:	8b 03                	mov    (%ebx),%eax
81002522:	85 c0                	test   %eax,%eax
81002524:	74 0a                	je     81002530 <_fseeko_r+0x12e>
81002526:	8b 03                	mov    (%ebx),%eax
81002528:	8b 53 10             	mov    0x10(%ebx),%edx
8100252b:	29 d0                	sub    %edx,%eax
8100252d:	01 45 f0             	add    %eax,-0x10(%ebp)
81002530:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002533:	01 45 10             	add    %eax,0x10(%ebp)
81002536:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
8100253d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002544:	eb 1c                	jmp    81002562 <_fseeko_r+0x160>
81002546:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100254d:	eb 13                	jmp    81002562 <_fseeko_r+0x160>
8100254f:	8b 45 08             	mov    0x8(%ebp),%eax
81002552:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81002558:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100255d:	e9 4a 03 00 00       	jmp    810028ac <_fseeko_r+0x4aa>
81002562:	8b 43 10             	mov    0x10(%ebx),%eax
81002565:	85 c0                	test   %eax,%eax
81002567:	75 0f                	jne    81002578 <_fseeko_r+0x176>
81002569:	83 ec 08             	sub    $0x8,%esp
8100256c:	53                   	push   %ebx
8100256d:	ff 75 08             	pushl  0x8(%ebp)
81002570:	e8 dd 17 00 00       	call   81003d52 <__smakebuf_r>
81002575:	83 c4 10             	add    $0x10,%esp
81002578:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100257c:	98                   	cwtl   
8100257d:	25 1a 08 00 00       	and    $0x81a,%eax
81002582:	85 c0                	test   %eax,%eax
81002584:	0f 85 7d 02 00 00    	jne    81002807 <_fseeko_r+0x405>
8100258a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100258e:	98                   	cwtl   
8100258f:	25 00 04 00 00       	and    $0x400,%eax
81002594:	85 c0                	test   %eax,%eax
81002596:	75 5f                	jne    810025f7 <_fseeko_r+0x1f5>
81002598:	81 7d e0 bb 69 00 81 	cmpl   $0x810069bb,-0x20(%ebp)
8100259f:	75 34                	jne    810025d5 <_fseeko_r+0x1d3>
810025a1:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025a5:	66 85 c0             	test   %ax,%ax
810025a8:	78 2b                	js     810025d5 <_fseeko_r+0x1d3>
810025aa:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025ae:	98                   	cwtl   
810025af:	83 ec 04             	sub    $0x4,%esp
810025b2:	8d 55 98             	lea    -0x68(%ebp),%edx
810025b5:	52                   	push   %edx
810025b6:	50                   	push   %eax
810025b7:	ff 75 08             	pushl  0x8(%ebp)
810025ba:	e8 14 03 00 00       	call   810028d3 <_fstat_r>
810025bf:	83 c4 10             	add    $0x10,%esp
810025c2:	85 c0                	test   %eax,%eax
810025c4:	75 0f                	jne    810025d5 <_fseeko_r+0x1d3>
810025c6:	8b 45 9c             	mov    -0x64(%ebp),%eax
810025c9:	25 00 f0 00 00       	and    $0xf000,%eax
810025ce:	3d 00 80 00 00       	cmp    $0x8000,%eax
810025d3:	74 10                	je     810025e5 <_fseeko_r+0x1e3>
810025d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025d9:	80 cc 08             	or     $0x8,%ah
810025dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025e0:	e9 2f 02 00 00       	jmp    81002814 <_fseeko_r+0x412>
810025e5:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
810025ec:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025f0:	80 cc 04             	or     $0x4,%ah
810025f3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025f7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810025fb:	75 08                	jne    81002605 <_fseeko_r+0x203>
810025fd:	8b 45 10             	mov    0x10(%ebp),%eax
81002600:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002603:	eb 2b                	jmp    81002630 <_fseeko_r+0x22e>
81002605:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002609:	98                   	cwtl   
8100260a:	83 ec 04             	sub    $0x4,%esp
8100260d:	8d 55 98             	lea    -0x68(%ebp),%edx
81002610:	52                   	push   %edx
81002611:	50                   	push   %eax
81002612:	ff 75 08             	pushl  0x8(%ebp)
81002615:	e8 b9 02 00 00       	call   810028d3 <_fstat_r>
8100261a:	83 c4 10             	add    $0x10,%esp
8100261d:	85 c0                	test   %eax,%eax
8100261f:	0f 85 e5 01 00 00    	jne    8100280a <_fseeko_r+0x408>
81002625:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002628:	8b 45 10             	mov    0x10(%ebp),%eax
8100262b:	01 d0                	add    %edx,%eax
8100262d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002630:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002634:	75 49                	jne    8100267f <_fseeko_r+0x27d>
81002636:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100263a:	98                   	cwtl   
8100263b:	25 00 10 00 00       	and    $0x1000,%eax
81002640:	85 c0                	test   %eax,%eax
81002642:	74 08                	je     8100264c <_fseeko_r+0x24a>
81002644:	8b 43 50             	mov    0x50(%ebx),%eax
81002647:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100264a:	eb 20                	jmp    8100266c <_fseeko_r+0x26a>
8100264c:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100264f:	6a 01                	push   $0x1
81002651:	6a 00                	push   $0x0
81002653:	50                   	push   %eax
81002654:	ff 75 08             	pushl  0x8(%ebp)
81002657:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100265a:	ff d0                	call   *%eax
8100265c:	83 c4 10             	add    $0x10,%esp
8100265f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002662:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002666:	0f 84 a1 01 00 00    	je     8100280d <_fseeko_r+0x40b>
8100266c:	8b 43 04             	mov    0x4(%ebx),%eax
8100266f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002672:	8b 43 30             	mov    0x30(%ebx),%eax
81002675:	85 c0                	test   %eax,%eax
81002677:	74 06                	je     8100267f <_fseeko_r+0x27d>
81002679:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100267c:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100267f:	8b 43 30             	mov    0x30(%ebx),%eax
81002682:	85 c0                	test   %eax,%eax
81002684:	74 22                	je     810026a8 <_fseeko_r+0x2a6>
81002686:	8b 43 04             	mov    0x4(%ebx),%eax
81002689:	01 45 f0             	add    %eax,-0x10(%ebp)
8100268c:	8b 43 38             	mov    0x38(%ebx),%eax
8100268f:	8b 53 10             	mov    0x10(%ebx),%edx
81002692:	29 d0                	sub    %edx,%eax
81002694:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002697:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100269a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100269d:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026a0:	8b 43 3c             	mov    0x3c(%ebx),%eax
810026a3:	01 45 ec             	add    %eax,-0x14(%ebp)
810026a6:	eb 19                	jmp    810026c1 <_fseeko_r+0x2bf>
810026a8:	8b 03                	mov    (%ebx),%eax
810026aa:	8b 53 10             	mov    0x10(%ebx),%edx
810026ad:	29 d0                	sub    %edx,%eax
810026af:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026b5:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026b8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026bb:	8b 43 04             	mov    0x4(%ebx),%eax
810026be:	01 45 ec             	add    %eax,-0x14(%ebp)
810026c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026c4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810026c7:	7c 7c                	jl     81002745 <_fseeko_r+0x343>
810026c9:	8b 55 f0             	mov    -0x10(%ebp),%edx
810026cc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026cf:	01 c2                	add    %eax,%edx
810026d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026d4:	39 c2                	cmp    %eax,%edx
810026d6:	76 6d                	jbe    81002745 <_fseeko_r+0x343>
810026d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026db:	2b 45 f0             	sub    -0x10(%ebp),%eax
810026de:	89 c6                	mov    %eax,%esi
810026e0:	8b 43 10             	mov    0x10(%ebx),%eax
810026e3:	89 f2                	mov    %esi,%edx
810026e5:	01 d0                	add    %edx,%eax
810026e7:	89 03                	mov    %eax,(%ebx)
810026e9:	89 f2                	mov    %esi,%edx
810026eb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026ee:	29 d0                	sub    %edx,%eax
810026f0:	89 43 04             	mov    %eax,0x4(%ebx)
810026f3:	8b 43 30             	mov    0x30(%ebx),%eax
810026f6:	85 c0                	test   %eax,%eax
810026f8:	74 23                	je     8100271d <_fseeko_r+0x31b>
810026fa:	8b 53 30             	mov    0x30(%ebx),%edx
810026fd:	8d 43 40             	lea    0x40(%ebx),%eax
81002700:	39 c2                	cmp    %eax,%edx
81002702:	74 12                	je     81002716 <_fseeko_r+0x314>
81002704:	8b 43 30             	mov    0x30(%ebx),%eax
81002707:	83 ec 08             	sub    $0x8,%esp
8100270a:	50                   	push   %eax
8100270b:	ff 75 08             	pushl  0x8(%ebp)
8100270e:	e8 76 f7 ff ff       	call   81001e89 <_free_r>
81002713:	83 c4 10             	add    $0x10,%esp
81002716:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100271d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002721:	83 e0 df             	and    $0xffffffdf,%eax
81002724:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002728:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100272b:	83 ec 04             	sub    $0x4,%esp
8100272e:	6a 08                	push   $0x8
81002730:	6a 00                	push   $0x0
81002732:	50                   	push   %eax
81002733:	e8 45 24 00 00       	call   81004b7d <memset>
81002738:	83 c4 10             	add    $0x10,%esp
8100273b:	b8 00 00 00 00       	mov    $0x0,%eax
81002740:	e9 67 01 00 00       	jmp    810028ac <_fseeko_r+0x4aa>
81002745:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002748:	f7 d8                	neg    %eax
8100274a:	23 45 f4             	and    -0xc(%ebp),%eax
8100274d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002750:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002753:	6a 00                	push   $0x0
81002755:	ff 75 f0             	pushl  -0x10(%ebp)
81002758:	50                   	push   %eax
81002759:	ff 75 08             	pushl  0x8(%ebp)
8100275c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100275f:	ff d0                	call   *%eax
81002761:	83 c4 10             	add    $0x10,%esp
81002764:	83 f8 ff             	cmp    $0xffffffff,%eax
81002767:	0f 84 a3 00 00 00    	je     81002810 <_fseeko_r+0x40e>
8100276d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002774:	8b 43 10             	mov    0x10(%ebx),%eax
81002777:	89 03                	mov    %eax,(%ebx)
81002779:	8b 43 30             	mov    0x30(%ebx),%eax
8100277c:	85 c0                	test   %eax,%eax
8100277e:	74 23                	je     810027a3 <_fseeko_r+0x3a1>
81002780:	8b 53 30             	mov    0x30(%ebx),%edx
81002783:	8d 43 40             	lea    0x40(%ebx),%eax
81002786:	39 c2                	cmp    %eax,%edx
81002788:	74 12                	je     8100279c <_fseeko_r+0x39a>
8100278a:	8b 43 30             	mov    0x30(%ebx),%eax
8100278d:	83 ec 08             	sub    $0x8,%esp
81002790:	50                   	push   %eax
81002791:	ff 75 08             	pushl  0x8(%ebp)
81002794:	e8 f0 f6 ff ff       	call   81001e89 <_free_r>
81002799:	83 c4 10             	add    $0x10,%esp
8100279c:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810027a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027a7:	83 e0 df             	and    $0xffffffdf,%eax
810027aa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027b1:	2b 45 f0             	sub    -0x10(%ebp),%eax
810027b4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027b7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810027bb:	74 2d                	je     810027ea <_fseeko_r+0x3e8>
810027bd:	83 ec 08             	sub    $0x8,%esp
810027c0:	53                   	push   %ebx
810027c1:	ff 75 08             	pushl  0x8(%ebp)
810027c4:	e8 cf 3b 00 00       	call   81006398 <__srefill_r>
810027c9:	83 c4 10             	add    $0x10,%esp
810027cc:	85 c0                	test   %eax,%eax
810027ce:	75 43                	jne    81002813 <_fseeko_r+0x411>
810027d0:	8b 43 04             	mov    0x4(%ebx),%eax
810027d3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810027d6:	77 3b                	ja     81002813 <_fseeko_r+0x411>
810027d8:	8b 13                	mov    (%ebx),%edx
810027da:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027dd:	01 d0                	add    %edx,%eax
810027df:	89 03                	mov    %eax,(%ebx)
810027e1:	8b 43 04             	mov    0x4(%ebx),%eax
810027e4:	2b 45 ec             	sub    -0x14(%ebp),%eax
810027e7:	89 43 04             	mov    %eax,0x4(%ebx)
810027ea:	8d 43 5c             	lea    0x5c(%ebx),%eax
810027ed:	83 ec 04             	sub    $0x4,%esp
810027f0:	6a 08                	push   $0x8
810027f2:	6a 00                	push   $0x0
810027f4:	50                   	push   %eax
810027f5:	e8 83 23 00 00       	call   81004b7d <memset>
810027fa:	83 c4 10             	add    $0x10,%esp
810027fd:	b8 00 00 00 00       	mov    $0x0,%eax
81002802:	e9 a5 00 00 00       	jmp    810028ac <_fseeko_r+0x4aa>
81002807:	90                   	nop
81002808:	eb 0a                	jmp    81002814 <_fseeko_r+0x412>
8100280a:	90                   	nop
8100280b:	eb 07                	jmp    81002814 <_fseeko_r+0x412>
8100280d:	90                   	nop
8100280e:	eb 04                	jmp    81002814 <_fseeko_r+0x412>
81002810:	90                   	nop
81002811:	eb 01                	jmp    81002814 <_fseeko_r+0x412>
81002813:	90                   	nop
81002814:	83 ec 08             	sub    $0x8,%esp
81002817:	53                   	push   %ebx
81002818:	ff 75 08             	pushl  0x8(%ebp)
8100281b:	e8 c7 ea ff ff       	call   810012e7 <_fflush_r>
81002820:	83 c4 10             	add    $0x10,%esp
81002823:	85 c0                	test   %eax,%eax
81002825:	75 1a                	jne    81002841 <_fseeko_r+0x43f>
81002827:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100282a:	ff 75 14             	pushl  0x14(%ebp)
8100282d:	ff 75 10             	pushl  0x10(%ebp)
81002830:	50                   	push   %eax
81002831:	ff 75 08             	pushl  0x8(%ebp)
81002834:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002837:	ff d0                	call   *%eax
81002839:	83 c4 10             	add    $0x10,%esp
8100283c:	83 f8 ff             	cmp    $0xffffffff,%eax
8100283f:	75 07                	jne    81002848 <_fseeko_r+0x446>
81002841:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002846:	eb 64                	jmp    810028ac <_fseeko_r+0x4aa>
81002848:	8b 43 30             	mov    0x30(%ebx),%eax
8100284b:	85 c0                	test   %eax,%eax
8100284d:	74 23                	je     81002872 <_fseeko_r+0x470>
8100284f:	8b 53 30             	mov    0x30(%ebx),%edx
81002852:	8d 43 40             	lea    0x40(%ebx),%eax
81002855:	39 c2                	cmp    %eax,%edx
81002857:	74 12                	je     8100286b <_fseeko_r+0x469>
81002859:	8b 43 30             	mov    0x30(%ebx),%eax
8100285c:	83 ec 08             	sub    $0x8,%esp
8100285f:	50                   	push   %eax
81002860:	ff 75 08             	pushl  0x8(%ebp)
81002863:	e8 21 f6 ff ff       	call   81001e89 <_free_r>
81002868:	83 c4 10             	add    $0x10,%esp
8100286b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002872:	8b 43 10             	mov    0x10(%ebx),%eax
81002875:	89 03                	mov    %eax,(%ebx)
81002877:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100287e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002882:	83 e0 df             	and    $0xffffffdf,%eax
81002885:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002889:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100288d:	80 e4 f7             	and    $0xf7,%ah
81002890:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002894:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002897:	83 ec 04             	sub    $0x4,%esp
8100289a:	6a 08                	push   $0x8
8100289c:	6a 00                	push   $0x0
8100289e:	50                   	push   %eax
8100289f:	e8 d9 22 00 00       	call   81004b7d <memset>
810028a4:	83 c4 10             	add    $0x10,%esp
810028a7:	b8 00 00 00 00       	mov    $0x0,%eax
810028ac:	8d 65 f8             	lea    -0x8(%ebp),%esp
810028af:	5b                   	pop    %ebx
810028b0:	5e                   	pop    %esi
810028b1:	5d                   	pop    %ebp
810028b2:	c3                   	ret    

810028b3 <fseeko>:
810028b3:	55                   	push   %ebp
810028b4:	89 e5                	mov    %esp,%ebp
810028b6:	83 ec 08             	sub    $0x8,%esp
810028b9:	8b 55 08             	mov    0x8(%ebp),%edx
810028bc:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810028c1:	ff 75 10             	pushl  0x10(%ebp)
810028c4:	ff 75 0c             	pushl  0xc(%ebp)
810028c7:	52                   	push   %edx
810028c8:	50                   	push   %eax
810028c9:	e8 34 fb ff ff       	call   81002402 <_fseeko_r>
810028ce:	83 c4 10             	add    $0x10,%esp
810028d1:	c9                   	leave  
810028d2:	c3                   	ret    

810028d3 <_fstat_r>:
810028d3:	55                   	push   %ebp
810028d4:	89 e5                	mov    %esp,%ebp
810028d6:	83 ec 18             	sub    $0x18,%esp
810028d9:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
810028e0:	00 00 00 
810028e3:	83 ec 08             	sub    $0x8,%esp
810028e6:	ff 75 10             	pushl  0x10(%ebp)
810028e9:	ff 75 0c             	pushl  0xc(%ebp)
810028ec:	e8 35 e4 ff ff       	call   81000d26 <fstat>
810028f1:	83 c4 10             	add    $0x10,%esp
810028f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028f7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028fb:	75 14                	jne    81002911 <_fstat_r+0x3e>
810028fd:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
81002902:	85 c0                	test   %eax,%eax
81002904:	74 0b                	je     81002911 <_fstat_r+0x3e>
81002906:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
8100290c:	8b 45 08             	mov    0x8(%ebp),%eax
8100290f:	89 10                	mov    %edx,(%eax)
81002911:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002914:	c9                   	leave  
81002915:	c3                   	ret    

81002916 <__sfvwrite_r>:
81002916:	55                   	push   %ebp
81002917:	89 e5                	mov    %esp,%ebp
81002919:	57                   	push   %edi
8100291a:	56                   	push   %esi
8100291b:	53                   	push   %ebx
8100291c:	83 ec 3c             	sub    $0x3c,%esp
8100291f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002922:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81002929:	8b 45 10             	mov    0x10(%ebp),%eax
8100292c:	8b 78 08             	mov    0x8(%eax),%edi
8100292f:	85 ff                	test   %edi,%edi
81002931:	75 0a                	jne    8100293d <__sfvwrite_r+0x27>
81002933:	b8 00 00 00 00       	mov    $0x0,%eax
81002938:	e9 6f 04 00 00       	jmp    81002dac <__sfvwrite_r+0x496>
8100293d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002941:	98                   	cwtl   
81002942:	83 e0 08             	and    $0x8,%eax
81002945:	85 c0                	test   %eax,%eax
81002947:	74 07                	je     81002950 <__sfvwrite_r+0x3a>
81002949:	8b 43 10             	mov    0x10(%ebx),%eax
8100294c:	85 c0                	test   %eax,%eax
8100294e:	75 1d                	jne    8100296d <__sfvwrite_r+0x57>
81002950:	83 ec 08             	sub    $0x8,%esp
81002953:	53                   	push   %ebx
81002954:	ff 75 08             	pushl  0x8(%ebp)
81002957:	e8 34 48 00 00       	call   81007190 <__swsetup_r>
8100295c:	83 c4 10             	add    $0x10,%esp
8100295f:	85 c0                	test   %eax,%eax
81002961:	74 0a                	je     8100296d <__sfvwrite_r+0x57>
81002963:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002968:	e9 3f 04 00 00       	jmp    81002dac <__sfvwrite_r+0x496>
8100296d:	8b 45 10             	mov    0x10(%ebp),%eax
81002970:	8b 00                	mov    (%eax),%eax
81002972:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002975:	bf 00 00 00 00       	mov    $0x0,%edi
8100297a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100297e:	98                   	cwtl   
8100297f:	83 e0 02             	and    $0x2,%eax
81002982:	85 c0                	test   %eax,%eax
81002984:	74 68                	je     810029ee <__sfvwrite_r+0xd8>
81002986:	eb 11                	jmp    81002999 <__sfvwrite_r+0x83>
81002988:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100298b:	8b 08                	mov    (%eax),%ecx
8100298d:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002990:	8b 78 04             	mov    0x4(%eax),%edi
81002993:	83 c0 08             	add    $0x8,%eax
81002996:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002999:	85 ff                	test   %edi,%edi
8100299b:	74 eb                	je     81002988 <__sfvwrite_r+0x72>
8100299d:	8b 4b 24             	mov    0x24(%ebx),%ecx
810029a0:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810029a5:	39 c7                	cmp    %eax,%edi
810029a7:	0f 46 c7             	cmovbe %edi,%eax
810029aa:	89 c2                	mov    %eax,%edx
810029ac:	8b 43 1c             	mov    0x1c(%ebx),%eax
810029af:	52                   	push   %edx
810029b0:	ff 75 c4             	pushl  -0x3c(%ebp)
810029b3:	50                   	push   %eax
810029b4:	ff 75 08             	pushl  0x8(%ebp)
810029b7:	ff d1                	call   *%ecx
810029b9:	83 c4 10             	add    $0x10,%esp
810029bc:	89 c6                	mov    %eax,%esi
810029be:	85 f6                	test   %esi,%esi
810029c0:	0f 8e cf 03 00 00    	jle    81002d95 <__sfvwrite_r+0x47f>
810029c6:	89 f0                	mov    %esi,%eax
810029c8:	01 45 c4             	add    %eax,-0x3c(%ebp)
810029cb:	89 f0                	mov    %esi,%eax
810029cd:	29 c7                	sub    %eax,%edi
810029cf:	8b 45 10             	mov    0x10(%ebp),%eax
810029d2:	8b 40 08             	mov    0x8(%eax),%eax
810029d5:	89 f2                	mov    %esi,%edx
810029d7:	29 d0                	sub    %edx,%eax
810029d9:	8b 4d 10             	mov    0x10(%ebp),%ecx
810029dc:	89 41 08             	mov    %eax,0x8(%ecx)
810029df:	8b 45 10             	mov    0x10(%ebp),%eax
810029e2:	8b 40 08             	mov    0x8(%eax),%eax
810029e5:	85 c0                	test   %eax,%eax
810029e7:	75 b0                	jne    81002999 <__sfvwrite_r+0x83>
810029e9:	e9 a0 03 00 00       	jmp    81002d8e <__sfvwrite_r+0x478>
810029ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029f2:	98                   	cwtl   
810029f3:	83 e0 01             	and    $0x1,%eax
810029f6:	85 c0                	test   %eax,%eax
810029f8:	0f 85 44 02 00 00    	jne    81002c42 <__sfvwrite_r+0x32c>
810029fe:	eb 11                	jmp    81002a11 <__sfvwrite_r+0xfb>
81002a00:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002a03:	8b 08                	mov    (%eax),%ecx
81002a05:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002a08:	8b 78 04             	mov    0x4(%eax),%edi
81002a0b:	83 c0 08             	add    $0x8,%eax
81002a0e:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002a11:	85 ff                	test   %edi,%edi
81002a13:	74 eb                	je     81002a00 <__sfvwrite_r+0xea>
81002a15:	8b 73 08             	mov    0x8(%ebx),%esi
81002a18:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a1c:	98                   	cwtl   
81002a1d:	25 00 02 00 00       	and    $0x200,%eax
81002a22:	85 c0                	test   %eax,%eax
81002a24:	0f 84 4f 01 00 00    	je     81002b79 <__sfvwrite_r+0x263>
81002a2a:	89 f0                	mov    %esi,%eax
81002a2c:	39 c7                	cmp    %eax,%edi
81002a2e:	0f 82 12 01 00 00    	jb     81002b46 <__sfvwrite_r+0x230>
81002a34:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a38:	98                   	cwtl   
81002a39:	25 80 04 00 00       	and    $0x480,%eax
81002a3e:	85 c0                	test   %eax,%eax
81002a40:	0f 84 00 01 00 00    	je     81002b46 <__sfvwrite_r+0x230>
81002a46:	8b 03                	mov    (%ebx),%eax
81002a48:	8b 53 10             	mov    0x10(%ebx),%edx
81002a4b:	29 d0                	sub    %edx,%eax
81002a4d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002a50:	8b 53 14             	mov    0x14(%ebx),%edx
81002a53:	89 d0                	mov    %edx,%eax
81002a55:	01 c0                	add    %eax,%eax
81002a57:	01 d0                	add    %edx,%eax
81002a59:	89 c2                	mov    %eax,%edx
81002a5b:	c1 ea 1f             	shr    $0x1f,%edx
81002a5e:	01 d0                	add    %edx,%eax
81002a60:	d1 f8                	sar    %eax
81002a62:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a65:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a68:	01 f8                	add    %edi,%eax
81002a6a:	8d 50 01             	lea    0x1(%eax),%edx
81002a6d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a70:	39 c2                	cmp    %eax,%edx
81002a72:	76 0b                	jbe    81002a7f <__sfvwrite_r+0x169>
81002a74:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a77:	01 f8                	add    %edi,%eax
81002a79:	83 c0 01             	add    $0x1,%eax
81002a7c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a7f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a83:	98                   	cwtl   
81002a84:	25 00 04 00 00       	and    $0x400,%eax
81002a89:	85 c0                	test   %eax,%eax
81002a8b:	74 4f                	je     81002adc <__sfvwrite_r+0x1c6>
81002a8d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a90:	83 ec 08             	sub    $0x8,%esp
81002a93:	50                   	push   %eax
81002a94:	ff 75 08             	pushl  0x8(%ebp)
81002a97:	e8 02 17 00 00       	call   8100419e <_malloc_r>
81002a9c:	83 c4 10             	add    $0x10,%esp
81002a9f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002aa2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002aa6:	75 0e                	jne    81002ab6 <__sfvwrite_r+0x1a0>
81002aa8:	8b 45 08             	mov    0x8(%ebp),%eax
81002aab:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002ab1:	e9 e6 02 00 00       	jmp    81002d9c <__sfvwrite_r+0x486>
81002ab6:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002ab9:	8b 43 10             	mov    0x10(%ebx),%eax
81002abc:	83 ec 04             	sub    $0x4,%esp
81002abf:	52                   	push   %edx
81002ac0:	50                   	push   %eax
81002ac1:	ff 75 dc             	pushl  -0x24(%ebp)
81002ac4:	e8 df 1f 00 00       	call   81004aa8 <memcpy>
81002ac9:	83 c4 10             	add    $0x10,%esp
81002acc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ad0:	66 25 7f fb          	and    $0xfb7f,%ax
81002ad4:	0c 80                	or     $0x80,%al
81002ad6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ada:	eb 49                	jmp    81002b25 <__sfvwrite_r+0x20f>
81002adc:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002adf:	8b 43 10             	mov    0x10(%ebx),%eax
81002ae2:	83 ec 04             	sub    $0x4,%esp
81002ae5:	52                   	push   %edx
81002ae6:	50                   	push   %eax
81002ae7:	ff 75 08             	pushl  0x8(%ebp)
81002aea:	e8 0b 2e 00 00       	call   810058fa <_realloc_r>
81002aef:	83 c4 10             	add    $0x10,%esp
81002af2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002af5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002af9:	75 2a                	jne    81002b25 <__sfvwrite_r+0x20f>
81002afb:	8b 43 10             	mov    0x10(%ebx),%eax
81002afe:	83 ec 08             	sub    $0x8,%esp
81002b01:	50                   	push   %eax
81002b02:	ff 75 08             	pushl  0x8(%ebp)
81002b05:	e8 7f f3 ff ff       	call   81001e89 <_free_r>
81002b0a:	83 c4 10             	add    $0x10,%esp
81002b0d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b11:	24 7f                	and    $0x7f,%al
81002b13:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b17:	8b 45 08             	mov    0x8(%ebp),%eax
81002b1a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002b20:	e9 77 02 00 00       	jmp    81002d9c <__sfvwrite_r+0x486>
81002b25:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b28:	89 43 10             	mov    %eax,0x10(%ebx)
81002b2b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002b2e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b31:	01 d0                	add    %edx,%eax
81002b33:	89 03                	mov    %eax,(%ebx)
81002b35:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b38:	89 43 14             	mov    %eax,0x14(%ebx)
81002b3b:	89 fe                	mov    %edi,%esi
81002b3d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b40:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b43:	89 43 08             	mov    %eax,0x8(%ebx)
81002b46:	89 f0                	mov    %esi,%eax
81002b48:	39 c7                	cmp    %eax,%edi
81002b4a:	73 02                	jae    81002b4e <__sfvwrite_r+0x238>
81002b4c:	89 fe                	mov    %edi,%esi
81002b4e:	89 f2                	mov    %esi,%edx
81002b50:	8b 03                	mov    (%ebx),%eax
81002b52:	83 ec 04             	sub    $0x4,%esp
81002b55:	52                   	push   %edx
81002b56:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b59:	50                   	push   %eax
81002b5a:	e8 91 1f 00 00       	call   81004af0 <memmove>
81002b5f:	83 c4 10             	add    $0x10,%esp
81002b62:	8b 43 08             	mov    0x8(%ebx),%eax
81002b65:	29 f0                	sub    %esi,%eax
81002b67:	89 43 08             	mov    %eax,0x8(%ebx)
81002b6a:	8b 03                	mov    (%ebx),%eax
81002b6c:	89 f2                	mov    %esi,%edx
81002b6e:	01 d0                	add    %edx,%eax
81002b70:	89 03                	mov    %eax,(%ebx)
81002b72:	89 fe                	mov    %edi,%esi
81002b74:	e9 9d 00 00 00       	jmp    81002c16 <__sfvwrite_r+0x300>
81002b79:	8b 13                	mov    (%ebx),%edx
81002b7b:	8b 43 10             	mov    0x10(%ebx),%eax
81002b7e:	39 c2                	cmp    %eax,%edx
81002b80:	77 07                	ja     81002b89 <__sfvwrite_r+0x273>
81002b82:	8b 43 14             	mov    0x14(%ebx),%eax
81002b85:	39 c7                	cmp    %eax,%edi
81002b87:	73 4c                	jae    81002bd5 <__sfvwrite_r+0x2bf>
81002b89:	89 f0                	mov    %esi,%eax
81002b8b:	39 c7                	cmp    %eax,%edi
81002b8d:	0f 46 c7             	cmovbe %edi,%eax
81002b90:	89 c6                	mov    %eax,%esi
81002b92:	89 f2                	mov    %esi,%edx
81002b94:	8b 03                	mov    (%ebx),%eax
81002b96:	83 ec 04             	sub    $0x4,%esp
81002b99:	52                   	push   %edx
81002b9a:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b9d:	50                   	push   %eax
81002b9e:	e8 4d 1f 00 00       	call   81004af0 <memmove>
81002ba3:	83 c4 10             	add    $0x10,%esp
81002ba6:	8b 43 08             	mov    0x8(%ebx),%eax
81002ba9:	29 f0                	sub    %esi,%eax
81002bab:	89 43 08             	mov    %eax,0x8(%ebx)
81002bae:	8b 03                	mov    (%ebx),%eax
81002bb0:	89 f2                	mov    %esi,%edx
81002bb2:	01 d0                	add    %edx,%eax
81002bb4:	89 03                	mov    %eax,(%ebx)
81002bb6:	8b 43 08             	mov    0x8(%ebx),%eax
81002bb9:	85 c0                	test   %eax,%eax
81002bbb:	75 58                	jne    81002c15 <__sfvwrite_r+0x2ff>
81002bbd:	83 ec 08             	sub    $0x8,%esp
81002bc0:	53                   	push   %ebx
81002bc1:	ff 75 08             	pushl  0x8(%ebp)
81002bc4:	e8 1e e7 ff ff       	call   810012e7 <_fflush_r>
81002bc9:	83 c4 10             	add    $0x10,%esp
81002bcc:	85 c0                	test   %eax,%eax
81002bce:	74 45                	je     81002c15 <__sfvwrite_r+0x2ff>
81002bd0:	e9 c7 01 00 00       	jmp    81002d9c <__sfvwrite_r+0x486>
81002bd5:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002bdb:	77 04                	ja     81002be1 <__sfvwrite_r+0x2cb>
81002bdd:	89 f8                	mov    %edi,%eax
81002bdf:	eb 05                	jmp    81002be6 <__sfvwrite_r+0x2d0>
81002be1:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002be6:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002be9:	99                   	cltd   
81002bea:	f7 f9                	idiv   %ecx
81002bec:	89 c2                	mov    %eax,%edx
81002bee:	8b 43 14             	mov    0x14(%ebx),%eax
81002bf1:	89 d6                	mov    %edx,%esi
81002bf3:	0f af f0             	imul   %eax,%esi
81002bf6:	8b 53 24             	mov    0x24(%ebx),%edx
81002bf9:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002bfc:	56                   	push   %esi
81002bfd:	ff 75 c4             	pushl  -0x3c(%ebp)
81002c00:	50                   	push   %eax
81002c01:	ff 75 08             	pushl  0x8(%ebp)
81002c04:	ff d2                	call   *%edx
81002c06:	83 c4 10             	add    $0x10,%esp
81002c09:	89 c6                	mov    %eax,%esi
81002c0b:	85 f6                	test   %esi,%esi
81002c0d:	0f 8e 85 01 00 00    	jle    81002d98 <__sfvwrite_r+0x482>
81002c13:	eb 01                	jmp    81002c16 <__sfvwrite_r+0x300>
81002c15:	90                   	nop
81002c16:	89 f0                	mov    %esi,%eax
81002c18:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002c1b:	89 f0                	mov    %esi,%eax
81002c1d:	29 c7                	sub    %eax,%edi
81002c1f:	8b 45 10             	mov    0x10(%ebp),%eax
81002c22:	8b 40 08             	mov    0x8(%eax),%eax
81002c25:	89 f2                	mov    %esi,%edx
81002c27:	29 d0                	sub    %edx,%eax
81002c29:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002c2c:	89 41 08             	mov    %eax,0x8(%ecx)
81002c2f:	8b 45 10             	mov    0x10(%ebp),%eax
81002c32:	8b 40 08             	mov    0x8(%eax),%eax
81002c35:	85 c0                	test   %eax,%eax
81002c37:	0f 85 d4 fd ff ff    	jne    81002a11 <__sfvwrite_r+0xfb>
81002c3d:	e9 4c 01 00 00       	jmp    81002d8e <__sfvwrite_r+0x478>
81002c42:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c49:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002c50:	eb 18                	jmp    81002c6a <__sfvwrite_r+0x354>
81002c52:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c59:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002c5c:	8b 08                	mov    (%eax),%ecx
81002c5e:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002c61:	8b 78 04             	mov    0x4(%eax),%edi
81002c64:	83 c0 08             	add    $0x8,%eax
81002c67:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002c6a:	85 ff                	test   %edi,%edi
81002c6c:	74 e4                	je     81002c52 <__sfvwrite_r+0x33c>
81002c6e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c72:	75 32                	jne    81002ca6 <__sfvwrite_r+0x390>
81002c74:	83 ec 04             	sub    $0x4,%esp
81002c77:	57                   	push   %edi
81002c78:	6a 0a                	push   $0xa
81002c7a:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002c7d:	56                   	push   %esi
81002c7e:	e8 3d 1d 00 00       	call   810049c0 <memchr>
81002c83:	83 c4 10             	add    $0x10,%esp
81002c86:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c89:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002c8d:	74 0a                	je     81002c99 <__sfvwrite_r+0x383>
81002c8f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c92:	83 c0 01             	add    $0x1,%eax
81002c95:	29 f0                	sub    %esi,%eax
81002c97:	eb 03                	jmp    81002c9c <__sfvwrite_r+0x386>
81002c99:	8d 47 01             	lea    0x1(%edi),%eax
81002c9c:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002c9f:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002ca6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ca9:	39 c7                	cmp    %eax,%edi
81002cab:	0f 46 c7             	cmovbe %edi,%eax
81002cae:	89 c1                	mov    %eax,%ecx
81002cb0:	8b 53 08             	mov    0x8(%ebx),%edx
81002cb3:	8b 43 14             	mov    0x14(%ebx),%eax
81002cb6:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002cb9:	8b 13                	mov    (%ebx),%edx
81002cbb:	8b 43 10             	mov    0x10(%ebx),%eax
81002cbe:	39 c2                	cmp    %eax,%edx
81002cc0:	76 38                	jbe    81002cfa <__sfvwrite_r+0x3e4>
81002cc2:	39 f1                	cmp    %esi,%ecx
81002cc4:	7e 34                	jle    81002cfa <__sfvwrite_r+0x3e4>
81002cc6:	89 f2                	mov    %esi,%edx
81002cc8:	8b 03                	mov    (%ebx),%eax
81002cca:	83 ec 04             	sub    $0x4,%esp
81002ccd:	52                   	push   %edx
81002cce:	ff 75 c4             	pushl  -0x3c(%ebp)
81002cd1:	50                   	push   %eax
81002cd2:	e8 19 1e 00 00       	call   81004af0 <memmove>
81002cd7:	83 c4 10             	add    $0x10,%esp
81002cda:	8b 03                	mov    (%ebx),%eax
81002cdc:	89 f2                	mov    %esi,%edx
81002cde:	01 d0                	add    %edx,%eax
81002ce0:	89 03                	mov    %eax,(%ebx)
81002ce2:	83 ec 08             	sub    $0x8,%esp
81002ce5:	53                   	push   %ebx
81002ce6:	ff 75 08             	pushl  0x8(%ebp)
81002ce9:	e8 f9 e5 ff ff       	call   810012e7 <_fflush_r>
81002cee:	83 c4 10             	add    $0x10,%esp
81002cf1:	85 c0                	test   %eax,%eax
81002cf3:	74 4f                	je     81002d44 <__sfvwrite_r+0x42e>
81002cf5:	e9 a2 00 00 00       	jmp    81002d9c <__sfvwrite_r+0x486>
81002cfa:	8b 73 14             	mov    0x14(%ebx),%esi
81002cfd:	89 c8                	mov    %ecx,%eax
81002cff:	39 c6                	cmp    %eax,%esi
81002d01:	7f 1b                	jg     81002d1e <__sfvwrite_r+0x408>
81002d03:	8b 53 24             	mov    0x24(%ebx),%edx
81002d06:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002d09:	56                   	push   %esi
81002d0a:	ff 75 c4             	pushl  -0x3c(%ebp)
81002d0d:	50                   	push   %eax
81002d0e:	ff 75 08             	pushl  0x8(%ebp)
81002d11:	ff d2                	call   *%edx
81002d13:	83 c4 10             	add    $0x10,%esp
81002d16:	89 c6                	mov    %eax,%esi
81002d18:	85 f6                	test   %esi,%esi
81002d1a:	7f 28                	jg     81002d44 <__sfvwrite_r+0x42e>
81002d1c:	eb 7e                	jmp    81002d9c <__sfvwrite_r+0x486>
81002d1e:	89 ce                	mov    %ecx,%esi
81002d20:	89 f2                	mov    %esi,%edx
81002d22:	8b 03                	mov    (%ebx),%eax
81002d24:	83 ec 04             	sub    $0x4,%esp
81002d27:	52                   	push   %edx
81002d28:	ff 75 c4             	pushl  -0x3c(%ebp)
81002d2b:	50                   	push   %eax
81002d2c:	e8 bf 1d 00 00       	call   81004af0 <memmove>
81002d31:	83 c4 10             	add    $0x10,%esp
81002d34:	8b 43 08             	mov    0x8(%ebx),%eax
81002d37:	29 f0                	sub    %esi,%eax
81002d39:	89 43 08             	mov    %eax,0x8(%ebx)
81002d3c:	8b 03                	mov    (%ebx),%eax
81002d3e:	89 f2                	mov    %esi,%edx
81002d40:	01 d0                	add    %edx,%eax
81002d42:	89 03                	mov    %eax,(%ebx)
81002d44:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002d47:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002d4b:	75 1a                	jne    81002d67 <__sfvwrite_r+0x451>
81002d4d:	83 ec 08             	sub    $0x8,%esp
81002d50:	53                   	push   %ebx
81002d51:	ff 75 08             	pushl  0x8(%ebp)
81002d54:	e8 8e e5 ff ff       	call   810012e7 <_fflush_r>
81002d59:	83 c4 10             	add    $0x10,%esp
81002d5c:	85 c0                	test   %eax,%eax
81002d5e:	75 3b                	jne    81002d9b <__sfvwrite_r+0x485>
81002d60:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d67:	89 f0                	mov    %esi,%eax
81002d69:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002d6c:	89 f0                	mov    %esi,%eax
81002d6e:	29 c7                	sub    %eax,%edi
81002d70:	8b 45 10             	mov    0x10(%ebp),%eax
81002d73:	8b 40 08             	mov    0x8(%eax),%eax
81002d76:	89 f2                	mov    %esi,%edx
81002d78:	29 d0                	sub    %edx,%eax
81002d7a:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002d7d:	89 41 08             	mov    %eax,0x8(%ecx)
81002d80:	8b 45 10             	mov    0x10(%ebp),%eax
81002d83:	8b 40 08             	mov    0x8(%eax),%eax
81002d86:	85 c0                	test   %eax,%eax
81002d88:	0f 85 dc fe ff ff    	jne    81002c6a <__sfvwrite_r+0x354>
81002d8e:	b8 00 00 00 00       	mov    $0x0,%eax
81002d93:	eb 17                	jmp    81002dac <__sfvwrite_r+0x496>
81002d95:	90                   	nop
81002d96:	eb 04                	jmp    81002d9c <__sfvwrite_r+0x486>
81002d98:	90                   	nop
81002d99:	eb 01                	jmp    81002d9c <__sfvwrite_r+0x486>
81002d9b:	90                   	nop
81002d9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002da0:	83 c8 40             	or     $0x40,%eax
81002da3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002da7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002dac:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002daf:	5b                   	pop    %ebx
81002db0:	5e                   	pop    %esi
81002db1:	5f                   	pop    %edi
81002db2:	5d                   	pop    %ebp
81002db3:	c3                   	ret    

81002db4 <_fwalk>:
81002db4:	55                   	push   %ebp
81002db5:	89 e5                	mov    %esp,%ebp
81002db7:	57                   	push   %edi
81002db8:	56                   	push   %esi
81002db9:	53                   	push   %ebx
81002dba:	83 ec 1c             	sub    $0x1c,%esp
81002dbd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002dc4:	8b 45 08             	mov    0x8(%ebp),%eax
81002dc7:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002dcd:	eb 3e                	jmp    81002e0d <_fwalk+0x59>
81002dcf:	8b 5e 08             	mov    0x8(%esi),%ebx
81002dd2:	8b 7e 04             	mov    0x4(%esi),%edi
81002dd5:	eb 2d                	jmp    81002e04 <_fwalk+0x50>
81002dd7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ddb:	66 85 c0             	test   %ax,%ax
81002dde:	74 21                	je     81002e01 <_fwalk+0x4d>
81002de0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002de4:	66 83 f8 01          	cmp    $0x1,%ax
81002de8:	74 17                	je     81002e01 <_fwalk+0x4d>
81002dea:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002dee:	66 83 f8 ff          	cmp    $0xffff,%ax
81002df2:	74 0d                	je     81002e01 <_fwalk+0x4d>
81002df4:	83 ec 0c             	sub    $0xc,%esp
81002df7:	53                   	push   %ebx
81002df8:	ff 55 0c             	call   *0xc(%ebp)
81002dfb:	83 c4 10             	add    $0x10,%esp
81002dfe:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e01:	83 c3 68             	add    $0x68,%ebx
81002e04:	83 ef 01             	sub    $0x1,%edi
81002e07:	85 ff                	test   %edi,%edi
81002e09:	79 cc                	jns    81002dd7 <_fwalk+0x23>
81002e0b:	8b 36                	mov    (%esi),%esi
81002e0d:	85 f6                	test   %esi,%esi
81002e0f:	75 be                	jne    81002dcf <_fwalk+0x1b>
81002e11:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e14:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e17:	5b                   	pop    %ebx
81002e18:	5e                   	pop    %esi
81002e19:	5f                   	pop    %edi
81002e1a:	5d                   	pop    %ebp
81002e1b:	c3                   	ret    

81002e1c <_fwalk_reent>:
81002e1c:	55                   	push   %ebp
81002e1d:	89 e5                	mov    %esp,%ebp
81002e1f:	57                   	push   %edi
81002e20:	56                   	push   %esi
81002e21:	53                   	push   %ebx
81002e22:	83 ec 1c             	sub    $0x1c,%esp
81002e25:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002e2c:	8b 45 08             	mov    0x8(%ebp),%eax
81002e2f:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002e35:	eb 41                	jmp    81002e78 <_fwalk_reent+0x5c>
81002e37:	8b 5e 08             	mov    0x8(%esi),%ebx
81002e3a:	8b 7e 04             	mov    0x4(%esi),%edi
81002e3d:	eb 30                	jmp    81002e6f <_fwalk_reent+0x53>
81002e3f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e43:	66 85 c0             	test   %ax,%ax
81002e46:	74 24                	je     81002e6c <_fwalk_reent+0x50>
81002e48:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e4c:	66 83 f8 01          	cmp    $0x1,%ax
81002e50:	74 1a                	je     81002e6c <_fwalk_reent+0x50>
81002e52:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002e56:	66 83 f8 ff          	cmp    $0xffff,%ax
81002e5a:	74 10                	je     81002e6c <_fwalk_reent+0x50>
81002e5c:	83 ec 08             	sub    $0x8,%esp
81002e5f:	53                   	push   %ebx
81002e60:	ff 75 08             	pushl  0x8(%ebp)
81002e63:	ff 55 0c             	call   *0xc(%ebp)
81002e66:	83 c4 10             	add    $0x10,%esp
81002e69:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e6c:	83 c3 68             	add    $0x68,%ebx
81002e6f:	83 ef 01             	sub    $0x1,%edi
81002e72:	85 ff                	test   %edi,%edi
81002e74:	79 c9                	jns    81002e3f <_fwalk_reent+0x23>
81002e76:	8b 36                	mov    (%esi),%esi
81002e78:	85 f6                	test   %esi,%esi
81002e7a:	75 bb                	jne    81002e37 <_fwalk_reent+0x1b>
81002e7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e7f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e82:	5b                   	pop    %ebx
81002e83:	5e                   	pop    %esi
81002e84:	5f                   	pop    %edi
81002e85:	5d                   	pop    %ebp
81002e86:	c3                   	ret    

81002e87 <_fwrite_r>:
81002e87:	55                   	push   %ebp
81002e88:	89 e5                	mov    %esp,%ebp
81002e8a:	83 ec 28             	sub    $0x28,%esp
81002e8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e90:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e93:	8b 45 14             	mov    0x14(%ebp),%eax
81002e96:	0f af 45 10          	imul   0x10(%ebp),%eax
81002e9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ea0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002ea3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ea6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ea9:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002eac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002eaf:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002eb6:	8b 45 08             	mov    0x8(%ebp),%eax
81002eb9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002ebc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002ec0:	74 18                	je     81002eda <_fwrite_r+0x53>
81002ec2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ec5:	8b 40 38             	mov    0x38(%eax),%eax
81002ec8:	85 c0                	test   %eax,%eax
81002eca:	75 0e                	jne    81002eda <_fwrite_r+0x53>
81002ecc:	83 ec 0c             	sub    $0xc,%esp
81002ecf:	ff 75 f0             	pushl  -0x10(%ebp)
81002ed2:	e8 fd e9 ff ff       	call   810018d4 <__sinit>
81002ed7:	83 c4 10             	add    $0x10,%esp
81002eda:	8b 45 18             	mov    0x18(%ebp),%eax
81002edd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ee1:	98                   	cwtl   
81002ee2:	25 00 20 00 00       	and    $0x2000,%eax
81002ee7:	85 c0                	test   %eax,%eax
81002ee9:	75 24                	jne    81002f0f <_fwrite_r+0x88>
81002eeb:	8b 45 18             	mov    0x18(%ebp),%eax
81002eee:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ef2:	80 cc 20             	or     $0x20,%ah
81002ef5:	89 c2                	mov    %eax,%edx
81002ef7:	8b 45 18             	mov    0x18(%ebp),%eax
81002efa:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002efe:	8b 45 18             	mov    0x18(%ebp),%eax
81002f01:	8b 40 64             	mov    0x64(%eax),%eax
81002f04:	80 e4 df             	and    $0xdf,%ah
81002f07:	89 c2                	mov    %eax,%edx
81002f09:	8b 45 18             	mov    0x18(%ebp),%eax
81002f0c:	89 50 64             	mov    %edx,0x64(%eax)
81002f0f:	83 ec 04             	sub    $0x4,%esp
81002f12:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002f15:	50                   	push   %eax
81002f16:	ff 75 18             	pushl  0x18(%ebp)
81002f19:	ff 75 08             	pushl  0x8(%ebp)
81002f1c:	e8 f5 f9 ff ff       	call   81002916 <__sfvwrite_r>
81002f21:	83 c4 10             	add    $0x10,%esp
81002f24:	85 c0                	test   %eax,%eax
81002f26:	75 05                	jne    81002f2d <_fwrite_r+0xa6>
81002f28:	8b 45 14             	mov    0x14(%ebp),%eax
81002f2b:	eb 10                	jmp    81002f3d <_fwrite_r+0xb6>
81002f2d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f30:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f33:	29 d0                	sub    %edx,%eax
81002f35:	ba 00 00 00 00       	mov    $0x0,%edx
81002f3a:	f7 75 10             	divl   0x10(%ebp)
81002f3d:	c9                   	leave  
81002f3e:	c3                   	ret    

81002f3f <fwrite>:
81002f3f:	55                   	push   %ebp
81002f40:	89 e5                	mov    %esp,%ebp
81002f42:	83 ec 08             	sub    $0x8,%esp
81002f45:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81002f4a:	83 ec 0c             	sub    $0xc,%esp
81002f4d:	ff 75 14             	pushl  0x14(%ebp)
81002f50:	ff 75 10             	pushl  0x10(%ebp)
81002f53:	ff 75 0c             	pushl  0xc(%ebp)
81002f56:	ff 75 08             	pushl  0x8(%ebp)
81002f59:	50                   	push   %eax
81002f5a:	e8 28 ff ff ff       	call   81002e87 <_fwrite_r>
81002f5f:	83 c4 20             	add    $0x20,%esp
81002f62:	c9                   	leave  
81002f63:	c3                   	ret    

81002f64 <reverse_argv_elements>:
81002f64:	55                   	push   %ebp
81002f65:	89 e5                	mov    %esp,%ebp
81002f67:	83 ec 10             	sub    $0x10,%esp
81002f6a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002f71:	eb 5e                	jmp    81002fd1 <reverse_argv_elements+0x6d>
81002f73:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002f76:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f7d:	8b 45 08             	mov    0x8(%ebp),%eax
81002f80:	01 d0                	add    %edx,%eax
81002f82:	8b 00                	mov    (%eax),%eax
81002f84:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002f87:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f8a:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002f8d:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002f92:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f99:	8b 45 08             	mov    0x8(%ebp),%eax
81002f9c:	01 d0                	add    %edx,%eax
81002f9e:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002fa1:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002fa8:	8b 55 08             	mov    0x8(%ebp),%edx
81002fab:	01 ca                	add    %ecx,%edx
81002fad:	8b 00                	mov    (%eax),%eax
81002faf:	89 02                	mov    %eax,(%edx)
81002fb1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fb4:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002fb7:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002fbc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fc3:	8b 45 08             	mov    0x8(%ebp),%eax
81002fc6:	01 c2                	add    %eax,%edx
81002fc8:	8b 45 f8             	mov    -0x8(%ebp),%eax
81002fcb:	89 02                	mov    %eax,(%edx)
81002fcd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002fd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fd4:	d1 f8                	sar    %eax
81002fd6:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002fd9:	7c 98                	jl     81002f73 <reverse_argv_elements+0xf>
81002fdb:	90                   	nop
81002fdc:	90                   	nop
81002fdd:	c9                   	leave  
81002fde:	c3                   	ret    

81002fdf <permute>:
81002fdf:	55                   	push   %ebp
81002fe0:	89 e5                	mov    %esp,%ebp
81002fe2:	ff 75 0c             	pushl  0xc(%ebp)
81002fe5:	ff 75 08             	pushl  0x8(%ebp)
81002fe8:	e8 77 ff ff ff       	call   81002f64 <reverse_argv_elements>
81002fed:	83 c4 08             	add    $0x8,%esp
81002ff0:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ff3:	8b 45 10             	mov    0x10(%ebp),%eax
81002ff6:	01 d0                	add    %edx,%eax
81002ff8:	50                   	push   %eax
81002ff9:	ff 75 08             	pushl  0x8(%ebp)
81002ffc:	e8 63 ff ff ff       	call   81002f64 <reverse_argv_elements>
81003001:	83 c4 08             	add    $0x8,%esp
81003004:	ff 75 10             	pushl  0x10(%ebp)
81003007:	ff 75 08             	pushl  0x8(%ebp)
8100300a:	e8 55 ff ff ff       	call   81002f64 <reverse_argv_elements>
8100300f:	83 c4 08             	add    $0x8,%esp
81003012:	90                   	nop
81003013:	c9                   	leave  
81003014:	c3                   	ret    

81003015 <is_option>:
81003015:	55                   	push   %ebp
81003016:	89 e5                	mov    %esp,%ebp
81003018:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100301c:	74 1a                	je     81003038 <is_option+0x23>
8100301e:	8b 45 08             	mov    0x8(%ebp),%eax
81003021:	0f b6 00             	movzbl (%eax),%eax
81003024:	3c 2d                	cmp    $0x2d,%al
81003026:	74 10                	je     81003038 <is_option+0x23>
81003028:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100302c:	74 11                	je     8100303f <is_option+0x2a>
8100302e:	8b 45 08             	mov    0x8(%ebp),%eax
81003031:	0f b6 00             	movzbl (%eax),%eax
81003034:	3c 2b                	cmp    $0x2b,%al
81003036:	75 07                	jne    8100303f <is_option+0x2a>
81003038:	b8 01 00 00 00       	mov    $0x1,%eax
8100303d:	eb 05                	jmp    81003044 <is_option+0x2f>
8100303f:	b8 00 00 00 00       	mov    $0x0,%eax
81003044:	5d                   	pop    %ebp
81003045:	c3                   	ret    

81003046 <read_globals>:
81003046:	55                   	push   %ebp
81003047:	89 e5                	mov    %esp,%ebp
81003049:	8b 15 88 9b 00 81    	mov    0x81009b88,%edx
8100304f:	8b 45 08             	mov    0x8(%ebp),%eax
81003052:	89 10                	mov    %edx,(%eax)
81003054:	8b 15 8c 9b 00 81    	mov    0x81009b8c,%edx
8100305a:	8b 45 08             	mov    0x8(%ebp),%eax
8100305d:	89 50 04             	mov    %edx,0x4(%eax)
81003060:	8b 15 64 8c 00 81    	mov    0x81008c64,%edx
81003066:	8b 45 08             	mov    0x8(%ebp),%eax
81003069:	89 50 08             	mov    %edx,0x8(%eax)
8100306c:	8b 15 68 8c 00 81    	mov    0x81008c68,%edx
81003072:	8b 45 08             	mov    0x8(%ebp),%eax
81003075:	89 50 0c             	mov    %edx,0xc(%eax)
81003078:	8b 15 90 9b 00 81    	mov    0x81009b90,%edx
8100307e:	8b 45 08             	mov    0x8(%ebp),%eax
81003081:	89 50 10             	mov    %edx,0x10(%eax)
81003084:	8b 15 94 9b 00 81    	mov    0x81009b94,%edx
8100308a:	8b 45 08             	mov    0x8(%ebp),%eax
8100308d:	89 50 14             	mov    %edx,0x14(%eax)
81003090:	8b 15 98 9b 00 81    	mov    0x81009b98,%edx
81003096:	8b 45 08             	mov    0x8(%ebp),%eax
81003099:	89 50 18             	mov    %edx,0x18(%eax)
8100309c:	90                   	nop
8100309d:	5d                   	pop    %ebp
8100309e:	c3                   	ret    

8100309f <write_globals>:
8100309f:	55                   	push   %ebp
810030a0:	89 e5                	mov    %esp,%ebp
810030a2:	8b 45 08             	mov    0x8(%ebp),%eax
810030a5:	8b 00                	mov    (%eax),%eax
810030a7:	a3 88 9b 00 81       	mov    %eax,0x81009b88
810030ac:	8b 45 08             	mov    0x8(%ebp),%eax
810030af:	8b 40 04             	mov    0x4(%eax),%eax
810030b2:	a3 8c 9b 00 81       	mov    %eax,0x81009b8c
810030b7:	8b 45 08             	mov    0x8(%ebp),%eax
810030ba:	8b 40 08             	mov    0x8(%eax),%eax
810030bd:	a3 64 8c 00 81       	mov    %eax,0x81008c64
810030c2:	8b 45 08             	mov    0x8(%ebp),%eax
810030c5:	8b 40 0c             	mov    0xc(%eax),%eax
810030c8:	a3 68 8c 00 81       	mov    %eax,0x81008c68
810030cd:	8b 45 08             	mov    0x8(%ebp),%eax
810030d0:	8b 40 10             	mov    0x10(%eax),%eax
810030d3:	a3 90 9b 00 81       	mov    %eax,0x81009b90
810030d8:	8b 45 08             	mov    0x8(%ebp),%eax
810030db:	8b 40 14             	mov    0x14(%eax),%eax
810030de:	a3 94 9b 00 81       	mov    %eax,0x81009b94
810030e3:	8b 45 08             	mov    0x8(%ebp),%eax
810030e6:	8b 40 18             	mov    0x18(%eax),%eax
810030e9:	a3 98 9b 00 81       	mov    %eax,0x81009b98
810030ee:	90                   	nop
810030ef:	5d                   	pop    %ebp
810030f0:	c3                   	ret    

810030f1 <getopt_internal>:
810030f1:	55                   	push   %ebp
810030f2:	89 e5                	mov    %esp,%ebp
810030f4:	53                   	push   %ebx
810030f5:	83 ec 34             	sub    $0x34,%esp
810030f8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810030ff:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003106:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8100310d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81003114:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100311b:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003122:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81003129:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003130:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81003137:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100313b:	74 35                	je     81003172 <getopt_internal+0x81>
8100313d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003141:	74 2f                	je     81003172 <getopt_internal+0x81>
81003143:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003147:	75 06                	jne    8100314f <getopt_internal+0x5e>
81003149:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100314d:	74 23                	je     81003172 <getopt_internal+0x81>
8100314f:	8b 45 20             	mov    0x20(%ebp),%eax
81003152:	8b 40 04             	mov    0x4(%eax),%eax
81003155:	39 45 08             	cmp    %eax,0x8(%ebp)
81003158:	7e 18                	jle    81003172 <getopt_internal+0x81>
8100315a:	8b 45 20             	mov    0x20(%ebp),%eax
8100315d:	8b 40 04             	mov    0x4(%eax),%eax
81003160:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003167:	8b 45 0c             	mov    0xc(%ebp),%eax
8100316a:	01 d0                	add    %edx,%eax
8100316c:	8b 00                	mov    (%eax),%eax
8100316e:	85 c0                	test   %eax,%eax
81003170:	75 0a                	jne    8100317c <getopt_internal+0x8b>
81003172:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003177:	e9 85 0a 00 00       	jmp    81003c01 <getopt_internal+0xb10>
8100317c:	8b 45 20             	mov    0x20(%ebp),%eax
8100317f:	8b 40 04             	mov    0x4(%eax),%eax
81003182:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003189:	8b 45 0c             	mov    0xc(%ebp),%eax
8100318c:	01 d0                	add    %edx,%eax
8100318e:	8b 00                	mov    (%eax),%eax
81003190:	83 ec 08             	sub    $0x8,%esp
81003193:	68 5c 88 00 81       	push   $0x8100885c
81003198:	50                   	push   %eax
81003199:	e8 8e 39 00 00       	call   81006b2c <strcmp>
8100319e:	83 c4 10             	add    $0x10,%esp
810031a1:	85 c0                	test   %eax,%eax
810031a3:	75 19                	jne    810031be <getopt_internal+0xcd>
810031a5:	8b 45 20             	mov    0x20(%ebp),%eax
810031a8:	8b 40 04             	mov    0x4(%eax),%eax
810031ab:	8d 50 01             	lea    0x1(%eax),%edx
810031ae:	8b 45 20             	mov    0x20(%ebp),%eax
810031b1:	89 50 04             	mov    %edx,0x4(%eax)
810031b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031b9:	e9 43 0a 00 00       	jmp    81003c01 <getopt_internal+0xb10>
810031be:	8b 45 20             	mov    0x20(%ebp),%eax
810031c1:	8b 40 04             	mov    0x4(%eax),%eax
810031c4:	85 c0                	test   %eax,%eax
810031c6:	75 28                	jne    810031f0 <getopt_internal+0xff>
810031c8:	8b 45 20             	mov    0x20(%ebp),%eax
810031cb:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810031d2:	8b 45 20             	mov    0x20(%ebp),%eax
810031d5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031dc:	8b 45 20             	mov    0x20(%ebp),%eax
810031df:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810031e6:	8b 45 20             	mov    0x20(%ebp),%eax
810031e9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810031f0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810031f4:	74 33                	je     81003229 <getopt_internal+0x138>
810031f6:	8b 45 10             	mov    0x10(%ebp),%eax
810031f9:	0f b6 00             	movzbl (%eax),%eax
810031fc:	3c 2d                	cmp    $0x2d,%al
810031fe:	74 0a                	je     8100320a <getopt_internal+0x119>
81003200:	8b 45 10             	mov    0x10(%ebp),%eax
81003203:	0f b6 00             	movzbl (%eax),%eax
81003206:	3c 2b                	cmp    $0x2b,%al
81003208:	75 1f                	jne    81003229 <getopt_internal+0x138>
8100320a:	8b 45 10             	mov    0x10(%ebp),%eax
8100320d:	0f b6 00             	movzbl (%eax),%eax
81003210:	3c 2d                	cmp    $0x2d,%al
81003212:	75 07                	jne    8100321b <getopt_internal+0x12a>
81003214:	b8 01 00 00 00       	mov    $0x1,%eax
81003219:	eb 05                	jmp    81003220 <getopt_internal+0x12f>
8100321b:	b8 02 00 00 00       	mov    $0x2,%eax
81003220:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003223:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003227:	eb 23                	jmp    8100324c <getopt_internal+0x15b>
81003229:	83 ec 0c             	sub    $0xc,%esp
8100322c:	68 5f 88 00 81       	push   $0x8100885f
81003231:	e8 37 45 00 00       	call   8100776d <getenv>
81003236:	83 c4 10             	add    $0x10,%esp
81003239:	85 c0                	test   %eax,%eax
8100323b:	74 07                	je     81003244 <getopt_internal+0x153>
8100323d:	b8 02 00 00 00       	mov    $0x2,%eax
81003242:	eb 05                	jmp    81003249 <getopt_internal+0x158>
81003244:	b8 00 00 00 00       	mov    $0x0,%eax
81003249:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100324c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003250:	74 15                	je     81003267 <getopt_internal+0x176>
81003252:	8b 45 10             	mov    0x10(%ebp),%eax
81003255:	0f b6 00             	movzbl (%eax),%eax
81003258:	3c 3a                	cmp    $0x3a,%al
8100325a:	75 0b                	jne    81003267 <getopt_internal+0x176>
8100325c:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003260:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81003267:	8b 45 20             	mov    0x20(%ebp),%eax
8100326a:	8b 40 10             	mov    0x10(%eax),%eax
8100326d:	83 f8 01             	cmp    $0x1,%eax
81003270:	0f 85 a2 01 00 00    	jne    81003418 <getopt_internal+0x327>
81003276:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100327a:	0f 84 02 01 00 00    	je     81003382 <getopt_internal+0x291>
81003280:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81003284:	0f 84 56 01 00 00    	je     810033e0 <getopt_internal+0x2ef>
8100328a:	8b 45 20             	mov    0x20(%ebp),%eax
8100328d:	8b 50 04             	mov    0x4(%eax),%edx
81003290:	8b 45 20             	mov    0x20(%ebp),%eax
81003293:	89 50 14             	mov    %edx,0x14(%eax)
81003296:	8b 45 20             	mov    0x20(%ebp),%eax
81003299:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810032a0:	eb 1e                	jmp    810032c0 <getopt_internal+0x1cf>
810032a2:	8b 45 20             	mov    0x20(%ebp),%eax
810032a5:	8b 40 04             	mov    0x4(%eax),%eax
810032a8:	8d 50 01             	lea    0x1(%eax),%edx
810032ab:	8b 45 20             	mov    0x20(%ebp),%eax
810032ae:	89 50 04             	mov    %edx,0x4(%eax)
810032b1:	8b 45 20             	mov    0x20(%ebp),%eax
810032b4:	8b 40 18             	mov    0x18(%eax),%eax
810032b7:	8d 50 01             	lea    0x1(%eax),%edx
810032ba:	8b 45 20             	mov    0x20(%ebp),%eax
810032bd:	89 50 18             	mov    %edx,0x18(%eax)
810032c0:	8b 45 20             	mov    0x20(%ebp),%eax
810032c3:	8b 40 04             	mov    0x4(%eax),%eax
810032c6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810032d0:	01 d0                	add    %edx,%eax
810032d2:	8b 00                	mov    (%eax),%eax
810032d4:	83 ec 08             	sub    $0x8,%esp
810032d7:	ff 75 1c             	pushl  0x1c(%ebp)
810032da:	50                   	push   %eax
810032db:	e8 35 fd ff ff       	call   81003015 <is_option>
810032e0:	83 c4 10             	add    $0x10,%esp
810032e3:	85 c0                	test   %eax,%eax
810032e5:	74 bb                	je     810032a2 <getopt_internal+0x1b1>
810032e7:	8b 45 20             	mov    0x20(%ebp),%eax
810032ea:	8b 40 04             	mov    0x4(%eax),%eax
810032ed:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810032f7:	01 d0                	add    %edx,%eax
810032f9:	8b 00                	mov    (%eax),%eax
810032fb:	85 c0                	test   %eax,%eax
810032fd:	75 16                	jne    81003315 <getopt_internal+0x224>
810032ff:	8b 45 20             	mov    0x20(%ebp),%eax
81003302:	8b 50 14             	mov    0x14(%eax),%edx
81003305:	8b 45 20             	mov    0x20(%ebp),%eax
81003308:	89 50 04             	mov    %edx,0x4(%eax)
8100330b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003310:	e9 ec 08 00 00       	jmp    81003c01 <getopt_internal+0xb10>
81003315:	8b 45 20             	mov    0x20(%ebp),%eax
81003318:	8b 40 04             	mov    0x4(%eax),%eax
8100331b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003322:	8b 45 0c             	mov    0xc(%ebp),%eax
81003325:	01 d0                	add    %edx,%eax
81003327:	8b 00                	mov    (%eax),%eax
81003329:	83 ec 08             	sub    $0x8,%esp
8100332c:	68 5c 88 00 81       	push   $0x8100885c
81003331:	50                   	push   %eax
81003332:	e8 f5 37 00 00       	call   81006b2c <strcmp>
81003337:	83 c4 10             	add    $0x10,%esp
8100333a:	85 c0                	test   %eax,%eax
8100333c:	0f 85 cf 00 00 00    	jne    81003411 <getopt_internal+0x320>
81003342:	8b 45 20             	mov    0x20(%ebp),%eax
81003345:	8b 40 18             	mov    0x18(%eax),%eax
81003348:	8b 55 20             	mov    0x20(%ebp),%edx
8100334b:	8b 52 14             	mov    0x14(%edx),%edx
8100334e:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81003355:	8b 55 0c             	mov    0xc(%ebp),%edx
81003358:	01 ca                	add    %ecx,%edx
8100335a:	83 ec 04             	sub    $0x4,%esp
8100335d:	6a 01                	push   $0x1
8100335f:	50                   	push   %eax
81003360:	52                   	push   %edx
81003361:	e8 79 fc ff ff       	call   81002fdf <permute>
81003366:	83 c4 10             	add    $0x10,%esp
81003369:	8b 45 20             	mov    0x20(%ebp),%eax
8100336c:	8b 40 14             	mov    0x14(%eax),%eax
8100336f:	8d 50 01             	lea    0x1(%eax),%edx
81003372:	8b 45 20             	mov    0x20(%ebp),%eax
81003375:	89 50 04             	mov    %edx,0x4(%eax)
81003378:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100337d:	e9 7f 08 00 00       	jmp    81003c01 <getopt_internal+0xb10>
81003382:	8b 45 20             	mov    0x20(%ebp),%eax
81003385:	8b 40 04             	mov    0x4(%eax),%eax
81003388:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100338f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003392:	01 d0                	add    %edx,%eax
81003394:	8b 00                	mov    (%eax),%eax
81003396:	83 ec 08             	sub    $0x8,%esp
81003399:	ff 75 1c             	pushl  0x1c(%ebp)
8100339c:	50                   	push   %eax
8100339d:	e8 73 fc ff ff       	call   81003015 <is_option>
810033a2:	83 c4 10             	add    $0x10,%esp
810033a5:	85 c0                	test   %eax,%eax
810033a7:	75 6b                	jne    81003414 <getopt_internal+0x323>
810033a9:	8b 45 20             	mov    0x20(%ebp),%eax
810033ac:	8b 40 04             	mov    0x4(%eax),%eax
810033af:	8d 48 01             	lea    0x1(%eax),%ecx
810033b2:	8b 55 20             	mov    0x20(%ebp),%edx
810033b5:	89 4a 04             	mov    %ecx,0x4(%edx)
810033b8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810033c2:	01 d0                	add    %edx,%eax
810033c4:	8b 10                	mov    (%eax),%edx
810033c6:	8b 45 20             	mov    0x20(%ebp),%eax
810033c9:	89 10                	mov    %edx,(%eax)
810033cb:	8b 45 20             	mov    0x20(%ebp),%eax
810033ce:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810033d5:	8b 45 20             	mov    0x20(%ebp),%eax
810033d8:	8b 40 0c             	mov    0xc(%eax),%eax
810033db:	e9 21 08 00 00       	jmp    81003c01 <getopt_internal+0xb10>
810033e0:	8b 45 20             	mov    0x20(%ebp),%eax
810033e3:	8b 40 04             	mov    0x4(%eax),%eax
810033e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810033f0:	01 d0                	add    %edx,%eax
810033f2:	8b 00                	mov    (%eax),%eax
810033f4:	83 ec 08             	sub    $0x8,%esp
810033f7:	ff 75 1c             	pushl  0x1c(%ebp)
810033fa:	50                   	push   %eax
810033fb:	e8 15 fc ff ff       	call   81003015 <is_option>
81003400:	83 c4 10             	add    $0x10,%esp
81003403:	85 c0                	test   %eax,%eax
81003405:	75 10                	jne    81003417 <getopt_internal+0x326>
81003407:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100340c:	e9 f0 07 00 00       	jmp    81003c01 <getopt_internal+0xb10>
81003411:	90                   	nop
81003412:	eb 04                	jmp    81003418 <getopt_internal+0x327>
81003414:	90                   	nop
81003415:	eb 01                	jmp    81003418 <getopt_internal+0x327>
81003417:	90                   	nop
81003418:	8b 45 20             	mov    0x20(%ebp),%eax
8100341b:	8b 40 04             	mov    0x4(%eax),%eax
8100341e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003425:	8b 45 0c             	mov    0xc(%ebp),%eax
81003428:	01 d0                	add    %edx,%eax
8100342a:	8b 00                	mov    (%eax),%eax
8100342c:	85 c0                	test   %eax,%eax
8100342e:	75 0a                	jne    8100343a <getopt_internal+0x349>
81003430:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003435:	e9 c7 07 00 00       	jmp    81003c01 <getopt_internal+0xb10>
8100343a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100343e:	0f 84 15 03 00 00    	je     81003759 <getopt_internal+0x668>
81003444:	8b 45 20             	mov    0x20(%ebp),%eax
81003447:	8b 40 04             	mov    0x4(%eax),%eax
8100344a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003451:	8b 45 0c             	mov    0xc(%ebp),%eax
81003454:	01 d0                	add    %edx,%eax
81003456:	8b 00                	mov    (%eax),%eax
81003458:	83 ec 04             	sub    $0x4,%esp
8100345b:	6a 02                	push   $0x2
8100345d:	68 5c 88 00 81       	push   $0x8100885c
81003462:	50                   	push   %eax
81003463:	e8 ed 15 00 00       	call   81004a55 <memcmp>
81003468:	83 c4 10             	add    $0x10,%esp
8100346b:	85 c0                	test   %eax,%eax
8100346d:	74 29                	je     81003498 <getopt_internal+0x3a7>
8100346f:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81003473:	0f 84 e0 02 00 00    	je     81003759 <getopt_internal+0x668>
81003479:	8b 45 20             	mov    0x20(%ebp),%eax
8100347c:	8b 40 04             	mov    0x4(%eax),%eax
8100347f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003486:	8b 45 0c             	mov    0xc(%ebp),%eax
81003489:	01 d0                	add    %edx,%eax
8100348b:	8b 00                	mov    (%eax),%eax
8100348d:	0f b6 00             	movzbl (%eax),%eax
81003490:	3c 2b                	cmp    $0x2b,%al
81003492:	0f 85 c1 02 00 00    	jne    81003759 <getopt_internal+0x668>
81003498:	8b 45 20             	mov    0x20(%ebp),%eax
8100349b:	8b 40 10             	mov    0x10(%eax),%eax
8100349e:	83 f8 01             	cmp    $0x1,%eax
810034a1:	0f 85 b2 02 00 00    	jne    81003759 <getopt_internal+0x668>
810034a7:	8b 45 20             	mov    0x20(%ebp),%eax
810034aa:	8b 40 04             	mov    0x4(%eax),%eax
810034ad:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810034b7:	01 d0                	add    %edx,%eax
810034b9:	8b 00                	mov    (%eax),%eax
810034bb:	83 ec 04             	sub    $0x4,%esp
810034be:	6a 02                	push   $0x2
810034c0:	68 5c 88 00 81       	push   $0x8100885c
810034c5:	50                   	push   %eax
810034c6:	e8 8a 15 00 00       	call   81004a55 <memcmp>
810034cb:	83 c4 10             	add    $0x10,%esp
810034ce:	85 c0                	test   %eax,%eax
810034d0:	75 0a                	jne    810034dc <getopt_internal+0x3eb>
810034d2:	8b 45 20             	mov    0x20(%ebp),%eax
810034d5:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810034dc:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810034e3:	8b 45 20             	mov    0x20(%ebp),%eax
810034e6:	8b 40 04             	mov    0x4(%eax),%eax
810034e9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034f0:	8b 45 0c             	mov    0xc(%ebp),%eax
810034f3:	01 d0                	add    %edx,%eax
810034f5:	8b 10                	mov    (%eax),%edx
810034f7:	8b 45 20             	mov    0x20(%ebp),%eax
810034fa:	8b 40 10             	mov    0x10(%eax),%eax
810034fd:	01 d0                	add    %edx,%eax
810034ff:	83 ec 08             	sub    $0x8,%esp
81003502:	6a 3d                	push   $0x3d
81003504:	50                   	push   %eax
81003505:	e8 26 35 00 00       	call   81006a30 <strchr>
8100350a:	83 c4 10             	add    $0x10,%esp
8100350d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003510:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003514:	75 4a                	jne    81003560 <getopt_internal+0x46f>
81003516:	8b 45 20             	mov    0x20(%ebp),%eax
81003519:	8b 40 04             	mov    0x4(%eax),%eax
8100351c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003523:	8b 45 0c             	mov    0xc(%ebp),%eax
81003526:	01 d0                	add    %edx,%eax
81003528:	8b 00                	mov    (%eax),%eax
8100352a:	83 ec 0c             	sub    $0xc,%esp
8100352d:	50                   	push   %eax
8100352e:	e8 ad 36 00 00       	call   81006be0 <strlen>
81003533:	83 c4 10             	add    $0x10,%esp
81003536:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003539:	8b 45 20             	mov    0x20(%ebp),%eax
8100353c:	8b 40 04             	mov    0x4(%eax),%eax
8100353f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003546:	8b 45 0c             	mov    0xc(%ebp),%eax
81003549:	01 d0                	add    %edx,%eax
8100354b:	8b 10                	mov    (%eax),%edx
8100354d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003550:	01 d0                	add    %edx,%eax
81003552:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003555:	8b 45 20             	mov    0x20(%ebp),%eax
81003558:	8b 40 10             	mov    0x10(%eax),%eax
8100355b:	29 45 ec             	sub    %eax,-0x14(%ebp)
8100355e:	eb 28                	jmp    81003588 <getopt_internal+0x497>
81003560:	8b 45 20             	mov    0x20(%ebp),%eax
81003563:	8b 40 04             	mov    0x4(%eax),%eax
81003566:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100356d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003570:	01 d0                	add    %edx,%eax
81003572:	8b 08                	mov    (%eax),%ecx
81003574:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003577:	29 c8                	sub    %ecx,%eax
81003579:	89 c2                	mov    %eax,%edx
8100357b:	8b 45 20             	mov    0x20(%ebp),%eax
8100357e:	8b 48 10             	mov    0x10(%eax),%ecx
81003581:	89 d0                	mov    %edx,%eax
81003583:	29 c8                	sub    %ecx,%eax
81003585:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003588:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100358f:	e9 95 01 00 00       	jmp    81003729 <getopt_internal+0x638>
81003594:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003597:	c1 e0 04             	shl    $0x4,%eax
8100359a:	89 c2                	mov    %eax,%edx
8100359c:	8b 45 14             	mov    0x14(%ebp),%eax
8100359f:	01 d0                	add    %edx,%eax
810035a1:	8b 00                	mov    (%eax),%eax
810035a3:	8b 55 20             	mov    0x20(%ebp),%edx
810035a6:	8b 52 04             	mov    0x4(%edx),%edx
810035a9:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810035b0:	8b 55 0c             	mov    0xc(%ebp),%edx
810035b3:	01 ca                	add    %ecx,%edx
810035b5:	8b 0a                	mov    (%edx),%ecx
810035b7:	8b 55 20             	mov    0x20(%ebp),%edx
810035ba:	8b 52 10             	mov    0x10(%edx),%edx
810035bd:	01 ca                	add    %ecx,%edx
810035bf:	83 ec 04             	sub    $0x4,%esp
810035c2:	ff 75 ec             	pushl  -0x14(%ebp)
810035c5:	50                   	push   %eax
810035c6:	52                   	push   %edx
810035c7:	e8 89 14 00 00       	call   81004a55 <memcmp>
810035cc:	83 c4 10             	add    $0x10,%esp
810035cf:	85 c0                	test   %eax,%eax
810035d1:	0f 85 4e 01 00 00    	jne    81003725 <getopt_internal+0x634>
810035d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035da:	c1 e0 04             	shl    $0x4,%eax
810035dd:	89 c2                	mov    %eax,%edx
810035df:	8b 45 14             	mov    0x14(%ebp),%eax
810035e2:	01 d0                	add    %edx,%eax
810035e4:	8b 00                	mov    (%eax),%eax
810035e6:	83 ec 0c             	sub    $0xc,%esp
810035e9:	50                   	push   %eax
810035ea:	e8 f1 35 00 00       	call   81006be0 <strlen>
810035ef:	83 c4 10             	add    $0x10,%esp
810035f2:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810035f5:	75 0b                	jne    81003602 <getopt_internal+0x511>
810035f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810035fd:	e9 3e 01 00 00       	jmp    81003740 <getopt_internal+0x64f>
81003602:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003606:	79 0b                	jns    81003613 <getopt_internal+0x522>
81003608:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100360b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100360e:	e9 12 01 00 00       	jmp    81003725 <getopt_internal+0x634>
81003613:	8b 45 20             	mov    0x20(%ebp),%eax
81003616:	8b 40 08             	mov    0x8(%eax),%eax
81003619:	85 c0                	test   %eax,%eax
8100361b:	0f 84 ef 00 00 00    	je     81003710 <getopt_internal+0x61f>
81003621:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003626:	8b 50 0c             	mov    0xc(%eax),%edx
81003629:	8b 45 0c             	mov    0xc(%ebp),%eax
8100362c:	8b 00                	mov    (%eax),%eax
8100362e:	83 ec 08             	sub    $0x8,%esp
81003631:	52                   	push   %edx
81003632:	50                   	push   %eax
81003633:	e8 98 e5 ff ff       	call   81001bd0 <fputs>
81003638:	83 c4 10             	add    $0x10,%esp
8100363b:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003640:	8b 40 0c             	mov    0xc(%eax),%eax
81003643:	83 ec 08             	sub    $0x8,%esp
81003646:	50                   	push   %eax
81003647:	68 6f 88 00 81       	push   $0x8100886f
8100364c:	e8 7f e5 ff ff       	call   81001bd0 <fputs>
81003651:	83 c4 10             	add    $0x10,%esp
81003654:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003659:	8b 50 0c             	mov    0xc(%eax),%edx
8100365c:	8b 45 20             	mov    0x20(%ebp),%eax
8100365f:	8b 40 04             	mov    0x4(%eax),%eax
81003662:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003669:	8b 45 0c             	mov    0xc(%ebp),%eax
8100366c:	01 c8                	add    %ecx,%eax
8100366e:	8b 00                	mov    (%eax),%eax
81003670:	83 ec 08             	sub    $0x8,%esp
81003673:	52                   	push   %edx
81003674:	50                   	push   %eax
81003675:	e8 56 e5 ff ff       	call   81001bd0 <fputs>
8100367a:	83 c4 10             	add    $0x10,%esp
8100367d:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003682:	8b 40 0c             	mov    0xc(%eax),%eax
81003685:	83 ec 08             	sub    $0x8,%esp
81003688:	50                   	push   %eax
81003689:	68 7a 88 00 81       	push   $0x8100887a
8100368e:	e8 3d e5 ff ff       	call   81001bd0 <fputs>
81003693:	83 c4 10             	add    $0x10,%esp
81003696:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100369b:	8b 50 0c             	mov    0xc(%eax),%edx
8100369e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810036a1:	c1 e0 04             	shl    $0x4,%eax
810036a4:	89 c1                	mov    %eax,%ecx
810036a6:	8b 45 14             	mov    0x14(%ebp),%eax
810036a9:	01 c8                	add    %ecx,%eax
810036ab:	8b 00                	mov    (%eax),%eax
810036ad:	83 ec 08             	sub    $0x8,%esp
810036b0:	52                   	push   %edx
810036b1:	50                   	push   %eax
810036b2:	e8 19 e5 ff ff       	call   81001bd0 <fputs>
810036b7:	83 c4 10             	add    $0x10,%esp
810036ba:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810036bf:	8b 40 0c             	mov    0xc(%eax),%eax
810036c2:	83 ec 08             	sub    $0x8,%esp
810036c5:	50                   	push   %eax
810036c6:	68 97 88 00 81       	push   $0x81008897
810036cb:	e8 00 e5 ff ff       	call   81001bd0 <fputs>
810036d0:	83 c4 10             	add    $0x10,%esp
810036d3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810036d8:	8b 50 0c             	mov    0xc(%eax),%edx
810036db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036de:	c1 e0 04             	shl    $0x4,%eax
810036e1:	89 c1                	mov    %eax,%ecx
810036e3:	8b 45 14             	mov    0x14(%ebp),%eax
810036e6:	01 c8                	add    %ecx,%eax
810036e8:	8b 00                	mov    (%eax),%eax
810036ea:	83 ec 08             	sub    $0x8,%esp
810036ed:	52                   	push   %edx
810036ee:	50                   	push   %eax
810036ef:	e8 dc e4 ff ff       	call   81001bd0 <fputs>
810036f4:	83 c4 10             	add    $0x10,%esp
810036f7:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810036fc:	8b 40 0c             	mov    0xc(%eax),%eax
810036ff:	83 ec 08             	sub    $0x8,%esp
81003702:	50                   	push   %eax
81003703:	68 a0 88 00 81       	push   $0x810088a0
81003708:	e8 c3 e4 ff ff       	call   81001bd0 <fputs>
8100370d:	83 c4 10             	add    $0x10,%esp
81003710:	8b 45 20             	mov    0x20(%ebp),%eax
81003713:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100371a:	8b 45 20             	mov    0x20(%ebp),%eax
8100371d:	8b 40 0c             	mov    0xc(%eax),%eax
81003720:	e9 dc 04 00 00       	jmp    81003c01 <getopt_internal+0xb10>
81003725:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003729:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100372c:	c1 e0 04             	shl    $0x4,%eax
8100372f:	89 c2                	mov    %eax,%edx
81003731:	8b 45 14             	mov    0x14(%ebp),%eax
81003734:	01 d0                	add    %edx,%eax
81003736:	8b 00                	mov    (%eax),%eax
81003738:	85 c0                	test   %eax,%eax
8100373a:	0f 85 54 fe ff ff    	jne    81003594 <getopt_internal+0x4a3>
81003740:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003744:	78 13                	js     81003759 <getopt_internal+0x668>
81003746:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003749:	c1 e0 04             	shl    $0x4,%eax
8100374c:	89 c2                	mov    %eax,%edx
8100374e:	8b 45 14             	mov    0x14(%ebp),%eax
81003751:	01 d0                	add    %edx,%eax
81003753:	8b 40 04             	mov    0x4(%eax),%eax
81003756:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003759:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100375d:	0f 89 9a 01 00 00    	jns    810038fd <getopt_internal+0x80c>
81003763:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003767:	0f 84 90 01 00 00    	je     810038fd <getopt_internal+0x80c>
8100376d:	8b 45 20             	mov    0x20(%ebp),%eax
81003770:	8b 40 04             	mov    0x4(%eax),%eax
81003773:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100377a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100377d:	01 d0                	add    %edx,%eax
8100377f:	8b 10                	mov    (%eax),%edx
81003781:	8b 45 20             	mov    0x20(%ebp),%eax
81003784:	8b 40 10             	mov    0x10(%eax),%eax
81003787:	01 d0                	add    %edx,%eax
81003789:	0f b6 00             	movzbl (%eax),%eax
8100378c:	0f be c0             	movsbl %al,%eax
8100378f:	83 ec 08             	sub    $0x8,%esp
81003792:	50                   	push   %eax
81003793:	ff 75 10             	pushl  0x10(%ebp)
81003796:	e8 95 32 00 00       	call   81006a30 <strchr>
8100379b:	83 c4 10             	add    $0x10,%esp
8100379e:	89 45 dc             	mov    %eax,-0x24(%ebp)
810037a1:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810037a5:	0f 85 f1 00 00 00    	jne    8100389c <getopt_internal+0x7ab>
810037ab:	8b 45 20             	mov    0x20(%ebp),%eax
810037ae:	8b 40 08             	mov    0x8(%eax),%eax
810037b1:	85 c0                	test   %eax,%eax
810037b3:	0f 84 83 00 00 00    	je     8100383c <getopt_internal+0x74b>
810037b9:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810037be:	8b 50 0c             	mov    0xc(%eax),%edx
810037c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810037c4:	8b 00                	mov    (%eax),%eax
810037c6:	83 ec 08             	sub    $0x8,%esp
810037c9:	52                   	push   %edx
810037ca:	50                   	push   %eax
810037cb:	e8 00 e4 ff ff       	call   81001bd0 <fputs>
810037d0:	83 c4 10             	add    $0x10,%esp
810037d3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810037d8:	8b 40 0c             	mov    0xc(%eax),%eax
810037db:	83 ec 08             	sub    $0x8,%esp
810037de:	50                   	push   %eax
810037df:	68 a4 88 00 81       	push   $0x810088a4
810037e4:	e8 e7 e3 ff ff       	call   81001bd0 <fputs>
810037e9:	83 c4 10             	add    $0x10,%esp
810037ec:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810037f1:	8b 50 0c             	mov    0xc(%eax),%edx
810037f4:	8b 45 20             	mov    0x20(%ebp),%eax
810037f7:	8b 40 04             	mov    0x4(%eax),%eax
810037fa:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003801:	8b 45 0c             	mov    0xc(%ebp),%eax
81003804:	01 c8                	add    %ecx,%eax
81003806:	8b 08                	mov    (%eax),%ecx
81003808:	8b 45 20             	mov    0x20(%ebp),%eax
8100380b:	8b 40 10             	mov    0x10(%eax),%eax
8100380e:	01 c8                	add    %ecx,%eax
81003810:	0f b6 00             	movzbl (%eax),%eax
81003813:	0f be c0             	movsbl %al,%eax
81003816:	83 ec 08             	sub    $0x8,%esp
81003819:	52                   	push   %edx
8100381a:	50                   	push   %eax
8100381b:	e8 2a 3d 00 00       	call   8100754a <fputc>
81003820:	83 c4 10             	add    $0x10,%esp
81003823:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003828:	8b 40 0c             	mov    0xc(%eax),%eax
8100382b:	83 ec 08             	sub    $0x8,%esp
8100382e:	50                   	push   %eax
8100382f:	68 bb 88 00 81       	push   $0x810088bb
81003834:	e8 97 e3 ff ff       	call   81001bd0 <fputs>
81003839:	83 c4 10             	add    $0x10,%esp
8100383c:	8b 45 20             	mov    0x20(%ebp),%eax
8100383f:	8b 40 10             	mov    0x10(%eax),%eax
81003842:	8d 50 01             	lea    0x1(%eax),%edx
81003845:	8b 45 20             	mov    0x20(%ebp),%eax
81003848:	89 50 10             	mov    %edx,0x10(%eax)
8100384b:	8b 45 20             	mov    0x20(%ebp),%eax
8100384e:	8b 40 04             	mov    0x4(%eax),%eax
81003851:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003858:	8b 45 0c             	mov    0xc(%ebp),%eax
8100385b:	01 d0                	add    %edx,%eax
8100385d:	8b 10                	mov    (%eax),%edx
8100385f:	8b 45 20             	mov    0x20(%ebp),%eax
81003862:	8b 40 10             	mov    0x10(%eax),%eax
81003865:	01 d0                	add    %edx,%eax
81003867:	0f b6 00             	movzbl (%eax),%eax
8100386a:	84 c0                	test   %al,%al
8100386c:	75 19                	jne    81003887 <getopt_internal+0x796>
8100386e:	8b 45 20             	mov    0x20(%ebp),%eax
81003871:	8b 40 04             	mov    0x4(%eax),%eax
81003874:	8d 50 01             	lea    0x1(%eax),%edx
81003877:	8b 45 20             	mov    0x20(%ebp),%eax
8100387a:	89 50 04             	mov    %edx,0x4(%eax)
8100387d:	8b 45 20             	mov    0x20(%ebp),%eax
81003880:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003887:	8b 45 20             	mov    0x20(%ebp),%eax
8100388a:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003891:	8b 45 20             	mov    0x20(%ebp),%eax
81003894:	8b 40 0c             	mov    0xc(%eax),%eax
81003897:	e9 65 03 00 00       	jmp    81003c01 <getopt_internal+0xb10>
8100389c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100389f:	83 c0 01             	add    $0x1,%eax
810038a2:	0f b6 00             	movzbl (%eax),%eax
810038a5:	3c 3a                	cmp    $0x3a,%al
810038a7:	75 1b                	jne    810038c4 <getopt_internal+0x7d3>
810038a9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038ac:	83 c0 02             	add    $0x2,%eax
810038af:	0f b6 00             	movzbl (%eax),%eax
810038b2:	3c 3a                	cmp    $0x3a,%al
810038b4:	75 07                	jne    810038bd <getopt_internal+0x7cc>
810038b6:	b8 02 00 00 00       	mov    $0x2,%eax
810038bb:	eb 0c                	jmp    810038c9 <getopt_internal+0x7d8>
810038bd:	b8 01 00 00 00       	mov    $0x1,%eax
810038c2:	eb 05                	jmp    810038c9 <getopt_internal+0x7d8>
810038c4:	b8 00 00 00 00       	mov    $0x0,%eax
810038c9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810038cc:	8b 45 20             	mov    0x20(%ebp),%eax
810038cf:	8b 40 04             	mov    0x4(%eax),%eax
810038d2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810038d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810038dc:	01 d0                	add    %edx,%eax
810038de:	8b 10                	mov    (%eax),%edx
810038e0:	8b 45 20             	mov    0x20(%ebp),%eax
810038e3:	8b 40 10             	mov    0x10(%eax),%eax
810038e6:	83 c0 01             	add    $0x1,%eax
810038e9:	01 d0                	add    %edx,%eax
810038eb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038ee:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038f1:	0f b6 00             	movzbl (%eax),%eax
810038f4:	0f be d0             	movsbl %al,%edx
810038f7:	8b 45 20             	mov    0x20(%ebp),%eax
810038fa:	89 50 0c             	mov    %edx,0xc(%eax)
810038fd:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003904:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81003908:	74 40                	je     8100394a <getopt_internal+0x859>
8100390a:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
8100390e:	0f 85 b0 01 00 00    	jne    81003ac4 <getopt_internal+0x9d3>
81003914:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003917:	0f b6 00             	movzbl (%eax),%eax
8100391a:	3c 3d                	cmp    $0x3d,%al
8100391c:	75 04                	jne    81003922 <getopt_internal+0x831>
8100391e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003922:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003925:	0f b6 00             	movzbl (%eax),%eax
81003928:	84 c0                	test   %al,%al
8100392a:	74 05                	je     81003931 <getopt_internal+0x840>
8100392c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100392f:	eb 05                	jmp    81003936 <getopt_internal+0x845>
81003931:	b8 00 00 00 00       	mov    $0x0,%eax
81003936:	8b 55 20             	mov    0x20(%ebp),%edx
81003939:	89 02                	mov    %eax,(%edx)
8100393b:	8b 45 20             	mov    0x20(%ebp),%eax
8100393e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003945:	e9 d2 01 00 00       	jmp    81003b1c <getopt_internal+0xa2b>
8100394a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100394d:	0f b6 00             	movzbl (%eax),%eax
81003950:	3c 3d                	cmp    $0x3d,%al
81003952:	75 04                	jne    81003958 <getopt_internal+0x867>
81003954:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003958:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100395b:	0f b6 00             	movzbl (%eax),%eax
8100395e:	84 c0                	test   %al,%al
81003960:	74 17                	je     81003979 <getopt_internal+0x888>
81003962:	8b 45 20             	mov    0x20(%ebp),%eax
81003965:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003968:	89 10                	mov    %edx,(%eax)
8100396a:	8b 45 20             	mov    0x20(%ebp),%eax
8100396d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003974:	e9 a3 01 00 00       	jmp    81003b1c <getopt_internal+0xa2b>
81003979:	8b 45 20             	mov    0x20(%ebp),%eax
8100397c:	8b 40 04             	mov    0x4(%eax),%eax
8100397f:	83 c0 01             	add    $0x1,%eax
81003982:	39 45 08             	cmp    %eax,0x8(%ebp)
81003985:	0f 8f 0a 01 00 00    	jg     81003a95 <getopt_internal+0x9a4>
8100398b:	8b 45 20             	mov    0x20(%ebp),%eax
8100398e:	8b 40 08             	mov    0x8(%eax),%eax
81003991:	85 c0                	test   %eax,%eax
81003993:	0f 84 d3 00 00 00    	je     81003a6c <getopt_internal+0x97b>
81003999:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100399e:	8b 50 0c             	mov    0xc(%eax),%edx
810039a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a4:	8b 00                	mov    (%eax),%eax
810039a6:	83 ec 08             	sub    $0x8,%esp
810039a9:	52                   	push   %edx
810039aa:	50                   	push   %eax
810039ab:	e8 20 e2 ff ff       	call   81001bd0 <fputs>
810039b0:	83 c4 10             	add    $0x10,%esp
810039b3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810039b8:	8b 40 0c             	mov    0xc(%eax),%eax
810039bb:	83 ec 08             	sub    $0x8,%esp
810039be:	50                   	push   %eax
810039bf:	68 c0 88 00 81       	push   $0x810088c0
810039c4:	e8 07 e2 ff ff       	call   81001bd0 <fputs>
810039c9:	83 c4 10             	add    $0x10,%esp
810039cc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810039d0:	78 54                	js     81003a26 <getopt_internal+0x935>
810039d2:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810039d7:	8b 40 0c             	mov    0xc(%eax),%eax
810039da:	83 ec 08             	sub    $0x8,%esp
810039dd:	50                   	push   %eax
810039de:	6a 2d                	push   $0x2d
810039e0:	e8 65 3b 00 00       	call   8100754a <fputc>
810039e5:	83 c4 10             	add    $0x10,%esp
810039e8:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810039ed:	8b 50 0c             	mov    0xc(%eax),%edx
810039f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810039f3:	c1 e0 04             	shl    $0x4,%eax
810039f6:	89 c1                	mov    %eax,%ecx
810039f8:	8b 45 14             	mov    0x14(%ebp),%eax
810039fb:	01 c8                	add    %ecx,%eax
810039fd:	8b 00                	mov    (%eax),%eax
810039ff:	83 ec 08             	sub    $0x8,%esp
81003a02:	52                   	push   %edx
81003a03:	50                   	push   %eax
81003a04:	e8 c7 e1 ff ff       	call   81001bd0 <fputs>
81003a09:	83 c4 10             	add    $0x10,%esp
81003a0c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a10:	74 07                	je     81003a19 <getopt_internal+0x928>
81003a12:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003a17:	eb 05                	jmp    81003a1e <getopt_internal+0x92d>
81003a19:	ba 3f 00 00 00       	mov    $0x3f,%edx
81003a1e:	8b 45 20             	mov    0x20(%ebp),%eax
81003a21:	89 50 0c             	mov    %edx,0xc(%eax)
81003a24:	eb 2d                	jmp    81003a53 <getopt_internal+0x962>
81003a26:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003a2b:	8b 50 0c             	mov    0xc(%eax),%edx
81003a2e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a31:	0f b6 00             	movzbl (%eax),%eax
81003a34:	0f be c0             	movsbl %al,%eax
81003a37:	83 ec 08             	sub    $0x8,%esp
81003a3a:	52                   	push   %edx
81003a3b:	50                   	push   %eax
81003a3c:	e8 09 3b 00 00       	call   8100754a <fputc>
81003a41:	83 c4 10             	add    $0x10,%esp
81003a44:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a47:	0f b6 00             	movzbl (%eax),%eax
81003a4a:	0f be d0             	movsbl %al,%edx
81003a4d:	8b 45 20             	mov    0x20(%ebp),%eax
81003a50:	89 50 0c             	mov    %edx,0xc(%eax)
81003a53:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003a58:	8b 40 0c             	mov    0xc(%eax),%eax
81003a5b:	83 ec 08             	sub    $0x8,%esp
81003a5e:	50                   	push   %eax
81003a5f:	68 bb 88 00 81       	push   $0x810088bb
81003a64:	e8 67 e1 ff ff       	call   81001bd0 <fputs>
81003a69:	83 c4 10             	add    $0x10,%esp
81003a6c:	8b 45 20             	mov    0x20(%ebp),%eax
81003a6f:	8b 40 04             	mov    0x4(%eax),%eax
81003a72:	8d 50 01             	lea    0x1(%eax),%edx
81003a75:	8b 45 20             	mov    0x20(%ebp),%eax
81003a78:	89 50 04             	mov    %edx,0x4(%eax)
81003a7b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a7f:	74 0a                	je     81003a8b <getopt_internal+0x99a>
81003a81:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003a86:	e9 76 01 00 00       	jmp    81003c01 <getopt_internal+0xb10>
81003a8b:	b8 3f 00 00 00       	mov    $0x3f,%eax
81003a90:	e9 6c 01 00 00       	jmp    81003c01 <getopt_internal+0xb10>
81003a95:	8b 45 20             	mov    0x20(%ebp),%eax
81003a98:	8b 40 04             	mov    0x4(%eax),%eax
81003a9b:	83 c0 01             	add    $0x1,%eax
81003a9e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003aa5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aa8:	01 d0                	add    %edx,%eax
81003aaa:	8b 10                	mov    (%eax),%edx
81003aac:	8b 45 20             	mov    0x20(%ebp),%eax
81003aaf:	89 10                	mov    %edx,(%eax)
81003ab1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003ab8:	8b 45 20             	mov    0x20(%ebp),%eax
81003abb:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ac2:	eb 58                	jmp    81003b1c <getopt_internal+0xa2b>
81003ac4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003ac8:	79 3e                	jns    81003b08 <getopt_internal+0xa17>
81003aca:	8b 45 20             	mov    0x20(%ebp),%eax
81003acd:	8b 40 10             	mov    0x10(%eax),%eax
81003ad0:	8d 50 01             	lea    0x1(%eax),%edx
81003ad3:	8b 45 20             	mov    0x20(%ebp),%eax
81003ad6:	89 50 10             	mov    %edx,0x10(%eax)
81003ad9:	8b 45 20             	mov    0x20(%ebp),%eax
81003adc:	8b 40 04             	mov    0x4(%eax),%eax
81003adf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003ae6:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ae9:	01 d0                	add    %edx,%eax
81003aeb:	8b 10                	mov    (%eax),%edx
81003aed:	8b 45 20             	mov    0x20(%ebp),%eax
81003af0:	8b 40 10             	mov    0x10(%eax),%eax
81003af3:	01 d0                	add    %edx,%eax
81003af5:	0f b6 00             	movzbl (%eax),%eax
81003af8:	84 c0                	test   %al,%al
81003afa:	75 16                	jne    81003b12 <getopt_internal+0xa21>
81003afc:	8b 45 20             	mov    0x20(%ebp),%eax
81003aff:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b06:	eb 0a                	jmp    81003b12 <getopt_internal+0xa21>
81003b08:	8b 45 20             	mov    0x20(%ebp),%eax
81003b0b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b12:	8b 45 20             	mov    0x20(%ebp),%eax
81003b15:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003b1b:	90                   	nop
81003b1c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b20:	75 57                	jne    81003b79 <getopt_internal+0xa88>
81003b22:	8b 45 20             	mov    0x20(%ebp),%eax
81003b25:	8b 40 10             	mov    0x10(%eax),%eax
81003b28:	83 f8 01             	cmp    $0x1,%eax
81003b2b:	75 4c                	jne    81003b79 <getopt_internal+0xa88>
81003b2d:	8b 45 20             	mov    0x20(%ebp),%eax
81003b30:	8b 40 18             	mov    0x18(%eax),%eax
81003b33:	85 c0                	test   %eax,%eax
81003b35:	74 42                	je     81003b79 <getopt_internal+0xa88>
81003b37:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b3a:	8d 48 01             	lea    0x1(%eax),%ecx
81003b3d:	8b 45 20             	mov    0x20(%ebp),%eax
81003b40:	8b 40 18             	mov    0x18(%eax),%eax
81003b43:	8b 55 20             	mov    0x20(%ebp),%edx
81003b46:	8b 52 14             	mov    0x14(%edx),%edx
81003b49:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003b50:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b53:	01 da                	add    %ebx,%edx
81003b55:	83 ec 04             	sub    $0x4,%esp
81003b58:	51                   	push   %ecx
81003b59:	50                   	push   %eax
81003b5a:	52                   	push   %edx
81003b5b:	e8 7f f4 ff ff       	call   81002fdf <permute>
81003b60:	83 c4 10             	add    $0x10,%esp
81003b63:	8b 45 20             	mov    0x20(%ebp),%eax
81003b66:	8b 40 14             	mov    0x14(%eax),%eax
81003b69:	8d 50 01             	lea    0x1(%eax),%edx
81003b6c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b6f:	01 c2                	add    %eax,%edx
81003b71:	8b 45 20             	mov    0x20(%ebp),%eax
81003b74:	89 50 04             	mov    %edx,0x4(%eax)
81003b77:	eb 1f                	jmp    81003b98 <getopt_internal+0xaa7>
81003b79:	8b 45 20             	mov    0x20(%ebp),%eax
81003b7c:	8b 40 10             	mov    0x10(%eax),%eax
81003b7f:	83 f8 01             	cmp    $0x1,%eax
81003b82:	75 14                	jne    81003b98 <getopt_internal+0xaa7>
81003b84:	8b 45 20             	mov    0x20(%ebp),%eax
81003b87:	8b 40 04             	mov    0x4(%eax),%eax
81003b8a:	8d 50 01             	lea    0x1(%eax),%edx
81003b8d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b90:	01 c2                	add    %eax,%edx
81003b92:	8b 45 20             	mov    0x20(%ebp),%eax
81003b95:	89 50 04             	mov    %edx,0x4(%eax)
81003b98:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003b9c:	78 5d                	js     81003bfb <getopt_internal+0xb0a>
81003b9e:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003ba2:	74 08                	je     81003bac <getopt_internal+0xabb>
81003ba4:	8b 45 18             	mov    0x18(%ebp),%eax
81003ba7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003baa:	89 10                	mov    %edx,(%eax)
81003bac:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003baf:	c1 e0 04             	shl    $0x4,%eax
81003bb2:	89 c2                	mov    %eax,%edx
81003bb4:	8b 45 14             	mov    0x14(%ebp),%eax
81003bb7:	01 d0                	add    %edx,%eax
81003bb9:	8b 40 08             	mov    0x8(%eax),%eax
81003bbc:	85 c0                	test   %eax,%eax
81003bbe:	74 29                	je     81003be9 <getopt_internal+0xaf8>
81003bc0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bc3:	c1 e0 04             	shl    $0x4,%eax
81003bc6:	89 c2                	mov    %eax,%edx
81003bc8:	8b 45 14             	mov    0x14(%ebp),%eax
81003bcb:	01 c2                	add    %eax,%edx
81003bcd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bd0:	c1 e0 04             	shl    $0x4,%eax
81003bd3:	89 c1                	mov    %eax,%ecx
81003bd5:	8b 45 14             	mov    0x14(%ebp),%eax
81003bd8:	01 c8                	add    %ecx,%eax
81003bda:	8b 40 08             	mov    0x8(%eax),%eax
81003bdd:	8b 52 0c             	mov    0xc(%edx),%edx
81003be0:	89 10                	mov    %edx,(%eax)
81003be2:	b8 00 00 00 00       	mov    $0x0,%eax
81003be7:	eb 18                	jmp    81003c01 <getopt_internal+0xb10>
81003be9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bec:	c1 e0 04             	shl    $0x4,%eax
81003bef:	89 c2                	mov    %eax,%edx
81003bf1:	8b 45 14             	mov    0x14(%ebp),%eax
81003bf4:	01 d0                	add    %edx,%eax
81003bf6:	8b 40 0c             	mov    0xc(%eax),%eax
81003bf9:	eb 06                	jmp    81003c01 <getopt_internal+0xb10>
81003bfb:	8b 45 20             	mov    0x20(%ebp),%eax
81003bfe:	8b 40 0c             	mov    0xc(%eax),%eax
81003c01:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003c04:	c9                   	leave  
81003c05:	c3                   	ret    

81003c06 <getopt>:
81003c06:	55                   	push   %ebp
81003c07:	89 e5                	mov    %esp,%ebp
81003c09:	83 ec 28             	sub    $0x28,%esp
81003c0c:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c0f:	50                   	push   %eax
81003c10:	e8 31 f4 ff ff       	call   81003046 <read_globals>
81003c15:	83 c4 04             	add    $0x4,%esp
81003c18:	83 ec 04             	sub    $0x4,%esp
81003c1b:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c1e:	50                   	push   %eax
81003c1f:	6a 00                	push   $0x0
81003c21:	6a 00                	push   $0x0
81003c23:	6a 00                	push   $0x0
81003c25:	ff 75 10             	pushl  0x10(%ebp)
81003c28:	ff 75 0c             	pushl  0xc(%ebp)
81003c2b:	ff 75 08             	pushl  0x8(%ebp)
81003c2e:	e8 be f4 ff ff       	call   810030f1 <getopt_internal>
81003c33:	83 c4 20             	add    $0x20,%esp
81003c36:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c39:	83 ec 0c             	sub    $0xc,%esp
81003c3c:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c3f:	50                   	push   %eax
81003c40:	e8 5a f4 ff ff       	call   8100309f <write_globals>
81003c45:	83 c4 10             	add    $0x10,%esp
81003c48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c4b:	c9                   	leave  
81003c4c:	c3                   	ret    

81003c4d <getopt_long>:
81003c4d:	55                   	push   %ebp
81003c4e:	89 e5                	mov    %esp,%ebp
81003c50:	83 ec 28             	sub    $0x28,%esp
81003c53:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c56:	50                   	push   %eax
81003c57:	e8 ea f3 ff ff       	call   81003046 <read_globals>
81003c5c:	83 c4 04             	add    $0x4,%esp
81003c5f:	83 ec 04             	sub    $0x4,%esp
81003c62:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c65:	50                   	push   %eax
81003c66:	6a 00                	push   $0x0
81003c68:	ff 75 18             	pushl  0x18(%ebp)
81003c6b:	ff 75 14             	pushl  0x14(%ebp)
81003c6e:	ff 75 10             	pushl  0x10(%ebp)
81003c71:	ff 75 0c             	pushl  0xc(%ebp)
81003c74:	ff 75 08             	pushl  0x8(%ebp)
81003c77:	e8 75 f4 ff ff       	call   810030f1 <getopt_internal>
81003c7c:	83 c4 20             	add    $0x20,%esp
81003c7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c82:	83 ec 0c             	sub    $0xc,%esp
81003c85:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c88:	50                   	push   %eax
81003c89:	e8 11 f4 ff ff       	call   8100309f <write_globals>
81003c8e:	83 c4 10             	add    $0x10,%esp
81003c91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c94:	c9                   	leave  
81003c95:	c3                   	ret    

81003c96 <getopt_long_only>:
81003c96:	55                   	push   %ebp
81003c97:	89 e5                	mov    %esp,%ebp
81003c99:	83 ec 28             	sub    $0x28,%esp
81003c9c:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c9f:	50                   	push   %eax
81003ca0:	e8 a1 f3 ff ff       	call   81003046 <read_globals>
81003ca5:	83 c4 04             	add    $0x4,%esp
81003ca8:	83 ec 04             	sub    $0x4,%esp
81003cab:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cae:	50                   	push   %eax
81003caf:	6a 01                	push   $0x1
81003cb1:	ff 75 18             	pushl  0x18(%ebp)
81003cb4:	ff 75 14             	pushl  0x14(%ebp)
81003cb7:	ff 75 10             	pushl  0x10(%ebp)
81003cba:	ff 75 0c             	pushl  0xc(%ebp)
81003cbd:	ff 75 08             	pushl  0x8(%ebp)
81003cc0:	e8 2c f4 ff ff       	call   810030f1 <getopt_internal>
81003cc5:	83 c4 20             	add    $0x20,%esp
81003cc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ccb:	83 ec 0c             	sub    $0xc,%esp
81003cce:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cd1:	50                   	push   %eax
81003cd2:	e8 c8 f3 ff ff       	call   8100309f <write_globals>
81003cd7:	83 c4 10             	add    $0x10,%esp
81003cda:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cdd:	c9                   	leave  
81003cde:	c3                   	ret    

81003cdf <__getopt_r>:
81003cdf:	55                   	push   %ebp
81003ce0:	89 e5                	mov    %esp,%ebp
81003ce2:	83 ec 08             	sub    $0x8,%esp
81003ce5:	83 ec 04             	sub    $0x4,%esp
81003ce8:	ff 75 14             	pushl  0x14(%ebp)
81003ceb:	6a 00                	push   $0x0
81003ced:	6a 00                	push   $0x0
81003cef:	6a 00                	push   $0x0
81003cf1:	ff 75 10             	pushl  0x10(%ebp)
81003cf4:	ff 75 0c             	pushl  0xc(%ebp)
81003cf7:	ff 75 08             	pushl  0x8(%ebp)
81003cfa:	e8 f2 f3 ff ff       	call   810030f1 <getopt_internal>
81003cff:	83 c4 20             	add    $0x20,%esp
81003d02:	c9                   	leave  
81003d03:	c3                   	ret    

81003d04 <__getopt_long_r>:
81003d04:	55                   	push   %ebp
81003d05:	89 e5                	mov    %esp,%ebp
81003d07:	83 ec 08             	sub    $0x8,%esp
81003d0a:	83 ec 04             	sub    $0x4,%esp
81003d0d:	ff 75 1c             	pushl  0x1c(%ebp)
81003d10:	6a 00                	push   $0x0
81003d12:	ff 75 18             	pushl  0x18(%ebp)
81003d15:	ff 75 14             	pushl  0x14(%ebp)
81003d18:	ff 75 10             	pushl  0x10(%ebp)
81003d1b:	ff 75 0c             	pushl  0xc(%ebp)
81003d1e:	ff 75 08             	pushl  0x8(%ebp)
81003d21:	e8 cb f3 ff ff       	call   810030f1 <getopt_internal>
81003d26:	83 c4 20             	add    $0x20,%esp
81003d29:	c9                   	leave  
81003d2a:	c3                   	ret    

81003d2b <__getopt_long_only_r>:
81003d2b:	55                   	push   %ebp
81003d2c:	89 e5                	mov    %esp,%ebp
81003d2e:	83 ec 08             	sub    $0x8,%esp
81003d31:	83 ec 04             	sub    $0x4,%esp
81003d34:	ff 75 1c             	pushl  0x1c(%ebp)
81003d37:	6a 01                	push   $0x1
81003d39:	ff 75 18             	pushl  0x18(%ebp)
81003d3c:	ff 75 14             	pushl  0x14(%ebp)
81003d3f:	ff 75 10             	pushl  0x10(%ebp)
81003d42:	ff 75 0c             	pushl  0xc(%ebp)
81003d45:	ff 75 08             	pushl  0x8(%ebp)
81003d48:	e8 a4 f3 ff ff       	call   810030f1 <getopt_internal>
81003d4d:	83 c4 20             	add    $0x20,%esp
81003d50:	c9                   	leave  
81003d51:	c3                   	ret    

81003d52 <__smakebuf_r>:
81003d52:	55                   	push   %ebp
81003d53:	89 e5                	mov    %esp,%ebp
81003d55:	56                   	push   %esi
81003d56:	53                   	push   %ebx
81003d57:	83 ec 10             	sub    $0x10,%esp
81003d5a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003d5d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d61:	98                   	cwtl   
81003d62:	83 e0 02             	and    $0x2,%eax
81003d65:	85 c0                	test   %eax,%eax
81003d67:	74 16                	je     81003d7f <__smakebuf_r+0x2d>
81003d69:	8d 43 43             	lea    0x43(%ebx),%eax
81003d6c:	89 03                	mov    %eax,(%ebx)
81003d6e:	8b 03                	mov    (%ebx),%eax
81003d70:	89 43 10             	mov    %eax,0x10(%ebx)
81003d73:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003d7a:	e9 b9 00 00 00       	jmp    81003e38 <__smakebuf_r+0xe6>
81003d7f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003d82:	50                   	push   %eax
81003d83:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003d86:	50                   	push   %eax
81003d87:	53                   	push   %ebx
81003d88:	ff 75 08             	pushl  0x8(%ebp)
81003d8b:	e8 af 00 00 00       	call   81003e3f <__swhatbuf_r>
81003d90:	83 c4 10             	add    $0x10,%esp
81003d93:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d96:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d99:	83 ec 08             	sub    $0x8,%esp
81003d9c:	50                   	push   %eax
81003d9d:	ff 75 08             	pushl  0x8(%ebp)
81003da0:	e8 f9 03 00 00       	call   8100419e <_malloc_r>
81003da5:	83 c4 10             	add    $0x10,%esp
81003da8:	89 c6                	mov    %eax,%esi
81003daa:	85 f6                	test   %esi,%esi
81003dac:	75 2f                	jne    81003ddd <__smakebuf_r+0x8b>
81003dae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003db2:	98                   	cwtl   
81003db3:	25 00 02 00 00       	and    $0x200,%eax
81003db8:	85 c0                	test   %eax,%eax
81003dba:	75 7c                	jne    81003e38 <__smakebuf_r+0xe6>
81003dbc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003dc0:	83 e0 fc             	and    $0xfffffffc,%eax
81003dc3:	83 c8 02             	or     $0x2,%eax
81003dc6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003dca:	8d 43 43             	lea    0x43(%ebx),%eax
81003dcd:	89 03                	mov    %eax,(%ebx)
81003dcf:	8b 03                	mov    (%ebx),%eax
81003dd1:	89 43 10             	mov    %eax,0x10(%ebx)
81003dd4:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003ddb:	eb 5b                	jmp    81003e38 <__smakebuf_r+0xe6>
81003ddd:	8b 45 08             	mov    0x8(%ebp),%eax
81003de0:	c7 40 3c 99 18 00 81 	movl   $0x81001899,0x3c(%eax)
81003de7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003deb:	0c 80                	or     $0x80,%al
81003ded:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003df1:	89 33                	mov    %esi,(%ebx)
81003df3:	8b 03                	mov    (%ebx),%eax
81003df5:	89 43 10             	mov    %eax,0x10(%ebx)
81003df8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dfb:	89 43 14             	mov    %eax,0x14(%ebx)
81003dfe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e01:	85 c0                	test   %eax,%eax
81003e03:	74 26                	je     81003e2b <__smakebuf_r+0xd9>
81003e05:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003e09:	98                   	cwtl   
81003e0a:	83 ec 08             	sub    $0x8,%esp
81003e0d:	50                   	push   %eax
81003e0e:	ff 75 08             	pushl  0x8(%ebp)
81003e11:	e8 81 3a 00 00       	call   81007897 <_isatty_r>
81003e16:	83 c4 10             	add    $0x10,%esp
81003e19:	85 c0                	test   %eax,%eax
81003e1b:	74 0e                	je     81003e2b <__smakebuf_r+0xd9>
81003e1d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e21:	83 e0 fc             	and    $0xfffffffc,%eax
81003e24:	83 c8 01             	or     $0x1,%eax
81003e27:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e2b:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003e2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e32:	09 d0                	or     %edx,%eax
81003e34:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e38:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003e3b:	5b                   	pop    %ebx
81003e3c:	5e                   	pop    %esi
81003e3d:	5d                   	pop    %ebp
81003e3e:	c3                   	ret    

81003e3f <__swhatbuf_r>:
81003e3f:	55                   	push   %ebp
81003e40:	89 e5                	mov    %esp,%ebp
81003e42:	83 ec 58             	sub    $0x58,%esp
81003e45:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003e4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e4f:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e53:	66 85 c0             	test   %ax,%ax
81003e56:	78 1f                	js     81003e77 <__swhatbuf_r+0x38>
81003e58:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e5b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e5f:	98                   	cwtl   
81003e60:	83 ec 04             	sub    $0x4,%esp
81003e63:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003e66:	52                   	push   %edx
81003e67:	50                   	push   %eax
81003e68:	ff 75 08             	pushl  0x8(%ebp)
81003e6b:	e8 63 ea ff ff       	call   810028d3 <_fstat_r>
81003e70:	83 c4 10             	add    $0x10,%esp
81003e73:	85 c0                	test   %eax,%eax
81003e75:	79 35                	jns    81003eac <__swhatbuf_r+0x6d>
81003e77:	8b 45 14             	mov    0x14(%ebp),%eax
81003e7a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003e80:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e83:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e87:	98                   	cwtl   
81003e88:	25 80 00 00 00       	and    $0x80,%eax
81003e8d:	85 c0                	test   %eax,%eax
81003e8f:	74 0b                	je     81003e9c <__swhatbuf_r+0x5d>
81003e91:	8b 45 10             	mov    0x10(%ebp),%eax
81003e94:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003e9a:	eb 09                	jmp    81003ea5 <__swhatbuf_r+0x66>
81003e9c:	8b 45 10             	mov    0x10(%ebp),%eax
81003e9f:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ea5:	b8 00 00 00 00       	mov    $0x0,%eax
81003eaa:	eb 24                	jmp    81003ed0 <__swhatbuf_r+0x91>
81003eac:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003eaf:	25 00 f0 00 00       	and    $0xf000,%eax
81003eb4:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003eb9:	0f 94 c0             	sete   %al
81003ebc:	0f b6 d0             	movzbl %al,%edx
81003ebf:	8b 45 14             	mov    0x14(%ebp),%eax
81003ec2:	89 10                	mov    %edx,(%eax)
81003ec4:	8b 45 10             	mov    0x10(%ebp),%eax
81003ec7:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ecd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ed0:	c9                   	leave  
81003ed1:	c3                   	ret    

81003ed2 <malloc>:
81003ed2:	55                   	push   %ebp
81003ed3:	89 e5                	mov    %esp,%ebp
81003ed5:	83 ec 08             	sub    $0x8,%esp
81003ed8:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003edd:	83 ec 08             	sub    $0x8,%esp
81003ee0:	ff 75 08             	pushl  0x8(%ebp)
81003ee3:	50                   	push   %eax
81003ee4:	e8 b5 02 00 00       	call   8100419e <_malloc_r>
81003ee9:	83 c4 10             	add    $0x10,%esp
81003eec:	c9                   	leave  
81003eed:	c3                   	ret    

81003eee <free>:
81003eee:	55                   	push   %ebp
81003eef:	89 e5                	mov    %esp,%ebp
81003ef1:	83 ec 08             	sub    $0x8,%esp
81003ef4:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003ef9:	83 ec 08             	sub    $0x8,%esp
81003efc:	ff 75 08             	pushl  0x8(%ebp)
81003eff:	50                   	push   %eax
81003f00:	e8 84 df ff ff       	call   81001e89 <_free_r>
81003f05:	83 c4 10             	add    $0x10,%esp
81003f08:	90                   	nop
81003f09:	c9                   	leave  
81003f0a:	c3                   	ret    

81003f0b <malloc_extend_top>:
81003f0b:	55                   	push   %ebp
81003f0c:	89 e5                	mov    %esp,%ebp
81003f0e:	83 ec 38             	sub    $0x38,%esp
81003f11:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003f18:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81003f1d:	8b 40 08             	mov    0x8(%eax),%eax
81003f20:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f23:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003f26:	8b 40 04             	mov    0x4(%eax),%eax
81003f29:	83 e0 fc             	and    $0xfffffffc,%eax
81003f2c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f2f:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003f32:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f35:	01 d0                	add    %edx,%eax
81003f37:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f3a:	8b 15 a0 9b 00 81    	mov    0x81009ba0,%edx
81003f40:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f43:	01 d0                	add    %edx,%eax
81003f45:	83 c0 10             	add    $0x10,%eax
81003f48:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f4b:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003f52:	a1 cc 94 00 81       	mov    0x810094cc,%eax
81003f57:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f5a:	74 15                	je     81003f71 <malloc_extend_top+0x66>
81003f5c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f5f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f62:	01 d0                	add    %edx,%eax
81003f64:	8d 50 ff             	lea    -0x1(%eax),%edx
81003f67:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f6a:	f7 d8                	neg    %eax
81003f6c:	21 d0                	and    %edx,%eax
81003f6e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f71:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f74:	83 ec 08             	sub    $0x8,%esp
81003f77:	50                   	push   %eax
81003f78:	ff 75 08             	pushl  0x8(%ebp)
81003f7b:	e8 99 26 00 00       	call   81006619 <_sbrk_r>
81003f80:	83 c4 10             	add    $0x10,%esp
81003f83:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f86:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003f8a:	0f 84 0b 02 00 00    	je     8100419b <malloc_extend_top+0x290>
81003f90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f93:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f96:	73 0e                	jae    81003fa6 <malloc_extend_top+0x9b>
81003f98:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81003f9d:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003fa0:	0f 85 f5 01 00 00    	jne    8100419b <malloc_extend_top+0x290>
81003fa6:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81003fab:	89 c2                	mov    %eax,%edx
81003fad:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003fb0:	01 d0                	add    %edx,%eax
81003fb2:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
81003fb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fba:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fbd:	75 30                	jne    81003fef <malloc_extend_top+0xe4>
81003fbf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003fc2:	8d 50 ff             	lea    -0x1(%eax),%edx
81003fc5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003fc8:	21 d0                	and    %edx,%eax
81003fca:	85 c0                	test   %eax,%eax
81003fcc:	75 21                	jne    81003fef <malloc_extend_top+0xe4>
81003fce:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003fd1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fd4:	01 d0                	add    %edx,%eax
81003fd6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003fd9:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81003fde:	8b 40 08             	mov    0x8(%eax),%eax
81003fe1:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003fe4:	83 ca 01             	or     $0x1,%edx
81003fe7:	89 50 04             	mov    %edx,0x4(%eax)
81003fea:	e9 76 01 00 00       	jmp    81004165 <malloc_extend_top+0x25a>
81003fef:	a1 cc 94 00 81       	mov    0x810094cc,%eax
81003ff4:	83 f8 ff             	cmp    $0xffffffff,%eax
81003ff7:	75 0a                	jne    81004003 <malloc_extend_top+0xf8>
81003ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ffc:	a3 cc 94 00 81       	mov    %eax,0x810094cc
81004001:	eb 13                	jmp    81004016 <malloc_extend_top+0x10b>
81004003:	8b 15 c0 9b 00 81    	mov    0x81009bc0,%edx
81004009:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100400c:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100400f:	01 d0                	add    %edx,%eax
81004011:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
81004016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004019:	83 c0 08             	add    $0x8,%eax
8100401c:	83 e0 07             	and    $0x7,%eax
8100401f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004022:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81004026:	74 13                	je     8100403b <malloc_extend_top+0x130>
81004028:	b8 08 00 00 00       	mov    $0x8,%eax
8100402d:	2b 45 cc             	sub    -0x34(%ebp),%eax
81004030:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004033:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004036:	01 45 f4             	add    %eax,-0xc(%ebp)
81004039:	eb 07                	jmp    81004042 <malloc_extend_top+0x137>
8100403b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004042:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004045:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004048:	01 d0                	add    %edx,%eax
8100404a:	89 c2                	mov    %eax,%edx
8100404c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100404f:	83 e8 01             	sub    $0x1,%eax
81004052:	21 c2                	and    %eax,%edx
81004054:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004057:	29 d0                	sub    %edx,%eax
81004059:	01 45 f0             	add    %eax,-0x10(%ebp)
8100405c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100405f:	83 e8 01             	sub    $0x1,%eax
81004062:	21 45 f0             	and    %eax,-0x10(%ebp)
81004065:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004068:	83 ec 08             	sub    $0x8,%esp
8100406b:	50                   	push   %eax
8100406c:	ff 75 08             	pushl  0x8(%ebp)
8100406f:	e8 a5 25 00 00       	call   81006619 <_sbrk_r>
81004074:	83 c4 10             	add    $0x10,%esp
81004077:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100407a:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100407e:	75 28                	jne    810040a8 <malloc_extend_top+0x19d>
81004080:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004087:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100408e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004091:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004094:	01 d0                	add    %edx,%eax
81004096:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004099:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100409d:	74 09                	je     810040a8 <malloc_extend_top+0x19d>
8100409f:	8b 45 cc             	mov    -0x34(%ebp),%eax
810040a2:	83 e8 08             	sub    $0x8,%eax
810040a5:	01 45 ec             	add    %eax,-0x14(%ebp)
810040a8:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
810040ad:	89 c2                	mov    %eax,%edx
810040af:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040b2:	01 d0                	add    %edx,%eax
810040b4:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
810040b9:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810040be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040c1:	89 42 08             	mov    %eax,0x8(%edx)
810040c4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040c7:	2b 45 f4             	sub    -0xc(%ebp),%eax
810040ca:	89 c2                	mov    %eax,%edx
810040cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040cf:	01 d0                	add    %edx,%eax
810040d1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810040d4:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810040d9:	8b 40 08             	mov    0x8(%eax),%eax
810040dc:	8b 55 d0             	mov    -0x30(%ebp),%edx
810040df:	83 ca 01             	or     $0x1,%edx
810040e2:	89 50 04             	mov    %edx,0x4(%eax)
810040e5:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810040ea:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810040ed:	74 76                	je     81004165 <malloc_extend_top+0x25a>
810040ef:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810040f3:	77 14                	ja     81004109 <malloc_extend_top+0x1fe>
810040f5:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810040fa:	8b 40 08             	mov    0x8(%eax),%eax
810040fd:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81004104:	e9 93 00 00 00       	jmp    8100419c <malloc_extend_top+0x291>
81004109:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100410c:	83 e8 0c             	sub    $0xc,%eax
8100410f:	83 e0 f8             	and    $0xfffffff8,%eax
81004112:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004115:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004118:	8b 40 04             	mov    0x4(%eax),%eax
8100411b:	83 e0 01             	and    $0x1,%eax
8100411e:	0b 45 dc             	or     -0x24(%ebp),%eax
81004121:	89 c2                	mov    %eax,%edx
81004123:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004126:	89 50 04             	mov    %edx,0x4(%eax)
81004129:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100412c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100412f:	01 d0                	add    %edx,%eax
81004131:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81004138:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100413b:	8d 50 04             	lea    0x4(%eax),%edx
8100413e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004141:	01 d0                	add    %edx,%eax
81004143:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100414a:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100414e:	76 15                	jbe    81004165 <malloc_extend_top+0x25a>
81004150:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004153:	83 c0 08             	add    $0x8,%eax
81004156:	83 ec 08             	sub    $0x8,%esp
81004159:	50                   	push   %eax
8100415a:	ff 75 08             	pushl  0x8(%ebp)
8100415d:	e8 27 dd ff ff       	call   81001e89 <_free_r>
81004162:	83 c4 10             	add    $0x10,%esp
81004165:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
8100416a:	89 c2                	mov    %eax,%edx
8100416c:	a1 a4 9b 00 81       	mov    0x81009ba4,%eax
81004171:	39 c2                	cmp    %eax,%edx
81004173:	76 0a                	jbe    8100417f <malloc_extend_top+0x274>
81004175:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
8100417a:	a3 a4 9b 00 81       	mov    %eax,0x81009ba4
8100417f:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81004184:	89 c2                	mov    %eax,%edx
81004186:	a1 a8 9b 00 81       	mov    0x81009ba8,%eax
8100418b:	39 c2                	cmp    %eax,%edx
8100418d:	76 0d                	jbe    8100419c <malloc_extend_top+0x291>
8100418f:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81004194:	a3 a8 9b 00 81       	mov    %eax,0x81009ba8
81004199:	eb 01                	jmp    8100419c <malloc_extend_top+0x291>
8100419b:	90                   	nop
8100419c:	c9                   	leave  
8100419d:	c3                   	ret    

8100419e <_malloc_r>:
8100419e:	55                   	push   %ebp
8100419f:	89 e5                	mov    %esp,%ebp
810041a1:	53                   	push   %ebx
810041a2:	83 ec 44             	sub    $0x44,%esp
810041a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810041a8:	83 c0 0b             	add    $0xb,%eax
810041ab:	83 f8 16             	cmp    $0x16,%eax
810041ae:	76 0b                	jbe    810041bb <_malloc_r+0x1d>
810041b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810041b3:	83 c0 0b             	add    $0xb,%eax
810041b6:	83 e0 f8             	and    $0xfffffff8,%eax
810041b9:	eb 05                	jmp    810041c0 <_malloc_r+0x22>
810041bb:	b8 10 00 00 00       	mov    $0x10,%eax
810041c0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810041c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041c6:	85 c0                	test   %eax,%eax
810041c8:	78 08                	js     810041d2 <_malloc_r+0x34>
810041ca:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041cd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810041d0:	73 13                	jae    810041e5 <_malloc_r+0x47>
810041d2:	8b 45 08             	mov    0x8(%ebp),%eax
810041d5:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810041db:	b8 00 00 00 00       	mov    $0x0,%eax
810041e0:	e9 d6 07 00 00       	jmp    810049bb <_malloc_r+0x81d>
810041e5:	83 ec 0c             	sub    $0xc,%esp
810041e8:	ff 75 08             	pushl  0x8(%ebp)
810041eb:	e8 15 0a 00 00       	call   81004c05 <__malloc_lock>
810041f0:	83 c4 10             	add    $0x10,%esp
810041f3:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810041fa:	0f 87 b0 00 00 00    	ja     810042b0 <_malloc_r+0x112>
81004200:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004203:	c1 e8 03             	shr    $0x3,%eax
81004206:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004209:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100420c:	83 c0 01             	add    $0x1,%eax
8100420f:	01 c0                	add    %eax,%eax
81004211:	c1 e0 02             	shl    $0x2,%eax
81004214:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004219:	83 e8 08             	sub    $0x8,%eax
8100421c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100421f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004222:	8b 40 0c             	mov    0xc(%eax),%eax
81004225:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004228:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100422b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100422e:	75 0d                	jne    8100423d <_malloc_r+0x9f>
81004230:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81004234:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004237:	8b 40 0c             	mov    0xc(%eax),%eax
8100423a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100423d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004240:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004243:	74 62                	je     810042a7 <_malloc_r+0x109>
81004245:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004248:	8b 40 04             	mov    0x4(%eax),%eax
8100424b:	83 e0 fc             	and    $0xfffffffc,%eax
8100424e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004251:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004254:	8b 40 0c             	mov    0xc(%eax),%eax
81004257:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100425a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100425d:	8b 40 08             	mov    0x8(%eax),%eax
81004260:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004263:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004266:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004269:	89 50 0c             	mov    %edx,0xc(%eax)
8100426c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100426f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004272:	89 50 08             	mov    %edx,0x8(%eax)
81004275:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004278:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100427b:	01 d0                	add    %edx,%eax
8100427d:	8b 50 04             	mov    0x4(%eax),%edx
81004280:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004283:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004286:	01 c8                	add    %ecx,%eax
81004288:	83 ca 01             	or     $0x1,%edx
8100428b:	89 50 04             	mov    %edx,0x4(%eax)
8100428e:	83 ec 0c             	sub    $0xc,%esp
81004291:	ff 75 08             	pushl  0x8(%ebp)
81004294:	e8 72 09 00 00       	call   81004c0b <__malloc_unlock>
81004299:	83 c4 10             	add    $0x10,%esp
8100429c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100429f:	83 c0 08             	add    $0x8,%eax
810042a2:	e9 14 07 00 00       	jmp    810049bb <_malloc_r+0x81d>
810042a7:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810042ab:	e9 46 01 00 00       	jmp    810043f6 <_malloc_r+0x258>
810042b0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042b3:	c1 e8 09             	shr    $0x9,%eax
810042b6:	85 c0                	test   %eax,%eax
810042b8:	75 08                	jne    810042c2 <_malloc_r+0x124>
810042ba:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042bd:	c1 e8 03             	shr    $0x3,%eax
810042c0:	eb 77                	jmp    81004339 <_malloc_r+0x19b>
810042c2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042c5:	c1 e8 09             	shr    $0x9,%eax
810042c8:	83 f8 04             	cmp    $0x4,%eax
810042cb:	77 0b                	ja     810042d8 <_malloc_r+0x13a>
810042cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042d0:	c1 e8 06             	shr    $0x6,%eax
810042d3:	83 c0 38             	add    $0x38,%eax
810042d6:	eb 61                	jmp    81004339 <_malloc_r+0x19b>
810042d8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042db:	c1 e8 09             	shr    $0x9,%eax
810042de:	83 f8 14             	cmp    $0x14,%eax
810042e1:	77 0b                	ja     810042ee <_malloc_r+0x150>
810042e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042e6:	c1 e8 09             	shr    $0x9,%eax
810042e9:	83 c0 5b             	add    $0x5b,%eax
810042ec:	eb 4b                	jmp    81004339 <_malloc_r+0x19b>
810042ee:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042f1:	c1 e8 09             	shr    $0x9,%eax
810042f4:	83 f8 54             	cmp    $0x54,%eax
810042f7:	77 0b                	ja     81004304 <_malloc_r+0x166>
810042f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042fc:	c1 e8 0c             	shr    $0xc,%eax
810042ff:	83 c0 6e             	add    $0x6e,%eax
81004302:	eb 35                	jmp    81004339 <_malloc_r+0x19b>
81004304:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004307:	c1 e8 09             	shr    $0x9,%eax
8100430a:	3d 54 01 00 00       	cmp    $0x154,%eax
8100430f:	77 0b                	ja     8100431c <_malloc_r+0x17e>
81004311:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004314:	c1 e8 0f             	shr    $0xf,%eax
81004317:	83 c0 77             	add    $0x77,%eax
8100431a:	eb 1d                	jmp    81004339 <_malloc_r+0x19b>
8100431c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100431f:	c1 e8 09             	shr    $0x9,%eax
81004322:	3d 54 05 00 00       	cmp    $0x554,%eax
81004327:	77 0b                	ja     81004334 <_malloc_r+0x196>
81004329:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100432c:	c1 e8 12             	shr    $0x12,%eax
8100432f:	83 c0 7c             	add    $0x7c,%eax
81004332:	eb 05                	jmp    81004339 <_malloc_r+0x19b>
81004334:	b8 7e 00 00 00       	mov    $0x7e,%eax
81004339:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100433c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100433f:	83 c0 01             	add    $0x1,%eax
81004342:	01 c0                	add    %eax,%eax
81004344:	c1 e0 02             	shl    $0x2,%eax
81004347:	05 c0 90 00 81       	add    $0x810090c0,%eax
8100434c:	83 e8 08             	sub    $0x8,%eax
8100434f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004352:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004355:	8b 40 0c             	mov    0xc(%eax),%eax
81004358:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100435b:	e9 86 00 00 00       	jmp    810043e6 <_malloc_r+0x248>
81004360:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004363:	8b 40 04             	mov    0x4(%eax),%eax
81004366:	83 e0 fc             	and    $0xfffffffc,%eax
81004369:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100436c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100436f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004372:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004375:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004379:	7e 06                	jle    81004381 <_malloc_r+0x1e3>
8100437b:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100437f:	eb 71                	jmp    810043f2 <_malloc_r+0x254>
81004381:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004385:	78 56                	js     810043dd <_malloc_r+0x23f>
81004387:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100438a:	8b 40 0c             	mov    0xc(%eax),%eax
8100438d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004390:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004393:	8b 40 08             	mov    0x8(%eax),%eax
81004396:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004399:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100439c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100439f:	89 50 0c             	mov    %edx,0xc(%eax)
810043a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810043a5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810043a8:	89 50 08             	mov    %edx,0x8(%eax)
810043ab:	8b 55 f4             	mov    -0xc(%ebp),%edx
810043ae:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043b1:	01 d0                	add    %edx,%eax
810043b3:	8b 50 04             	mov    0x4(%eax),%edx
810043b6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810043b9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043bc:	01 c8                	add    %ecx,%eax
810043be:	83 ca 01             	or     $0x1,%edx
810043c1:	89 50 04             	mov    %edx,0x4(%eax)
810043c4:	83 ec 0c             	sub    $0xc,%esp
810043c7:	ff 75 08             	pushl  0x8(%ebp)
810043ca:	e8 3c 08 00 00       	call   81004c0b <__malloc_unlock>
810043cf:	83 c4 10             	add    $0x10,%esp
810043d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043d5:	83 c0 08             	add    $0x8,%eax
810043d8:	e9 de 05 00 00       	jmp    810049bb <_malloc_r+0x81d>
810043dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043e0:	8b 40 0c             	mov    0xc(%eax),%eax
810043e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043e9:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810043ec:	0f 85 6e ff ff ff    	jne    81004360 <_malloc_r+0x1c2>
810043f2:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810043f6:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
810043fb:	8b 40 08             	mov    0x8(%eax),%eax
810043fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004401:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
81004406:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81004409:	0f 84 9c 02 00 00    	je     810046ab <_malloc_r+0x50d>
8100440f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004412:	8b 40 04             	mov    0x4(%eax),%eax
81004415:	83 e0 fc             	and    $0xfffffffc,%eax
81004418:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100441b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100441e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004421:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004424:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004428:	7e 7a                	jle    810044a4 <_malloc_r+0x306>
8100442a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100442d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004430:	01 d0                	add    %edx,%eax
81004432:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004435:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004438:	83 c8 01             	or     $0x1,%eax
8100443b:	89 c2                	mov    %eax,%edx
8100443d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004440:	89 50 04             	mov    %edx,0x4(%eax)
81004443:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
81004448:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100444b:	89 50 0c             	mov    %edx,0xc(%eax)
8100444e:	ba c8 90 00 81       	mov    $0x810090c8,%edx
81004453:	8b 40 0c             	mov    0xc(%eax),%eax
81004456:	89 42 08             	mov    %eax,0x8(%edx)
81004459:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100445e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004461:	89 50 0c             	mov    %edx,0xc(%eax)
81004464:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004467:	8b 50 0c             	mov    0xc(%eax),%edx
8100446a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100446d:	89 50 08             	mov    %edx,0x8(%eax)
81004470:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004473:	83 c8 01             	or     $0x1,%eax
81004476:	89 c2                	mov    %eax,%edx
81004478:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100447b:	89 50 04             	mov    %edx,0x4(%eax)
8100447e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004481:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004484:	01 c2                	add    %eax,%edx
81004486:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004489:	89 02                	mov    %eax,(%edx)
8100448b:	83 ec 0c             	sub    $0xc,%esp
8100448e:	ff 75 08             	pushl  0x8(%ebp)
81004491:	e8 75 07 00 00       	call   81004c0b <__malloc_unlock>
81004496:	83 c4 10             	add    $0x10,%esp
81004499:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100449c:	83 c0 08             	add    $0x8,%eax
8100449f:	e9 17 05 00 00       	jmp    810049bb <_malloc_r+0x81d>
810044a4:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
810044a9:	ba c8 90 00 81       	mov    $0x810090c8,%edx
810044ae:	89 50 0c             	mov    %edx,0xc(%eax)
810044b1:	ba c8 90 00 81       	mov    $0x810090c8,%edx
810044b6:	8b 40 0c             	mov    0xc(%eax),%eax
810044b9:	89 42 08             	mov    %eax,0x8(%edx)
810044bc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810044c0:	78 32                	js     810044f4 <_malloc_r+0x356>
810044c2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810044c5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044c8:	01 d0                	add    %edx,%eax
810044ca:	8b 50 04             	mov    0x4(%eax),%edx
810044cd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810044d0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044d3:	01 c8                	add    %ecx,%eax
810044d5:	83 ca 01             	or     $0x1,%edx
810044d8:	89 50 04             	mov    %edx,0x4(%eax)
810044db:	83 ec 0c             	sub    $0xc,%esp
810044de:	ff 75 08             	pushl  0x8(%ebp)
810044e1:	e8 25 07 00 00       	call   81004c0b <__malloc_unlock>
810044e6:	83 c4 10             	add    $0x10,%esp
810044e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044ec:	83 c0 08             	add    $0x8,%eax
810044ef:	e9 c7 04 00 00       	jmp    810049bb <_malloc_r+0x81d>
810044f4:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810044fb:	77 7f                	ja     8100457c <_malloc_r+0x3de>
810044fd:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004500:	c1 e8 03             	shr    $0x3,%eax
81004503:	89 45 c8             	mov    %eax,-0x38(%ebp)
81004506:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
8100450b:	8b 58 04             	mov    0x4(%eax),%ebx
8100450e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004511:	8d 50 03             	lea    0x3(%eax),%edx
81004514:	85 c0                	test   %eax,%eax
81004516:	0f 48 c2             	cmovs  %edx,%eax
81004519:	c1 f8 02             	sar    $0x2,%eax
8100451c:	ba 01 00 00 00       	mov    $0x1,%edx
81004521:	89 c1                	mov    %eax,%ecx
81004523:	d3 e2                	shl    %cl,%edx
81004525:	89 d0                	mov    %edx,%eax
81004527:	ba c0 90 00 81       	mov    $0x810090c0,%edx
8100452c:	09 d8                	or     %ebx,%eax
8100452e:	89 42 04             	mov    %eax,0x4(%edx)
81004531:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004534:	83 c0 01             	add    $0x1,%eax
81004537:	01 c0                	add    %eax,%eax
81004539:	c1 e0 02             	shl    $0x2,%eax
8100453c:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004541:	83 e8 08             	sub    $0x8,%eax
81004544:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004547:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100454a:	8b 40 08             	mov    0x8(%eax),%eax
8100454d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004550:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004553:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004556:	89 50 0c             	mov    %edx,0xc(%eax)
81004559:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100455c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100455f:	89 50 08             	mov    %edx,0x8(%eax)
81004562:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004565:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004568:	89 50 08             	mov    %edx,0x8(%eax)
8100456b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100456e:	8b 50 08             	mov    0x8(%eax),%edx
81004571:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004574:	89 50 0c             	mov    %edx,0xc(%eax)
81004577:	e9 2f 01 00 00       	jmp    810046ab <_malloc_r+0x50d>
8100457c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100457f:	c1 e8 09             	shr    $0x9,%eax
81004582:	85 c0                	test   %eax,%eax
81004584:	75 08                	jne    8100458e <_malloc_r+0x3f0>
81004586:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004589:	c1 e8 03             	shr    $0x3,%eax
8100458c:	eb 77                	jmp    81004605 <_malloc_r+0x467>
8100458e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004591:	c1 e8 09             	shr    $0x9,%eax
81004594:	83 f8 04             	cmp    $0x4,%eax
81004597:	77 0b                	ja     810045a4 <_malloc_r+0x406>
81004599:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100459c:	c1 e8 06             	shr    $0x6,%eax
8100459f:	83 c0 38             	add    $0x38,%eax
810045a2:	eb 61                	jmp    81004605 <_malloc_r+0x467>
810045a4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045a7:	c1 e8 09             	shr    $0x9,%eax
810045aa:	83 f8 14             	cmp    $0x14,%eax
810045ad:	77 0b                	ja     810045ba <_malloc_r+0x41c>
810045af:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045b2:	c1 e8 09             	shr    $0x9,%eax
810045b5:	83 c0 5b             	add    $0x5b,%eax
810045b8:	eb 4b                	jmp    81004605 <_malloc_r+0x467>
810045ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045bd:	c1 e8 09             	shr    $0x9,%eax
810045c0:	83 f8 54             	cmp    $0x54,%eax
810045c3:	77 0b                	ja     810045d0 <_malloc_r+0x432>
810045c5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045c8:	c1 e8 0c             	shr    $0xc,%eax
810045cb:	83 c0 6e             	add    $0x6e,%eax
810045ce:	eb 35                	jmp    81004605 <_malloc_r+0x467>
810045d0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045d3:	c1 e8 09             	shr    $0x9,%eax
810045d6:	3d 54 01 00 00       	cmp    $0x154,%eax
810045db:	77 0b                	ja     810045e8 <_malloc_r+0x44a>
810045dd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045e0:	c1 e8 0f             	shr    $0xf,%eax
810045e3:	83 c0 77             	add    $0x77,%eax
810045e6:	eb 1d                	jmp    81004605 <_malloc_r+0x467>
810045e8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045eb:	c1 e8 09             	shr    $0x9,%eax
810045ee:	3d 54 05 00 00       	cmp    $0x554,%eax
810045f3:	77 0b                	ja     81004600 <_malloc_r+0x462>
810045f5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045f8:	c1 e8 12             	shr    $0x12,%eax
810045fb:	83 c0 7c             	add    $0x7c,%eax
810045fe:	eb 05                	jmp    81004605 <_malloc_r+0x467>
81004600:	b8 7e 00 00 00       	mov    $0x7e,%eax
81004605:	89 45 c8             	mov    %eax,-0x38(%ebp)
81004608:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100460b:	83 c0 01             	add    $0x1,%eax
8100460e:	01 c0                	add    %eax,%eax
81004610:	c1 e0 02             	shl    $0x2,%eax
81004613:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004618:	83 e8 08             	sub    $0x8,%eax
8100461b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100461e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004621:	8b 40 08             	mov    0x8(%eax),%eax
81004624:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004627:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100462a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100462d:	75 36                	jne    81004665 <_malloc_r+0x4c7>
8100462f:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004634:	8b 58 04             	mov    0x4(%eax),%ebx
81004637:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100463a:	8d 50 03             	lea    0x3(%eax),%edx
8100463d:	85 c0                	test   %eax,%eax
8100463f:	0f 48 c2             	cmovs  %edx,%eax
81004642:	c1 f8 02             	sar    $0x2,%eax
81004645:	ba 01 00 00 00       	mov    $0x1,%edx
8100464a:	89 c1                	mov    %eax,%ecx
8100464c:	d3 e2                	shl    %cl,%edx
8100464e:	89 d0                	mov    %edx,%eax
81004650:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81004655:	09 d8                	or     %ebx,%eax
81004657:	89 42 04             	mov    %eax,0x4(%edx)
8100465a:	eb 28                	jmp    81004684 <_malloc_r+0x4e6>
8100465c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100465f:	8b 40 08             	mov    0x8(%eax),%eax
81004662:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004665:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004668:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100466b:	74 0e                	je     8100467b <_malloc_r+0x4dd>
8100466d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004670:	8b 40 04             	mov    0x4(%eax),%eax
81004673:	83 e0 fc             	and    $0xfffffffc,%eax
81004676:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81004679:	72 e1                	jb     8100465c <_malloc_r+0x4be>
8100467b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100467e:	8b 40 0c             	mov    0xc(%eax),%eax
81004681:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004684:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004687:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100468a:	89 50 0c             	mov    %edx,0xc(%eax)
8100468d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004690:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004693:	89 50 08             	mov    %edx,0x8(%eax)
81004696:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004699:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100469c:	89 50 08             	mov    %edx,0x8(%eax)
8100469f:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046a2:	8b 50 08             	mov    0x8(%eax),%edx
810046a5:	8b 45 dc             	mov    -0x24(%ebp),%eax
810046a8:	89 50 0c             	mov    %edx,0xc(%eax)
810046ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046ae:	8d 50 03             	lea    0x3(%eax),%edx
810046b1:	85 c0                	test   %eax,%eax
810046b3:	0f 48 c2             	cmovs  %edx,%eax
810046b6:	c1 f8 02             	sar    $0x2,%eax
810046b9:	ba 01 00 00 00       	mov    $0x1,%edx
810046be:	89 c1                	mov    %eax,%ecx
810046c0:	d3 e2                	shl    %cl,%edx
810046c2:	89 d0                	mov    %edx,%eax
810046c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810046c7:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810046cc:	8b 40 04             	mov    0x4(%eax),%eax
810046cf:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810046d2:	0f 87 13 02 00 00    	ja     810048eb <_malloc_r+0x74d>
810046d8:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810046dd:	8b 40 04             	mov    0x4(%eax),%eax
810046e0:	23 45 e4             	and    -0x1c(%ebp),%eax
810046e3:	85 c0                	test   %eax,%eax
810046e5:	75 27                	jne    8100470e <_malloc_r+0x570>
810046e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046ea:	83 e0 fc             	and    $0xfffffffc,%eax
810046ed:	83 c0 04             	add    $0x4,%eax
810046f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810046f3:	d1 65 e4             	shll   -0x1c(%ebp)
810046f6:	eb 07                	jmp    810046ff <_malloc_r+0x561>
810046f8:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810046fc:	d1 65 e4             	shll   -0x1c(%ebp)
810046ff:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004704:	8b 40 04             	mov    0x4(%eax),%eax
81004707:	23 45 e4             	and    -0x1c(%ebp),%eax
8100470a:	85 c0                	test   %eax,%eax
8100470c:	74 ea                	je     810046f8 <_malloc_r+0x55a>
8100470e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004711:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004714:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004717:	83 c0 01             	add    $0x1,%eax
8100471a:	01 c0                	add    %eax,%eax
8100471c:	c1 e0 02             	shl    $0x2,%eax
8100471f:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004724:	83 e8 08             	sub    $0x8,%eax
81004727:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100472a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100472d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004730:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004733:	8b 40 0c             	mov    0xc(%eax),%eax
81004736:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004739:	e9 22 01 00 00       	jmp    81004860 <_malloc_r+0x6c2>
8100473e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004741:	8b 40 04             	mov    0x4(%eax),%eax
81004744:	83 e0 fc             	and    $0xfffffffc,%eax
81004747:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100474a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100474d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004750:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004753:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004757:	0f 8e 9e 00 00 00    	jle    810047fb <_malloc_r+0x65d>
8100475d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004760:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004763:	01 d0                	add    %edx,%eax
81004765:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004768:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100476b:	83 c8 01             	or     $0x1,%eax
8100476e:	89 c2                	mov    %eax,%edx
81004770:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004773:	89 50 04             	mov    %edx,0x4(%eax)
81004776:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004779:	8b 40 0c             	mov    0xc(%eax),%eax
8100477c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100477f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004782:	8b 40 08             	mov    0x8(%eax),%eax
81004785:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004788:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100478b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100478e:	89 50 0c             	mov    %edx,0xc(%eax)
81004791:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004794:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004797:	89 50 08             	mov    %edx,0x8(%eax)
8100479a:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
8100479f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810047a2:	89 50 0c             	mov    %edx,0xc(%eax)
810047a5:	ba c8 90 00 81       	mov    $0x810090c8,%edx
810047aa:	8b 40 0c             	mov    0xc(%eax),%eax
810047ad:	89 42 08             	mov    %eax,0x8(%edx)
810047b0:	ba c8 90 00 81       	mov    $0x810090c8,%edx
810047b5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047b8:	89 50 0c             	mov    %edx,0xc(%eax)
810047bb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047be:	8b 50 0c             	mov    0xc(%eax),%edx
810047c1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047c4:	89 50 08             	mov    %edx,0x8(%eax)
810047c7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047ca:	83 c8 01             	or     $0x1,%eax
810047cd:	89 c2                	mov    %eax,%edx
810047cf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047d2:	89 50 04             	mov    %edx,0x4(%eax)
810047d5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810047d8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047db:	01 c2                	add    %eax,%edx
810047dd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047e0:	89 02                	mov    %eax,(%edx)
810047e2:	83 ec 0c             	sub    $0xc,%esp
810047e5:	ff 75 08             	pushl  0x8(%ebp)
810047e8:	e8 1e 04 00 00       	call   81004c0b <__malloc_unlock>
810047ed:	83 c4 10             	add    $0x10,%esp
810047f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047f3:	83 c0 08             	add    $0x8,%eax
810047f6:	e9 c0 01 00 00       	jmp    810049bb <_malloc_r+0x81d>
810047fb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810047ff:	78 56                	js     81004857 <_malloc_r+0x6b9>
81004801:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004804:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004807:	01 d0                	add    %edx,%eax
81004809:	8b 50 04             	mov    0x4(%eax),%edx
8100480c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100480f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004812:	01 c8                	add    %ecx,%eax
81004814:	83 ca 01             	or     $0x1,%edx
81004817:	89 50 04             	mov    %edx,0x4(%eax)
8100481a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100481d:	8b 40 0c             	mov    0xc(%eax),%eax
81004820:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004823:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004826:	8b 40 08             	mov    0x8(%eax),%eax
81004829:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100482c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100482f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004832:	89 50 0c             	mov    %edx,0xc(%eax)
81004835:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004838:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100483b:	89 50 08             	mov    %edx,0x8(%eax)
8100483e:	83 ec 0c             	sub    $0xc,%esp
81004841:	ff 75 08             	pushl  0x8(%ebp)
81004844:	e8 c2 03 00 00       	call   81004c0b <__malloc_unlock>
81004849:	83 c4 10             	add    $0x10,%esp
8100484c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100484f:	83 c0 08             	add    $0x8,%eax
81004852:	e9 64 01 00 00       	jmp    810049bb <_malloc_r+0x81d>
81004857:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100485a:	8b 40 0c             	mov    0xc(%eax),%eax
8100485d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004860:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004863:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81004866:	0f 85 d2 fe ff ff    	jne    8100473e <_malloc_r+0x5a0>
8100486c:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004870:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004874:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004877:	83 e0 03             	and    $0x3,%eax
8100487a:	85 c0                	test   %eax,%eax
8100487c:	0f 85 ae fe ff ff    	jne    81004730 <_malloc_r+0x592>
81004882:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004885:	83 e0 03             	and    $0x3,%eax
81004888:	85 c0                	test   %eax,%eax
8100488a:	75 19                	jne    810048a5 <_malloc_r+0x707>
8100488c:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004891:	8b 48 04             	mov    0x4(%eax),%ecx
81004894:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004897:	f7 d0                	not    %eax
81004899:	ba c0 90 00 81       	mov    $0x810090c0,%edx
8100489e:	21 c8                	and    %ecx,%eax
810048a0:	89 42 04             	mov    %eax,0x4(%edx)
810048a3:	eb 13                	jmp    810048b8 <_malloc_r+0x71a>
810048a5:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810048a9:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810048ad:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810048b0:	8b 40 08             	mov    0x8(%eax),%eax
810048b3:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810048b6:	74 ca                	je     81004882 <_malloc_r+0x6e4>
810048b8:	d1 65 e4             	shll   -0x1c(%ebp)
810048bb:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048c0:	8b 40 04             	mov    0x4(%eax),%eax
810048c3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810048c6:	77 23                	ja     810048eb <_malloc_r+0x74d>
810048c8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048cc:	74 1d                	je     810048eb <_malloc_r+0x74d>
810048ce:	eb 07                	jmp    810048d7 <_malloc_r+0x739>
810048d0:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810048d4:	d1 65 e4             	shll   -0x1c(%ebp)
810048d7:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048dc:	8b 40 04             	mov    0x4(%eax),%eax
810048df:	23 45 e4             	and    -0x1c(%ebp),%eax
810048e2:	85 c0                	test   %eax,%eax
810048e4:	74 ea                	je     810048d0 <_malloc_r+0x732>
810048e6:	e9 23 fe ff ff       	jmp    8100470e <_malloc_r+0x570>
810048eb:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048f0:	8b 40 08             	mov    0x8(%eax),%eax
810048f3:	8b 40 04             	mov    0x4(%eax),%eax
810048f6:	83 e0 fc             	and    $0xfffffffc,%eax
810048f9:	2b 45 d0             	sub    -0x30(%ebp),%eax
810048fc:	89 45 e8             	mov    %eax,-0x18(%ebp)
810048ff:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004904:	8b 40 08             	mov    0x8(%eax),%eax
81004907:	8b 40 04             	mov    0x4(%eax),%eax
8100490a:	83 e0 fc             	and    $0xfffffffc,%eax
8100490d:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004910:	77 06                	ja     81004918 <_malloc_r+0x77a>
81004912:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004916:	7f 53                	jg     8100496b <_malloc_r+0x7cd>
81004918:	83 ec 08             	sub    $0x8,%esp
8100491b:	ff 75 d0             	pushl  -0x30(%ebp)
8100491e:	ff 75 08             	pushl  0x8(%ebp)
81004921:	e8 e5 f5 ff ff       	call   81003f0b <malloc_extend_top>
81004926:	83 c4 10             	add    $0x10,%esp
81004929:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
8100492e:	8b 40 08             	mov    0x8(%eax),%eax
81004931:	8b 40 04             	mov    0x4(%eax),%eax
81004934:	83 e0 fc             	and    $0xfffffffc,%eax
81004937:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100493a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100493d:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004942:	8b 40 08             	mov    0x8(%eax),%eax
81004945:	8b 40 04             	mov    0x4(%eax),%eax
81004948:	83 e0 fc             	and    $0xfffffffc,%eax
8100494b:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100494e:	77 06                	ja     81004956 <_malloc_r+0x7b8>
81004950:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004954:	7f 15                	jg     8100496b <_malloc_r+0x7cd>
81004956:	83 ec 0c             	sub    $0xc,%esp
81004959:	ff 75 08             	pushl  0x8(%ebp)
8100495c:	e8 aa 02 00 00       	call   81004c0b <__malloc_unlock>
81004961:	83 c4 10             	add    $0x10,%esp
81004964:	b8 00 00 00 00       	mov    $0x0,%eax
81004969:	eb 50                	jmp    810049bb <_malloc_r+0x81d>
8100496b:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004970:	8b 40 08             	mov    0x8(%eax),%eax
81004973:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004976:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004979:	83 c8 01             	or     $0x1,%eax
8100497c:	89 c2                	mov    %eax,%edx
8100497e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004981:	89 50 04             	mov    %edx,0x4(%eax)
81004984:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81004989:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100498c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100498f:	01 c8                	add    %ecx,%eax
81004991:	89 42 08             	mov    %eax,0x8(%edx)
81004994:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004997:	83 c8 01             	or     $0x1,%eax
8100499a:	89 c2                	mov    %eax,%edx
8100499c:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810049a1:	8b 40 08             	mov    0x8(%eax),%eax
810049a4:	89 50 04             	mov    %edx,0x4(%eax)
810049a7:	83 ec 0c             	sub    $0xc,%esp
810049aa:	ff 75 08             	pushl  0x8(%ebp)
810049ad:	e8 59 02 00 00       	call   81004c0b <__malloc_unlock>
810049b2:	83 c4 10             	add    $0x10,%esp
810049b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049b8:	83 c0 08             	add    $0x8,%eax
810049bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810049be:	c9                   	leave  
810049bf:	c3                   	ret    

810049c0 <memchr>:
810049c0:	55                   	push   %ebp
810049c1:	89 e5                	mov    %esp,%ebp
810049c3:	57                   	push   %edi
810049c4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810049c8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810049cb:	8b 7d 08             	mov    0x8(%ebp),%edi
810049ce:	31 d2                	xor    %edx,%edx
810049d0:	85 c9                	test   %ecx,%ecx
810049d2:	74 79                	je     81004a4d <L20>
810049d4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049da:	74 28                	je     81004a04 <L5>
810049dc:	3a 07                	cmp    (%edi),%al
810049de:	74 6a                	je     81004a4a <L15>
810049e0:	47                   	inc    %edi
810049e1:	49                   	dec    %ecx
810049e2:	74 69                	je     81004a4d <L20>
810049e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049ea:	74 18                	je     81004a04 <L5>
810049ec:	3a 07                	cmp    (%edi),%al
810049ee:	74 5a                	je     81004a4a <L15>
810049f0:	47                   	inc    %edi
810049f1:	49                   	dec    %ecx
810049f2:	74 59                	je     81004a4d <L20>
810049f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049fa:	74 08                	je     81004a04 <L5>
810049fc:	3a 07                	cmp    (%edi),%al
810049fe:	74 4a                	je     81004a4a <L15>
81004a00:	47                   	inc    %edi
81004a01:	49                   	dec    %ecx
81004a02:	74 49                	je     81004a4d <L20>

81004a04 <L5>:
81004a04:	88 c4                	mov    %al,%ah
81004a06:	89 c2                	mov    %eax,%edx
81004a08:	c1 e2 10             	shl    $0x10,%edx
81004a0b:	09 d0                	or     %edx,%eax
81004a0d:	53                   	push   %ebx
81004a0e:	66 90                	xchg   %ax,%ax

81004a10 <L8>:
81004a10:	83 e9 04             	sub    $0x4,%ecx
81004a13:	72 1c                	jb     81004a31 <L9>
81004a15:	8b 17                	mov    (%edi),%edx
81004a17:	83 c7 04             	add    $0x4,%edi
81004a1a:	31 c2                	xor    %eax,%edx
81004a1c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004a22:	f7 d2                	not    %edx
81004a24:	21 d3                	and    %edx,%ebx
81004a26:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81004a2c:	74 e2                	je     81004a10 <L8>
81004a2e:	83 ef 04             	sub    $0x4,%edi

81004a31 <L9>:
81004a31:	5b                   	pop    %ebx
81004a32:	31 d2                	xor    %edx,%edx
81004a34:	83 c1 04             	add    $0x4,%ecx
81004a37:	74 14                	je     81004a4d <L20>
81004a39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004a40 <L10>:
81004a40:	3a 07                	cmp    (%edi),%al
81004a42:	74 06                	je     81004a4a <L15>
81004a44:	47                   	inc    %edi
81004a45:	49                   	dec    %ecx
81004a46:	75 f8                	jne    81004a40 <L10>
81004a48:	31 ff                	xor    %edi,%edi

81004a4a <L15>:
81004a4a:	4a                   	dec    %edx
81004a4b:	21 fa                	and    %edi,%edx

81004a4d <L20>:
81004a4d:	89 d0                	mov    %edx,%eax
81004a4f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004a52:	5f                   	pop    %edi
81004a53:	c9                   	leave  
81004a54:	c3                   	ret    

81004a55 <memcmp>:
81004a55:	55                   	push   %ebp
81004a56:	89 e5                	mov    %esp,%ebp
81004a58:	83 ec 10             	sub    $0x10,%esp
81004a5b:	53                   	push   %ebx
81004a5c:	57                   	push   %edi
81004a5d:	56                   	push   %esi
81004a5e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a61:	8b 75 0c             	mov    0xc(%ebp),%esi
81004a64:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a67:	fc                   	cld    
81004a68:	31 c0                	xor    %eax,%eax
81004a6a:	85 c9                	test   %ecx,%ecx
81004a6c:	74 31                	je     81004a9f <L4>
81004a6e:	89 f8                	mov    %edi,%eax
81004a70:	09 f0                	or     %esi,%eax
81004a72:	a8 03                	test   $0x3,%al
81004a74:	75 1b                	jne    81004a91 <BYTECMP>
81004a76:	89 cb                	mov    %ecx,%ebx
81004a78:	c1 e9 02             	shr    $0x2,%ecx
81004a7b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81004a7d:	74 0d                	je     81004a8c <L5>
81004a7f:	83 ee 04             	sub    $0x4,%esi
81004a82:	83 ef 04             	sub    $0x4,%edi
81004a85:	b9 04 00 00 00       	mov    $0x4,%ecx
81004a8a:	eb 05                	jmp    81004a91 <BYTECMP>

81004a8c <L5>:
81004a8c:	83 e3 03             	and    $0x3,%ebx
81004a8f:	89 d9                	mov    %ebx,%ecx

81004a91 <BYTECMP>:
81004a91:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004a93 <L3>:
81004a93:	31 d2                	xor    %edx,%edx
81004a95:	8a 56 ff             	mov    -0x1(%esi),%dl
81004a98:	31 c0                	xor    %eax,%eax
81004a9a:	8a 47 ff             	mov    -0x1(%edi),%al
81004a9d:	29 d0                	sub    %edx,%eax

81004a9f <L4>:
81004a9f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004aa2:	5e                   	pop    %esi
81004aa3:	5f                   	pop    %edi
81004aa4:	5b                   	pop    %ebx
81004aa5:	c9                   	leave  
81004aa6:	c3                   	ret    
81004aa7:	90                   	nop

81004aa8 <memcpy>:
81004aa8:	55                   	push   %ebp
81004aa9:	89 e5                	mov    %esp,%ebp
81004aab:	56                   	push   %esi
81004aac:	57                   	push   %edi
81004aad:	53                   	push   %ebx
81004aae:	8b 7d 08             	mov    0x8(%ebp),%edi
81004ab1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004ab4:	8b 75 0c             	mov    0xc(%ebp),%esi
81004ab7:	fc                   	cld    
81004ab8:	83 f9 08             	cmp    $0x8,%ecx
81004abb:	76 26                	jbe    81004ae3 <memcpy+0x3b>
81004abd:	89 fa                	mov    %edi,%edx
81004abf:	89 cb                	mov    %ecx,%ebx
81004ac1:	83 e2 03             	and    $0x3,%edx
81004ac4:	74 10                	je     81004ad6 <memcpy+0x2e>
81004ac6:	b9 04 00 00 00       	mov    $0x4,%ecx
81004acb:	29 d1                	sub    %edx,%ecx
81004acd:	83 e1 03             	and    $0x3,%ecx
81004ad0:	29 cb                	sub    %ecx,%ebx
81004ad2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ad4:	89 d9                	mov    %ebx,%ecx
81004ad6:	c1 e9 02             	shr    $0x2,%ecx
81004ad9:	8d 76 00             	lea    0x0(%esi),%esi
81004adc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004ade:	89 d9                	mov    %ebx,%ecx
81004ae0:	83 e1 03             	and    $0x3,%ecx
81004ae3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ae5:	8b 45 08             	mov    0x8(%ebp),%eax
81004ae8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004aeb:	5b                   	pop    %ebx
81004aec:	5f                   	pop    %edi
81004aed:	5e                   	pop    %esi
81004aee:	c9                   	leave  
81004aef:	c3                   	ret    

81004af0 <memmove>:
81004af0:	55                   	push   %ebp
81004af1:	89 e5                	mov    %esp,%ebp
81004af3:	56                   	push   %esi
81004af4:	57                   	push   %edi
81004af5:	53                   	push   %ebx
81004af6:	8b 7d 08             	mov    0x8(%ebp),%edi
81004af9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004afc:	8b 75 0c             	mov    0xc(%ebp),%esi
81004aff:	fc                   	cld    
81004b00:	39 fe                	cmp    %edi,%esi
81004b02:	73 43                	jae    81004b47 <memmove+0x57>
81004b04:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004b08:	39 df                	cmp    %ebx,%edi
81004b0a:	77 3b                	ja     81004b47 <memmove+0x57>
81004b0c:	01 ce                	add    %ecx,%esi
81004b0e:	01 cf                	add    %ecx,%edi
81004b10:	fd                   	std    
81004b11:	83 f9 08             	cmp    $0x8,%ecx
81004b14:	76 2b                	jbe    81004b41 <memmove+0x51>
81004b16:	89 fa                	mov    %edi,%edx
81004b18:	89 cb                	mov    %ecx,%ebx
81004b1a:	83 e2 03             	and    $0x3,%edx
81004b1d:	74 0c                	je     81004b2b <memmove+0x3b>
81004b1f:	89 d1                	mov    %edx,%ecx
81004b21:	4e                   	dec    %esi
81004b22:	4f                   	dec    %edi
81004b23:	29 cb                	sub    %ecx,%ebx
81004b25:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b27:	89 d9                	mov    %ebx,%ecx
81004b29:	46                   	inc    %esi
81004b2a:	47                   	inc    %edi
81004b2b:	c1 e9 02             	shr    $0x2,%ecx
81004b2e:	83 ee 04             	sub    $0x4,%esi
81004b31:	83 ef 04             	sub    $0x4,%edi
81004b34:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b36:	83 c6 04             	add    $0x4,%esi
81004b39:	83 c7 04             	add    $0x4,%edi
81004b3c:	89 d9                	mov    %ebx,%ecx
81004b3e:	83 e1 03             	and    $0x3,%ecx
81004b41:	4e                   	dec    %esi
81004b42:	4f                   	dec    %edi
81004b43:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b45:	eb 2a                	jmp    81004b71 <memmove+0x81>
81004b47:	83 f9 08             	cmp    $0x8,%ecx
81004b4a:	76 23                	jbe    81004b6f <memmove+0x7f>
81004b4c:	89 fa                	mov    %edi,%edx
81004b4e:	89 cb                	mov    %ecx,%ebx
81004b50:	83 e2 03             	and    $0x3,%edx
81004b53:	74 10                	je     81004b65 <memmove+0x75>
81004b55:	b9 04 00 00 00       	mov    $0x4,%ecx
81004b5a:	29 d1                	sub    %edx,%ecx
81004b5c:	83 e1 03             	and    $0x3,%ecx
81004b5f:	29 cb                	sub    %ecx,%ebx
81004b61:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b63:	89 d9                	mov    %ebx,%ecx
81004b65:	c1 e9 02             	shr    $0x2,%ecx
81004b68:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b6a:	89 d9                	mov    %ebx,%ecx
81004b6c:	83 e1 03             	and    $0x3,%ecx
81004b6f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b71:	8b 45 08             	mov    0x8(%ebp),%eax
81004b74:	fc                   	cld    
81004b75:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b78:	5b                   	pop    %ebx
81004b79:	5f                   	pop    %edi
81004b7a:	5e                   	pop    %esi
81004b7b:	c9                   	leave  
81004b7c:	c3                   	ret    

81004b7d <memset>:
81004b7d:	55                   	push   %ebp
81004b7e:	89 e5                	mov    %esp,%ebp
81004b80:	57                   	push   %edi
81004b81:	8b 7d 08             	mov    0x8(%ebp),%edi
81004b84:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004b88:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004b8b:	fc                   	cld    
81004b8c:	83 f9 10             	cmp    $0x10,%ecx
81004b8f:	76 69                	jbe    81004bfa <memset+0x7d>
81004b91:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b97:	74 4c                	je     81004be5 <memset+0x68>
81004b99:	88 07                	mov    %al,(%edi)
81004b9b:	47                   	inc    %edi
81004b9c:	49                   	dec    %ecx
81004b9d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004ba3:	74 40                	je     81004be5 <memset+0x68>
81004ba5:	88 07                	mov    %al,(%edi)
81004ba7:	47                   	inc    %edi
81004ba8:	49                   	dec    %ecx
81004ba9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004baf:	74 34                	je     81004be5 <memset+0x68>
81004bb1:	88 07                	mov    %al,(%edi)
81004bb3:	47                   	inc    %edi
81004bb4:	49                   	dec    %ecx
81004bb5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bbb:	74 28                	je     81004be5 <memset+0x68>
81004bbd:	88 07                	mov    %al,(%edi)
81004bbf:	47                   	inc    %edi
81004bc0:	49                   	dec    %ecx
81004bc1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bc7:	74 1c                	je     81004be5 <memset+0x68>
81004bc9:	88 07                	mov    %al,(%edi)
81004bcb:	47                   	inc    %edi
81004bcc:	49                   	dec    %ecx
81004bcd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bd3:	74 10                	je     81004be5 <memset+0x68>
81004bd5:	88 07                	mov    %al,(%edi)
81004bd7:	47                   	inc    %edi
81004bd8:	49                   	dec    %ecx
81004bd9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bdf:	74 04                	je     81004be5 <memset+0x68>
81004be1:	88 07                	mov    %al,(%edi)
81004be3:	47                   	inc    %edi
81004be4:	49                   	dec    %ecx
81004be5:	88 c4                	mov    %al,%ah
81004be7:	89 c2                	mov    %eax,%edx
81004be9:	c1 e2 10             	shl    $0x10,%edx
81004bec:	09 d0                	or     %edx,%eax
81004bee:	89 ca                	mov    %ecx,%edx
81004bf0:	c1 e9 02             	shr    $0x2,%ecx
81004bf3:	83 e2 03             	and    $0x3,%edx
81004bf6:	f3 ab                	rep stos %eax,%es:(%edi)
81004bf8:	89 d1                	mov    %edx,%ecx
81004bfa:	f3 aa                	rep stos %al,%es:(%edi)
81004bfc:	8b 45 08             	mov    0x8(%ebp),%eax
81004bff:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004c02:	5f                   	pop    %edi
81004c03:	c9                   	leave  
81004c04:	c3                   	ret    

81004c05 <__malloc_lock>:
81004c05:	55                   	push   %ebp
81004c06:	89 e5                	mov    %esp,%ebp
81004c08:	90                   	nop
81004c09:	5d                   	pop    %ebp
81004c0a:	c3                   	ret    

81004c0b <__malloc_unlock>:
81004c0b:	55                   	push   %ebp
81004c0c:	89 e5                	mov    %esp,%ebp
81004c0e:	90                   	nop
81004c0f:	5d                   	pop    %ebp
81004c10:	c3                   	ret    

81004c11 <__sprint_r>:
81004c11:	55                   	push   %ebp
81004c12:	89 e5                	mov    %esp,%ebp
81004c14:	56                   	push   %esi
81004c15:	53                   	push   %ebx
81004c16:	83 ec 10             	sub    $0x10,%esp
81004c19:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004c1c:	be 00 00 00 00       	mov    $0x0,%esi
81004c21:	8b 43 08             	mov    0x8(%ebx),%eax
81004c24:	85 c0                	test   %eax,%eax
81004c26:	75 11                	jne    81004c39 <__sprint_r+0x28>
81004c28:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c2f:	b8 00 00 00 00       	mov    $0x0,%eax
81004c34:	e9 ad 00 00 00       	jmp    81004ce6 <__sprint_r+0xd5>
81004c39:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c3c:	8b 40 64             	mov    0x64(%eax),%eax
81004c3f:	25 00 20 00 00       	and    $0x2000,%eax
81004c44:	85 c0                	test   %eax,%eax
81004c46:	74 7a                	je     81004cc2 <__sprint_r+0xb1>
81004c48:	8b 03                	mov    (%ebx),%eax
81004c4a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c4d:	eb 6a                	jmp    81004cb9 <__sprint_r+0xa8>
81004c4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c52:	8b 00                	mov    (%eax),%eax
81004c54:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c5a:	8b 40 04             	mov    0x4(%eax),%eax
81004c5d:	c1 e8 02             	shr    $0x2,%eax
81004c60:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004c63:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004c6a:	eb 33                	jmp    81004c9f <__sprint_r+0x8e>
81004c6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c6f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004c76:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c79:	01 d0                	add    %edx,%eax
81004c7b:	8b 00                	mov    (%eax),%eax
81004c7d:	83 ec 04             	sub    $0x4,%esp
81004c80:	ff 75 0c             	pushl  0xc(%ebp)
81004c83:	50                   	push   %eax
81004c84:	ff 75 08             	pushl  0x8(%ebp)
81004c87:	e8 22 2a 00 00       	call   810076ae <_fputwc_r>
81004c8c:	83 c4 10             	add    $0x10,%esp
81004c8f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c92:	75 07                	jne    81004c9b <__sprint_r+0x8a>
81004c94:	be ff ff ff ff       	mov    $0xffffffff,%esi
81004c99:	eb 3b                	jmp    81004cd6 <__sprint_r+0xc5>
81004c9b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004c9f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004ca2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004ca5:	7c c5                	jl     81004c6c <__sprint_r+0x5b>
81004ca7:	8b 43 08             	mov    0x8(%ebx),%eax
81004caa:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004cad:	c1 e2 02             	shl    $0x2,%edx
81004cb0:	29 d0                	sub    %edx,%eax
81004cb2:	89 43 08             	mov    %eax,0x8(%ebx)
81004cb5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004cb9:	8b 43 08             	mov    0x8(%ebx),%eax
81004cbc:	85 c0                	test   %eax,%eax
81004cbe:	75 8f                	jne    81004c4f <__sprint_r+0x3e>
81004cc0:	eb 14                	jmp    81004cd6 <__sprint_r+0xc5>
81004cc2:	83 ec 04             	sub    $0x4,%esp
81004cc5:	53                   	push   %ebx
81004cc6:	ff 75 0c             	pushl  0xc(%ebp)
81004cc9:	ff 75 08             	pushl  0x8(%ebp)
81004ccc:	e8 45 dc ff ff       	call   81002916 <__sfvwrite_r>
81004cd1:	83 c4 10             	add    $0x10,%esp
81004cd4:	89 c6                	mov    %eax,%esi
81004cd6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004cdd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004ce4:	89 f0                	mov    %esi,%eax
81004ce6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004ce9:	5b                   	pop    %ebx
81004cea:	5e                   	pop    %esi
81004ceb:	5d                   	pop    %ebp
81004cec:	c3                   	ret    

81004ced <__sfputc_r>:
81004ced:	55                   	push   %ebp
81004cee:	89 e5                	mov    %esp,%ebp
81004cf0:	83 ec 08             	sub    $0x8,%esp
81004cf3:	8b 45 10             	mov    0x10(%ebp),%eax
81004cf6:	8b 40 08             	mov    0x8(%eax),%eax
81004cf9:	8d 50 ff             	lea    -0x1(%eax),%edx
81004cfc:	8b 45 10             	mov    0x10(%ebp),%eax
81004cff:	89 50 08             	mov    %edx,0x8(%eax)
81004d02:	8b 45 10             	mov    0x10(%ebp),%eax
81004d05:	8b 40 08             	mov    0x8(%eax),%eax
81004d08:	85 c0                	test   %eax,%eax
81004d0a:	79 17                	jns    81004d23 <__sfputc_r+0x36>
81004d0c:	8b 45 10             	mov    0x10(%ebp),%eax
81004d0f:	8b 50 08             	mov    0x8(%eax),%edx
81004d12:	8b 45 10             	mov    0x10(%ebp),%eax
81004d15:	8b 40 18             	mov    0x18(%eax),%eax
81004d18:	39 c2                	cmp    %eax,%edx
81004d1a:	7c 21                	jl     81004d3d <__sfputc_r+0x50>
81004d1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d1f:	3c 0a                	cmp    $0xa,%al
81004d21:	74 1a                	je     81004d3d <__sfputc_r+0x50>
81004d23:	8b 45 10             	mov    0x10(%ebp),%eax
81004d26:	8b 00                	mov    (%eax),%eax
81004d28:	8d 48 01             	lea    0x1(%eax),%ecx
81004d2b:	8b 55 10             	mov    0x10(%ebp),%edx
81004d2e:	89 0a                	mov    %ecx,(%edx)
81004d30:	8b 55 0c             	mov    0xc(%ebp),%edx
81004d33:	88 10                	mov    %dl,(%eax)
81004d35:	0f b6 00             	movzbl (%eax),%eax
81004d38:	0f b6 c0             	movzbl %al,%eax
81004d3b:	eb 14                	jmp    81004d51 <__sfputc_r+0x64>
81004d3d:	83 ec 04             	sub    $0x4,%esp
81004d40:	ff 75 10             	pushl  0x10(%ebp)
81004d43:	ff 75 0c             	pushl  0xc(%ebp)
81004d46:	ff 75 08             	pushl  0x8(%ebp)
81004d49:	e8 c9 22 00 00       	call   81007017 <__swbuf_r>
81004d4e:	83 c4 10             	add    $0x10,%esp
81004d51:	c9                   	leave  
81004d52:	c3                   	ret    

81004d53 <__sfputs_r>:
81004d53:	55                   	push   %ebp
81004d54:	89 e5                	mov    %esp,%ebp
81004d56:	53                   	push   %ebx
81004d57:	83 ec 14             	sub    $0x14,%esp
81004d5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d5d:	8b 40 64             	mov    0x64(%eax),%eax
81004d60:	25 00 20 00 00       	and    $0x2000,%eax
81004d65:	85 c0                	test   %eax,%eax
81004d67:	74 4c                	je     81004db5 <__sfputs_r+0x62>
81004d69:	8b 45 10             	mov    0x10(%ebp),%eax
81004d6c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d6f:	bb 00 00 00 00       	mov    $0x0,%ebx
81004d74:	eb 31                	jmp    81004da7 <__sfputs_r+0x54>
81004d76:	89 d8                	mov    %ebx,%eax
81004d78:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004d7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d82:	01 d0                	add    %edx,%eax
81004d84:	8b 00                	mov    (%eax),%eax
81004d86:	83 ec 04             	sub    $0x4,%esp
81004d89:	ff 75 0c             	pushl  0xc(%ebp)
81004d8c:	50                   	push   %eax
81004d8d:	ff 75 08             	pushl  0x8(%ebp)
81004d90:	e8 19 29 00 00       	call   810076ae <_fputwc_r>
81004d95:	83 c4 10             	add    $0x10,%esp
81004d98:	83 f8 ff             	cmp    $0xffffffff,%eax
81004d9b:	75 07                	jne    81004da4 <__sfputs_r+0x51>
81004d9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004da2:	eb 52                	jmp    81004df6 <__sfputs_r+0xa3>
81004da4:	83 c3 01             	add    $0x1,%ebx
81004da7:	8b 45 14             	mov    0x14(%ebp),%eax
81004daa:	c1 e8 02             	shr    $0x2,%eax
81004dad:	89 da                	mov    %ebx,%edx
81004daf:	39 d0                	cmp    %edx,%eax
81004db1:	77 c3                	ja     81004d76 <__sfputs_r+0x23>
81004db3:	eb 3c                	jmp    81004df1 <__sfputs_r+0x9e>
81004db5:	bb 00 00 00 00       	mov    $0x0,%ebx
81004dba:	eb 2e                	jmp    81004dea <__sfputs_r+0x97>
81004dbc:	89 da                	mov    %ebx,%edx
81004dbe:	8b 45 10             	mov    0x10(%ebp),%eax
81004dc1:	01 d0                	add    %edx,%eax
81004dc3:	0f b6 00             	movzbl (%eax),%eax
81004dc6:	0f be c0             	movsbl %al,%eax
81004dc9:	83 ec 04             	sub    $0x4,%esp
81004dcc:	ff 75 0c             	pushl  0xc(%ebp)
81004dcf:	50                   	push   %eax
81004dd0:	ff 75 08             	pushl  0x8(%ebp)
81004dd3:	e8 15 ff ff ff       	call   81004ced <__sfputc_r>
81004dd8:	83 c4 10             	add    $0x10,%esp
81004ddb:	83 f8 ff             	cmp    $0xffffffff,%eax
81004dde:	75 07                	jne    81004de7 <__sfputs_r+0x94>
81004de0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004de5:	eb 0f                	jmp    81004df6 <__sfputs_r+0xa3>
81004de7:	83 c3 01             	add    $0x1,%ebx
81004dea:	89 d8                	mov    %ebx,%eax
81004dec:	39 45 14             	cmp    %eax,0x14(%ebp)
81004def:	77 cb                	ja     81004dbc <__sfputs_r+0x69>
81004df1:	b8 00 00 00 00       	mov    $0x0,%eax
81004df6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004df9:	c9                   	leave  
81004dfa:	c3                   	ret    

81004dfb <vfiprintf>:
81004dfb:	55                   	push   %ebp
81004dfc:	89 e5                	mov    %esp,%ebp
81004dfe:	83 ec 18             	sub    $0x18,%esp
81004e01:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81004e06:	ff 75 10             	pushl  0x10(%ebp)
81004e09:	ff 75 0c             	pushl  0xc(%ebp)
81004e0c:	ff 75 08             	pushl  0x8(%ebp)
81004e0f:	50                   	push   %eax
81004e10:	e8 0b 00 00 00       	call   81004e20 <_vfiprintf_r>
81004e15:	83 c4 10             	add    $0x10,%esp
81004e18:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e1e:	c9                   	leave  
81004e1f:	c3                   	ret    

81004e20 <_vfiprintf_r>:
81004e20:	55                   	push   %ebp
81004e21:	89 e5                	mov    %esp,%ebp
81004e23:	57                   	push   %edi
81004e24:	56                   	push   %esi
81004e25:	53                   	push   %ebx
81004e26:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81004e2c:	c7 45 e4 53 4d 00 81 	movl   $0x81004d53,-0x1c(%ebp)
81004e33:	8b 45 08             	mov    0x8(%ebp),%eax
81004e36:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004e39:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004e3d:	74 18                	je     81004e57 <_vfiprintf_r+0x37>
81004e3f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004e42:	8b 40 38             	mov    0x38(%eax),%eax
81004e45:	85 c0                	test   %eax,%eax
81004e47:	75 0e                	jne    81004e57 <_vfiprintf_r+0x37>
81004e49:	83 ec 0c             	sub    $0xc,%esp
81004e4c:	ff 75 e0             	pushl  -0x20(%ebp)
81004e4f:	e8 80 ca ff ff       	call   810018d4 <__sinit>
81004e54:	83 c4 10             	add    $0x10,%esp
81004e57:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e5a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e5e:	98                   	cwtl   
81004e5f:	83 e0 08             	and    $0x8,%eax
81004e62:	85 c0                	test   %eax,%eax
81004e64:	74 0a                	je     81004e70 <_vfiprintf_r+0x50>
81004e66:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e69:	8b 40 10             	mov    0x10(%eax),%eax
81004e6c:	85 c0                	test   %eax,%eax
81004e6e:	75 1f                	jne    81004e8f <_vfiprintf_r+0x6f>
81004e70:	83 ec 08             	sub    $0x8,%esp
81004e73:	ff 75 0c             	pushl  0xc(%ebp)
81004e76:	ff 75 08             	pushl  0x8(%ebp)
81004e79:	e8 12 23 00 00       	call   81007190 <__swsetup_r>
81004e7e:	83 c4 10             	add    $0x10,%esp
81004e81:	85 c0                	test   %eax,%eax
81004e83:	74 0a                	je     81004e8f <_vfiprintf_r+0x6f>
81004e85:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004e8a:	e9 df 02 00 00       	jmp    8100516e <_vfiprintf_r+0x34e>
81004e8f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004e92:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81004e99:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004e9d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004ea1:	8b 45 14             	mov    0x14(%ebp),%eax
81004ea4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004eaa:	89 de                	mov    %ebx,%esi
81004eac:	eb 03                	jmp    81004eb1 <_vfiprintf_r+0x91>
81004eae:	83 c3 01             	add    $0x1,%ebx
81004eb1:	0f b6 03             	movzbl (%ebx),%eax
81004eb4:	84 c0                	test   %al,%al
81004eb6:	74 07                	je     81004ebf <_vfiprintf_r+0x9f>
81004eb8:	0f b6 03             	movzbl (%ebx),%eax
81004ebb:	3c 25                	cmp    $0x25,%al
81004ebd:	75 ef                	jne    81004eae <_vfiprintf_r+0x8e>
81004ebf:	89 d8                	mov    %ebx,%eax
81004ec1:	29 f0                	sub    %esi,%eax
81004ec3:	85 c0                	test   %eax,%eax
81004ec5:	74 2b                	je     81004ef2 <_vfiprintf_r+0xd2>
81004ec7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004ecd:	50                   	push   %eax
81004ece:	56                   	push   %esi
81004ecf:	ff 75 0c             	pushl  0xc(%ebp)
81004ed2:	ff 75 08             	pushl  0x8(%ebp)
81004ed5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004ed8:	ff d0                	call   *%eax
81004eda:	83 c4 10             	add    $0x10,%esp
81004edd:	83 f8 ff             	cmp    $0xffffffff,%eax
81004ee0:	0f 84 68 02 00 00    	je     8100514e <_vfiprintf_r+0x32e>
81004ee6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ee9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004eef:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004ef2:	0f b6 03             	movzbl (%ebx),%eax
81004ef5:	84 c0                	test   %al,%al
81004ef7:	0f 84 54 02 00 00    	je     81005151 <_vfiprintf_r+0x331>
81004efd:	83 c3 01             	add    $0x1,%ebx
81004f00:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004f07:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004f0e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004f15:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81004f1c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004f20:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004f27:	c7 45 dc e8 88 00 81 	movl   $0x810088e8,-0x24(%ebp)
81004f2e:	eb 1b                	jmp    81004f4b <_vfiprintf_r+0x12b>
81004f30:	8b 55 80             	mov    -0x80(%ebp),%edx
81004f33:	89 f0                	mov    %esi,%eax
81004f35:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004f38:	be 01 00 00 00       	mov    $0x1,%esi
81004f3d:	89 c1                	mov    %eax,%ecx
81004f3f:	d3 e6                	shl    %cl,%esi
81004f41:	89 f0                	mov    %esi,%eax
81004f43:	09 d0                	or     %edx,%eax
81004f45:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f48:	83 c3 01             	add    $0x1,%ebx
81004f4b:	0f b6 03             	movzbl (%ebx),%eax
81004f4e:	0f be c0             	movsbl %al,%eax
81004f51:	83 ec 04             	sub    $0x4,%esp
81004f54:	6a 05                	push   $0x5
81004f56:	50                   	push   %eax
81004f57:	ff 75 dc             	pushl  -0x24(%ebp)
81004f5a:	e8 61 fa ff ff       	call   810049c0 <memchr>
81004f5f:	83 c4 10             	add    $0x10,%esp
81004f62:	89 c6                	mov    %eax,%esi
81004f64:	85 f6                	test   %esi,%esi
81004f66:	75 c8                	jne    81004f30 <_vfiprintf_r+0x110>
81004f68:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f6b:	83 e0 10             	and    $0x10,%eax
81004f6e:	85 c0                	test   %eax,%eax
81004f70:	74 04                	je     81004f76 <_vfiprintf_r+0x156>
81004f72:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004f76:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f79:	83 e0 08             	and    $0x8,%eax
81004f7c:	85 c0                	test   %eax,%eax
81004f7e:	74 04                	je     81004f84 <_vfiprintf_r+0x164>
81004f80:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004f84:	0f b6 03             	movzbl (%ebx),%eax
81004f87:	3c 2a                	cmp    $0x2a,%al
81004f89:	75 50                	jne    81004fdb <_vfiprintf_r+0x1bb>
81004f8b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004f91:	8d 50 04             	lea    0x4(%eax),%edx
81004f94:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004f9a:	8b 00                	mov    (%eax),%eax
81004f9c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004f9f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004fa2:	85 c0                	test   %eax,%eax
81004fa4:	79 11                	jns    81004fb7 <_vfiprintf_r+0x197>
81004fa6:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004fa9:	f7 d8                	neg    %eax
81004fab:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fae:	8b 45 80             	mov    -0x80(%ebp),%eax
81004fb1:	83 c8 02             	or     $0x2,%eax
81004fb4:	89 45 80             	mov    %eax,-0x80(%ebp)
81004fb7:	83 c3 01             	add    $0x1,%ebx
81004fba:	eb 2d                	jmp    81004fe9 <_vfiprintf_r+0x1c9>
81004fbc:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004fbf:	89 d0                	mov    %edx,%eax
81004fc1:	c1 e0 02             	shl    $0x2,%eax
81004fc4:	01 d0                	add    %edx,%eax
81004fc6:	01 c0                	add    %eax,%eax
81004fc8:	89 c2                	mov    %eax,%edx
81004fca:	0f b6 03             	movzbl (%ebx),%eax
81004fcd:	0f be c0             	movsbl %al,%eax
81004fd0:	83 e8 30             	sub    $0x30,%eax
81004fd3:	01 d0                	add    %edx,%eax
81004fd5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fd8:	83 c3 01             	add    $0x1,%ebx
81004fdb:	0f b6 03             	movzbl (%ebx),%eax
81004fde:	0f be c0             	movsbl %al,%eax
81004fe1:	83 e8 30             	sub    $0x30,%eax
81004fe4:	83 f8 09             	cmp    $0x9,%eax
81004fe7:	76 d3                	jbe    81004fbc <_vfiprintf_r+0x19c>
81004fe9:	0f b6 03             	movzbl (%ebx),%eax
81004fec:	3c 2e                	cmp    $0x2e,%al
81004fee:	75 67                	jne    81005057 <_vfiprintf_r+0x237>
81004ff0:	83 c3 01             	add    $0x1,%ebx
81004ff3:	0f b6 03             	movzbl (%ebx),%eax
81004ff6:	3c 2a                	cmp    $0x2a,%al
81004ff8:	75 27                	jne    81005021 <_vfiprintf_r+0x201>
81004ffa:	83 c3 01             	add    $0x1,%ebx
81004ffd:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81005003:	8d 50 04             	lea    0x4(%eax),%edx
81005006:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100500c:	8b 00                	mov    (%eax),%eax
8100500e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005011:	8b 45 84             	mov    -0x7c(%ebp),%eax
81005014:	85 c0                	test   %eax,%eax
81005016:	79 3f                	jns    81005057 <_vfiprintf_r+0x237>
81005018:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100501f:	eb 36                	jmp    81005057 <_vfiprintf_r+0x237>
81005021:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81005028:	eb 1f                	jmp    81005049 <_vfiprintf_r+0x229>
8100502a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100502d:	89 d0                	mov    %edx,%eax
8100502f:	c1 e0 02             	shl    $0x2,%eax
81005032:	01 d0                	add    %edx,%eax
81005034:	01 c0                	add    %eax,%eax
81005036:	89 c2                	mov    %eax,%edx
81005038:	0f b6 03             	movzbl (%ebx),%eax
8100503b:	0f be c0             	movsbl %al,%eax
8100503e:	83 e8 30             	sub    $0x30,%eax
81005041:	01 d0                	add    %edx,%eax
81005043:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005046:	83 c3 01             	add    $0x1,%ebx
81005049:	0f b6 03             	movzbl (%ebx),%eax
8100504c:	0f be c0             	movsbl %al,%eax
8100504f:	83 e8 30             	sub    $0x30,%eax
81005052:	83 f8 09             	cmp    $0x9,%eax
81005055:	76 d3                	jbe    8100502a <_vfiprintf_r+0x20a>
81005057:	c7 45 dc ee 88 00 81 	movl   $0x810088ee,-0x24(%ebp)
8100505e:	0f b6 03             	movzbl (%ebx),%eax
81005061:	0f be c0             	movsbl %al,%eax
81005064:	83 ec 04             	sub    $0x4,%esp
81005067:	6a 03                	push   $0x3
81005069:	50                   	push   %eax
8100506a:	ff 75 dc             	pushl  -0x24(%ebp)
8100506d:	e8 4e f9 ff ff       	call   810049c0 <memchr>
81005072:	83 c4 10             	add    $0x10,%esp
81005075:	89 c6                	mov    %eax,%esi
81005077:	85 f6                	test   %esi,%esi
81005079:	74 1b                	je     81005096 <_vfiprintf_r+0x276>
8100507b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100507e:	89 f0                	mov    %esi,%eax
81005080:	2b 45 dc             	sub    -0x24(%ebp),%eax
81005083:	be 40 00 00 00       	mov    $0x40,%esi
81005088:	89 c1                	mov    %eax,%ecx
8100508a:	d3 e6                	shl    %cl,%esi
8100508c:	89 f0                	mov    %esi,%eax
8100508e:	09 d0                	or     %edx,%eax
81005090:	89 45 80             	mov    %eax,-0x80(%ebp)
81005093:	83 c3 01             	add    $0x1,%ebx
81005096:	89 d8                	mov    %ebx,%eax
81005098:	8d 58 01             	lea    0x1(%eax),%ebx
8100509b:	0f b6 00             	movzbl (%eax),%eax
8100509e:	88 45 98             	mov    %al,-0x68(%ebp)
810050a1:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810050a5:	0f be c0             	movsbl %al,%eax
810050a8:	83 ec 04             	sub    $0x4,%esp
810050ab:	6a 06                	push   $0x6
810050ad:	50                   	push   %eax
810050ae:	68 f2 88 00 81       	push   $0x810088f2
810050b3:	e8 08 f9 ff ff       	call   810049c0 <memchr>
810050b8:	83 c4 10             	add    $0x10,%esp
810050bb:	89 c6                	mov    %eax,%esi
810050bd:	85 f6                	test   %esi,%esi
810050bf:	74 5a                	je     8100511b <_vfiprintf_r+0x2fb>
810050c1:	b8 00 00 00 00       	mov    $0x0,%eax
810050c6:	85 c0                	test   %eax,%eax
810050c8:	75 2e                	jne    810050f8 <_vfiprintf_r+0x2d8>
810050ca:	8b 45 80             	mov    -0x80(%ebp),%eax
810050cd:	25 00 01 00 00       	and    $0x100,%eax
810050d2:	85 c0                	test   %eax,%eax
810050d4:	74 11                	je     810050e7 <_vfiprintf_r+0x2c7>
810050d6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050dc:	83 c0 0c             	add    $0xc,%eax
810050df:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050e5:	eb 55                	jmp    8100513c <_vfiprintf_r+0x31c>
810050e7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050ed:	83 c0 08             	add    $0x8,%eax
810050f0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050f6:	eb 44                	jmp    8100513c <_vfiprintf_r+0x31c>
810050f8:	83 ec 0c             	sub    $0xc,%esp
810050fb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005101:	50                   	push   %eax
81005102:	ff 75 e4             	pushl  -0x1c(%ebp)
81005105:	ff 75 0c             	pushl  0xc(%ebp)
81005108:	8d 45 80             	lea    -0x80(%ebp),%eax
8100510b:	50                   	push   %eax
8100510c:	ff 75 08             	pushl  0x8(%ebp)
8100510f:	e8 ec ae ff 7e       	call   0 <show_promot-0x81000000>
81005114:	83 c4 20             	add    $0x20,%esp
81005117:	89 c7                	mov    %eax,%edi
81005119:	eb 21                	jmp    8100513c <_vfiprintf_r+0x31c>
8100511b:	83 ec 0c             	sub    $0xc,%esp
8100511e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005124:	50                   	push   %eax
81005125:	ff 75 e4             	pushl  -0x1c(%ebp)
81005128:	ff 75 0c             	pushl  0xc(%ebp)
8100512b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100512e:	50                   	push   %eax
8100512f:	ff 75 08             	pushl  0x8(%ebp)
81005132:	e8 da 01 00 00       	call   81005311 <_printf_i>
81005137:	83 c4 20             	add    $0x20,%esp
8100513a:	89 c7                	mov    %eax,%edi
8100513c:	83 ff ff             	cmp    $0xffffffff,%edi
8100513f:	74 13                	je     81005154 <_vfiprintf_r+0x334>
81005141:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005144:	01 f8                	add    %edi,%eax
81005146:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005149:	e9 5c fd ff ff       	jmp    81004eaa <_vfiprintf_r+0x8a>
8100514e:	90                   	nop
8100514f:	eb 04                	jmp    81005155 <_vfiprintf_r+0x335>
81005151:	90                   	nop
81005152:	eb 01                	jmp    81005155 <_vfiprintf_r+0x335>
81005154:	90                   	nop
81005155:	8b 45 0c             	mov    0xc(%ebp),%eax
81005158:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100515c:	98                   	cwtl   
8100515d:	83 e0 40             	and    $0x40,%eax
81005160:	85 c0                	test   %eax,%eax
81005162:	75 05                	jne    81005169 <_vfiprintf_r+0x349>
81005164:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005167:	eb 05                	jmp    8100516e <_vfiprintf_r+0x34e>
81005169:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100516e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005171:	5b                   	pop    %ebx
81005172:	5e                   	pop    %esi
81005173:	5f                   	pop    %edi
81005174:	5d                   	pop    %ebp
81005175:	c3                   	ret    

81005176 <_printf_common>:
81005176:	55                   	push   %ebp
81005177:	89 e5                	mov    %esp,%ebp
81005179:	83 ec 18             	sub    $0x18,%esp
8100517c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100517f:	8b 50 10             	mov    0x10(%eax),%edx
81005182:	8b 45 0c             	mov    0xc(%ebp),%eax
81005185:	8b 40 08             	mov    0x8(%eax),%eax
81005188:	39 c2                	cmp    %eax,%edx
8100518a:	0f 4c d0             	cmovl  %eax,%edx
8100518d:	8b 45 10             	mov    0x10(%ebp),%eax
81005190:	89 10                	mov    %edx,(%eax)
81005192:	8b 45 0c             	mov    0xc(%ebp),%eax
81005195:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81005199:	84 c0                	test   %al,%al
8100519b:	74 0d                	je     810051aa <_printf_common+0x34>
8100519d:	8b 45 10             	mov    0x10(%ebp),%eax
810051a0:	8b 00                	mov    (%eax),%eax
810051a2:	8d 50 01             	lea    0x1(%eax),%edx
810051a5:	8b 45 10             	mov    0x10(%ebp),%eax
810051a8:	89 10                	mov    %edx,(%eax)
810051aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810051ad:	8b 00                	mov    (%eax),%eax
810051af:	83 e0 20             	and    $0x20,%eax
810051b2:	85 c0                	test   %eax,%eax
810051b4:	74 0d                	je     810051c3 <_printf_common+0x4d>
810051b6:	8b 45 10             	mov    0x10(%ebp),%eax
810051b9:	8b 00                	mov    (%eax),%eax
810051bb:	8d 50 02             	lea    0x2(%eax),%edx
810051be:	8b 45 10             	mov    0x10(%ebp),%eax
810051c1:	89 10                	mov    %edx,(%eax)
810051c3:	8b 45 0c             	mov    0xc(%ebp),%eax
810051c6:	8b 00                	mov    (%eax),%eax
810051c8:	83 e0 06             	and    $0x6,%eax
810051cb:	85 c0                	test   %eax,%eax
810051cd:	75 41                	jne    81005210 <_printf_common+0x9a>
810051cf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810051d6:	eb 24                	jmp    810051fc <_printf_common+0x86>
810051d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810051db:	83 c0 19             	add    $0x19,%eax
810051de:	6a 01                	push   $0x1
810051e0:	50                   	push   %eax
810051e1:	ff 75 14             	pushl  0x14(%ebp)
810051e4:	ff 75 08             	pushl  0x8(%ebp)
810051e7:	8b 45 18             	mov    0x18(%ebp),%eax
810051ea:	ff d0                	call   *%eax
810051ec:	83 c4 10             	add    $0x10,%esp
810051ef:	83 f8 ff             	cmp    $0xffffffff,%eax
810051f2:	0f 84 0b 01 00 00    	je     81005303 <_printf_common+0x18d>
810051f8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810051fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810051ff:	8b 50 0c             	mov    0xc(%eax),%edx
81005202:	8b 45 10             	mov    0x10(%ebp),%eax
81005205:	8b 08                	mov    (%eax),%ecx
81005207:	89 d0                	mov    %edx,%eax
81005209:	29 c8                	sub    %ecx,%eax
8100520b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100520e:	7c c8                	jl     810051d8 <_printf_common+0x62>
81005210:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005217:	8b 45 0c             	mov    0xc(%ebp),%eax
8100521a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100521e:	84 c0                	test   %al,%al
81005220:	74 04                	je     81005226 <_printf_common+0xb0>
81005222:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005226:	8b 45 0c             	mov    0xc(%ebp),%eax
81005229:	8b 00                	mov    (%eax),%eax
8100522b:	83 e0 20             	and    $0x20,%eax
8100522e:	85 c0                	test   %eax,%eax
81005230:	74 28                	je     8100525a <_printf_common+0xe4>
81005232:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005235:	8d 50 01             	lea    0x1(%eax),%edx
81005238:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100523b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100523e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81005243:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005246:	8d 50 01             	lea    0x1(%eax),%edx
81005249:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100524c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100524f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81005253:	8b 55 0c             	mov    0xc(%ebp),%edx
81005256:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100525a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100525d:	8b 55 0c             	mov    0xc(%ebp),%edx
81005260:	83 c2 43             	add    $0x43,%edx
81005263:	50                   	push   %eax
81005264:	52                   	push   %edx
81005265:	ff 75 14             	pushl  0x14(%ebp)
81005268:	ff 75 08             	pushl  0x8(%ebp)
8100526b:	8b 45 18             	mov    0x18(%ebp),%eax
8100526e:	ff d0                	call   *%eax
81005270:	83 c4 10             	add    $0x10,%esp
81005273:	83 f8 ff             	cmp    $0xffffffff,%eax
81005276:	0f 84 8a 00 00 00    	je     81005306 <_printf_common+0x190>
8100527c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100527f:	8b 50 0c             	mov    0xc(%eax),%edx
81005282:	8b 45 10             	mov    0x10(%ebp),%eax
81005285:	8b 08                	mov    (%eax),%ecx
81005287:	89 d0                	mov    %edx,%eax
81005289:	29 c8                	sub    %ecx,%eax
8100528b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100528e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005291:	8b 00                	mov    (%eax),%eax
81005293:	83 e0 06             	and    $0x6,%eax
81005296:	83 f8 04             	cmp    $0x4,%eax
81005299:	75 06                	jne    810052a1 <_printf_common+0x12b>
8100529b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100529f:	79 07                	jns    810052a8 <_printf_common+0x132>
810052a1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810052a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052ab:	8b 50 08             	mov    0x8(%eax),%edx
810052ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810052b1:	8b 40 10             	mov    0x10(%eax),%eax
810052b4:	39 c2                	cmp    %eax,%edx
810052b6:	7e 13                	jle    810052cb <_printf_common+0x155>
810052b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052bb:	8b 50 08             	mov    0x8(%eax),%edx
810052be:	8b 45 0c             	mov    0xc(%ebp),%eax
810052c1:	8b 48 10             	mov    0x10(%eax),%ecx
810052c4:	89 d0                	mov    %edx,%eax
810052c6:	29 c8                	sub    %ecx,%eax
810052c8:	01 45 f4             	add    %eax,-0xc(%ebp)
810052cb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810052d2:	eb 20                	jmp    810052f4 <_printf_common+0x17e>
810052d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810052d7:	83 c0 1a             	add    $0x1a,%eax
810052da:	6a 01                	push   $0x1
810052dc:	50                   	push   %eax
810052dd:	ff 75 14             	pushl  0x14(%ebp)
810052e0:	ff 75 08             	pushl  0x8(%ebp)
810052e3:	8b 45 18             	mov    0x18(%ebp),%eax
810052e6:	ff d0                	call   *%eax
810052e8:	83 c4 10             	add    $0x10,%esp
810052eb:	83 f8 ff             	cmp    $0xffffffff,%eax
810052ee:	74 19                	je     81005309 <_printf_common+0x193>
810052f0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810052f4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052f7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810052fa:	7c d8                	jl     810052d4 <_printf_common+0x15e>
810052fc:	b8 00 00 00 00       	mov    $0x0,%eax
81005301:	eb 0c                	jmp    8100530f <_printf_common+0x199>
81005303:	90                   	nop
81005304:	eb 04                	jmp    8100530a <_printf_common+0x194>
81005306:	90                   	nop
81005307:	eb 01                	jmp    8100530a <_printf_common+0x194>
81005309:	90                   	nop
8100530a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100530f:	c9                   	leave  
81005310:	c3                   	ret    

81005311 <_printf_i>:
81005311:	55                   	push   %ebp
81005312:	89 e5                	mov    %esp,%ebp
81005314:	53                   	push   %ebx
81005315:	83 ec 24             	sub    $0x24,%esp
81005318:	8b 45 0c             	mov    0xc(%ebp),%eax
8100531b:	83 c0 1b             	add    $0x1b,%eax
8100531e:	83 c0 28             	add    $0x28,%eax
81005321:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005324:	c7 45 e8 fc 88 00 81 	movl   $0x810088fc,-0x18(%ebp)
8100532b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100532e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005332:	0f be c0             	movsbl %al,%eax
81005335:	85 c0                	test   %eax,%eax
81005337:	0f 84 00 03 00 00    	je     8100563d <_printf_i+0x32c>
8100533d:	85 c0                	test   %eax,%eax
8100533f:	0f 88 52 03 00 00    	js     81005697 <_printf_i+0x386>
81005345:	83 f8 78             	cmp    $0x78,%eax
81005348:	0f 8f 49 03 00 00    	jg     81005697 <_printf_i+0x386>
8100534e:	83 f8 58             	cmp    $0x58,%eax
81005351:	0f 8c 40 03 00 00    	jl     81005697 <_printf_i+0x386>
81005357:	83 e8 58             	sub    $0x58,%eax
8100535a:	83 f8 20             	cmp    $0x20,%eax
8100535d:	0f 87 34 03 00 00    	ja     81005697 <_printf_i+0x386>
81005363:	8b 04 85 20 89 00 81 	mov    -0x7eff76e0(,%eax,4),%eax
8100536a:	ff e0                	jmp    *%eax
8100536c:	8b 45 18             	mov    0x18(%ebp),%eax
8100536f:	8b 00                	mov    (%eax),%eax
81005371:	8d 48 04             	lea    0x4(%eax),%ecx
81005374:	8b 55 18             	mov    0x18(%ebp),%edx
81005377:	89 0a                	mov    %ecx,(%edx)
81005379:	8b 00                	mov    (%eax),%eax
8100537b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100537f:	89 c2                	mov    %eax,%edx
81005381:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005384:	88 10                	mov    %dl,(%eax)
81005386:	8b 45 0c             	mov    0xc(%ebp),%eax
81005389:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005390:	e9 1c 03 00 00       	jmp    810056b1 <_printf_i+0x3a0>
81005395:	8b 45 0c             	mov    0xc(%ebp),%eax
81005398:	8b 00                	mov    (%eax),%eax
8100539a:	25 80 00 00 00       	and    $0x80,%eax
8100539f:	85 c0                	test   %eax,%eax
810053a1:	74 11                	je     810053b4 <_printf_i+0xa3>
810053a3:	8b 45 18             	mov    0x18(%ebp),%eax
810053a6:	8b 00                	mov    (%eax),%eax
810053a8:	8d 48 04             	lea    0x4(%eax),%ecx
810053ab:	8b 55 18             	mov    0x18(%ebp),%edx
810053ae:	89 0a                	mov    %ecx,(%edx)
810053b0:	8b 00                	mov    (%eax),%eax
810053b2:	eb 2d                	jmp    810053e1 <_printf_i+0xd0>
810053b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810053b7:	8b 00                	mov    (%eax),%eax
810053b9:	83 e0 40             	and    $0x40,%eax
810053bc:	85 c0                	test   %eax,%eax
810053be:	74 12                	je     810053d2 <_printf_i+0xc1>
810053c0:	8b 45 18             	mov    0x18(%ebp),%eax
810053c3:	8b 00                	mov    (%eax),%eax
810053c5:	8d 48 04             	lea    0x4(%eax),%ecx
810053c8:	8b 55 18             	mov    0x18(%ebp),%edx
810053cb:	89 0a                	mov    %ecx,(%edx)
810053cd:	8b 00                	mov    (%eax),%eax
810053cf:	98                   	cwtl   
810053d0:	eb 0f                	jmp    810053e1 <_printf_i+0xd0>
810053d2:	8b 45 18             	mov    0x18(%ebp),%eax
810053d5:	8b 00                	mov    (%eax),%eax
810053d7:	8d 48 04             	lea    0x4(%eax),%ecx
810053da:	8b 55 18             	mov    0x18(%ebp),%edx
810053dd:	89 0a                	mov    %ecx,(%edx)
810053df:	8b 00                	mov    (%eax),%eax
810053e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810053e7:	85 c0                	test   %eax,%eax
810053e9:	79 0a                	jns    810053f5 <_printf_i+0xe4>
810053eb:	f7 5d f4             	negl   -0xc(%ebp)
810053ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810053f1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810053f5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810053fc:	e9 28 01 00 00       	jmp    81005529 <_printf_i+0x218>
81005401:	8b 45 0c             	mov    0xc(%ebp),%eax
81005404:	8b 00                	mov    (%eax),%eax
81005406:	25 80 00 00 00       	and    $0x80,%eax
8100540b:	85 c0                	test   %eax,%eax
8100540d:	74 11                	je     81005420 <_printf_i+0x10f>
8100540f:	8b 45 18             	mov    0x18(%ebp),%eax
81005412:	8b 00                	mov    (%eax),%eax
81005414:	8d 48 04             	lea    0x4(%eax),%ecx
81005417:	8b 55 18             	mov    0x18(%ebp),%edx
8100541a:	89 0a                	mov    %ecx,(%edx)
8100541c:	8b 00                	mov    (%eax),%eax
8100541e:	eb 2f                	jmp    8100544f <_printf_i+0x13e>
81005420:	8b 45 0c             	mov    0xc(%ebp),%eax
81005423:	8b 00                	mov    (%eax),%eax
81005425:	83 e0 40             	and    $0x40,%eax
81005428:	85 c0                	test   %eax,%eax
8100542a:	74 14                	je     81005440 <_printf_i+0x12f>
8100542c:	8b 45 18             	mov    0x18(%ebp),%eax
8100542f:	8b 00                	mov    (%eax),%eax
81005431:	8d 48 04             	lea    0x4(%eax),%ecx
81005434:	8b 55 18             	mov    0x18(%ebp),%edx
81005437:	89 0a                	mov    %ecx,(%edx)
81005439:	8b 00                	mov    (%eax),%eax
8100543b:	0f b7 c0             	movzwl %ax,%eax
8100543e:	eb 0f                	jmp    8100544f <_printf_i+0x13e>
81005440:	8b 45 18             	mov    0x18(%ebp),%eax
81005443:	8b 00                	mov    (%eax),%eax
81005445:	8d 48 04             	lea    0x4(%eax),%ecx
81005448:	8b 55 18             	mov    0x18(%ebp),%edx
8100544b:	89 0a                	mov    %ecx,(%edx)
8100544d:	8b 00                	mov    (%eax),%eax
8100544f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005452:	8b 45 0c             	mov    0xc(%ebp),%eax
81005455:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005459:	3c 6f                	cmp    $0x6f,%al
8100545b:	75 07                	jne    81005464 <_printf_i+0x153>
8100545d:	b8 08 00 00 00       	mov    $0x8,%eax
81005462:	eb 05                	jmp    81005469 <_printf_i+0x158>
81005464:	b8 0a 00 00 00       	mov    $0xa,%eax
81005469:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100546c:	e9 b1 00 00 00       	jmp    81005522 <_printf_i+0x211>
81005471:	8b 45 0c             	mov    0xc(%ebp),%eax
81005474:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81005478:	eb 1d                	jmp    81005497 <_printf_i+0x186>
8100547a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100547d:	8b 00                	mov    (%eax),%eax
8100547f:	83 c8 20             	or     $0x20,%eax
81005482:	89 c2                	mov    %eax,%edx
81005484:	8b 45 0c             	mov    0xc(%ebp),%eax
81005487:	89 10                	mov    %edx,(%eax)
81005489:	8b 45 0c             	mov    0xc(%ebp),%eax
8100548c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81005490:	c7 45 e8 0d 89 00 81 	movl   $0x8100890d,-0x18(%ebp)
81005497:	8b 45 0c             	mov    0xc(%ebp),%eax
8100549a:	8b 00                	mov    (%eax),%eax
8100549c:	25 80 00 00 00       	and    $0x80,%eax
810054a1:	85 c0                	test   %eax,%eax
810054a3:	74 11                	je     810054b6 <_printf_i+0x1a5>
810054a5:	8b 45 18             	mov    0x18(%ebp),%eax
810054a8:	8b 00                	mov    (%eax),%eax
810054aa:	8d 48 04             	lea    0x4(%eax),%ecx
810054ad:	8b 55 18             	mov    0x18(%ebp),%edx
810054b0:	89 0a                	mov    %ecx,(%edx)
810054b2:	8b 00                	mov    (%eax),%eax
810054b4:	eb 2f                	jmp    810054e5 <_printf_i+0x1d4>
810054b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810054b9:	8b 00                	mov    (%eax),%eax
810054bb:	83 e0 40             	and    $0x40,%eax
810054be:	85 c0                	test   %eax,%eax
810054c0:	74 14                	je     810054d6 <_printf_i+0x1c5>
810054c2:	8b 45 18             	mov    0x18(%ebp),%eax
810054c5:	8b 00                	mov    (%eax),%eax
810054c7:	8d 48 04             	lea    0x4(%eax),%ecx
810054ca:	8b 55 18             	mov    0x18(%ebp),%edx
810054cd:	89 0a                	mov    %ecx,(%edx)
810054cf:	8b 00                	mov    (%eax),%eax
810054d1:	0f b7 c0             	movzwl %ax,%eax
810054d4:	eb 0f                	jmp    810054e5 <_printf_i+0x1d4>
810054d6:	8b 45 18             	mov    0x18(%ebp),%eax
810054d9:	8b 00                	mov    (%eax),%eax
810054db:	8d 48 04             	lea    0x4(%eax),%ecx
810054de:	8b 55 18             	mov    0x18(%ebp),%edx
810054e1:	89 0a                	mov    %ecx,(%edx)
810054e3:	8b 00                	mov    (%eax),%eax
810054e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810054e8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810054ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810054f2:	8b 00                	mov    (%eax),%eax
810054f4:	83 e0 01             	and    $0x1,%eax
810054f7:	85 c0                	test   %eax,%eax
810054f9:	74 0f                	je     8100550a <_printf_i+0x1f9>
810054fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810054fe:	8b 00                	mov    (%eax),%eax
81005500:	83 c8 20             	or     $0x20,%eax
81005503:	89 c2                	mov    %eax,%edx
81005505:	8b 45 0c             	mov    0xc(%ebp),%eax
81005508:	89 10                	mov    %edx,(%eax)
8100550a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100550e:	75 11                	jne    81005521 <_printf_i+0x210>
81005510:	8b 45 0c             	mov    0xc(%ebp),%eax
81005513:	8b 00                	mov    (%eax),%eax
81005515:	83 e0 df             	and    $0xffffffdf,%eax
81005518:	89 c2                	mov    %eax,%edx
8100551a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100551d:	89 10                	mov    %edx,(%eax)
8100551f:	eb 01                	jmp    81005522 <_printf_i+0x211>
81005521:	90                   	nop
81005522:	8b 45 0c             	mov    0xc(%ebp),%eax
81005525:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005529:	8b 45 0c             	mov    0xc(%ebp),%eax
8100552c:	8b 50 04             	mov    0x4(%eax),%edx
8100552f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005532:	89 50 08             	mov    %edx,0x8(%eax)
81005535:	8b 45 0c             	mov    0xc(%ebp),%eax
81005538:	8b 40 08             	mov    0x8(%eax),%eax
8100553b:	85 c0                	test   %eax,%eax
8100553d:	78 0f                	js     8100554e <_printf_i+0x23d>
8100553f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005542:	8b 00                	mov    (%eax),%eax
81005544:	83 e0 fb             	and    $0xfffffffb,%eax
81005547:	89 c2                	mov    %eax,%edx
81005549:	8b 45 0c             	mov    0xc(%ebp),%eax
8100554c:	89 10                	mov    %edx,(%eax)
8100554e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005552:	75 0a                	jne    8100555e <_printf_i+0x24d>
81005554:	8b 45 0c             	mov    0xc(%ebp),%eax
81005557:	8b 40 04             	mov    0x4(%eax),%eax
8100555a:	85 c0                	test   %eax,%eax
8100555c:	74 34                	je     81005592 <_printf_i+0x281>
8100555e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81005561:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005564:	ba 00 00 00 00       	mov    $0x0,%edx
81005569:	f7 f1                	div    %ecx
8100556b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100556e:	01 d0                	add    %edx,%eax
81005570:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81005574:	0f b6 10             	movzbl (%eax),%edx
81005577:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100557a:	88 10                	mov    %dl,(%eax)
8100557c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100557f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005582:	ba 00 00 00 00       	mov    $0x0,%edx
81005587:	f7 f3                	div    %ebx
81005589:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100558c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005590:	75 cc                	jne    8100555e <_printf_i+0x24d>
81005592:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81005596:	75 26                	jne    810055be <_printf_i+0x2ad>
81005598:	8b 45 0c             	mov    0xc(%ebp),%eax
8100559b:	8b 00                	mov    (%eax),%eax
8100559d:	83 e0 01             	and    $0x1,%eax
810055a0:	85 c0                	test   %eax,%eax
810055a2:	74 1a                	je     810055be <_printf_i+0x2ad>
810055a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810055a7:	8b 50 04             	mov    0x4(%eax),%edx
810055aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ad:	8b 40 10             	mov    0x10(%eax),%eax
810055b0:	39 c2                	cmp    %eax,%edx
810055b2:	7f 0a                	jg     810055be <_printf_i+0x2ad>
810055b4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810055b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810055bb:	c6 00 30             	movb   $0x30,(%eax)
810055be:	8b 45 0c             	mov    0xc(%ebp),%eax
810055c1:	83 c0 1b             	add    $0x1b,%eax
810055c4:	83 c0 28             	add    $0x28,%eax
810055c7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810055ca:	89 c2                	mov    %eax,%edx
810055cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810055cf:	89 50 10             	mov    %edx,0x10(%eax)
810055d2:	e9 e2 00 00 00       	jmp    810056b9 <_printf_i+0x3a8>
810055d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810055da:	8b 00                	mov    (%eax),%eax
810055dc:	25 80 00 00 00       	and    $0x80,%eax
810055e1:	85 c0                	test   %eax,%eax
810055e3:	74 19                	je     810055fe <_printf_i+0x2ed>
810055e5:	8b 45 18             	mov    0x18(%ebp),%eax
810055e8:	8b 00                	mov    (%eax),%eax
810055ea:	8d 48 04             	lea    0x4(%eax),%ecx
810055ed:	8b 55 18             	mov    0x18(%ebp),%edx
810055f0:	89 0a                	mov    %ecx,(%edx)
810055f2:	8b 00                	mov    (%eax),%eax
810055f4:	8b 55 0c             	mov    0xc(%ebp),%edx
810055f7:	8b 52 14             	mov    0x14(%edx),%edx
810055fa:	89 10                	mov    %edx,(%eax)
810055fc:	eb 3f                	jmp    8100563d <_printf_i+0x32c>
810055fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81005601:	8b 00                	mov    (%eax),%eax
81005603:	83 e0 40             	and    $0x40,%eax
81005606:	85 c0                	test   %eax,%eax
81005608:	74 1c                	je     81005626 <_printf_i+0x315>
8100560a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100560d:	8b 58 14             	mov    0x14(%eax),%ebx
81005610:	8b 45 18             	mov    0x18(%ebp),%eax
81005613:	8b 00                	mov    (%eax),%eax
81005615:	8d 48 04             	lea    0x4(%eax),%ecx
81005618:	8b 55 18             	mov    0x18(%ebp),%edx
8100561b:	89 0a                	mov    %ecx,(%edx)
8100561d:	8b 00                	mov    (%eax),%eax
8100561f:	89 da                	mov    %ebx,%edx
81005621:	66 89 10             	mov    %dx,(%eax)
81005624:	eb 17                	jmp    8100563d <_printf_i+0x32c>
81005626:	8b 45 18             	mov    0x18(%ebp),%eax
81005629:	8b 00                	mov    (%eax),%eax
8100562b:	8d 48 04             	lea    0x4(%eax),%ecx
8100562e:	8b 55 18             	mov    0x18(%ebp),%edx
81005631:	89 0a                	mov    %ecx,(%edx)
81005633:	8b 00                	mov    (%eax),%eax
81005635:	8b 55 0c             	mov    0xc(%ebp),%edx
81005638:	8b 52 14             	mov    0x14(%edx),%edx
8100563b:	89 10                	mov    %edx,(%eax)
8100563d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005640:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81005647:	eb 70                	jmp    810056b9 <_printf_i+0x3a8>
81005649:	8b 45 18             	mov    0x18(%ebp),%eax
8100564c:	8b 00                	mov    (%eax),%eax
8100564e:	8d 48 04             	lea    0x4(%eax),%ecx
81005651:	8b 55 18             	mov    0x18(%ebp),%edx
81005654:	89 0a                	mov    %ecx,(%edx)
81005656:	8b 00                	mov    (%eax),%eax
81005658:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100565b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100565e:	8b 40 04             	mov    0x4(%eax),%eax
81005661:	83 ec 04             	sub    $0x4,%esp
81005664:	50                   	push   %eax
81005665:	6a 00                	push   $0x0
81005667:	ff 75 ec             	pushl  -0x14(%ebp)
8100566a:	e8 51 f3 ff ff       	call   810049c0 <memchr>
8100566f:	83 c4 10             	add    $0x10,%esp
81005672:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005675:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005679:	74 0e                	je     81005689 <_printf_i+0x378>
8100567b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100567e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005681:	89 c2                	mov    %eax,%edx
81005683:	8b 45 0c             	mov    0xc(%ebp),%eax
81005686:	89 50 04             	mov    %edx,0x4(%eax)
81005689:	8b 45 0c             	mov    0xc(%ebp),%eax
8100568c:	8b 50 04             	mov    0x4(%eax),%edx
8100568f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005692:	89 50 10             	mov    %edx,0x10(%eax)
81005695:	eb 1a                	jmp    810056b1 <_printf_i+0x3a0>
81005697:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100569b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100569e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
810056a2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810056a5:	88 10                	mov    %dl,(%eax)
810056a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810056aa:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810056b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810056b4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810056b8:	90                   	nop
810056b9:	83 ec 0c             	sub    $0xc,%esp
810056bc:	ff 75 14             	pushl  0x14(%ebp)
810056bf:	ff 75 10             	pushl  0x10(%ebp)
810056c2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810056c5:	50                   	push   %eax
810056c6:	ff 75 0c             	pushl  0xc(%ebp)
810056c9:	ff 75 08             	pushl  0x8(%ebp)
810056cc:	e8 a5 fa ff ff       	call   81005176 <_printf_common>
810056d1:	83 c4 20             	add    $0x20,%esp
810056d4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056d7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810056db:	74 72                	je     8100574f <_printf_i+0x43e>
810056dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810056e0:	8b 40 10             	mov    0x10(%eax),%eax
810056e3:	50                   	push   %eax
810056e4:	ff 75 ec             	pushl  -0x14(%ebp)
810056e7:	ff 75 10             	pushl  0x10(%ebp)
810056ea:	ff 75 08             	pushl  0x8(%ebp)
810056ed:	8b 45 14             	mov    0x14(%ebp),%eax
810056f0:	ff d0                	call   *%eax
810056f2:	83 c4 10             	add    $0x10,%esp
810056f5:	83 f8 ff             	cmp    $0xffffffff,%eax
810056f8:	74 58                	je     81005752 <_printf_i+0x441>
810056fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810056fd:	8b 00                	mov    (%eax),%eax
810056ff:	83 e0 02             	and    $0x2,%eax
81005702:	85 c0                	test   %eax,%eax
81005704:	74 39                	je     8100573f <_printf_i+0x42e>
81005706:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100570d:	eb 20                	jmp    8100572f <_printf_i+0x41e>
8100570f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005712:	83 c0 19             	add    $0x19,%eax
81005715:	6a 01                	push   $0x1
81005717:	50                   	push   %eax
81005718:	ff 75 10             	pushl  0x10(%ebp)
8100571b:	ff 75 08             	pushl  0x8(%ebp)
8100571e:	8b 45 14             	mov    0x14(%ebp),%eax
81005721:	ff d0                	call   *%eax
81005723:	83 c4 10             	add    $0x10,%esp
81005726:	83 f8 ff             	cmp    $0xffffffff,%eax
81005729:	74 2a                	je     81005755 <_printf_i+0x444>
8100572b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100572f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005732:	8b 40 0c             	mov    0xc(%eax),%eax
81005735:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005738:	29 d0                	sub    %edx,%eax
8100573a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100573d:	7c d0                	jl     8100570f <_printf_i+0x3fe>
8100573f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005742:	8b 50 0c             	mov    0xc(%eax),%edx
81005745:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005748:	39 c2                	cmp    %eax,%edx
8100574a:	0f 4d c2             	cmovge %edx,%eax
8100574d:	eb 0c                	jmp    8100575b <_printf_i+0x44a>
8100574f:	90                   	nop
81005750:	eb 04                	jmp    81005756 <_printf_i+0x445>
81005752:	90                   	nop
81005753:	eb 01                	jmp    81005756 <_printf_i+0x445>
81005755:	90                   	nop
81005756:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100575b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100575e:	c9                   	leave  
8100575f:	c3                   	ret    

81005760 <_open_r>:
81005760:	55                   	push   %ebp
81005761:	89 e5                	mov    %esp,%ebp
81005763:	83 ec 18             	sub    $0x18,%esp
81005766:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100576d:	00 00 00 
81005770:	83 ec 04             	sub    $0x4,%esp
81005773:	ff 75 14             	pushl  0x14(%ebp)
81005776:	ff 75 10             	pushl  0x10(%ebp)
81005779:	ff 75 0c             	pushl  0xc(%ebp)
8100577c:	e8 d6 b4 ff ff       	call   81000c57 <open>
81005781:	83 c4 10             	add    $0x10,%esp
81005784:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005787:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100578b:	75 14                	jne    810057a1 <_open_r+0x41>
8100578d:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
81005792:	85 c0                	test   %eax,%eax
81005794:	74 0b                	je     810057a1 <_open_r+0x41>
81005796:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
8100579c:	8b 45 08             	mov    0x8(%ebp),%eax
8100579f:	89 10                	mov    %edx,(%eax)
810057a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057a4:	c9                   	leave  
810057a5:	c3                   	ret    

810057a6 <_iprintf_r>:
810057a6:	55                   	push   %ebp
810057a7:	89 e5                	mov    %esp,%ebp
810057a9:	83 ec 18             	sub    $0x18,%esp
810057ac:	8d 45 10             	lea    0x10(%ebp),%eax
810057af:	89 45 f0             	mov    %eax,-0x10(%ebp)
810057b2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810057b5:	8b 45 08             	mov    0x8(%ebp),%eax
810057b8:	8b 40 08             	mov    0x8(%eax),%eax
810057bb:	52                   	push   %edx
810057bc:	ff 75 0c             	pushl  0xc(%ebp)
810057bf:	50                   	push   %eax
810057c0:	ff 75 08             	pushl  0x8(%ebp)
810057c3:	e8 58 f6 ff ff       	call   81004e20 <_vfiprintf_r>
810057c8:	83 c4 10             	add    $0x10,%esp
810057cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057d1:	c9                   	leave  
810057d2:	c3                   	ret    

810057d3 <iprintf>:
810057d3:	55                   	push   %ebp
810057d4:	89 e5                	mov    %esp,%ebp
810057d6:	83 ec 18             	sub    $0x18,%esp
810057d9:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810057de:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057e1:	8d 45 0c             	lea    0xc(%ebp),%eax
810057e4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810057e7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810057ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057ed:	8b 40 08             	mov    0x8(%eax),%eax
810057f0:	52                   	push   %edx
810057f1:	ff 75 08             	pushl  0x8(%ebp)
810057f4:	50                   	push   %eax
810057f5:	ff 75 f4             	pushl  -0xc(%ebp)
810057f8:	e8 23 f6 ff ff       	call   81004e20 <_vfiprintf_r>
810057fd:	83 c4 10             	add    $0x10,%esp
81005800:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005803:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005806:	c9                   	leave  
81005807:	c3                   	ret    

81005808 <_puts_r>:
81005808:	55                   	push   %ebp
81005809:	89 e5                	mov    %esp,%ebp
8100580b:	83 ec 38             	sub    $0x38,%esp
8100580e:	83 ec 0c             	sub    $0xc,%esp
81005811:	ff 75 0c             	pushl  0xc(%ebp)
81005814:	e8 c7 13 00 00       	call   81006be0 <strlen>
81005819:	83 c4 10             	add    $0x10,%esp
8100581c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100581f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005822:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005825:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005828:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100582b:	c7 45 d4 a4 89 00 81 	movl   $0x810089a4,-0x2c(%ebp)
81005832:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005839:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100583c:	83 c0 01             	add    $0x1,%eax
8100583f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005842:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005845:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005848:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100584f:	8b 45 08             	mov    0x8(%ebp),%eax
81005852:	8b 40 08             	mov    0x8(%eax),%eax
81005855:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005858:	8b 45 08             	mov    0x8(%ebp),%eax
8100585b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100585e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005862:	74 18                	je     8100587c <_puts_r+0x74>
81005864:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005867:	8b 40 38             	mov    0x38(%eax),%eax
8100586a:	85 c0                	test   %eax,%eax
8100586c:	75 0e                	jne    8100587c <_puts_r+0x74>
8100586e:	83 ec 0c             	sub    $0xc,%esp
81005871:	ff 75 ec             	pushl  -0x14(%ebp)
81005874:	e8 5b c0 ff ff       	call   810018d4 <__sinit>
81005879:	83 c4 10             	add    $0x10,%esp
8100587c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100587f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005883:	98                   	cwtl   
81005884:	25 00 20 00 00       	and    $0x2000,%eax
81005889:	85 c0                	test   %eax,%eax
8100588b:	75 24                	jne    810058b1 <_puts_r+0xa9>
8100588d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005890:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005894:	80 cc 20             	or     $0x20,%ah
81005897:	89 c2                	mov    %eax,%edx
81005899:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100589c:	66 89 50 0c          	mov    %dx,0xc(%eax)
810058a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058a3:	8b 40 64             	mov    0x64(%eax),%eax
810058a6:	80 e4 df             	and    $0xdf,%ah
810058a9:	89 c2                	mov    %eax,%edx
810058ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058ae:	89 50 64             	mov    %edx,0x64(%eax)
810058b1:	83 ec 04             	sub    $0x4,%esp
810058b4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810058b7:	50                   	push   %eax
810058b8:	ff 75 f0             	pushl  -0x10(%ebp)
810058bb:	ff 75 08             	pushl  0x8(%ebp)
810058be:	e8 53 d0 ff ff       	call   81002916 <__sfvwrite_r>
810058c3:	83 c4 10             	add    $0x10,%esp
810058c6:	85 c0                	test   %eax,%eax
810058c8:	74 07                	je     810058d1 <_puts_r+0xc9>
810058ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810058cf:	eb 05                	jmp    810058d6 <_puts_r+0xce>
810058d1:	b8 0a 00 00 00       	mov    $0xa,%eax
810058d6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810058d9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810058dc:	c9                   	leave  
810058dd:	c3                   	ret    

810058de <puts>:
810058de:	55                   	push   %ebp
810058df:	89 e5                	mov    %esp,%ebp
810058e1:	83 ec 08             	sub    $0x8,%esp
810058e4:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810058e9:	83 ec 08             	sub    $0x8,%esp
810058ec:	ff 75 08             	pushl  0x8(%ebp)
810058ef:	50                   	push   %eax
810058f0:	e8 13 ff ff ff       	call   81005808 <_puts_r>
810058f5:	83 c4 10             	add    $0x10,%esp
810058f8:	c9                   	leave  
810058f9:	c3                   	ret    

810058fa <_realloc_r>:
810058fa:	55                   	push   %ebp
810058fb:	89 e5                	mov    %esp,%ebp
810058fd:	83 ec 78             	sub    $0x78,%esp
81005900:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005904:	75 16                	jne    8100591c <_realloc_r+0x22>
81005906:	83 ec 08             	sub    $0x8,%esp
81005909:	ff 75 10             	pushl  0x10(%ebp)
8100590c:	ff 75 08             	pushl  0x8(%ebp)
8100590f:	e8 8a e8 ff ff       	call   8100419e <_malloc_r>
81005914:	83 c4 10             	add    $0x10,%esp
81005917:	e9 b6 08 00 00       	jmp    810061d2 <_realloc_r+0x8d8>
8100591c:	83 ec 0c             	sub    $0xc,%esp
8100591f:	ff 75 08             	pushl  0x8(%ebp)
81005922:	e8 de f2 ff ff       	call   81004c05 <__malloc_lock>
81005927:	83 c4 10             	add    $0x10,%esp
8100592a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100592d:	83 e8 08             	sub    $0x8,%eax
81005930:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005933:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005936:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005939:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100593c:	8b 40 04             	mov    0x4(%eax),%eax
8100593f:	83 e0 fc             	and    $0xfffffffc,%eax
81005942:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005945:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005948:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100594b:	8b 45 10             	mov    0x10(%ebp),%eax
8100594e:	83 c0 0b             	add    $0xb,%eax
81005951:	83 f8 16             	cmp    $0x16,%eax
81005954:	76 0b                	jbe    81005961 <_realloc_r+0x67>
81005956:	8b 45 10             	mov    0x10(%ebp),%eax
81005959:	83 c0 0b             	add    $0xb,%eax
8100595c:	83 e0 f8             	and    $0xfffffff8,%eax
8100595f:	eb 05                	jmp    81005966 <_realloc_r+0x6c>
81005961:	b8 10 00 00 00       	mov    $0x10,%eax
81005966:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005969:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100596c:	85 c0                	test   %eax,%eax
8100596e:	78 08                	js     81005978 <_realloc_r+0x7e>
81005970:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005973:	3b 45 10             	cmp    0x10(%ebp),%eax
81005976:	73 13                	jae    8100598b <_realloc_r+0x91>
81005978:	8b 45 08             	mov    0x8(%ebp),%eax
8100597b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005981:	b8 00 00 00 00       	mov    $0x0,%eax
81005986:	e9 47 08 00 00       	jmp    810061d2 <_realloc_r+0x8d8>
8100598b:	8b 55 c0             	mov    -0x40(%ebp),%edx
8100598e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005991:	39 c2                	cmp    %eax,%edx
81005993:	0f 8d 8b 07 00 00    	jge    81006124 <_realloc_r+0x82a>
81005999:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100599c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100599f:	01 d0                	add    %edx,%eax
810059a1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810059a4:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810059a9:	8b 40 08             	mov    0x8(%eax),%eax
810059ac:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059af:	74 1e                	je     810059cf <_realloc_r+0xd5>
810059b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059b4:	8b 40 04             	mov    0x4(%eax),%eax
810059b7:	83 e0 fe             	and    $0xfffffffe,%eax
810059ba:	89 c2                	mov    %eax,%edx
810059bc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059bf:	01 d0                	add    %edx,%eax
810059c1:	8b 40 04             	mov    0x4(%eax),%eax
810059c4:	83 e0 01             	and    $0x1,%eax
810059c7:	85 c0                	test   %eax,%eax
810059c9:	0f 85 ca 00 00 00    	jne    81005a99 <_realloc_r+0x19f>
810059cf:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059d2:	8b 40 04             	mov    0x4(%eax),%eax
810059d5:	83 e0 fc             	and    $0xfffffffc,%eax
810059d8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810059db:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810059e0:	8b 40 08             	mov    0x8(%eax),%eax
810059e3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059e6:	75 71                	jne    81005a59 <_realloc_r+0x15f>
810059e8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810059eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059ee:	01 d0                	add    %edx,%eax
810059f0:	89 c2                	mov    %eax,%edx
810059f2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059f5:	83 c0 10             	add    $0x10,%eax
810059f8:	39 c2                	cmp    %eax,%edx
810059fa:	0f 8c a9 00 00 00    	jl     81005aa9 <_realloc_r+0x1af>
81005a00:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a03:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a06:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81005a0b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005a0e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a11:	01 c8                	add    %ecx,%eax
81005a13:	89 42 08             	mov    %eax,0x8(%edx)
81005a16:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a19:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a1c:	89 c2                	mov    %eax,%edx
81005a1e:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005a23:	8b 40 08             	mov    0x8(%eax),%eax
81005a26:	83 ca 01             	or     $0x1,%edx
81005a29:	89 50 04             	mov    %edx,0x4(%eax)
81005a2c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a2f:	8b 40 04             	mov    0x4(%eax),%eax
81005a32:	83 e0 01             	and    $0x1,%eax
81005a35:	0b 45 bc             	or     -0x44(%ebp),%eax
81005a38:	89 c2                	mov    %eax,%edx
81005a3a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a3d:	89 50 04             	mov    %edx,0x4(%eax)
81005a40:	83 ec 0c             	sub    $0xc,%esp
81005a43:	ff 75 08             	pushl  0x8(%ebp)
81005a46:	e8 c0 f1 ff ff       	call   81004c0b <__malloc_unlock>
81005a4b:	83 c4 10             	add    $0x10,%esp
81005a4e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a51:	83 c0 08             	add    $0x8,%eax
81005a54:	e9 79 07 00 00       	jmp    810061d2 <_realloc_r+0x8d8>
81005a59:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a5f:	01 d0                	add    %edx,%eax
81005a61:	89 c2                	mov    %eax,%edx
81005a63:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a66:	39 c2                	cmp    %eax,%edx
81005a68:	7c 3f                	jl     81005aa9 <_realloc_r+0x1af>
81005a6a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a6d:	8b 40 0c             	mov    0xc(%eax),%eax
81005a70:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005a73:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a76:	8b 40 08             	mov    0x8(%eax),%eax
81005a79:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005a7c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005a7f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005a82:	89 50 0c             	mov    %edx,0xc(%eax)
81005a85:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005a88:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005a8b:	89 50 08             	mov    %edx,0x8(%eax)
81005a8e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a91:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a94:	e9 8c 06 00 00       	jmp    81006125 <_realloc_r+0x82b>
81005a99:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005aa0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005aa7:	eb 01                	jmp    81005aaa <_realloc_r+0x1b0>
81005aa9:	90                   	nop
81005aaa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005aad:	8b 40 04             	mov    0x4(%eax),%eax
81005ab0:	83 e0 01             	and    $0x1,%eax
81005ab3:	85 c0                	test   %eax,%eax
81005ab5:	0f 85 d6 04 00 00    	jne    81005f91 <_realloc_r+0x697>
81005abb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005abe:	8b 00                	mov    (%eax),%eax
81005ac0:	f7 d8                	neg    %eax
81005ac2:	89 c2                	mov    %eax,%edx
81005ac4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ac7:	01 d0                	add    %edx,%eax
81005ac9:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005acc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005acf:	8b 40 04             	mov    0x4(%eax),%eax
81005ad2:	83 e0 fc             	and    $0xfffffffc,%eax
81005ad5:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005ad8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005adc:	0f 84 4a 03 00 00    	je     81005e2c <_realloc_r+0x532>
81005ae2:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005ae7:	8b 40 08             	mov    0x8(%eax),%eax
81005aea:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005aed:	0f 85 b0 01 00 00    	jne    81005ca3 <_realloc_r+0x3a9>
81005af3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005af6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005af9:	01 c2                	add    %eax,%edx
81005afb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005afe:	01 d0                	add    %edx,%eax
81005b00:	89 c2                	mov    %eax,%edx
81005b02:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b05:	83 c0 10             	add    $0x10,%eax
81005b08:	39 c2                	cmp    %eax,%edx
81005b0a:	0f 8c 1c 03 00 00    	jl     81005e2c <_realloc_r+0x532>
81005b10:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b13:	8b 40 0c             	mov    0xc(%eax),%eax
81005b16:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005b19:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b1c:	8b 40 08             	mov    0x8(%eax),%eax
81005b1f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005b22:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005b25:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005b28:	89 50 0c             	mov    %edx,0xc(%eax)
81005b2b:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005b2e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005b31:	89 50 08             	mov    %edx,0x8(%eax)
81005b34:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b37:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b3a:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005b3d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005b40:	01 d0                	add    %edx,%eax
81005b42:	01 45 f0             	add    %eax,-0x10(%ebp)
81005b45:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b48:	83 c0 08             	add    $0x8,%eax
81005b4b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005b4e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005b51:	83 e8 04             	sub    $0x4,%eax
81005b54:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005b57:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005b5b:	0f 87 de 00 00 00    	ja     81005c3f <_realloc_r+0x345>
81005b61:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b67:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005b6a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005b6d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005b71:	0f 86 90 00 00 00    	jbe    81005c07 <_realloc_r+0x30d>
81005b77:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b7a:	8d 42 04             	lea    0x4(%edx),%eax
81005b7d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b80:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b83:	8d 48 04             	lea    0x4(%eax),%ecx
81005b86:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b89:	8b 12                	mov    (%edx),%edx
81005b8b:	89 10                	mov    %edx,(%eax)
81005b8d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b90:	8d 42 04             	lea    0x4(%edx),%eax
81005b93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b96:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b99:	8d 48 04             	lea    0x4(%eax),%ecx
81005b9c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b9f:	8b 12                	mov    (%edx),%edx
81005ba1:	89 10                	mov    %edx,(%eax)
81005ba3:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005ba7:	76 5e                	jbe    81005c07 <_realloc_r+0x30d>
81005ba9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bac:	8d 42 04             	lea    0x4(%edx),%eax
81005baf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bb2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bb5:	8d 48 04             	lea    0x4(%eax),%ecx
81005bb8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bbb:	8b 12                	mov    (%edx),%edx
81005bbd:	89 10                	mov    %edx,(%eax)
81005bbf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bc2:	8d 42 04             	lea    0x4(%edx),%eax
81005bc5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bc8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bcb:	8d 48 04             	lea    0x4(%eax),%ecx
81005bce:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bd1:	8b 12                	mov    (%edx),%edx
81005bd3:	89 10                	mov    %edx,(%eax)
81005bd5:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005bd9:	76 2c                	jbe    81005c07 <_realloc_r+0x30d>
81005bdb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bde:	8d 42 04             	lea    0x4(%edx),%eax
81005be1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005be4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005be7:	8d 48 04             	lea    0x4(%eax),%ecx
81005bea:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bed:	8b 12                	mov    (%edx),%edx
81005bef:	89 10                	mov    %edx,(%eax)
81005bf1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bf4:	8d 42 04             	lea    0x4(%edx),%eax
81005bf7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bfa:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bfd:	8d 48 04             	lea    0x4(%eax),%ecx
81005c00:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c03:	8b 12                	mov    (%edx),%edx
81005c05:	89 10                	mov    %edx,(%eax)
81005c07:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c0a:	8d 42 04             	lea    0x4(%edx),%eax
81005c0d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c10:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c13:	8d 48 04             	lea    0x4(%eax),%ecx
81005c16:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c19:	8b 12                	mov    (%edx),%edx
81005c1b:	89 10                	mov    %edx,(%eax)
81005c1d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c20:	8d 42 04             	lea    0x4(%edx),%eax
81005c23:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c26:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c29:	8d 48 04             	lea    0x4(%eax),%ecx
81005c2c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c2f:	8b 12                	mov    (%edx),%edx
81005c31:	89 10                	mov    %edx,(%eax)
81005c33:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005c36:	8b 10                	mov    (%eax),%edx
81005c38:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c3b:	89 10                	mov    %edx,(%eax)
81005c3d:	eb 14                	jmp    81005c53 <_realloc_r+0x359>
81005c3f:	83 ec 04             	sub    $0x4,%esp
81005c42:	ff 75 a0             	pushl  -0x60(%ebp)
81005c45:	ff 75 0c             	pushl  0xc(%ebp)
81005c48:	ff 75 a8             	pushl  -0x58(%ebp)
81005c4b:	e8 a0 ee ff ff       	call   81004af0 <memmove>
81005c50:	83 c4 10             	add    $0x10,%esp
81005c53:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81005c58:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005c5b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c5e:	01 c8                	add    %ecx,%eax
81005c60:	89 42 08             	mov    %eax,0x8(%edx)
81005c63:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c66:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005c69:	89 c2                	mov    %eax,%edx
81005c6b:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005c70:	8b 40 08             	mov    0x8(%eax),%eax
81005c73:	83 ca 01             	or     $0x1,%edx
81005c76:	89 50 04             	mov    %edx,0x4(%eax)
81005c79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c7c:	8b 40 04             	mov    0x4(%eax),%eax
81005c7f:	83 e0 01             	and    $0x1,%eax
81005c82:	0b 45 bc             	or     -0x44(%ebp),%eax
81005c85:	89 c2                	mov    %eax,%edx
81005c87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c8a:	89 50 04             	mov    %edx,0x4(%eax)
81005c8d:	83 ec 0c             	sub    $0xc,%esp
81005c90:	ff 75 08             	pushl  0x8(%ebp)
81005c93:	e8 73 ef ff ff       	call   81004c0b <__malloc_unlock>
81005c98:	83 c4 10             	add    $0x10,%esp
81005c9b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005c9e:	e9 2f 05 00 00       	jmp    810061d2 <_realloc_r+0x8d8>
81005ca3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ca6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ca9:	01 c2                	add    %eax,%edx
81005cab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cae:	01 d0                	add    %edx,%eax
81005cb0:	89 c2                	mov    %eax,%edx
81005cb2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005cb5:	39 c2                	cmp    %eax,%edx
81005cb7:	0f 8c 6f 01 00 00    	jl     81005e2c <_realloc_r+0x532>
81005cbd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cc0:	8b 40 0c             	mov    0xc(%eax),%eax
81005cc3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cc6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cc9:	8b 40 08             	mov    0x8(%eax),%eax
81005ccc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005ccf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005cd2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005cd5:	89 50 0c             	mov    %edx,0xc(%eax)
81005cd8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005cdb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005cde:	89 50 08             	mov    %edx,0x8(%eax)
81005ce1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ce4:	8b 40 0c             	mov    0xc(%eax),%eax
81005ce7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cea:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ced:	8b 40 08             	mov    0x8(%eax),%eax
81005cf0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005cf3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005cf6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005cf9:	89 50 0c             	mov    %edx,0xc(%eax)
81005cfc:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005cff:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d02:	89 50 08             	mov    %edx,0x8(%eax)
81005d05:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d0b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d0e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d11:	01 d0                	add    %edx,%eax
81005d13:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d16:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d19:	83 c0 08             	add    $0x8,%eax
81005d1c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d1f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d22:	83 e8 04             	sub    $0x4,%eax
81005d25:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005d28:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005d2c:	0f 87 e1 00 00 00    	ja     81005e13 <_realloc_r+0x519>
81005d32:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d35:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d38:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d3b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005d3e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005d42:	0f 86 90 00 00 00    	jbe    81005dd8 <_realloc_r+0x4de>
81005d48:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d4b:	8d 42 04             	lea    0x4(%edx),%eax
81005d4e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d51:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d54:	8d 48 04             	lea    0x4(%eax),%ecx
81005d57:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d5a:	8b 12                	mov    (%edx),%edx
81005d5c:	89 10                	mov    %edx,(%eax)
81005d5e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d61:	8d 42 04             	lea    0x4(%edx),%eax
81005d64:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d67:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d6a:	8d 48 04             	lea    0x4(%eax),%ecx
81005d6d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d70:	8b 12                	mov    (%edx),%edx
81005d72:	89 10                	mov    %edx,(%eax)
81005d74:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005d78:	76 5e                	jbe    81005dd8 <_realloc_r+0x4de>
81005d7a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d7d:	8d 42 04             	lea    0x4(%edx),%eax
81005d80:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d83:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d86:	8d 48 04             	lea    0x4(%eax),%ecx
81005d89:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d8c:	8b 12                	mov    (%edx),%edx
81005d8e:	89 10                	mov    %edx,(%eax)
81005d90:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d93:	8d 42 04             	lea    0x4(%edx),%eax
81005d96:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d99:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d9c:	8d 48 04             	lea    0x4(%eax),%ecx
81005d9f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005da2:	8b 12                	mov    (%edx),%edx
81005da4:	89 10                	mov    %edx,(%eax)
81005da6:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005daa:	76 2c                	jbe    81005dd8 <_realloc_r+0x4de>
81005dac:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005daf:	8d 42 04             	lea    0x4(%edx),%eax
81005db2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005db5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005db8:	8d 48 04             	lea    0x4(%eax),%ecx
81005dbb:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dbe:	8b 12                	mov    (%edx),%edx
81005dc0:	89 10                	mov    %edx,(%eax)
81005dc2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dc5:	8d 42 04             	lea    0x4(%edx),%eax
81005dc8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dcb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dce:	8d 48 04             	lea    0x4(%eax),%ecx
81005dd1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dd4:	8b 12                	mov    (%edx),%edx
81005dd6:	89 10                	mov    %edx,(%eax)
81005dd8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005ddb:	8d 42 04             	lea    0x4(%edx),%eax
81005dde:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005de1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005de4:	8d 48 04             	lea    0x4(%eax),%ecx
81005de7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dea:	8b 12                	mov    (%edx),%edx
81005dec:	89 10                	mov    %edx,(%eax)
81005dee:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005df1:	8d 42 04             	lea    0x4(%edx),%eax
81005df4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005df7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dfa:	8d 48 04             	lea    0x4(%eax),%ecx
81005dfd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e00:	8b 12                	mov    (%edx),%edx
81005e02:	89 10                	mov    %edx,(%eax)
81005e04:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005e07:	8b 10                	mov    (%eax),%edx
81005e09:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e0c:	89 10                	mov    %edx,(%eax)
81005e0e:	e9 12 03 00 00       	jmp    81006125 <_realloc_r+0x82b>
81005e13:	83 ec 04             	sub    $0x4,%esp
81005e16:	ff 75 a4             	pushl  -0x5c(%ebp)
81005e19:	ff 75 0c             	pushl  0xc(%ebp)
81005e1c:	ff 75 a8             	pushl  -0x58(%ebp)
81005e1f:	e8 cc ec ff ff       	call   81004af0 <memmove>
81005e24:	83 c4 10             	add    $0x10,%esp
81005e27:	e9 f9 02 00 00       	jmp    81006125 <_realloc_r+0x82b>
81005e2c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005e30:	0f 84 5b 01 00 00    	je     81005f91 <_realloc_r+0x697>
81005e36:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005e39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e3c:	01 d0                	add    %edx,%eax
81005e3e:	89 c2                	mov    %eax,%edx
81005e40:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e43:	39 c2                	cmp    %eax,%edx
81005e45:	0f 8c 46 01 00 00    	jl     81005f91 <_realloc_r+0x697>
81005e4b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e4e:	8b 40 0c             	mov    0xc(%eax),%eax
81005e51:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e54:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e57:	8b 40 08             	mov    0x8(%eax),%eax
81005e5a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e5d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e60:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e63:	89 50 0c             	mov    %edx,0xc(%eax)
81005e66:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e69:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e6c:	89 50 08             	mov    %edx,0x8(%eax)
81005e6f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e72:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e75:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005e78:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e7e:	83 c0 08             	add    $0x8,%eax
81005e81:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e84:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e87:	83 e8 04             	sub    $0x4,%eax
81005e8a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005e8d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005e91:	0f 87 e1 00 00 00    	ja     81005f78 <_realloc_r+0x67e>
81005e97:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e9a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e9d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005ea0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005ea3:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005ea7:	0f 86 90 00 00 00    	jbe    81005f3d <_realloc_r+0x643>
81005ead:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005eb0:	8d 42 04             	lea    0x4(%edx),%eax
81005eb3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005eb6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005eb9:	8d 48 04             	lea    0x4(%eax),%ecx
81005ebc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ebf:	8b 12                	mov    (%edx),%edx
81005ec1:	89 10                	mov    %edx,(%eax)
81005ec3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ec6:	8d 42 04             	lea    0x4(%edx),%eax
81005ec9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ecc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ecf:	8d 48 04             	lea    0x4(%eax),%ecx
81005ed2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ed5:	8b 12                	mov    (%edx),%edx
81005ed7:	89 10                	mov    %edx,(%eax)
81005ed9:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005edd:	76 5e                	jbe    81005f3d <_realloc_r+0x643>
81005edf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ee2:	8d 42 04             	lea    0x4(%edx),%eax
81005ee5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ee8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005eeb:	8d 48 04             	lea    0x4(%eax),%ecx
81005eee:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ef1:	8b 12                	mov    (%edx),%edx
81005ef3:	89 10                	mov    %edx,(%eax)
81005ef5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ef8:	8d 42 04             	lea    0x4(%edx),%eax
81005efb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005efe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f01:	8d 48 04             	lea    0x4(%eax),%ecx
81005f04:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f07:	8b 12                	mov    (%edx),%edx
81005f09:	89 10                	mov    %edx,(%eax)
81005f0b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005f0f:	76 2c                	jbe    81005f3d <_realloc_r+0x643>
81005f11:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f14:	8d 42 04             	lea    0x4(%edx),%eax
81005f17:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f1a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f1d:	8d 48 04             	lea    0x4(%eax),%ecx
81005f20:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f23:	8b 12                	mov    (%edx),%edx
81005f25:	89 10                	mov    %edx,(%eax)
81005f27:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f2a:	8d 42 04             	lea    0x4(%edx),%eax
81005f2d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f30:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f33:	8d 48 04             	lea    0x4(%eax),%ecx
81005f36:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f39:	8b 12                	mov    (%edx),%edx
81005f3b:	89 10                	mov    %edx,(%eax)
81005f3d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f40:	8d 42 04             	lea    0x4(%edx),%eax
81005f43:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f46:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f49:	8d 48 04             	lea    0x4(%eax),%ecx
81005f4c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f4f:	8b 12                	mov    (%edx),%edx
81005f51:	89 10                	mov    %edx,(%eax)
81005f53:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f56:	8d 42 04             	lea    0x4(%edx),%eax
81005f59:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f5c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f5f:	8d 48 04             	lea    0x4(%eax),%ecx
81005f62:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f65:	8b 12                	mov    (%edx),%edx
81005f67:	89 10                	mov    %edx,(%eax)
81005f69:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005f6c:	8b 10                	mov    (%eax),%edx
81005f6e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f71:	89 10                	mov    %edx,(%eax)
81005f73:	e9 ad 01 00 00       	jmp    81006125 <_realloc_r+0x82b>
81005f78:	83 ec 04             	sub    $0x4,%esp
81005f7b:	ff 75 9c             	pushl  -0x64(%ebp)
81005f7e:	ff 75 0c             	pushl  0xc(%ebp)
81005f81:	ff 75 a8             	pushl  -0x58(%ebp)
81005f84:	e8 67 eb ff ff       	call   81004af0 <memmove>
81005f89:	83 c4 10             	add    $0x10,%esp
81005f8c:	e9 94 01 00 00       	jmp    81006125 <_realloc_r+0x82b>
81005f91:	83 ec 08             	sub    $0x8,%esp
81005f94:	ff 75 10             	pushl  0x10(%ebp)
81005f97:	ff 75 08             	pushl  0x8(%ebp)
81005f9a:	e8 ff e1 ff ff       	call   8100419e <_malloc_r>
81005f9f:	83 c4 10             	add    $0x10,%esp
81005fa2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005fa5:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005fa9:	75 18                	jne    81005fc3 <_realloc_r+0x6c9>
81005fab:	83 ec 0c             	sub    $0xc,%esp
81005fae:	ff 75 08             	pushl  0x8(%ebp)
81005fb1:	e8 55 ec ff ff       	call   81004c0b <__malloc_unlock>
81005fb6:	83 c4 10             	add    $0x10,%esp
81005fb9:	b8 00 00 00 00       	mov    $0x0,%eax
81005fbe:	e9 0f 02 00 00       	jmp    810061d2 <_realloc_r+0x8d8>
81005fc3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005fc6:	83 e8 08             	sub    $0x8,%eax
81005fc9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fcc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fcf:	8b 40 04             	mov    0x4(%eax),%eax
81005fd2:	83 e0 fe             	and    $0xfffffffe,%eax
81005fd5:	89 c2                	mov    %eax,%edx
81005fd7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fda:	01 d0                	add    %edx,%eax
81005fdc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81005fdf:	75 17                	jne    81005ff8 <_realloc_r+0x6fe>
81005fe1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fe4:	8b 40 04             	mov    0x4(%eax),%eax
81005fe7:	83 e0 fc             	and    $0xfffffffc,%eax
81005fea:	01 45 f0             	add    %eax,-0x10(%ebp)
81005fed:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ff0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ff3:	e9 2d 01 00 00       	jmp    81006125 <_realloc_r+0x82b>
81005ff8:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005ffb:	83 e8 04             	sub    $0x4,%eax
81005ffe:	89 45 98             	mov    %eax,-0x68(%ebp)
81006001:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006005:	0f 87 de 00 00 00    	ja     810060e9 <_realloc_r+0x7ef>
8100600b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100600e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006011:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006014:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006017:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100601b:	0f 86 90 00 00 00    	jbe    810060b1 <_realloc_r+0x7b7>
81006021:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006024:	8d 42 04             	lea    0x4(%edx),%eax
81006027:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100602a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100602d:	8d 48 04             	lea    0x4(%eax),%ecx
81006030:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006033:	8b 12                	mov    (%edx),%edx
81006035:	89 10                	mov    %edx,(%eax)
81006037:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100603a:	8d 42 04             	lea    0x4(%edx),%eax
8100603d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006040:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006043:	8d 48 04             	lea    0x4(%eax),%ecx
81006046:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006049:	8b 12                	mov    (%edx),%edx
8100604b:	89 10                	mov    %edx,(%eax)
8100604d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81006051:	76 5e                	jbe    810060b1 <_realloc_r+0x7b7>
81006053:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006056:	8d 42 04             	lea    0x4(%edx),%eax
81006059:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100605c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100605f:	8d 48 04             	lea    0x4(%eax),%ecx
81006062:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006065:	8b 12                	mov    (%edx),%edx
81006067:	89 10                	mov    %edx,(%eax)
81006069:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100606c:	8d 42 04             	lea    0x4(%edx),%eax
8100606f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006072:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006075:	8d 48 04             	lea    0x4(%eax),%ecx
81006078:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100607b:	8b 12                	mov    (%edx),%edx
8100607d:	89 10                	mov    %edx,(%eax)
8100607f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006083:	76 2c                	jbe    810060b1 <_realloc_r+0x7b7>
81006085:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006088:	8d 42 04             	lea    0x4(%edx),%eax
8100608b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100608e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006091:	8d 48 04             	lea    0x4(%eax),%ecx
81006094:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006097:	8b 12                	mov    (%edx),%edx
81006099:	89 10                	mov    %edx,(%eax)
8100609b:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100609e:	8d 42 04             	lea    0x4(%edx),%eax
810060a1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060a4:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060a7:	8d 48 04             	lea    0x4(%eax),%ecx
810060aa:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060ad:	8b 12                	mov    (%edx),%edx
810060af:	89 10                	mov    %edx,(%eax)
810060b1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060b4:	8d 42 04             	lea    0x4(%edx),%eax
810060b7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060ba:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060bd:	8d 48 04             	lea    0x4(%eax),%ecx
810060c0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060c3:	8b 12                	mov    (%edx),%edx
810060c5:	89 10                	mov    %edx,(%eax)
810060c7:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060ca:	8d 42 04             	lea    0x4(%edx),%eax
810060cd:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060d0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060d3:	8d 48 04             	lea    0x4(%eax),%ecx
810060d6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060d9:	8b 12                	mov    (%edx),%edx
810060db:	89 10                	mov    %edx,(%eax)
810060dd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810060e0:	8b 10                	mov    (%eax),%edx
810060e2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060e5:	89 10                	mov    %edx,(%eax)
810060e7:	eb 14                	jmp    810060fd <_realloc_r+0x803>
810060e9:	83 ec 04             	sub    $0x4,%esp
810060ec:	ff 75 98             	pushl  -0x68(%ebp)
810060ef:	ff 75 0c             	pushl  0xc(%ebp)
810060f2:	ff 75 a8             	pushl  -0x58(%ebp)
810060f5:	e8 f6 e9 ff ff       	call   81004af0 <memmove>
810060fa:	83 c4 10             	add    $0x10,%esp
810060fd:	83 ec 08             	sub    $0x8,%esp
81006100:	ff 75 0c             	pushl  0xc(%ebp)
81006103:	ff 75 08             	pushl  0x8(%ebp)
81006106:	e8 7e bd ff ff       	call   81001e89 <_free_r>
8100610b:	83 c4 10             	add    $0x10,%esp
8100610e:	83 ec 0c             	sub    $0xc,%esp
81006111:	ff 75 08             	pushl  0x8(%ebp)
81006114:	e8 f2 ea ff ff       	call   81004c0b <__malloc_unlock>
81006119:	83 c4 10             	add    $0x10,%esp
8100611c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100611f:	e9 ae 00 00 00       	jmp    810061d2 <_realloc_r+0x8d8>
81006124:	90                   	nop
81006125:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006128:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100612b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100612e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81006132:	76 5d                	jbe    81006191 <_realloc_r+0x897>
81006134:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006137:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100613a:	01 d0                	add    %edx,%eax
8100613c:	89 45 90             	mov    %eax,-0x70(%ebp)
8100613f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006142:	8b 40 04             	mov    0x4(%eax),%eax
81006145:	83 e0 01             	and    $0x1,%eax
81006148:	0b 45 bc             	or     -0x44(%ebp),%eax
8100614b:	89 c2                	mov    %eax,%edx
8100614d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006150:	89 50 04             	mov    %edx,0x4(%eax)
81006153:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006156:	83 c8 01             	or     $0x1,%eax
81006159:	89 c2                	mov    %eax,%edx
8100615b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100615e:	89 50 04             	mov    %edx,0x4(%eax)
81006161:	8b 55 90             	mov    -0x70(%ebp),%edx
81006164:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006167:	01 d0                	add    %edx,%eax
81006169:	8b 50 04             	mov    0x4(%eax),%edx
8100616c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100616f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006172:	01 c8                	add    %ecx,%eax
81006174:	83 ca 01             	or     $0x1,%edx
81006177:	89 50 04             	mov    %edx,0x4(%eax)
8100617a:	8b 45 90             	mov    -0x70(%ebp),%eax
8100617d:	83 c0 08             	add    $0x8,%eax
81006180:	83 ec 08             	sub    $0x8,%esp
81006183:	50                   	push   %eax
81006184:	ff 75 08             	pushl  0x8(%ebp)
81006187:	e8 fd bc ff ff       	call   81001e89 <_free_r>
8100618c:	83 c4 10             	add    $0x10,%esp
8100618f:	eb 2d                	jmp    810061be <_realloc_r+0x8c4>
81006191:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006194:	8b 40 04             	mov    0x4(%eax),%eax
81006197:	83 e0 01             	and    $0x1,%eax
8100619a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100619d:	89 c2                	mov    %eax,%edx
8100619f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061a2:	89 50 04             	mov    %edx,0x4(%eax)
810061a5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810061a8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061ab:	01 d0                	add    %edx,%eax
810061ad:	8b 50 04             	mov    0x4(%eax),%edx
810061b0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810061b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061b6:	01 c8                	add    %ecx,%eax
810061b8:	83 ca 01             	or     $0x1,%edx
810061bb:	89 50 04             	mov    %edx,0x4(%eax)
810061be:	83 ec 0c             	sub    $0xc,%esp
810061c1:	ff 75 08             	pushl  0x8(%ebp)
810061c4:	e8 42 ea ff ff       	call   81004c0b <__malloc_unlock>
810061c9:	83 c4 10             	add    $0x10,%esp
810061cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061cf:	83 c0 08             	add    $0x8,%eax
810061d2:	c9                   	leave  
810061d3:	c3                   	ret    

810061d4 <cleanup_glue>:
810061d4:	55                   	push   %ebp
810061d5:	89 e5                	mov    %esp,%ebp
810061d7:	83 ec 08             	sub    $0x8,%esp
810061da:	8b 45 0c             	mov    0xc(%ebp),%eax
810061dd:	8b 00                	mov    (%eax),%eax
810061df:	85 c0                	test   %eax,%eax
810061e1:	74 14                	je     810061f7 <cleanup_glue+0x23>
810061e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810061e6:	8b 00                	mov    (%eax),%eax
810061e8:	83 ec 08             	sub    $0x8,%esp
810061eb:	50                   	push   %eax
810061ec:	ff 75 08             	pushl  0x8(%ebp)
810061ef:	e8 e0 ff ff ff       	call   810061d4 <cleanup_glue>
810061f4:	83 c4 10             	add    $0x10,%esp
810061f7:	83 ec 08             	sub    $0x8,%esp
810061fa:	ff 75 0c             	pushl  0xc(%ebp)
810061fd:	ff 75 08             	pushl  0x8(%ebp)
81006200:	e8 84 bc ff ff       	call   81001e89 <_free_r>
81006205:	83 c4 10             	add    $0x10,%esp
81006208:	90                   	nop
81006209:	c9                   	leave  
8100620a:	c3                   	ret    

8100620b <_reclaim_reent>:
8100620b:	55                   	push   %ebp
8100620c:	89 e5                	mov    %esp,%ebp
8100620e:	83 ec 28             	sub    $0x28,%esp
81006211:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006216:	39 45 08             	cmp    %eax,0x8(%ebp)
81006219:	0f 84 49 01 00 00    	je     81006368 <_reclaim_reent+0x15d>
8100621f:	8b 45 08             	mov    0x8(%ebp),%eax
81006222:	8b 40 4c             	mov    0x4c(%eax),%eax
81006225:	85 c0                	test   %eax,%eax
81006227:	74 64                	je     8100628d <_reclaim_reent+0x82>
81006229:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006230:	eb 3e                	jmp    81006270 <_reclaim_reent+0x65>
81006232:	8b 45 08             	mov    0x8(%ebp),%eax
81006235:	8b 50 4c             	mov    0x4c(%eax),%edx
81006238:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100623b:	c1 e0 02             	shl    $0x2,%eax
8100623e:	01 d0                	add    %edx,%eax
81006240:	8b 00                	mov    (%eax),%eax
81006242:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006245:	eb 1f                	jmp    81006266 <_reclaim_reent+0x5b>
81006247:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100624a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100624d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006250:	8b 00                	mov    (%eax),%eax
81006252:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006255:	83 ec 08             	sub    $0x8,%esp
81006258:	ff 75 e8             	pushl  -0x18(%ebp)
8100625b:	ff 75 08             	pushl  0x8(%ebp)
8100625e:	e8 26 bc ff ff       	call   81001e89 <_free_r>
81006263:	83 c4 10             	add    $0x10,%esp
81006266:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100626a:	75 db                	jne    81006247 <_reclaim_reent+0x3c>
8100626c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006270:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006273:	83 f8 1f             	cmp    $0x1f,%eax
81006276:	76 ba                	jbe    81006232 <_reclaim_reent+0x27>
81006278:	8b 45 08             	mov    0x8(%ebp),%eax
8100627b:	8b 40 4c             	mov    0x4c(%eax),%eax
8100627e:	83 ec 08             	sub    $0x8,%esp
81006281:	50                   	push   %eax
81006282:	ff 75 08             	pushl  0x8(%ebp)
81006285:	e8 ff bb ff ff       	call   81001e89 <_free_r>
8100628a:	83 c4 10             	add    $0x10,%esp
8100628d:	8b 45 08             	mov    0x8(%ebp),%eax
81006290:	8b 40 40             	mov    0x40(%eax),%eax
81006293:	85 c0                	test   %eax,%eax
81006295:	74 15                	je     810062ac <_reclaim_reent+0xa1>
81006297:	8b 45 08             	mov    0x8(%ebp),%eax
8100629a:	8b 40 40             	mov    0x40(%eax),%eax
8100629d:	83 ec 08             	sub    $0x8,%esp
810062a0:	50                   	push   %eax
810062a1:	ff 75 08             	pushl  0x8(%ebp)
810062a4:	e8 e0 bb ff ff       	call   81001e89 <_free_r>
810062a9:	83 c4 10             	add    $0x10,%esp
810062ac:	8b 45 08             	mov    0x8(%ebp),%eax
810062af:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062b5:	85 c0                	test   %eax,%eax
810062b7:	74 50                	je     81006309 <_reclaim_reent+0xfe>
810062b9:	8b 45 08             	mov    0x8(%ebp),%eax
810062bc:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062c2:	8b 55 08             	mov    0x8(%ebp),%edx
810062c5:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810062cb:	39 d0                	cmp    %edx,%eax
810062cd:	74 3a                	je     81006309 <_reclaim_reent+0xfe>
810062cf:	8b 45 08             	mov    0x8(%ebp),%eax
810062d2:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062db:	eb 1f                	jmp    810062fc <_reclaim_reent+0xf1>
810062dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810062e3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062e6:	8b 00                	mov    (%eax),%eax
810062e8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062eb:	83 ec 08             	sub    $0x8,%esp
810062ee:	ff 75 e4             	pushl  -0x1c(%ebp)
810062f1:	ff 75 08             	pushl  0x8(%ebp)
810062f4:	e8 90 bb ff ff       	call   81001e89 <_free_r>
810062f9:	83 c4 10             	add    $0x10,%esp
810062fc:	8b 45 08             	mov    0x8(%ebp),%eax
810062ff:	05 4c 01 00 00       	add    $0x14c,%eax
81006304:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006307:	75 d4                	jne    810062dd <_reclaim_reent+0xd2>
81006309:	8b 45 08             	mov    0x8(%ebp),%eax
8100630c:	8b 40 54             	mov    0x54(%eax),%eax
8100630f:	85 c0                	test   %eax,%eax
81006311:	74 15                	je     81006328 <_reclaim_reent+0x11d>
81006313:	8b 45 08             	mov    0x8(%ebp),%eax
81006316:	8b 40 54             	mov    0x54(%eax),%eax
81006319:	83 ec 08             	sub    $0x8,%esp
8100631c:	50                   	push   %eax
8100631d:	ff 75 08             	pushl  0x8(%ebp)
81006320:	e8 64 bb ff ff       	call   81001e89 <_free_r>
81006325:	83 c4 10             	add    $0x10,%esp
81006328:	8b 45 08             	mov    0x8(%ebp),%eax
8100632b:	8b 40 38             	mov    0x38(%eax),%eax
8100632e:	85 c0                	test   %eax,%eax
81006330:	74 36                	je     81006368 <_reclaim_reent+0x15d>
81006332:	8b 45 08             	mov    0x8(%ebp),%eax
81006335:	8b 40 3c             	mov    0x3c(%eax),%eax
81006338:	83 ec 0c             	sub    $0xc,%esp
8100633b:	ff 75 08             	pushl  0x8(%ebp)
8100633e:	ff d0                	call   *%eax
81006340:	83 c4 10             	add    $0x10,%esp
81006343:	8b 45 08             	mov    0x8(%ebp),%eax
81006346:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100634c:	85 c0                	test   %eax,%eax
8100634e:	74 18                	je     81006368 <_reclaim_reent+0x15d>
81006350:	8b 45 08             	mov    0x8(%ebp),%eax
81006353:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006359:	83 ec 08             	sub    $0x8,%esp
8100635c:	50                   	push   %eax
8100635d:	ff 75 08             	pushl  0x8(%ebp)
81006360:	e8 6f fe ff ff       	call   810061d4 <cleanup_glue>
81006365:	83 c4 10             	add    $0x10,%esp
81006368:	90                   	nop
81006369:	c9                   	leave  
8100636a:	c3                   	ret    

8100636b <lflush>:
8100636b:	55                   	push   %ebp
8100636c:	89 e5                	mov    %esp,%ebp
8100636e:	83 ec 08             	sub    $0x8,%esp
81006371:	8b 45 08             	mov    0x8(%ebp),%eax
81006374:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006378:	98                   	cwtl   
81006379:	83 e0 09             	and    $0x9,%eax
8100637c:	83 f8 09             	cmp    $0x9,%eax
8100637f:	75 10                	jne    81006391 <lflush+0x26>
81006381:	83 ec 0c             	sub    $0xc,%esp
81006384:	ff 75 08             	pushl  0x8(%ebp)
81006387:	e8 b3 af ff ff       	call   8100133f <fflush>
8100638c:	83 c4 10             	add    $0x10,%esp
8100638f:	eb 05                	jmp    81006396 <lflush+0x2b>
81006391:	b8 00 00 00 00       	mov    $0x0,%eax
81006396:	c9                   	leave  
81006397:	c3                   	ret    

81006398 <__srefill_r>:
81006398:	55                   	push   %ebp
81006399:	89 e5                	mov    %esp,%ebp
8100639b:	56                   	push   %esi
8100639c:	53                   	push   %ebx
8100639d:	83 ec 10             	sub    $0x10,%esp
810063a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810063a3:	8b 45 08             	mov    0x8(%ebp),%eax
810063a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810063a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810063ad:	74 18                	je     810063c7 <__srefill_r+0x2f>
810063af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063b2:	8b 40 38             	mov    0x38(%eax),%eax
810063b5:	85 c0                	test   %eax,%eax
810063b7:	75 0e                	jne    810063c7 <__srefill_r+0x2f>
810063b9:	83 ec 0c             	sub    $0xc,%esp
810063bc:	ff 75 f4             	pushl  -0xc(%ebp)
810063bf:	e8 10 b5 ff ff       	call   810018d4 <__sinit>
810063c4:	83 c4 10             	add    $0x10,%esp
810063c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063cb:	98                   	cwtl   
810063cc:	25 00 20 00 00       	and    $0x2000,%eax
810063d1:	85 c0                	test   %eax,%eax
810063d3:	75 14                	jne    810063e9 <__srefill_r+0x51>
810063d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063d9:	80 cc 20             	or     $0x20,%ah
810063dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063e0:	8b 43 64             	mov    0x64(%ebx),%eax
810063e3:	80 e4 df             	and    $0xdf,%ah
810063e6:	89 43 64             	mov    %eax,0x64(%ebx)
810063e9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810063f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063f4:	98                   	cwtl   
810063f5:	83 e0 20             	and    $0x20,%eax
810063f8:	85 c0                	test   %eax,%eax
810063fa:	74 0a                	je     81006406 <__srefill_r+0x6e>
810063fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006401:	e9 8c 01 00 00       	jmp    81006592 <__srefill_r+0x1fa>
81006406:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100640a:	98                   	cwtl   
8100640b:	83 e0 04             	and    $0x4,%eax
8100640e:	85 c0                	test   %eax,%eax
81006410:	75 79                	jne    8100648b <__srefill_r+0xf3>
81006412:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006416:	98                   	cwtl   
81006417:	83 e0 10             	and    $0x10,%eax
8100641a:	85 c0                	test   %eax,%eax
8100641c:	75 1e                	jne    8100643c <__srefill_r+0xa4>
8100641e:	8b 45 08             	mov    0x8(%ebp),%eax
81006421:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81006427:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100642b:	83 c8 40             	or     $0x40,%eax
8100642e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006432:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006437:	e9 56 01 00 00       	jmp    81006592 <__srefill_r+0x1fa>
8100643c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006440:	98                   	cwtl   
81006441:	83 e0 08             	and    $0x8,%eax
81006444:	85 c0                	test   %eax,%eax
81006446:	74 36                	je     8100647e <__srefill_r+0xe6>
81006448:	83 ec 08             	sub    $0x8,%esp
8100644b:	53                   	push   %ebx
8100644c:	ff 75 08             	pushl  0x8(%ebp)
8100644f:	e8 93 ae ff ff       	call   810012e7 <_fflush_r>
81006454:	83 c4 10             	add    $0x10,%esp
81006457:	85 c0                	test   %eax,%eax
81006459:	74 0a                	je     81006465 <__srefill_r+0xcd>
8100645b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006460:	e9 2d 01 00 00       	jmp    81006592 <__srefill_r+0x1fa>
81006465:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006469:	83 e0 f7             	and    $0xfffffff7,%eax
8100646c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006470:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006477:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100647e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006482:	83 c8 04             	or     $0x4,%eax
81006485:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006489:	eb 46                	jmp    810064d1 <__srefill_r+0x139>
8100648b:	8b 43 30             	mov    0x30(%ebx),%eax
8100648e:	85 c0                	test   %eax,%eax
81006490:	74 3f                	je     810064d1 <__srefill_r+0x139>
81006492:	8b 53 30             	mov    0x30(%ebx),%edx
81006495:	8d 43 40             	lea    0x40(%ebx),%eax
81006498:	39 c2                	cmp    %eax,%edx
8100649a:	74 12                	je     810064ae <__srefill_r+0x116>
8100649c:	8b 43 30             	mov    0x30(%ebx),%eax
8100649f:	83 ec 08             	sub    $0x8,%esp
810064a2:	50                   	push   %eax
810064a3:	ff 75 08             	pushl  0x8(%ebp)
810064a6:	e8 de b9 ff ff       	call   81001e89 <_free_r>
810064ab:	83 c4 10             	add    $0x10,%esp
810064ae:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810064b5:	8b 43 3c             	mov    0x3c(%ebx),%eax
810064b8:	89 43 04             	mov    %eax,0x4(%ebx)
810064bb:	8b 43 04             	mov    0x4(%ebx),%eax
810064be:	85 c0                	test   %eax,%eax
810064c0:	74 0f                	je     810064d1 <__srefill_r+0x139>
810064c2:	8b 43 38             	mov    0x38(%ebx),%eax
810064c5:	89 03                	mov    %eax,(%ebx)
810064c7:	b8 00 00 00 00       	mov    $0x0,%eax
810064cc:	e9 c1 00 00 00       	jmp    81006592 <__srefill_r+0x1fa>
810064d1:	8b 43 10             	mov    0x10(%ebx),%eax
810064d4:	85 c0                	test   %eax,%eax
810064d6:	75 0f                	jne    810064e7 <__srefill_r+0x14f>
810064d8:	83 ec 08             	sub    $0x8,%esp
810064db:	53                   	push   %ebx
810064dc:	ff 75 08             	pushl  0x8(%ebp)
810064df:	e8 6e d8 ff ff       	call   81003d52 <__smakebuf_r>
810064e4:	83 c4 10             	add    $0x10,%esp
810064e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064eb:	98                   	cwtl   
810064ec:	83 e0 03             	and    $0x3,%eax
810064ef:	85 c0                	test   %eax,%eax
810064f1:	74 48                	je     8100653b <__srefill_r+0x1a3>
810064f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064f7:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810064fb:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81006501:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81006506:	83 ec 08             	sub    $0x8,%esp
81006509:	68 6b 63 00 81       	push   $0x8100636b
8100650e:	50                   	push   %eax
8100650f:	e8 a0 c8 ff ff       	call   81002db4 <_fwalk>
81006514:	83 c4 10             	add    $0x10,%esp
81006517:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100651b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100651f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006523:	98                   	cwtl   
81006524:	83 e0 09             	and    $0x9,%eax
81006527:	83 f8 09             	cmp    $0x9,%eax
8100652a:	75 0f                	jne    8100653b <__srefill_r+0x1a3>
8100652c:	83 ec 08             	sub    $0x8,%esp
8100652f:	53                   	push   %ebx
81006530:	ff 75 08             	pushl  0x8(%ebp)
81006533:	e8 89 ab ff ff       	call   810010c1 <__sflush_r>
81006538:	83 c4 10             	add    $0x10,%esp
8100653b:	8b 43 10             	mov    0x10(%ebx),%eax
8100653e:	89 03                	mov    %eax,(%ebx)
81006540:	8b 43 20             	mov    0x20(%ebx),%eax
81006543:	8b 73 14             	mov    0x14(%ebx),%esi
81006546:	8b 0b                	mov    (%ebx),%ecx
81006548:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100654b:	56                   	push   %esi
8100654c:	51                   	push   %ecx
8100654d:	52                   	push   %edx
8100654e:	ff 75 08             	pushl  0x8(%ebp)
81006551:	ff d0                	call   *%eax
81006553:	83 c4 10             	add    $0x10,%esp
81006556:	89 43 04             	mov    %eax,0x4(%ebx)
81006559:	8b 43 04             	mov    0x4(%ebx),%eax
8100655c:	85 c0                	test   %eax,%eax
8100655e:	7f 2d                	jg     8100658d <__srefill_r+0x1f5>
81006560:	8b 43 04             	mov    0x4(%ebx),%eax
81006563:	85 c0                	test   %eax,%eax
81006565:	75 0d                	jne    81006574 <__srefill_r+0x1dc>
81006567:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100656b:	83 c8 20             	or     $0x20,%eax
8100656e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006572:	eb 12                	jmp    81006586 <__srefill_r+0x1ee>
81006574:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100657b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100657f:	83 c8 40             	or     $0x40,%eax
81006582:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006586:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100658b:	eb 05                	jmp    81006592 <__srefill_r+0x1fa>
8100658d:	b8 00 00 00 00       	mov    $0x0,%eax
81006592:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006595:	5b                   	pop    %ebx
81006596:	5e                   	pop    %esi
81006597:	5d                   	pop    %ebp
81006598:	c3                   	ret    

81006599 <__srget_r>:
81006599:	55                   	push   %ebp
8100659a:	89 e5                	mov    %esp,%ebp
8100659c:	53                   	push   %ebx
8100659d:	83 ec 14             	sub    $0x14,%esp
810065a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810065a3:	8b 45 08             	mov    0x8(%ebp),%eax
810065a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810065ad:	74 18                	je     810065c7 <__srget_r+0x2e>
810065af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065b2:	8b 40 38             	mov    0x38(%eax),%eax
810065b5:	85 c0                	test   %eax,%eax
810065b7:	75 0e                	jne    810065c7 <__srget_r+0x2e>
810065b9:	83 ec 0c             	sub    $0xc,%esp
810065bc:	ff 75 f4             	pushl  -0xc(%ebp)
810065bf:	e8 10 b3 ff ff       	call   810018d4 <__sinit>
810065c4:	83 c4 10             	add    $0x10,%esp
810065c7:	83 ec 08             	sub    $0x8,%esp
810065ca:	53                   	push   %ebx
810065cb:	ff 75 08             	pushl  0x8(%ebp)
810065ce:	e8 c5 fd ff ff       	call   81006398 <__srefill_r>
810065d3:	83 c4 10             	add    $0x10,%esp
810065d6:	85 c0                	test   %eax,%eax
810065d8:	75 18                	jne    810065f2 <__srget_r+0x59>
810065da:	8b 43 04             	mov    0x4(%ebx),%eax
810065dd:	83 e8 01             	sub    $0x1,%eax
810065e0:	89 43 04             	mov    %eax,0x4(%ebx)
810065e3:	8b 03                	mov    (%ebx),%eax
810065e5:	8d 50 01             	lea    0x1(%eax),%edx
810065e8:	89 13                	mov    %edx,(%ebx)
810065ea:	0f b6 00             	movzbl (%eax),%eax
810065ed:	0f b6 c0             	movzbl %al,%eax
810065f0:	eb 05                	jmp    810065f7 <__srget_r+0x5e>
810065f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810065f7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810065fa:	c9                   	leave  
810065fb:	c3                   	ret    

810065fc <__srget>:
810065fc:	55                   	push   %ebp
810065fd:	89 e5                	mov    %esp,%ebp
810065ff:	83 ec 08             	sub    $0x8,%esp
81006602:	8b 55 08             	mov    0x8(%ebp),%edx
81006605:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100660a:	83 ec 08             	sub    $0x8,%esp
8100660d:	52                   	push   %edx
8100660e:	50                   	push   %eax
8100660f:	e8 85 ff ff ff       	call   81006599 <__srget_r>
81006614:	83 c4 10             	add    $0x10,%esp
81006617:	c9                   	leave  
81006618:	c3                   	ret    

81006619 <_sbrk_r>:
81006619:	55                   	push   %ebp
8100661a:	89 e5                	mov    %esp,%ebp
8100661c:	83 ec 18             	sub    $0x18,%esp
8100661f:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
81006626:	00 00 00 
81006629:	83 ec 0c             	sub    $0xc,%esp
8100662c:	ff 75 0c             	pushl  0xc(%ebp)
8100662f:	e8 3a a7 ff ff       	call   81000d6e <sbrk>
81006634:	83 c4 10             	add    $0x10,%esp
81006637:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100663a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100663e:	75 14                	jne    81006654 <_sbrk_r+0x3b>
81006640:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
81006645:	85 c0                	test   %eax,%eax
81006647:	74 0b                	je     81006654 <_sbrk_r+0x3b>
81006649:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
8100664f:	8b 45 08             	mov    0x8(%ebp),%eax
81006652:	89 10                	mov    %edx,(%eax)
81006654:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006657:	c9                   	leave  
81006658:	c3                   	ret    

81006659 <setvbuf>:
81006659:	55                   	push   %ebp
8100665a:	89 e5                	mov    %esp,%ebp
8100665c:	57                   	push   %edi
8100665d:	56                   	push   %esi
8100665e:	53                   	push   %ebx
8100665f:	83 ec 2c             	sub    $0x2c,%esp
81006662:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006665:	8b 7d 10             	mov    0x10(%ebp),%edi
81006668:	8b 75 14             	mov    0x14(%ebp),%esi
8100666b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006672:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006677:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100667a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100667d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006680:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81006684:	74 18                	je     8100669e <setvbuf+0x45>
81006686:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006689:	8b 40 38             	mov    0x38(%eax),%eax
8100668c:	85 c0                	test   %eax,%eax
8100668e:	75 0e                	jne    8100669e <setvbuf+0x45>
81006690:	83 ec 0c             	sub    $0xc,%esp
81006693:	ff 75 dc             	pushl  -0x24(%ebp)
81006696:	e8 39 b2 ff ff       	call   810018d4 <__sinit>
8100669b:	83 c4 10             	add    $0x10,%esp
8100669e:	83 ff 02             	cmp    $0x2,%edi
810066a1:	74 19                	je     810066bc <setvbuf+0x63>
810066a3:	85 ff                	test   %edi,%edi
810066a5:	74 05                	je     810066ac <setvbuf+0x53>
810066a7:	83 ff 01             	cmp    $0x1,%edi
810066aa:	75 06                	jne    810066b2 <setvbuf+0x59>
810066ac:	89 f0                	mov    %esi,%eax
810066ae:	85 c0                	test   %eax,%eax
810066b0:	79 0a                	jns    810066bc <setvbuf+0x63>
810066b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066b7:	e9 a1 01 00 00       	jmp    8100685d <setvbuf+0x204>
810066bc:	83 ec 08             	sub    $0x8,%esp
810066bf:	53                   	push   %ebx
810066c0:	ff 75 e0             	pushl  -0x20(%ebp)
810066c3:	e8 1f ac ff ff       	call   810012e7 <_fflush_r>
810066c8:	83 c4 10             	add    $0x10,%esp
810066cb:	8b 43 30             	mov    0x30(%ebx),%eax
810066ce:	85 c0                	test   %eax,%eax
810066d0:	74 23                	je     810066f5 <setvbuf+0x9c>
810066d2:	8b 53 30             	mov    0x30(%ebx),%edx
810066d5:	8d 43 40             	lea    0x40(%ebx),%eax
810066d8:	39 c2                	cmp    %eax,%edx
810066da:	74 12                	je     810066ee <setvbuf+0x95>
810066dc:	8b 43 30             	mov    0x30(%ebx),%eax
810066df:	83 ec 08             	sub    $0x8,%esp
810066e2:	50                   	push   %eax
810066e3:	ff 75 e0             	pushl  -0x20(%ebp)
810066e6:	e8 9e b7 ff ff       	call   81001e89 <_free_r>
810066eb:	83 c4 10             	add    $0x10,%esp
810066ee:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810066f5:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810066fc:	8b 43 18             	mov    0x18(%ebx),%eax
810066ff:	89 43 04             	mov    %eax,0x4(%ebx)
81006702:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006706:	98                   	cwtl   
81006707:	25 80 00 00 00       	and    $0x80,%eax
8100670c:	85 c0                	test   %eax,%eax
8100670e:	74 12                	je     81006722 <setvbuf+0xc9>
81006710:	8b 43 10             	mov    0x10(%ebx),%eax
81006713:	83 ec 08             	sub    $0x8,%esp
81006716:	50                   	push   %eax
81006717:	ff 75 e0             	pushl  -0x20(%ebp)
8100671a:	e8 6a b7 ff ff       	call   81001e89 <_free_r>
8100671f:	83 c4 10             	add    $0x10,%esp
81006722:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006726:	66 25 5c f3          	and    $0xf35c,%ax
8100672a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100672e:	83 ff 02             	cmp    $0x2,%edi
81006731:	74 6f                	je     810067a2 <setvbuf+0x149>
81006733:	8d 45 d4             	lea    -0x2c(%ebp),%eax
81006736:	50                   	push   %eax
81006737:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100673a:	50                   	push   %eax
8100673b:	53                   	push   %ebx
8100673c:	ff 75 e0             	pushl  -0x20(%ebp)
8100673f:	e8 fb d6 ff ff       	call   81003e3f <__swhatbuf_r>
81006744:	83 c4 10             	add    $0x10,%esp
81006747:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100674b:	09 d0                	or     %edx,%eax
8100674d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006751:	85 f6                	test   %esi,%esi
81006753:	75 0a                	jne    8100675f <setvbuf+0x106>
81006755:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8100675c:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100675f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006763:	75 73                	jne    810067d8 <setvbuf+0x17f>
81006765:	83 ec 0c             	sub    $0xc,%esp
81006768:	56                   	push   %esi
81006769:	e8 64 d7 ff ff       	call   81003ed2 <malloc>
8100676e:	83 c4 10             	add    $0x10,%esp
81006771:	89 45 0c             	mov    %eax,0xc(%ebp)
81006774:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006778:	75 20                	jne    8100679a <setvbuf+0x141>
8100677a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81006781:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006784:	39 c6                	cmp    %eax,%esi
81006786:	74 12                	je     8100679a <setvbuf+0x141>
81006788:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100678b:	83 ec 0c             	sub    $0xc,%esp
8100678e:	56                   	push   %esi
8100678f:	e8 3e d7 ff ff       	call   81003ed2 <malloc>
81006794:	83 c4 10             	add    $0x10,%esp
81006797:	89 45 0c             	mov    %eax,0xc(%ebp)
8100679a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100679e:	75 2e                	jne    810067ce <setvbuf+0x175>
810067a0:	eb 01                	jmp    810067a3 <setvbuf+0x14a>
810067a2:	90                   	nop
810067a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067a7:	83 c8 02             	or     $0x2,%eax
810067aa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067ae:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810067b5:	8d 43 43             	lea    0x43(%ebx),%eax
810067b8:	89 03                	mov    %eax,(%ebx)
810067ba:	8b 03                	mov    (%ebx),%eax
810067bc:	89 43 10             	mov    %eax,0x10(%ebx)
810067bf:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810067c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067c9:	e9 8f 00 00 00       	jmp    8100685d <setvbuf+0x204>
810067ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067d2:	0c 80                	or     $0x80,%al
810067d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067d8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810067db:	8b 40 38             	mov    0x38(%eax),%eax
810067de:	85 c0                	test   %eax,%eax
810067e0:	75 0e                	jne    810067f0 <setvbuf+0x197>
810067e2:	83 ec 0c             	sub    $0xc,%esp
810067e5:	ff 75 e0             	pushl  -0x20(%ebp)
810067e8:	e8 e7 b0 ff ff       	call   810018d4 <__sinit>
810067ed:	83 c4 10             	add    $0x10,%esp
810067f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810067f3:	39 c6                	cmp    %eax,%esi
810067f5:	74 0b                	je     81006802 <setvbuf+0x1a9>
810067f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067fb:	80 cc 08             	or     $0x8,%ah
810067fe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006802:	83 ff 01             	cmp    $0x1,%edi
81006805:	75 0b                	jne    81006812 <setvbuf+0x1b9>
81006807:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100680b:	83 c8 01             	or     $0x1,%eax
8100680e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006812:	8b 45 0c             	mov    0xc(%ebp),%eax
81006815:	89 03                	mov    %eax,(%ebx)
81006817:	8b 03                	mov    (%ebx),%eax
81006819:	89 43 10             	mov    %eax,0x10(%ebx)
8100681c:	89 f0                	mov    %esi,%eax
8100681e:	89 43 14             	mov    %eax,0x14(%ebx)
81006821:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006825:	98                   	cwtl   
81006826:	83 e0 08             	and    $0x8,%eax
81006829:	85 c0                	test   %eax,%eax
8100682b:	74 24                	je     81006851 <setvbuf+0x1f8>
8100682d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006831:	98                   	cwtl   
81006832:	83 e0 01             	and    $0x1,%eax
81006835:	85 c0                	test   %eax,%eax
81006837:	74 11                	je     8100684a <setvbuf+0x1f1>
81006839:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006840:	8b 43 14             	mov    0x14(%ebx),%eax
81006843:	f7 d8                	neg    %eax
81006845:	89 43 18             	mov    %eax,0x18(%ebx)
81006848:	eb 0e                	jmp    81006858 <setvbuf+0x1ff>
8100684a:	89 f0                	mov    %esi,%eax
8100684c:	89 43 08             	mov    %eax,0x8(%ebx)
8100684f:	eb 07                	jmp    81006858 <setvbuf+0x1ff>
81006851:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006858:	b8 00 00 00 00       	mov    $0x0,%eax
8100685d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006860:	5b                   	pop    %ebx
81006861:	5e                   	pop    %esi
81006862:	5f                   	pop    %edi
81006863:	5d                   	pop    %ebp
81006864:	c3                   	ret    

81006865 <_siprintf_r>:
81006865:	55                   	push   %ebp
81006866:	89 e5                	mov    %esp,%ebp
81006868:	83 ec 78             	sub    $0x78,%esp
8100686b:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
81006871:	8b 45 0c             	mov    0xc(%ebp),%eax
81006874:	89 45 88             	mov    %eax,-0x78(%ebp)
81006877:	8b 45 88             	mov    -0x78(%ebp),%eax
8100687a:	89 45 98             	mov    %eax,-0x68(%ebp)
8100687d:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81006884:	8b 45 90             	mov    -0x70(%ebp),%eax
81006887:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100688a:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81006890:	8d 45 14             	lea    0x14(%ebp),%eax
81006893:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006896:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006899:	50                   	push   %eax
8100689a:	ff 75 10             	pushl  0x10(%ebp)
8100689d:	8d 45 88             	lea    -0x78(%ebp),%eax
810068a0:	50                   	push   %eax
810068a1:	ff 75 08             	pushl  0x8(%ebp)
810068a4:	e8 99 15 00 00       	call   81007e42 <_svfiprintf_r>
810068a9:	83 c4 10             	add    $0x10,%esp
810068ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068af:	8b 45 88             	mov    -0x78(%ebp),%eax
810068b2:	c6 00 00             	movb   $0x0,(%eax)
810068b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068b8:	c9                   	leave  
810068b9:	c3                   	ret    

810068ba <siprintf>:
810068ba:	55                   	push   %ebp
810068bb:	89 e5                	mov    %esp,%ebp
810068bd:	83 ec 78             	sub    $0x78,%esp
810068c0:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810068c6:	8b 45 08             	mov    0x8(%ebp),%eax
810068c9:	89 45 88             	mov    %eax,-0x78(%ebp)
810068cc:	8b 45 88             	mov    -0x78(%ebp),%eax
810068cf:	89 45 98             	mov    %eax,-0x68(%ebp)
810068d2:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810068d9:	8b 45 90             	mov    -0x70(%ebp),%eax
810068dc:	89 45 9c             	mov    %eax,-0x64(%ebp)
810068df:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810068e5:	8d 45 10             	lea    0x10(%ebp),%eax
810068e8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068eb:	8b 55 f0             	mov    -0x10(%ebp),%edx
810068ee:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810068f3:	52                   	push   %edx
810068f4:	ff 75 0c             	pushl  0xc(%ebp)
810068f7:	8d 55 88             	lea    -0x78(%ebp),%edx
810068fa:	52                   	push   %edx
810068fb:	50                   	push   %eax
810068fc:	e8 41 15 00 00       	call   81007e42 <_svfiprintf_r>
81006901:	83 c4 10             	add    $0x10,%esp
81006904:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006907:	8b 45 88             	mov    -0x78(%ebp),%eax
8100690a:	c6 00 00             	movb   $0x0,(%eax)
8100690d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006910:	c9                   	leave  
81006911:	c3                   	ret    

81006912 <__sread>:
81006912:	55                   	push   %ebp
81006913:	89 e5                	mov    %esp,%ebp
81006915:	56                   	push   %esi
81006916:	53                   	push   %ebx
81006917:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100691a:	8b 55 14             	mov    0x14(%ebp),%edx
8100691d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81006921:	98                   	cwtl   
81006922:	52                   	push   %edx
81006923:	ff 75 10             	pushl  0x10(%ebp)
81006926:	50                   	push   %eax
81006927:	ff 75 08             	pushl  0x8(%ebp)
8100692a:	e8 51 19 00 00       	call   81008280 <_read_r>
8100692f:	83 c4 10             	add    $0x10,%esp
81006932:	89 c6                	mov    %eax,%esi
81006934:	85 f6                	test   %esi,%esi
81006936:	78 0a                	js     81006942 <__sread+0x30>
81006938:	8b 43 50             	mov    0x50(%ebx),%eax
8100693b:	01 f0                	add    %esi,%eax
8100693d:	89 43 50             	mov    %eax,0x50(%ebx)
81006940:	eb 0b                	jmp    8100694d <__sread+0x3b>
81006942:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006946:	80 e4 ef             	and    $0xef,%ah
81006949:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100694d:	89 f0                	mov    %esi,%eax
8100694f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006952:	5b                   	pop    %ebx
81006953:	5e                   	pop    %esi
81006954:	5d                   	pop    %ebp
81006955:	c3                   	ret    

81006956 <__seofread>:
81006956:	55                   	push   %ebp
81006957:	89 e5                	mov    %esp,%ebp
81006959:	b8 00 00 00 00       	mov    $0x0,%eax
8100695e:	5d                   	pop    %ebp
8100695f:	c3                   	ret    

81006960 <__swrite>:
81006960:	55                   	push   %ebp
81006961:	89 e5                	mov    %esp,%ebp
81006963:	53                   	push   %ebx
81006964:	83 ec 14             	sub    $0x14,%esp
81006967:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100696a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100696e:	98                   	cwtl   
8100696f:	25 00 01 00 00       	and    $0x100,%eax
81006974:	85 c0                	test   %eax,%eax
81006976:	74 15                	je     8100698d <__swrite+0x2d>
81006978:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100697c:	98                   	cwtl   
8100697d:	6a 02                	push   $0x2
8100697f:	6a 00                	push   $0x0
81006981:	50                   	push   %eax
81006982:	ff 75 08             	pushl  0x8(%ebp)
81006985:	e8 f3 0f 00 00       	call   8100797d <_lseek_r>
8100698a:	83 c4 10             	add    $0x10,%esp
8100698d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006991:	80 e4 ef             	and    $0xef,%ah
81006994:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006998:	8b 55 14             	mov    0x14(%ebp),%edx
8100699b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100699f:	98                   	cwtl   
810069a0:	52                   	push   %edx
810069a1:	ff 75 10             	pushl  0x10(%ebp)
810069a4:	50                   	push   %eax
810069a5:	ff 75 08             	pushl  0x8(%ebp)
810069a8:	e8 9d 07 00 00       	call   8100714a <_write_r>
810069ad:	83 c4 10             	add    $0x10,%esp
810069b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810069b9:	c9                   	leave  
810069ba:	c3                   	ret    

810069bb <__sseek>:
810069bb:	55                   	push   %ebp
810069bc:	89 e5                	mov    %esp,%ebp
810069be:	56                   	push   %esi
810069bf:	53                   	push   %ebx
810069c0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810069c3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069c7:	98                   	cwtl   
810069c8:	ff 75 14             	pushl  0x14(%ebp)
810069cb:	ff 75 10             	pushl  0x10(%ebp)
810069ce:	50                   	push   %eax
810069cf:	ff 75 08             	pushl  0x8(%ebp)
810069d2:	e8 a6 0f 00 00       	call   8100797d <_lseek_r>
810069d7:	83 c4 10             	add    $0x10,%esp
810069da:	89 c6                	mov    %eax,%esi
810069dc:	83 fe ff             	cmp    $0xffffffff,%esi
810069df:	75 0d                	jne    810069ee <__sseek+0x33>
810069e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069e5:	80 e4 ef             	and    $0xef,%ah
810069e8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069ec:	eb 0e                	jmp    810069fc <__sseek+0x41>
810069ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069f2:	80 cc 10             	or     $0x10,%ah
810069f5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069f9:	89 73 50             	mov    %esi,0x50(%ebx)
810069fc:	89 f0                	mov    %esi,%eax
810069fe:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006a01:	5b                   	pop    %ebx
81006a02:	5e                   	pop    %esi
81006a03:	5d                   	pop    %ebp
81006a04:	c3                   	ret    

81006a05 <__sclose>:
81006a05:	55                   	push   %ebp
81006a06:	89 e5                	mov    %esp,%ebp
81006a08:	83 ec 18             	sub    $0x18,%esp
81006a0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a11:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a14:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81006a18:	98                   	cwtl   
81006a19:	83 ec 08             	sub    $0x8,%esp
81006a1c:	50                   	push   %eax
81006a1d:	ff 75 08             	pushl  0x8(%ebp)
81006a20:	e8 db 09 00 00       	call   81007400 <_close_r>
81006a25:	83 c4 10             	add    $0x10,%esp
81006a28:	c9                   	leave  
81006a29:	c3                   	ret    
81006a2a:	66 90                	xchg   %ax,%ax
81006a2c:	66 90                	xchg   %ax,%ax
81006a2e:	66 90                	xchg   %ax,%ax

81006a30 <strchr>:
81006a30:	55                   	push   %ebp
81006a31:	89 e5                	mov    %esp,%ebp
81006a33:	57                   	push   %edi
81006a34:	53                   	push   %ebx
81006a35:	31 db                	xor    %ebx,%ebx
81006a37:	8b 7d 08             	mov    0x8(%ebp),%edi
81006a3a:	02 5d 0c             	add    0xc(%ebp),%bl
81006a3d:	0f 84 98 00 00 00    	je     81006adb <L25>
81006a43:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a49:	74 37                	je     81006a82 <L5>
81006a4b:	89 f8                	mov    %edi,%eax
81006a4d:	8a 08                	mov    (%eax),%cl
81006a4f:	84 c9                	test   %cl,%cl
81006a51:	74 7b                	je     81006ace <L14>
81006a53:	38 d9                	cmp    %bl,%cl
81006a55:	74 7d                	je     81006ad4 <L19>
81006a57:	47                   	inc    %edi
81006a58:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a5e:	74 22                	je     81006a82 <L5>
81006a60:	89 f8                	mov    %edi,%eax
81006a62:	8a 08                	mov    (%eax),%cl
81006a64:	84 c9                	test   %cl,%cl
81006a66:	74 66                	je     81006ace <L14>
81006a68:	38 d9                	cmp    %bl,%cl
81006a6a:	74 68                	je     81006ad4 <L19>
81006a6c:	47                   	inc    %edi
81006a6d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a73:	74 0d                	je     81006a82 <L5>
81006a75:	89 f8                	mov    %edi,%eax
81006a77:	8a 08                	mov    (%eax),%cl
81006a79:	84 c9                	test   %cl,%cl
81006a7b:	74 51                	je     81006ace <L14>
81006a7d:	38 d9                	cmp    %bl,%cl
81006a7f:	74 53                	je     81006ad4 <L19>
81006a81:	47                   	inc    %edi

81006a82 <L5>:
81006a82:	89 d9                	mov    %ebx,%ecx
81006a84:	c1 e3 08             	shl    $0x8,%ebx
81006a87:	83 ef 04             	sub    $0x4,%edi
81006a8a:	09 cb                	or     %ecx,%ebx
81006a8c:	89 da                	mov    %ebx,%edx
81006a8e:	c1 e3 10             	shl    $0x10,%ebx
81006a91:	09 d3                	or     %edx,%ebx

81006a93 <L10>:
81006a93:	83 c7 04             	add    $0x4,%edi
81006a96:	8b 0f                	mov    (%edi),%ecx
81006a98:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006a9e:	89 c8                	mov    %ecx,%eax
81006aa0:	f7 d0                	not    %eax
81006aa2:	21 c2                	and    %eax,%edx
81006aa4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006aaa:	75 14                	jne    81006ac0 <L9>
81006aac:	31 d9                	xor    %ebx,%ecx
81006aae:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006ab4:	f7 d1                	not    %ecx
81006ab6:	21 ca                	and    %ecx,%edx
81006ab8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006abe:	74 d3                	je     81006a93 <L10>

81006ac0 <L9>:
81006ac0:	8d 47 ff             	lea    -0x1(%edi),%eax

81006ac3 <L15>:
81006ac3:	40                   	inc    %eax
81006ac4:	8a 10                	mov    (%eax),%dl
81006ac6:	84 d2                	test   %dl,%dl
81006ac8:	74 04                	je     81006ace <L14>
81006aca:	38 da                	cmp    %bl,%dl
81006acc:	75 f5                	jne    81006ac3 <L15>

81006ace <L14>:
81006ace:	38 18                	cmp    %bl,(%eax)
81006ad0:	74 02                	je     81006ad4 <L19>
81006ad2:	31 c0                	xor    %eax,%eax

81006ad4 <L19>:
81006ad4:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006ad7:	5b                   	pop    %ebx
81006ad8:	5f                   	pop    %edi
81006ad9:	c9                   	leave  
81006ada:	c3                   	ret    

81006adb <L25>:
81006adb:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006ae1:	74 2b                	je     81006b0e <L26>
81006ae3:	89 f8                	mov    %edi,%eax
81006ae5:	8a 08                	mov    (%eax),%cl
81006ae7:	84 c9                	test   %cl,%cl
81006ae9:	74 e9                	je     81006ad4 <L19>
81006aeb:	47                   	inc    %edi
81006aec:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006af2:	74 1a                	je     81006b0e <L26>
81006af4:	89 f8                	mov    %edi,%eax
81006af6:	8a 08                	mov    (%eax),%cl
81006af8:	84 c9                	test   %cl,%cl
81006afa:	74 d8                	je     81006ad4 <L19>
81006afc:	47                   	inc    %edi
81006afd:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b03:	74 09                	je     81006b0e <L26>
81006b05:	89 f8                	mov    %edi,%eax
81006b07:	8a 08                	mov    (%eax),%cl
81006b09:	84 c9                	test   %cl,%cl
81006b0b:	74 c7                	je     81006ad4 <L19>
81006b0d:	47                   	inc    %edi

81006b0e <L26>:
81006b0e:	83 ef 04             	sub    $0x4,%edi

81006b11 <L27>:
81006b11:	83 c7 04             	add    $0x4,%edi
81006b14:	8b 0f                	mov    (%edi),%ecx
81006b16:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006b1c:	89 c8                	mov    %ecx,%eax
81006b1e:	f7 d0                	not    %eax
81006b20:	21 c2                	and    %eax,%edx
81006b22:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006b28:	74 e7                	je     81006b11 <L27>
81006b2a:	eb 94                	jmp    81006ac0 <L9>

81006b2c <strcmp>:
81006b2c:	55                   	push   %ebp
81006b2d:	89 e5                	mov    %esp,%ebp
81006b2f:	83 ec 10             	sub    $0x10,%esp
81006b32:	8b 55 08             	mov    0x8(%ebp),%edx
81006b35:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b38:	09 d0                	or     %edx,%eax
81006b3a:	83 e0 03             	and    $0x3,%eax
81006b3d:	85 c0                	test   %eax,%eax
81006b3f:	75 5e                	jne    81006b9f <strcmp+0x73>
81006b41:	8b 45 08             	mov    0x8(%ebp),%eax
81006b44:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006b47:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b4a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006b4d:	eb 2c                	jmp    81006b7b <strcmp+0x4f>
81006b4f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b52:	8b 00                	mov    (%eax),%eax
81006b54:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006b5a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b5d:	8b 00                	mov    (%eax),%eax
81006b5f:	f7 d0                	not    %eax
81006b61:	21 d0                	and    %edx,%eax
81006b63:	25 80 80 80 80       	and    $0x80808080,%eax
81006b68:	85 c0                	test   %eax,%eax
81006b6a:	74 07                	je     81006b73 <strcmp+0x47>
81006b6c:	b8 00 00 00 00       	mov    $0x0,%eax
81006b71:	eb 5c                	jmp    81006bcf <strcmp+0xa3>
81006b73:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006b77:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006b7b:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b7e:	8b 10                	mov    (%eax),%edx
81006b80:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006b83:	8b 00                	mov    (%eax),%eax
81006b85:	39 c2                	cmp    %eax,%edx
81006b87:	74 c6                	je     81006b4f <strcmp+0x23>
81006b89:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b8c:	89 45 08             	mov    %eax,0x8(%ebp)
81006b8f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006b92:	89 45 0c             	mov    %eax,0xc(%ebp)
81006b95:	eb 08                	jmp    81006b9f <strcmp+0x73>
81006b97:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006b9b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006b9f:	8b 45 08             	mov    0x8(%ebp),%eax
81006ba2:	0f b6 00             	movzbl (%eax),%eax
81006ba5:	84 c0                	test   %al,%al
81006ba7:	74 10                	je     81006bb9 <strcmp+0x8d>
81006ba9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bac:	0f b6 10             	movzbl (%eax),%edx
81006baf:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bb2:	0f b6 00             	movzbl (%eax),%eax
81006bb5:	38 c2                	cmp    %al,%dl
81006bb7:	74 de                	je     81006b97 <strcmp+0x6b>
81006bb9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bbc:	0f b6 00             	movzbl (%eax),%eax
81006bbf:	0f b6 d0             	movzbl %al,%edx
81006bc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bc5:	0f b6 00             	movzbl (%eax),%eax
81006bc8:	0f b6 c8             	movzbl %al,%ecx
81006bcb:	89 d0                	mov    %edx,%eax
81006bcd:	29 c8                	sub    %ecx,%eax
81006bcf:	c9                   	leave  
81006bd0:	c3                   	ret    
81006bd1:	66 90                	xchg   %ax,%ax
81006bd3:	66 90                	xchg   %ax,%ax
81006bd5:	66 90                	xchg   %ax,%ax
81006bd7:	66 90                	xchg   %ax,%ax
81006bd9:	66 90                	xchg   %ax,%ax
81006bdb:	66 90                	xchg   %ax,%ax
81006bdd:	66 90                	xchg   %ax,%ax
81006bdf:	90                   	nop

81006be0 <strlen>:
81006be0:	55                   	push   %ebp
81006be1:	89 e5                	mov    %esp,%ebp
81006be3:	57                   	push   %edi
81006be4:	8b 55 08             	mov    0x8(%ebp),%edx
81006be7:	89 d7                	mov    %edx,%edi
81006be9:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006bef:	74 25                	je     81006c16 <L5>
81006bf1:	8a 0f                	mov    (%edi),%cl
81006bf3:	47                   	inc    %edi
81006bf4:	84 c9                	test   %cl,%cl
81006bf6:	74 56                	je     81006c4e <L15>
81006bf8:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006bfe:	74 16                	je     81006c16 <L5>
81006c00:	8a 0f                	mov    (%edi),%cl
81006c02:	47                   	inc    %edi
81006c03:	84 c9                	test   %cl,%cl
81006c05:	74 47                	je     81006c4e <L15>
81006c07:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006c0d:	74 07                	je     81006c16 <L5>
81006c0f:	8a 0f                	mov    (%edi),%cl
81006c11:	47                   	inc    %edi
81006c12:	84 c9                	test   %cl,%cl
81006c14:	74 38                	je     81006c4e <L15>

81006c16 <L5>:
81006c16:	83 ef 04             	sub    $0x4,%edi
81006c19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006c20 <L10>:
81006c20:	83 c7 04             	add    $0x4,%edi
81006c23:	8b 0f                	mov    (%edi),%ecx
81006c25:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81006c2b:	f7 d1                	not    %ecx
81006c2d:	21 c8                	and    %ecx,%eax
81006c2f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006c34:	74 ea                	je     81006c20 <L10>
81006c36:	f7 d1                	not    %ecx
81006c38:	47                   	inc    %edi
81006c39:	84 c9                	test   %cl,%cl
81006c3b:	74 11                	je     81006c4e <L15>
81006c3d:	47                   	inc    %edi
81006c3e:	c1 e9 08             	shr    $0x8,%ecx
81006c41:	84 c9                	test   %cl,%cl
81006c43:	74 09                	je     81006c4e <L15>
81006c45:	47                   	inc    %edi
81006c46:	c1 e9 08             	shr    $0x8,%ecx
81006c49:	84 c9                	test   %cl,%cl
81006c4b:	74 01                	je     81006c4e <L15>
81006c4d:	47                   	inc    %edi

81006c4e <L15>:
81006c4e:	29 d7                	sub    %edx,%edi
81006c50:	8d 47 ff             	lea    -0x1(%edi),%eax
81006c53:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006c56:	5f                   	pop    %edi
81006c57:	c9                   	leave  
81006c58:	c3                   	ret    

81006c59 <strlwr>:
81006c59:	55                   	push   %ebp
81006c5a:	89 e5                	mov    %esp,%ebp
81006c5c:	83 ec 10             	sub    $0x10,%esp
81006c5f:	8b 45 08             	mov    0x8(%ebp),%eax
81006c62:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006c65:	eb 3b                	jmp    81006ca2 <strlwr+0x49>
81006c67:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c6a:	0f b6 00             	movzbl (%eax),%eax
81006c6d:	88 45 fb             	mov    %al,-0x5(%ebp)
81006c70:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c74:	83 c0 01             	add    $0x1,%eax
81006c77:	05 40 8b 00 81       	add    $0x81008b40,%eax
81006c7c:	0f b6 00             	movzbl (%eax),%eax
81006c7f:	0f be c0             	movsbl %al,%eax
81006c82:	83 e0 03             	and    $0x3,%eax
81006c85:	83 f8 01             	cmp    $0x1,%eax
81006c88:	75 09                	jne    81006c93 <strlwr+0x3a>
81006c8a:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c8e:	83 c0 20             	add    $0x20,%eax
81006c91:	eb 04                	jmp    81006c97 <strlwr+0x3e>
81006c93:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c97:	89 c2                	mov    %eax,%edx
81006c99:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c9c:	88 10                	mov    %dl,(%eax)
81006c9e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81006ca2:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006ca5:	0f b6 00             	movzbl (%eax),%eax
81006ca8:	84 c0                	test   %al,%al
81006caa:	75 bb                	jne    81006c67 <strlwr+0xe>
81006cac:	8b 45 08             	mov    0x8(%ebp),%eax
81006caf:	c9                   	leave  
81006cb0:	c3                   	ret    

81006cb1 <strtok>:
81006cb1:	55                   	push   %ebp
81006cb2:	89 e5                	mov    %esp,%ebp
81006cb4:	83 ec 18             	sub    $0x18,%esp
81006cb7:	8b 55 08             	mov    0x8(%ebp),%edx
81006cba:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006cbd:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006cc2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cc8:	83 c0 5c             	add    $0x5c,%eax
81006ccb:	6a 01                	push   $0x1
81006ccd:	50                   	push   %eax
81006cce:	51                   	push   %ecx
81006ccf:	52                   	push   %edx
81006cd0:	e8 05 00 00 00       	call   81006cda <__strtok_r>
81006cd5:	83 c4 10             	add    $0x10,%esp
81006cd8:	c9                   	leave  
81006cd9:	c3                   	ret    

81006cda <__strtok_r>:
81006cda:	55                   	push   %ebp
81006cdb:	89 e5                	mov    %esp,%ebp
81006cdd:	57                   	push   %edi
81006cde:	56                   	push   %esi
81006cdf:	53                   	push   %ebx
81006ce0:	83 ec 10             	sub    $0x10,%esp
81006ce3:	8b 45 08             	mov    0x8(%ebp),%eax
81006ce6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006ce9:	85 c0                	test   %eax,%eax
81006ceb:	75 13                	jne    81006d00 <__strtok_r+0x26>
81006ced:	8b 45 10             	mov    0x10(%ebp),%eax
81006cf0:	8b 00                	mov    (%eax),%eax
81006cf2:	85 c0                	test   %eax,%eax
81006cf4:	75 0a                	jne    81006d00 <__strtok_r+0x26>
81006cf6:	b8 00 00 00 00       	mov    $0x0,%eax
81006cfb:	e9 92 00 00 00       	jmp    81006d92 <__strtok_r+0xb8>
81006d00:	90                   	nop
81006d01:	89 c2                	mov    %eax,%edx
81006d03:	8d 42 01             	lea    0x1(%edx),%eax
81006d06:	0f b6 12             	movzbl (%edx),%edx
81006d09:	0f be f2             	movsbl %dl,%esi
81006d0c:	89 cf                	mov    %ecx,%edi
81006d0e:	eb 1c                	jmp    81006d2c <__strtok_r+0x52>
81006d10:	39 de                	cmp    %ebx,%esi
81006d12:	75 18                	jne    81006d2c <__strtok_r+0x52>
81006d14:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d18:	74 02                	je     81006d1c <__strtok_r+0x42>
81006d1a:	eb e5                	jmp    81006d01 <__strtok_r+0x27>
81006d1c:	8b 55 10             	mov    0x10(%ebp),%edx
81006d1f:	89 02                	mov    %eax,(%edx)
81006d21:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d24:	c6 02 00             	movb   $0x0,(%edx)
81006d27:	83 e8 01             	sub    $0x1,%eax
81006d2a:	eb 66                	jmp    81006d92 <__strtok_r+0xb8>
81006d2c:	89 fa                	mov    %edi,%edx
81006d2e:	8d 7a 01             	lea    0x1(%edx),%edi
81006d31:	0f b6 12             	movzbl (%edx),%edx
81006d34:	0f be da             	movsbl %dl,%ebx
81006d37:	85 db                	test   %ebx,%ebx
81006d39:	75 d5                	jne    81006d10 <__strtok_r+0x36>
81006d3b:	85 f6                	test   %esi,%esi
81006d3d:	75 10                	jne    81006d4f <__strtok_r+0x75>
81006d3f:	8b 45 10             	mov    0x10(%ebp),%eax
81006d42:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006d48:	b8 00 00 00 00       	mov    $0x0,%eax
81006d4d:	eb 43                	jmp    81006d92 <__strtok_r+0xb8>
81006d4f:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d52:	89 55 f0             	mov    %edx,-0x10(%ebp)
81006d55:	89 c2                	mov    %eax,%edx
81006d57:	8d 42 01             	lea    0x1(%edx),%eax
81006d5a:	0f b6 12             	movzbl (%edx),%edx
81006d5d:	0f be f2             	movsbl %dl,%esi
81006d60:	89 cf                	mov    %ecx,%edi
81006d62:	89 fa                	mov    %edi,%edx
81006d64:	8d 7a 01             	lea    0x1(%edx),%edi
81006d67:	0f b6 12             	movzbl (%edx),%edx
81006d6a:	0f be da             	movsbl %dl,%ebx
81006d6d:	39 f3                	cmp    %esi,%ebx
81006d6f:	75 1b                	jne    81006d8c <__strtok_r+0xb2>
81006d71:	85 f6                	test   %esi,%esi
81006d73:	75 07                	jne    81006d7c <__strtok_r+0xa2>
81006d75:	b8 00 00 00 00       	mov    $0x0,%eax
81006d7a:	eb 06                	jmp    81006d82 <__strtok_r+0xa8>
81006d7c:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d7f:	c6 02 00             	movb   $0x0,(%edx)
81006d82:	8b 55 10             	mov    0x10(%ebp),%edx
81006d85:	89 02                	mov    %eax,(%edx)
81006d87:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d8a:	eb 06                	jmp    81006d92 <__strtok_r+0xb8>
81006d8c:	85 db                	test   %ebx,%ebx
81006d8e:	75 d2                	jne    81006d62 <__strtok_r+0x88>
81006d90:	eb c3                	jmp    81006d55 <__strtok_r+0x7b>
81006d92:	83 c4 10             	add    $0x10,%esp
81006d95:	5b                   	pop    %ebx
81006d96:	5e                   	pop    %esi
81006d97:	5f                   	pop    %edi
81006d98:	5d                   	pop    %ebp
81006d99:	c3                   	ret    

81006d9a <strtok_r>:
81006d9a:	55                   	push   %ebp
81006d9b:	89 e5                	mov    %esp,%ebp
81006d9d:	8b 45 08             	mov    0x8(%ebp),%eax
81006da0:	8b 55 0c             	mov    0xc(%ebp),%edx
81006da3:	6a 01                	push   $0x1
81006da5:	ff 75 10             	pushl  0x10(%ebp)
81006da8:	52                   	push   %edx
81006da9:	50                   	push   %eax
81006daa:	e8 2b ff ff ff       	call   81006cda <__strtok_r>
81006daf:	83 c4 10             	add    $0x10,%esp
81006db2:	c9                   	leave  
81006db3:	c3                   	ret    

81006db4 <__locale_ctype_ptr_l>:
81006db4:	55                   	push   %ebp
81006db5:	89 e5                	mov    %esp,%ebp
81006db7:	b8 40 8b 00 81       	mov    $0x81008b40,%eax
81006dbc:	5d                   	pop    %ebp
81006dbd:	c3                   	ret    

81006dbe <__get_global_locale>:
81006dbe:	55                   	push   %ebp
81006dbf:	89 e5                	mov    %esp,%ebp
81006dc1:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
81006dc6:	5d                   	pop    %ebp
81006dc7:	c3                   	ret    

81006dc8 <__get_current_locale>:
81006dc8:	55                   	push   %ebp
81006dc9:	89 e5                	mov    %esp,%ebp
81006dcb:	e8 ee ff ff ff       	call   81006dbe <__get_global_locale>
81006dd0:	5d                   	pop    %ebp
81006dd1:	c3                   	ret    

81006dd2 <_strtol_l>:
81006dd2:	55                   	push   %ebp
81006dd3:	89 e5                	mov    %esp,%ebp
81006dd5:	57                   	push   %edi
81006dd6:	56                   	push   %esi
81006dd7:	53                   	push   %ebx
81006dd8:	83 ec 1c             	sub    $0x1c,%esp
81006ddb:	8b 75 0c             	mov    0xc(%ebp),%esi
81006dde:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006de5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006de9:	78 0c                	js     81006df7 <_strtol_l+0x25>
81006deb:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81006def:	74 06                	je     81006df7 <_strtol_l+0x25>
81006df1:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81006df5:	7e 15                	jle    81006e0c <_strtol_l+0x3a>
81006df7:	e8 44 06 00 00       	call   81007440 <__errno>
81006dfc:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006e02:	b8 00 00 00 00       	mov    $0x0,%eax
81006e07:	e9 90 01 00 00       	jmp    81006f9c <_strtol_l+0x1ca>
81006e0c:	89 f0                	mov    %esi,%eax
81006e0e:	8d 70 01             	lea    0x1(%eax),%esi
81006e11:	0f b6 00             	movzbl (%eax),%eax
81006e14:	0f b6 d8             	movzbl %al,%ebx
81006e17:	83 ec 0c             	sub    $0xc,%esp
81006e1a:	ff 75 18             	pushl  0x18(%ebp)
81006e1d:	e8 92 ff ff ff       	call   81006db4 <__locale_ctype_ptr_l>
81006e22:	83 c4 10             	add    $0x10,%esp
81006e25:	89 da                	mov    %ebx,%edx
81006e27:	83 c2 01             	add    $0x1,%edx
81006e2a:	01 d0                	add    %edx,%eax
81006e2c:	0f b6 00             	movzbl (%eax),%eax
81006e2f:	0f be c0             	movsbl %al,%eax
81006e32:	83 e0 08             	and    $0x8,%eax
81006e35:	85 c0                	test   %eax,%eax
81006e37:	75 d3                	jne    81006e0c <_strtol_l+0x3a>
81006e39:	83 fb 2d             	cmp    $0x2d,%ebx
81006e3c:	75 14                	jne    81006e52 <_strtol_l+0x80>
81006e3e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006e45:	89 f0                	mov    %esi,%eax
81006e47:	8d 70 01             	lea    0x1(%eax),%esi
81006e4a:	0f b6 00             	movzbl (%eax),%eax
81006e4d:	0f b6 d8             	movzbl %al,%ebx
81006e50:	eb 10                	jmp    81006e62 <_strtol_l+0x90>
81006e52:	83 fb 2b             	cmp    $0x2b,%ebx
81006e55:	75 0b                	jne    81006e62 <_strtol_l+0x90>
81006e57:	89 f0                	mov    %esi,%eax
81006e59:	8d 70 01             	lea    0x1(%eax),%esi
81006e5c:	0f b6 00             	movzbl (%eax),%eax
81006e5f:	0f b6 d8             	movzbl %al,%ebx
81006e62:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e66:	74 06                	je     81006e6e <_strtol_l+0x9c>
81006e68:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006e6c:	75 26                	jne    81006e94 <_strtol_l+0xc2>
81006e6e:	83 fb 30             	cmp    $0x30,%ebx
81006e71:	75 21                	jne    81006e94 <_strtol_l+0xc2>
81006e73:	0f b6 06             	movzbl (%esi),%eax
81006e76:	3c 78                	cmp    $0x78,%al
81006e78:	74 07                	je     81006e81 <_strtol_l+0xaf>
81006e7a:	0f b6 06             	movzbl (%esi),%eax
81006e7d:	3c 58                	cmp    $0x58,%al
81006e7f:	75 13                	jne    81006e94 <_strtol_l+0xc2>
81006e81:	8d 46 01             	lea    0x1(%esi),%eax
81006e84:	0f b6 00             	movzbl (%eax),%eax
81006e87:	0f b6 d8             	movzbl %al,%ebx
81006e8a:	83 c6 02             	add    $0x2,%esi
81006e8d:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81006e94:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e98:	75 14                	jne    81006eae <_strtol_l+0xdc>
81006e9a:	83 fb 30             	cmp    $0x30,%ebx
81006e9d:	75 07                	jne    81006ea6 <_strtol_l+0xd4>
81006e9f:	b8 08 00 00 00       	mov    $0x8,%eax
81006ea4:	eb 05                	jmp    81006eab <_strtol_l+0xd9>
81006ea6:	b8 0a 00 00 00       	mov    $0xa,%eax
81006eab:	89 45 14             	mov    %eax,0x14(%ebp)
81006eae:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006eb2:	74 07                	je     81006ebb <_strtol_l+0xe9>
81006eb4:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006eb9:	eb 05                	jmp    81006ec0 <_strtol_l+0xee>
81006ebb:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006ec0:	89 c7                	mov    %eax,%edi
81006ec2:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006ec5:	89 f8                	mov    %edi,%eax
81006ec7:	ba 00 00 00 00       	mov    $0x0,%edx
81006ecc:	f7 f1                	div    %ecx
81006ece:	89 d0                	mov    %edx,%eax
81006ed0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006ed3:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006ed6:	89 f8                	mov    %edi,%eax
81006ed8:	ba 00 00 00 00       	mov    $0x0,%edx
81006edd:	f7 f1                	div    %ecx
81006edf:	89 c2                	mov    %eax,%edx
81006ee1:	bf 00 00 00 00       	mov    $0x0,%edi
81006ee6:	b9 00 00 00 00       	mov    $0x0,%ecx
81006eeb:	83 fb 2f             	cmp    $0x2f,%ebx
81006eee:	7e 0a                	jle    81006efa <_strtol_l+0x128>
81006ef0:	83 fb 39             	cmp    $0x39,%ebx
81006ef3:	7f 05                	jg     81006efa <_strtol_l+0x128>
81006ef5:	83 eb 30             	sub    $0x30,%ebx
81006ef8:	eb 1c                	jmp    81006f16 <_strtol_l+0x144>
81006efa:	83 fb 40             	cmp    $0x40,%ebx
81006efd:	7e 0a                	jle    81006f09 <_strtol_l+0x137>
81006eff:	83 fb 5a             	cmp    $0x5a,%ebx
81006f02:	7f 05                	jg     81006f09 <_strtol_l+0x137>
81006f04:	83 eb 37             	sub    $0x37,%ebx
81006f07:	eb 0d                	jmp    81006f16 <_strtol_l+0x144>
81006f09:	83 fb 60             	cmp    $0x60,%ebx
81006f0c:	7e 46                	jle    81006f54 <_strtol_l+0x182>
81006f0e:	83 fb 7a             	cmp    $0x7a,%ebx
81006f11:	7f 41                	jg     81006f54 <_strtol_l+0x182>
81006f13:	83 eb 57             	sub    $0x57,%ebx
81006f16:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81006f19:	7d 38                	jge    81006f53 <_strtol_l+0x181>
81006f1b:	89 c8                	mov    %ecx,%eax
81006f1d:	85 c0                	test   %eax,%eax
81006f1f:	78 0f                	js     81006f30 <_strtol_l+0x15e>
81006f21:	89 d0                	mov    %edx,%eax
81006f23:	39 c7                	cmp    %eax,%edi
81006f25:	77 09                	ja     81006f30 <_strtol_l+0x15e>
81006f27:	39 c7                	cmp    %eax,%edi
81006f29:	75 0c                	jne    81006f37 <_strtol_l+0x165>
81006f2b:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006f2e:	7e 07                	jle    81006f37 <_strtol_l+0x165>
81006f30:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81006f35:	eb 0f                	jmp    81006f46 <_strtol_l+0x174>
81006f37:	b9 01 00 00 00       	mov    $0x1,%ecx
81006f3c:	8b 45 14             	mov    0x14(%ebp),%eax
81006f3f:	0f af f8             	imul   %eax,%edi
81006f42:	89 d8                	mov    %ebx,%eax
81006f44:	01 c7                	add    %eax,%edi
81006f46:	89 f0                	mov    %esi,%eax
81006f48:	8d 70 01             	lea    0x1(%eax),%esi
81006f4b:	0f b6 00             	movzbl (%eax),%eax
81006f4e:	0f b6 d8             	movzbl %al,%ebx
81006f51:	eb 98                	jmp    81006eeb <_strtol_l+0x119>
81006f53:	90                   	nop
81006f54:	89 c8                	mov    %ecx,%eax
81006f56:	85 c0                	test   %eax,%eax
81006f58:	79 1f                	jns    81006f79 <_strtol_l+0x1a7>
81006f5a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f5e:	74 07                	je     81006f67 <_strtol_l+0x195>
81006f60:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006f65:	eb 05                	jmp    81006f6c <_strtol_l+0x19a>
81006f67:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006f6c:	89 c7                	mov    %eax,%edi
81006f6e:	8b 45 08             	mov    0x8(%ebp),%eax
81006f71:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81006f77:	eb 08                	jmp    81006f81 <_strtol_l+0x1af>
81006f79:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f7d:	74 02                	je     81006f81 <_strtol_l+0x1af>
81006f7f:	f7 df                	neg    %edi
81006f81:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f85:	74 13                	je     81006f9a <_strtol_l+0x1c8>
81006f87:	89 c8                	mov    %ecx,%eax
81006f89:	85 c0                	test   %eax,%eax
81006f8b:	74 05                	je     81006f92 <_strtol_l+0x1c0>
81006f8d:	8d 46 ff             	lea    -0x1(%esi),%eax
81006f90:	eb 03                	jmp    81006f95 <_strtol_l+0x1c3>
81006f92:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f95:	8b 55 10             	mov    0x10(%ebp),%edx
81006f98:	89 02                	mov    %eax,(%edx)
81006f9a:	89 f8                	mov    %edi,%eax
81006f9c:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006f9f:	5b                   	pop    %ebx
81006fa0:	5e                   	pop    %esi
81006fa1:	5f                   	pop    %edi
81006fa2:	5d                   	pop    %ebp
81006fa3:	c3                   	ret    

81006fa4 <_strtol_r>:
81006fa4:	55                   	push   %ebp
81006fa5:	89 e5                	mov    %esp,%ebp
81006fa7:	83 ec 08             	sub    $0x8,%esp
81006faa:	e8 19 fe ff ff       	call   81006dc8 <__get_current_locale>
81006faf:	83 ec 0c             	sub    $0xc,%esp
81006fb2:	50                   	push   %eax
81006fb3:	ff 75 14             	pushl  0x14(%ebp)
81006fb6:	ff 75 10             	pushl  0x10(%ebp)
81006fb9:	ff 75 0c             	pushl  0xc(%ebp)
81006fbc:	ff 75 08             	pushl  0x8(%ebp)
81006fbf:	e8 0e fe ff ff       	call   81006dd2 <_strtol_l>
81006fc4:	83 c4 20             	add    $0x20,%esp
81006fc7:	c9                   	leave  
81006fc8:	c3                   	ret    

81006fc9 <strtol_l>:
81006fc9:	55                   	push   %ebp
81006fca:	89 e5                	mov    %esp,%ebp
81006fcc:	83 ec 08             	sub    $0x8,%esp
81006fcf:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006fd4:	83 ec 0c             	sub    $0xc,%esp
81006fd7:	ff 75 14             	pushl  0x14(%ebp)
81006fda:	ff 75 10             	pushl  0x10(%ebp)
81006fdd:	ff 75 0c             	pushl  0xc(%ebp)
81006fe0:	ff 75 08             	pushl  0x8(%ebp)
81006fe3:	50                   	push   %eax
81006fe4:	e8 e9 fd ff ff       	call   81006dd2 <_strtol_l>
81006fe9:	83 c4 20             	add    $0x20,%esp
81006fec:	c9                   	leave  
81006fed:	c3                   	ret    

81006fee <strtol>:
81006fee:	55                   	push   %ebp
81006fef:	89 e5                	mov    %esp,%ebp
81006ff1:	83 ec 08             	sub    $0x8,%esp
81006ff4:	e8 cf fd ff ff       	call   81006dc8 <__get_current_locale>
81006ff9:	8b 15 a4 90 00 81    	mov    0x810090a4,%edx
81006fff:	83 ec 0c             	sub    $0xc,%esp
81007002:	50                   	push   %eax
81007003:	ff 75 10             	pushl  0x10(%ebp)
81007006:	ff 75 0c             	pushl  0xc(%ebp)
81007009:	ff 75 08             	pushl  0x8(%ebp)
8100700c:	52                   	push   %edx
8100700d:	e8 c0 fd ff ff       	call   81006dd2 <_strtol_l>
81007012:	83 c4 20             	add    $0x20,%esp
81007015:	c9                   	leave  
81007016:	c3                   	ret    

81007017 <__swbuf_r>:
81007017:	55                   	push   %ebp
81007018:	89 e5                	mov    %esp,%ebp
8100701a:	57                   	push   %edi
8100701b:	56                   	push   %esi
8100701c:	53                   	push   %ebx
8100701d:	83 ec 1c             	sub    $0x1c,%esp
81007020:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007023:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007026:	8b 45 08             	mov    0x8(%ebp),%eax
81007029:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100702c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007030:	74 18                	je     8100704a <__swbuf_r+0x33>
81007032:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007035:	8b 40 38             	mov    0x38(%eax),%eax
81007038:	85 c0                	test   %eax,%eax
8100703a:	75 0e                	jne    8100704a <__swbuf_r+0x33>
8100703c:	83 ec 0c             	sub    $0xc,%esp
8100703f:	ff 75 e4             	pushl  -0x1c(%ebp)
81007042:	e8 8d a8 ff ff       	call   810018d4 <__sinit>
81007047:	83 c4 10             	add    $0x10,%esp
8100704a:	8b 43 18             	mov    0x18(%ebx),%eax
8100704d:	89 43 08             	mov    %eax,0x8(%ebx)
81007050:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007054:	98                   	cwtl   
81007055:	83 e0 08             	and    $0x8,%eax
81007058:	85 c0                	test   %eax,%eax
8100705a:	74 07                	je     81007063 <__swbuf_r+0x4c>
8100705c:	8b 43 10             	mov    0x10(%ebx),%eax
8100705f:	85 c0                	test   %eax,%eax
81007061:	75 1d                	jne    81007080 <__swbuf_r+0x69>
81007063:	83 ec 08             	sub    $0x8,%esp
81007066:	53                   	push   %ebx
81007067:	ff 75 08             	pushl  0x8(%ebp)
8100706a:	e8 21 01 00 00       	call   81007190 <__swsetup_r>
8100706f:	83 c4 10             	add    $0x10,%esp
81007072:	85 c0                	test   %eax,%eax
81007074:	74 0a                	je     81007080 <__swbuf_r+0x69>
81007076:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100707b:	e9 a1 00 00 00       	jmp    81007121 <__swbuf_r+0x10a>
81007080:	89 f8                	mov    %edi,%eax
81007082:	0f b6 f8             	movzbl %al,%edi
81007085:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007089:	98                   	cwtl   
8100708a:	25 00 20 00 00       	and    $0x2000,%eax
8100708f:	85 c0                	test   %eax,%eax
81007091:	75 14                	jne    810070a7 <__swbuf_r+0x90>
81007093:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007097:	80 cc 20             	or     $0x20,%ah
8100709a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100709e:	8b 43 64             	mov    0x64(%ebx),%eax
810070a1:	80 e4 df             	and    $0xdf,%ah
810070a4:	89 43 64             	mov    %eax,0x64(%ebx)
810070a7:	8b 03                	mov    (%ebx),%eax
810070a9:	8b 53 10             	mov    0x10(%ebx),%edx
810070ac:	29 d0                	sub    %edx,%eax
810070ae:	89 c6                	mov    %eax,%esi
810070b0:	8b 43 14             	mov    0x14(%ebx),%eax
810070b3:	39 c6                	cmp    %eax,%esi
810070b5:	7c 1f                	jl     810070d6 <__swbuf_r+0xbf>
810070b7:	83 ec 08             	sub    $0x8,%esp
810070ba:	53                   	push   %ebx
810070bb:	ff 75 08             	pushl  0x8(%ebp)
810070be:	e8 24 a2 ff ff       	call   810012e7 <_fflush_r>
810070c3:	83 c4 10             	add    $0x10,%esp
810070c6:	85 c0                	test   %eax,%eax
810070c8:	74 07                	je     810070d1 <__swbuf_r+0xba>
810070ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070cf:	eb 50                	jmp    81007121 <__swbuf_r+0x10a>
810070d1:	be 00 00 00 00       	mov    $0x0,%esi
810070d6:	8b 43 08             	mov    0x8(%ebx),%eax
810070d9:	83 e8 01             	sub    $0x1,%eax
810070dc:	89 43 08             	mov    %eax,0x8(%ebx)
810070df:	8b 03                	mov    (%ebx),%eax
810070e1:	8d 50 01             	lea    0x1(%eax),%edx
810070e4:	89 13                	mov    %edx,(%ebx)
810070e6:	89 fa                	mov    %edi,%edx
810070e8:	88 10                	mov    %dl,(%eax)
810070ea:	83 c6 01             	add    $0x1,%esi
810070ed:	8b 43 14             	mov    0x14(%ebx),%eax
810070f0:	39 c6                	cmp    %eax,%esi
810070f2:	74 11                	je     81007105 <__swbuf_r+0xee>
810070f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070f8:	98                   	cwtl   
810070f9:	83 e0 01             	and    $0x1,%eax
810070fc:	85 c0                	test   %eax,%eax
810070fe:	74 1f                	je     8100711f <__swbuf_r+0x108>
81007100:	83 ff 0a             	cmp    $0xa,%edi
81007103:	75 1a                	jne    8100711f <__swbuf_r+0x108>
81007105:	83 ec 08             	sub    $0x8,%esp
81007108:	53                   	push   %ebx
81007109:	ff 75 08             	pushl  0x8(%ebp)
8100710c:	e8 d6 a1 ff ff       	call   810012e7 <_fflush_r>
81007111:	83 c4 10             	add    $0x10,%esp
81007114:	85 c0                	test   %eax,%eax
81007116:	74 07                	je     8100711f <__swbuf_r+0x108>
81007118:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100711d:	eb 02                	jmp    81007121 <__swbuf_r+0x10a>
8100711f:	89 f8                	mov    %edi,%eax
81007121:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007124:	5b                   	pop    %ebx
81007125:	5e                   	pop    %esi
81007126:	5f                   	pop    %edi
81007127:	5d                   	pop    %ebp
81007128:	c3                   	ret    

81007129 <__swbuf>:
81007129:	55                   	push   %ebp
8100712a:	89 e5                	mov    %esp,%ebp
8100712c:	83 ec 08             	sub    $0x8,%esp
8100712f:	8b 55 08             	mov    0x8(%ebp),%edx
81007132:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81007135:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100713a:	83 ec 04             	sub    $0x4,%esp
8100713d:	51                   	push   %ecx
8100713e:	52                   	push   %edx
8100713f:	50                   	push   %eax
81007140:	e8 d2 fe ff ff       	call   81007017 <__swbuf_r>
81007145:	83 c4 10             	add    $0x10,%esp
81007148:	c9                   	leave  
81007149:	c3                   	ret    

8100714a <_write_r>:
8100714a:	55                   	push   %ebp
8100714b:	89 e5                	mov    %esp,%ebp
8100714d:	83 ec 18             	sub    $0x18,%esp
81007150:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
81007157:	00 00 00 
8100715a:	83 ec 04             	sub    $0x4,%esp
8100715d:	ff 75 14             	pushl  0x14(%ebp)
81007160:	ff 75 10             	pushl  0x10(%ebp)
81007163:	ff 75 0c             	pushl  0xc(%ebp)
81007166:	e8 40 9b ff ff       	call   81000cab <write>
8100716b:	83 c4 10             	add    $0x10,%esp
8100716e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007171:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007175:	75 14                	jne    8100718b <_write_r+0x41>
81007177:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
8100717c:	85 c0                	test   %eax,%eax
8100717e:	74 0b                	je     8100718b <_write_r+0x41>
81007180:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
81007186:	8b 45 08             	mov    0x8(%ebp),%eax
81007189:	89 10                	mov    %edx,(%eax)
8100718b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100718e:	c9                   	leave  
8100718f:	c3                   	ret    

81007190 <__swsetup_r>:
81007190:	55                   	push   %ebp
81007191:	89 e5                	mov    %esp,%ebp
81007193:	53                   	push   %ebx
81007194:	83 ec 14             	sub    $0x14,%esp
81007197:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100719a:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100719f:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810071a6:	74 18                	je     810071c0 <__swsetup_r+0x30>
810071a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810071ab:	8b 40 38             	mov    0x38(%eax),%eax
810071ae:	85 c0                	test   %eax,%eax
810071b0:	75 0e                	jne    810071c0 <__swsetup_r+0x30>
810071b2:	83 ec 0c             	sub    $0xc,%esp
810071b5:	ff 75 f4             	pushl  -0xc(%ebp)
810071b8:	e8 17 a7 ff ff       	call   810018d4 <__sinit>
810071bd:	83 c4 10             	add    $0x10,%esp
810071c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071c4:	98                   	cwtl   
810071c5:	83 e0 08             	and    $0x8,%eax
810071c8:	85 c0                	test   %eax,%eax
810071ca:	0f 85 82 00 00 00    	jne    81007252 <__swsetup_r+0xc2>
810071d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071d4:	98                   	cwtl   
810071d5:	83 e0 10             	and    $0x10,%eax
810071d8:	85 c0                	test   %eax,%eax
810071da:	75 1e                	jne    810071fa <__swsetup_r+0x6a>
810071dc:	8b 45 08             	mov    0x8(%ebp),%eax
810071df:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810071e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071e9:	83 c8 40             	or     $0x40,%eax
810071ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810071f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810071f5:	e9 ec 00 00 00       	jmp    810072e6 <__swsetup_r+0x156>
810071fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071fe:	98                   	cwtl   
810071ff:	83 e0 04             	and    $0x4,%eax
81007202:	85 c0                	test   %eax,%eax
81007204:	74 41                	je     81007247 <__swsetup_r+0xb7>
81007206:	8b 43 30             	mov    0x30(%ebx),%eax
81007209:	85 c0                	test   %eax,%eax
8100720b:	74 23                	je     81007230 <__swsetup_r+0xa0>
8100720d:	8b 53 30             	mov    0x30(%ebx),%edx
81007210:	8d 43 40             	lea    0x40(%ebx),%eax
81007213:	39 c2                	cmp    %eax,%edx
81007215:	74 12                	je     81007229 <__swsetup_r+0x99>
81007217:	8b 43 30             	mov    0x30(%ebx),%eax
8100721a:	83 ec 08             	sub    $0x8,%esp
8100721d:	50                   	push   %eax
8100721e:	ff 75 08             	pushl  0x8(%ebp)
81007221:	e8 63 ac ff ff       	call   81001e89 <_free_r>
81007226:	83 c4 10             	add    $0x10,%esp
81007229:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81007230:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007234:	83 e0 db             	and    $0xffffffdb,%eax
81007237:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100723b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007242:	8b 43 10             	mov    0x10(%ebx),%eax
81007245:	89 03                	mov    %eax,(%ebx)
81007247:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100724b:	83 c8 08             	or     $0x8,%eax
8100724e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007252:	8b 43 10             	mov    0x10(%ebx),%eax
81007255:	85 c0                	test   %eax,%eax
81007257:	75 2b                	jne    81007284 <__swsetup_r+0xf4>
81007259:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100725d:	98                   	cwtl   
8100725e:	25 00 02 00 00       	and    $0x200,%eax
81007263:	85 c0                	test   %eax,%eax
81007265:	74 0e                	je     81007275 <__swsetup_r+0xe5>
81007267:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100726b:	98                   	cwtl   
8100726c:	25 80 00 00 00       	and    $0x80,%eax
81007271:	85 c0                	test   %eax,%eax
81007273:	74 0f                	je     81007284 <__swsetup_r+0xf4>
81007275:	83 ec 08             	sub    $0x8,%esp
81007278:	53                   	push   %ebx
81007279:	ff 75 08             	pushl  0x8(%ebp)
8100727c:	e8 d1 ca ff ff       	call   81003d52 <__smakebuf_r>
81007281:	83 c4 10             	add    $0x10,%esp
81007284:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007288:	98                   	cwtl   
81007289:	83 e0 01             	and    $0x1,%eax
8100728c:	85 c0                	test   %eax,%eax
8100728e:	74 11                	je     810072a1 <__swsetup_r+0x111>
81007290:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007297:	8b 43 14             	mov    0x14(%ebx),%eax
8100729a:	f7 d8                	neg    %eax
8100729c:	89 43 18             	mov    %eax,0x18(%ebx)
8100729f:	eb 19                	jmp    810072ba <__swsetup_r+0x12a>
810072a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072a5:	98                   	cwtl   
810072a6:	83 e0 02             	and    $0x2,%eax
810072a9:	85 c0                	test   %eax,%eax
810072ab:	75 05                	jne    810072b2 <__swsetup_r+0x122>
810072ad:	8b 43 14             	mov    0x14(%ebx),%eax
810072b0:	eb 05                	jmp    810072b7 <__swsetup_r+0x127>
810072b2:	b8 00 00 00 00       	mov    $0x0,%eax
810072b7:	89 43 08             	mov    %eax,0x8(%ebx)
810072ba:	8b 43 10             	mov    0x10(%ebx),%eax
810072bd:	85 c0                	test   %eax,%eax
810072bf:	75 20                	jne    810072e1 <__swsetup_r+0x151>
810072c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072c5:	98                   	cwtl   
810072c6:	25 80 00 00 00       	and    $0x80,%eax
810072cb:	85 c0                	test   %eax,%eax
810072cd:	74 12                	je     810072e1 <__swsetup_r+0x151>
810072cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072d3:	83 c8 40             	or     $0x40,%eax
810072d6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810072da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072df:	eb 05                	jmp    810072e6 <__swsetup_r+0x156>
810072e1:	b8 00 00 00 00       	mov    $0x0,%eax
810072e6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810072e9:	c9                   	leave  
810072ea:	c3                   	ret    

810072eb <__call_exitprocs>:
810072eb:	55                   	push   %ebp
810072ec:	89 e5                	mov    %esp,%ebp
810072ee:	57                   	push   %edi
810072ef:	56                   	push   %esi
810072f0:	53                   	push   %ebx
810072f1:	83 ec 1c             	sub    $0x1c,%esp
810072f4:	a1 e4 88 00 81       	mov    0x810088e4,%eax
810072f9:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810072ff:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81007304:	05 48 01 00 00       	add    $0x148,%eax
81007309:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100730c:	90                   	nop
8100730d:	85 db                	test   %ebx,%ebx
8100730f:	0f 84 e1 00 00 00    	je     810073f6 <__call_exitprocs+0x10b>
81007315:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
8100731b:	8b 43 04             	mov    0x4(%ebx),%eax
8100731e:	8d 70 ff             	lea    -0x1(%eax),%esi
81007321:	e9 c6 00 00 00       	jmp    810073ec <__call_exitprocs+0x101>
81007326:	b8 01 00 00 00       	mov    $0x1,%eax
8100732b:	89 f1                	mov    %esi,%ecx
8100732d:	d3 e0                	shl    %cl,%eax
8100732f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007332:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007336:	74 17                	je     8100734f <__call_exitprocs+0x64>
81007338:	85 ff                	test   %edi,%edi
8100733a:	0f 84 a5 00 00 00    	je     810073e5 <__call_exitprocs+0xfa>
81007340:	8d 46 20             	lea    0x20(%esi),%eax
81007343:	8b 04 87             	mov    (%edi,%eax,4),%eax
81007346:	39 45 0c             	cmp    %eax,0xc(%ebp)
81007349:	0f 85 96 00 00 00    	jne    810073e5 <__call_exitprocs+0xfa>
8100734f:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81007353:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007356:	8b 43 04             	mov    0x4(%ebx),%eax
81007359:	83 e8 01             	sub    $0x1,%eax
8100735c:	39 c6                	cmp    %eax,%esi
8100735e:	75 0b                	jne    8100736b <__call_exitprocs+0x80>
81007360:	8b 43 04             	mov    0x4(%ebx),%eax
81007363:	83 e8 01             	sub    $0x1,%eax
81007366:	89 43 04             	mov    %eax,0x4(%ebx)
81007369:	eb 08                	jmp    81007373 <__call_exitprocs+0x88>
8100736b:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81007372:	00 
81007373:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81007377:	74 6f                	je     810073e8 <__call_exitprocs+0xfd>
81007379:	8b 43 04             	mov    0x4(%ebx),%eax
8100737c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100737f:	85 ff                	test   %edi,%edi
81007381:	74 0f                	je     81007392 <__call_exitprocs+0xa7>
81007383:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81007389:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100738c:	21 d0                	and    %edx,%eax
8100738e:	85 c0                	test   %eax,%eax
81007390:	75 07                	jne    81007399 <__call_exitprocs+0xae>
81007392:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007395:	ff d0                	call   *%eax
81007397:	eb 32                	jmp    810073cb <__call_exitprocs+0xe0>
81007399:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
8100739f:	8b 45 e0             	mov    -0x20(%ebp),%eax
810073a2:	21 d0                	and    %edx,%eax
810073a4:	85 c0                	test   %eax,%eax
810073a6:	75 14                	jne    810073bc <__call_exitprocs+0xd1>
810073a8:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073ab:	83 ec 08             	sub    $0x8,%esp
810073ae:	50                   	push   %eax
810073af:	ff 75 08             	pushl  0x8(%ebp)
810073b2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073b5:	ff d0                	call   *%eax
810073b7:	83 c4 10             	add    $0x10,%esp
810073ba:	eb 0f                	jmp    810073cb <__call_exitprocs+0xe0>
810073bc:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073bf:	83 ec 0c             	sub    $0xc,%esp
810073c2:	50                   	push   %eax
810073c3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073c6:	ff d0                	call   *%eax
810073c8:	83 c4 10             	add    $0x10,%esp
810073cb:	8b 43 04             	mov    0x4(%ebx),%eax
810073ce:	39 45 d8             	cmp    %eax,-0x28(%ebp)
810073d1:	0f 85 1d ff ff ff    	jne    810072f4 <__call_exitprocs+0x9>
810073d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810073da:	8b 00                	mov    (%eax),%eax
810073dc:	39 c3                	cmp    %eax,%ebx
810073de:	74 09                	je     810073e9 <__call_exitprocs+0xfe>
810073e0:	e9 0f ff ff ff       	jmp    810072f4 <__call_exitprocs+0x9>
810073e5:	90                   	nop
810073e6:	eb 01                	jmp    810073e9 <__call_exitprocs+0xfe>
810073e8:	90                   	nop
810073e9:	83 ee 01             	sub    $0x1,%esi
810073ec:	85 f6                	test   %esi,%esi
810073ee:	0f 89 32 ff ff ff    	jns    81007326 <__call_exitprocs+0x3b>
810073f4:	eb 01                	jmp    810073f7 <__call_exitprocs+0x10c>
810073f6:	90                   	nop
810073f7:	90                   	nop
810073f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810073fb:	5b                   	pop    %ebx
810073fc:	5e                   	pop    %esi
810073fd:	5f                   	pop    %edi
810073fe:	5d                   	pop    %ebp
810073ff:	c3                   	ret    

81007400 <_close_r>:
81007400:	55                   	push   %ebp
81007401:	89 e5                	mov    %esp,%ebp
81007403:	83 ec 18             	sub    $0x18,%esp
81007406:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100740d:	00 00 00 
81007410:	83 ec 0c             	sub    $0xc,%esp
81007413:	ff 75 0c             	pushl  0xc(%ebp)
81007416:	e8 bd 98 ff ff       	call   81000cd8 <close>
8100741b:	83 c4 10             	add    $0x10,%esp
8100741e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007421:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007425:	75 14                	jne    8100743b <_close_r+0x3b>
81007427:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
8100742c:	85 c0                	test   %eax,%eax
8100742e:	74 0b                	je     8100743b <_close_r+0x3b>
81007430:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
81007436:	8b 45 08             	mov    0x8(%ebp),%eax
81007439:	89 10                	mov    %edx,(%eax)
8100743b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100743e:	c9                   	leave  
8100743f:	c3                   	ret    

81007440 <__errno>:
81007440:	55                   	push   %ebp
81007441:	89 e5                	mov    %esp,%ebp
81007443:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007448:	5d                   	pop    %ebp
81007449:	c3                   	ret    

8100744a <__sflags>:
8100744a:	55                   	push   %ebp
8100744b:	89 e5                	mov    %esp,%ebp
8100744d:	57                   	push   %edi
8100744e:	56                   	push   %esi
8100744f:	53                   	push   %ebx
81007450:	8b 55 0c             	mov    0xc(%ebp),%edx
81007453:	0f b6 02             	movzbl (%edx),%eax
81007456:	0f be c0             	movsbl %al,%eax
81007459:	83 f8 77             	cmp    $0x77,%eax
8100745c:	74 20                	je     8100747e <__sflags+0x34>
8100745e:	83 f8 77             	cmp    $0x77,%eax
81007461:	7f 3d                	jg     810074a0 <__sflags+0x56>
81007463:	83 f8 61             	cmp    $0x61,%eax
81007466:	74 27                	je     8100748f <__sflags+0x45>
81007468:	83 f8 72             	cmp    $0x72,%eax
8100746b:	75 33                	jne    810074a0 <__sflags+0x56>
8100746d:	be 04 00 00 00       	mov    $0x4,%esi
81007472:	bb 00 00 00 00       	mov    $0x0,%ebx
81007477:	bf 00 00 00 00       	mov    $0x0,%edi
8100747c:	eb 32                	jmp    810074b0 <__sflags+0x66>
8100747e:	be 08 00 00 00       	mov    $0x8,%esi
81007483:	bb 01 00 00 00       	mov    $0x1,%ebx
81007488:	bf 00 06 00 00       	mov    $0x600,%edi
8100748d:	eb 21                	jmp    810074b0 <__sflags+0x66>
8100748f:	be 08 01 00 00       	mov    $0x108,%esi
81007494:	bb 01 00 00 00       	mov    $0x1,%ebx
81007499:	bf 08 02 00 00       	mov    $0x208,%edi
8100749e:	eb 10                	jmp    810074b0 <__sflags+0x66>
810074a0:	8b 45 08             	mov    0x8(%ebp),%eax
810074a3:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810074a9:	b8 00 00 00 00       	mov    $0x0,%eax
810074ae:	eb 4f                	jmp    810074ff <__sflags+0xb5>
810074b0:	eb 38                	jmp    810074ea <__sflags+0xa0>
810074b2:	0f b6 02             	movzbl (%edx),%eax
810074b5:	0f be c0             	movsbl %al,%eax
810074b8:	83 f8 78             	cmp    $0x78,%eax
810074bb:	74 27                	je     810074e4 <__sflags+0x9a>
810074bd:	83 f8 78             	cmp    $0x78,%eax
810074c0:	7f 27                	jg     810074e9 <__sflags+0x9f>
810074c2:	83 f8 2b             	cmp    $0x2b,%eax
810074c5:	74 07                	je     810074ce <__sflags+0x84>
810074c7:	83 f8 62             	cmp    $0x62,%eax
810074ca:	74 1e                	je     810074ea <__sflags+0xa0>
810074cc:	eb 1b                	jmp    810074e9 <__sflags+0x9f>
810074ce:	89 f0                	mov    %esi,%eax
810074d0:	83 e0 e3             	and    $0xffffffe3,%eax
810074d3:	83 c8 10             	or     $0x10,%eax
810074d6:	89 c6                	mov    %eax,%esi
810074d8:	89 d8                	mov    %ebx,%eax
810074da:	83 e0 fc             	and    $0xfffffffc,%eax
810074dd:	83 c8 02             	or     $0x2,%eax
810074e0:	89 c3                	mov    %eax,%ebx
810074e2:	eb 06                	jmp    810074ea <__sflags+0xa0>
810074e4:	80 cf 08             	or     $0x8,%bh
810074e7:	eb 01                	jmp    810074ea <__sflags+0xa0>
810074e9:	90                   	nop
810074ea:	83 c2 01             	add    $0x1,%edx
810074ed:	0f b6 02             	movzbl (%edx),%eax
810074f0:	84 c0                	test   %al,%al
810074f2:	75 be                	jne    810074b2 <__sflags+0x68>
810074f4:	89 da                	mov    %ebx,%edx
810074f6:	09 fa                	or     %edi,%edx
810074f8:	8b 45 10             	mov    0x10(%ebp),%eax
810074fb:	89 10                	mov    %edx,(%eax)
810074fd:	89 f0                	mov    %esi,%eax
810074ff:	5b                   	pop    %ebx
81007500:	5e                   	pop    %esi
81007501:	5f                   	pop    %edi
81007502:	5d                   	pop    %ebp
81007503:	c3                   	ret    

81007504 <_fputc_r>:
81007504:	55                   	push   %ebp
81007505:	89 e5                	mov    %esp,%ebp
81007507:	83 ec 18             	sub    $0x18,%esp
8100750a:	8b 45 08             	mov    0x8(%ebp),%eax
8100750d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007510:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007514:	74 18                	je     8100752e <_fputc_r+0x2a>
81007516:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007519:	8b 40 38             	mov    0x38(%eax),%eax
8100751c:	85 c0                	test   %eax,%eax
8100751e:	75 0e                	jne    8100752e <_fputc_r+0x2a>
81007520:	83 ec 0c             	sub    $0xc,%esp
81007523:	ff 75 f4             	pushl  -0xc(%ebp)
81007526:	e8 a9 a3 ff ff       	call   810018d4 <__sinit>
8100752b:	83 c4 10             	add    $0x10,%esp
8100752e:	83 ec 04             	sub    $0x4,%esp
81007531:	ff 75 10             	pushl  0x10(%ebp)
81007534:	ff 75 0c             	pushl  0xc(%ebp)
81007537:	ff 75 08             	pushl  0x8(%ebp)
8100753a:	e8 a3 0c 00 00       	call   810081e2 <_putc_r>
8100753f:	83 c4 10             	add    $0x10,%esp
81007542:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007545:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007548:	c9                   	leave  
81007549:	c3                   	ret    

8100754a <fputc>:
8100754a:	55                   	push   %ebp
8100754b:	89 e5                	mov    %esp,%ebp
8100754d:	83 ec 18             	sub    $0x18,%esp
81007550:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007555:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007558:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100755b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100755e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81007562:	74 18                	je     8100757c <fputc+0x32>
81007564:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007567:	8b 40 38             	mov    0x38(%eax),%eax
8100756a:	85 c0                	test   %eax,%eax
8100756c:	75 0e                	jne    8100757c <fputc+0x32>
8100756e:	83 ec 0c             	sub    $0xc,%esp
81007571:	ff 75 f0             	pushl  -0x10(%ebp)
81007574:	e8 5b a3 ff ff       	call   810018d4 <__sinit>
81007579:	83 c4 10             	add    $0x10,%esp
8100757c:	83 ec 04             	sub    $0x4,%esp
8100757f:	ff 75 0c             	pushl  0xc(%ebp)
81007582:	ff 75 08             	pushl  0x8(%ebp)
81007585:	ff 75 f4             	pushl  -0xc(%ebp)
81007588:	e8 55 0c 00 00       	call   810081e2 <_putc_r>
8100758d:	83 c4 10             	add    $0x10,%esp
81007590:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007593:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007596:	c9                   	leave  
81007597:	c3                   	ret    

81007598 <__sputc_r>:
81007598:	55                   	push   %ebp
81007599:	89 e5                	mov    %esp,%ebp
8100759b:	83 ec 08             	sub    $0x8,%esp
8100759e:	8b 45 10             	mov    0x10(%ebp),%eax
810075a1:	8b 40 08             	mov    0x8(%eax),%eax
810075a4:	8d 50 ff             	lea    -0x1(%eax),%edx
810075a7:	8b 45 10             	mov    0x10(%ebp),%eax
810075aa:	89 50 08             	mov    %edx,0x8(%eax)
810075ad:	8b 45 10             	mov    0x10(%ebp),%eax
810075b0:	8b 40 08             	mov    0x8(%eax),%eax
810075b3:	85 c0                	test   %eax,%eax
810075b5:	79 17                	jns    810075ce <__sputc_r+0x36>
810075b7:	8b 45 10             	mov    0x10(%ebp),%eax
810075ba:	8b 50 08             	mov    0x8(%eax),%edx
810075bd:	8b 45 10             	mov    0x10(%ebp),%eax
810075c0:	8b 40 18             	mov    0x18(%eax),%eax
810075c3:	39 c2                	cmp    %eax,%edx
810075c5:	7c 21                	jl     810075e8 <__sputc_r+0x50>
810075c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810075ca:	3c 0a                	cmp    $0xa,%al
810075cc:	74 1a                	je     810075e8 <__sputc_r+0x50>
810075ce:	8b 45 10             	mov    0x10(%ebp),%eax
810075d1:	8b 00                	mov    (%eax),%eax
810075d3:	8d 48 01             	lea    0x1(%eax),%ecx
810075d6:	8b 55 10             	mov    0x10(%ebp),%edx
810075d9:	89 0a                	mov    %ecx,(%edx)
810075db:	8b 55 0c             	mov    0xc(%ebp),%edx
810075de:	88 10                	mov    %dl,(%eax)
810075e0:	0f b6 00             	movzbl (%eax),%eax
810075e3:	0f b6 c0             	movzbl %al,%eax
810075e6:	eb 14                	jmp    810075fc <__sputc_r+0x64>
810075e8:	83 ec 04             	sub    $0x4,%esp
810075eb:	ff 75 10             	pushl  0x10(%ebp)
810075ee:	ff 75 0c             	pushl  0xc(%ebp)
810075f1:	ff 75 08             	pushl  0x8(%ebp)
810075f4:	e8 1e fa ff ff       	call   81007017 <__swbuf_r>
810075f9:	83 c4 10             	add    $0x10,%esp
810075fc:	c9                   	leave  
810075fd:	c3                   	ret    

810075fe <__fputwc>:
810075fe:	55                   	push   %ebp
810075ff:	89 e5                	mov    %esp,%ebp
81007601:	83 ec 18             	sub    $0x18,%esp
81007604:	e8 41 03 00 00       	call   8100794a <__locale_mb_cur_max>
81007609:	83 f8 01             	cmp    $0x1,%eax
8100760c:	75 1e                	jne    8100762c <__fputwc+0x2e>
8100760e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007612:	7e 18                	jle    8100762c <__fputwc+0x2e>
81007614:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
8100761b:	7f 0f                	jg     8100762c <__fputwc+0x2e>
8100761d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007620:	88 45 ef             	mov    %al,-0x11(%ebp)
81007623:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
8100762a:	eb 3c                	jmp    81007668 <__fputwc+0x6a>
8100762c:	8b 45 10             	mov    0x10(%ebp),%eax
8100762f:	83 c0 5c             	add    $0x5c,%eax
81007632:	50                   	push   %eax
81007633:	ff 75 0c             	pushl  0xc(%ebp)
81007636:	8d 45 ef             	lea    -0x11(%ebp),%eax
81007639:	50                   	push   %eax
8100763a:	ff 75 08             	pushl  0x8(%ebp)
8100763d:	e8 7b 0d 00 00       	call   810083bd <_wcrtomb_r>
81007642:	83 c4 10             	add    $0x10,%esp
81007645:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007648:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100764c:	75 1a                	jne    81007668 <__fputwc+0x6a>
8100764e:	8b 45 10             	mov    0x10(%ebp),%eax
81007651:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007655:	83 c8 40             	or     $0x40,%eax
81007658:	89 c2                	mov    %eax,%edx
8100765a:	8b 45 10             	mov    0x10(%ebp),%eax
8100765d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007661:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007666:	eb 44                	jmp    810076ac <__fputwc+0xae>
81007668:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100766f:	eb 30                	jmp    810076a1 <__fputwc+0xa3>
81007671:	8d 55 ef             	lea    -0x11(%ebp),%edx
81007674:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007677:	01 d0                	add    %edx,%eax
81007679:	0f b6 00             	movzbl (%eax),%eax
8100767c:	0f b6 c0             	movzbl %al,%eax
8100767f:	83 ec 04             	sub    $0x4,%esp
81007682:	ff 75 10             	pushl  0x10(%ebp)
81007685:	50                   	push   %eax
81007686:	ff 75 08             	pushl  0x8(%ebp)
81007689:	e8 0a ff ff ff       	call   81007598 <__sputc_r>
8100768e:	83 c4 10             	add    $0x10,%esp
81007691:	83 f8 ff             	cmp    $0xffffffff,%eax
81007694:	75 07                	jne    8100769d <__fputwc+0x9f>
81007696:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100769b:	eb 0f                	jmp    810076ac <__fputwc+0xae>
8100769d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810076a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810076a4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810076a7:	72 c8                	jb     81007671 <__fputwc+0x73>
810076a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810076ac:	c9                   	leave  
810076ad:	c3                   	ret    

810076ae <_fputwc_r>:
810076ae:	55                   	push   %ebp
810076af:	89 e5                	mov    %esp,%ebp
810076b1:	83 ec 18             	sub    $0x18,%esp
810076b4:	8b 45 10             	mov    0x10(%ebp),%eax
810076b7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076bb:	98                   	cwtl   
810076bc:	25 00 20 00 00       	and    $0x2000,%eax
810076c1:	85 c0                	test   %eax,%eax
810076c3:	75 24                	jne    810076e9 <_fputwc_r+0x3b>
810076c5:	8b 45 10             	mov    0x10(%ebp),%eax
810076c8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076cc:	80 cc 20             	or     $0x20,%ah
810076cf:	89 c2                	mov    %eax,%edx
810076d1:	8b 45 10             	mov    0x10(%ebp),%eax
810076d4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810076d8:	8b 45 10             	mov    0x10(%ebp),%eax
810076db:	8b 40 64             	mov    0x64(%eax),%eax
810076de:	80 cc 20             	or     $0x20,%ah
810076e1:	89 c2                	mov    %eax,%edx
810076e3:	8b 45 10             	mov    0x10(%ebp),%eax
810076e6:	89 50 64             	mov    %edx,0x64(%eax)
810076e9:	83 ec 04             	sub    $0x4,%esp
810076ec:	ff 75 10             	pushl  0x10(%ebp)
810076ef:	ff 75 0c             	pushl  0xc(%ebp)
810076f2:	ff 75 08             	pushl  0x8(%ebp)
810076f5:	e8 04 ff ff ff       	call   810075fe <__fputwc>
810076fa:	83 c4 10             	add    $0x10,%esp
810076fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007700:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007703:	c9                   	leave  
81007704:	c3                   	ret    

81007705 <fputwc>:
81007705:	55                   	push   %ebp
81007706:	89 e5                	mov    %esp,%ebp
81007708:	83 ec 18             	sub    $0x18,%esp
8100770b:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007710:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007713:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007716:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007719:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100771d:	74 18                	je     81007737 <fputwc+0x32>
8100771f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007722:	8b 40 38             	mov    0x38(%eax),%eax
81007725:	85 c0                	test   %eax,%eax
81007727:	75 0e                	jne    81007737 <fputwc+0x32>
81007729:	83 ec 0c             	sub    $0xc,%esp
8100772c:	ff 75 f0             	pushl  -0x10(%ebp)
8100772f:	e8 a0 a1 ff ff       	call   810018d4 <__sinit>
81007734:	83 c4 10             	add    $0x10,%esp
81007737:	83 ec 04             	sub    $0x4,%esp
8100773a:	ff 75 0c             	pushl  0xc(%ebp)
8100773d:	ff 75 08             	pushl  0x8(%ebp)
81007740:	ff 75 f4             	pushl  -0xc(%ebp)
81007743:	e8 66 ff ff ff       	call   810076ae <_fputwc_r>
81007748:	83 c4 10             	add    $0x10,%esp
8100774b:	c9                   	leave  
8100774c:	c3                   	ret    

8100774d <_findenv>:
8100774d:	55                   	push   %ebp
8100774e:	89 e5                	mov    %esp,%ebp
81007750:	83 ec 08             	sub    $0x8,%esp
81007753:	8b 55 08             	mov    0x8(%ebp),%edx
81007756:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100775b:	83 ec 04             	sub    $0x4,%esp
8100775e:	ff 75 0c             	pushl  0xc(%ebp)
81007761:	52                   	push   %edx
81007762:	50                   	push   %eax
81007763:	e8 25 00 00 00       	call   8100778d <_findenv_r>
81007768:	83 c4 10             	add    $0x10,%esp
8100776b:	c9                   	leave  
8100776c:	c3                   	ret    

8100776d <getenv>:
8100776d:	55                   	push   %ebp
8100776e:	89 e5                	mov    %esp,%ebp
81007770:	83 ec 18             	sub    $0x18,%esp
81007773:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007778:	83 ec 04             	sub    $0x4,%esp
8100777b:	8d 55 f4             	lea    -0xc(%ebp),%edx
8100777e:	52                   	push   %edx
8100777f:	ff 75 08             	pushl  0x8(%ebp)
81007782:	50                   	push   %eax
81007783:	e8 05 00 00 00       	call   8100778d <_findenv_r>
81007788:	83 c4 10             	add    $0x10,%esp
8100778b:	c9                   	leave  
8100778c:	c3                   	ret    

8100778d <_findenv_r>:
8100778d:	55                   	push   %ebp
8100778e:	89 e5                	mov    %esp,%ebp
81007790:	57                   	push   %edi
81007791:	56                   	push   %esi
81007792:	53                   	push   %ebx
81007793:	83 ec 1c             	sub    $0x1c,%esp
81007796:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007799:	83 ec 0c             	sub    $0xc,%esp
8100779c:	ff 75 08             	pushl  0x8(%ebp)
8100779f:	e8 8a 0d 00 00       	call   8100852e <__env_lock>
810077a4:	83 c4 10             	add    $0x10,%esp
810077a7:	a1 d0 94 00 81       	mov    0x810094d0,%eax
810077ac:	8b 00                	mov    (%eax),%eax
810077ae:	85 c0                	test   %eax,%eax
810077b0:	75 18                	jne    810077ca <_findenv_r+0x3d>
810077b2:	83 ec 0c             	sub    $0xc,%esp
810077b5:	ff 75 08             	pushl  0x8(%ebp)
810077b8:	e8 77 0d 00 00       	call   81008534 <__env_unlock>
810077bd:	83 c4 10             	add    $0x10,%esp
810077c0:	b8 00 00 00 00       	mov    $0x0,%eax
810077c5:	e9 a8 00 00 00       	jmp    81007872 <_findenv_r+0xe5>
810077ca:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810077cd:	eb 04                	jmp    810077d3 <_findenv_r+0x46>
810077cf:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810077d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077d6:	0f b6 00             	movzbl (%eax),%eax
810077d9:	84 c0                	test   %al,%al
810077db:	74 0a                	je     810077e7 <_findenv_r+0x5a>
810077dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077e0:	0f b6 00             	movzbl (%eax),%eax
810077e3:	3c 3d                	cmp    $0x3d,%al
810077e5:	75 e8                	jne    810077cf <_findenv_r+0x42>
810077e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077ea:	0f b6 00             	movzbl (%eax),%eax
810077ed:	3c 3d                	cmp    $0x3d,%al
810077ef:	74 6e                	je     8100785f <_findenv_r+0xd2>
810077f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077f4:	29 f8                	sub    %edi,%eax
810077f6:	89 c6                	mov    %eax,%esi
810077f8:	a1 d0 94 00 81       	mov    0x810094d0,%eax
810077fd:	8b 18                	mov    (%eax),%ebx
810077ff:	eb 58                	jmp    81007859 <_findenv_r+0xcc>
81007801:	89 f2                	mov    %esi,%edx
81007803:	8b 03                	mov    (%ebx),%eax
81007805:	83 ec 04             	sub    $0x4,%esp
81007808:	52                   	push   %edx
81007809:	57                   	push   %edi
8100780a:	50                   	push   %eax
8100780b:	e8 b6 0a 00 00       	call   810082c6 <strncmp>
81007810:	83 c4 10             	add    $0x10,%esp
81007813:	85 c0                	test   %eax,%eax
81007815:	75 3f                	jne    81007856 <_findenv_r+0xc9>
81007817:	8b 03                	mov    (%ebx),%eax
81007819:	89 f2                	mov    %esi,%edx
8100781b:	01 d0                	add    %edx,%eax
8100781d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007820:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007823:	0f b6 00             	movzbl (%eax),%eax
81007826:	3c 3d                	cmp    $0x3d,%al
81007828:	75 2c                	jne    81007856 <_findenv_r+0xc9>
8100782a:	a1 d0 94 00 81       	mov    0x810094d0,%eax
8100782f:	8b 10                	mov    (%eax),%edx
81007831:	89 d8                	mov    %ebx,%eax
81007833:	29 d0                	sub    %edx,%eax
81007835:	c1 f8 02             	sar    $0x2,%eax
81007838:	89 c2                	mov    %eax,%edx
8100783a:	8b 45 10             	mov    0x10(%ebp),%eax
8100783d:	89 10                	mov    %edx,(%eax)
8100783f:	83 ec 0c             	sub    $0xc,%esp
81007842:	ff 75 08             	pushl  0x8(%ebp)
81007845:	e8 ea 0c 00 00       	call   81008534 <__env_unlock>
8100784a:	83 c4 10             	add    $0x10,%esp
8100784d:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81007851:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007854:	eb 1c                	jmp    81007872 <_findenv_r+0xe5>
81007856:	83 c3 04             	add    $0x4,%ebx
81007859:	8b 03                	mov    (%ebx),%eax
8100785b:	85 c0                	test   %eax,%eax
8100785d:	75 a2                	jne    81007801 <_findenv_r+0x74>
8100785f:	83 ec 0c             	sub    $0xc,%esp
81007862:	ff 75 08             	pushl  0x8(%ebp)
81007865:	e8 ca 0c 00 00       	call   81008534 <__env_unlock>
8100786a:	83 c4 10             	add    $0x10,%esp
8100786d:	b8 00 00 00 00       	mov    $0x0,%eax
81007872:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007875:	5b                   	pop    %ebx
81007876:	5e                   	pop    %esi
81007877:	5f                   	pop    %edi
81007878:	5d                   	pop    %ebp
81007879:	c3                   	ret    

8100787a <_getenv_r>:
8100787a:	55                   	push   %ebp
8100787b:	89 e5                	mov    %esp,%ebp
8100787d:	83 ec 18             	sub    $0x18,%esp
81007880:	83 ec 04             	sub    $0x4,%esp
81007883:	8d 45 f4             	lea    -0xc(%ebp),%eax
81007886:	50                   	push   %eax
81007887:	ff 75 0c             	pushl  0xc(%ebp)
8100788a:	ff 75 08             	pushl  0x8(%ebp)
8100788d:	e8 fb fe ff ff       	call   8100778d <_findenv_r>
81007892:	83 c4 10             	add    $0x10,%esp
81007895:	c9                   	leave  
81007896:	c3                   	ret    

81007897 <_isatty_r>:
81007897:	55                   	push   %ebp
81007898:	89 e5                	mov    %esp,%ebp
8100789a:	83 ec 18             	sub    $0x18,%esp
8100789d:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
810078a4:	00 00 00 
810078a7:	83 ec 0c             	sub    $0xc,%esp
810078aa:	ff 75 0c             	pushl  0xc(%ebp)
810078ad:	e8 9b 94 ff ff       	call   81000d4d <isatty>
810078b2:	83 c4 10             	add    $0x10,%esp
810078b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078b8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810078bc:	75 14                	jne    810078d2 <_isatty_r+0x3b>
810078be:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
810078c3:	85 c0                	test   %eax,%eax
810078c5:	74 0b                	je     810078d2 <_isatty_r+0x3b>
810078c7:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810078cd:	8b 45 08             	mov    0x8(%ebp),%eax
810078d0:	89 10                	mov    %edx,(%eax)
810078d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078d5:	c9                   	leave  
810078d6:	c3                   	ret    

810078d7 <__get_global_locale>:
810078d7:	55                   	push   %ebp
810078d8:	89 e5                	mov    %esp,%ebp
810078da:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810078df:	5d                   	pop    %ebp
810078e0:	c3                   	ret    

810078e1 <__get_current_locale>:
810078e1:	55                   	push   %ebp
810078e2:	89 e5                	mov    %esp,%ebp
810078e4:	e8 ee ff ff ff       	call   810078d7 <__get_global_locale>
810078e9:	5d                   	pop    %ebp
810078ea:	c3                   	ret    

810078eb <_setlocale_r>:
810078eb:	55                   	push   %ebp
810078ec:	89 e5                	mov    %esp,%ebp
810078ee:	83 ec 08             	sub    $0x8,%esp
810078f1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810078f5:	74 4c                	je     81007943 <_setlocale_r+0x58>
810078f7:	83 ec 08             	sub    $0x8,%esp
810078fa:	68 44 8c 00 81       	push   $0x81008c44
810078ff:	ff 75 10             	pushl  0x10(%ebp)
81007902:	e8 25 f2 ff ff       	call   81006b2c <strcmp>
81007907:	83 c4 10             	add    $0x10,%esp
8100790a:	85 c0                	test   %eax,%eax
8100790c:	74 35                	je     81007943 <_setlocale_r+0x58>
8100790e:	83 ec 08             	sub    $0x8,%esp
81007911:	68 4a 8c 00 81       	push   $0x81008c4a
81007916:	ff 75 10             	pushl  0x10(%ebp)
81007919:	e8 0e f2 ff ff       	call   81006b2c <strcmp>
8100791e:	83 c4 10             	add    $0x10,%esp
81007921:	85 c0                	test   %eax,%eax
81007923:	74 1e                	je     81007943 <_setlocale_r+0x58>
81007925:	83 ec 08             	sub    $0x8,%esp
81007928:	68 43 8c 00 81       	push   $0x81008c43
8100792d:	ff 75 10             	pushl  0x10(%ebp)
81007930:	e8 f7 f1 ff ff       	call   81006b2c <strcmp>
81007935:	83 c4 10             	add    $0x10,%esp
81007938:	85 c0                	test   %eax,%eax
8100793a:	74 07                	je     81007943 <_setlocale_r+0x58>
8100793c:	b8 00 00 00 00       	mov    $0x0,%eax
81007941:	eb 05                	jmp    81007948 <_setlocale_r+0x5d>
81007943:	b8 4a 8c 00 81       	mov    $0x81008c4a,%eax
81007948:	c9                   	leave  
81007949:	c3                   	ret    

8100794a <__locale_mb_cur_max>:
8100794a:	55                   	push   %ebp
8100794b:	89 e5                	mov    %esp,%ebp
8100794d:	e8 8f ff ff ff       	call   810078e1 <__get_current_locale>
81007952:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81007959:	0f be c0             	movsbl %al,%eax
8100795c:	5d                   	pop    %ebp
8100795d:	c3                   	ret    

8100795e <setlocale>:
8100795e:	55                   	push   %ebp
8100795f:	89 e5                	mov    %esp,%ebp
81007961:	83 ec 08             	sub    $0x8,%esp
81007964:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007969:	83 ec 04             	sub    $0x4,%esp
8100796c:	ff 75 0c             	pushl  0xc(%ebp)
8100796f:	ff 75 08             	pushl  0x8(%ebp)
81007972:	50                   	push   %eax
81007973:	e8 73 ff ff ff       	call   810078eb <_setlocale_r>
81007978:	83 c4 10             	add    $0x10,%esp
8100797b:	c9                   	leave  
8100797c:	c3                   	ret    

8100797d <_lseek_r>:
8100797d:	55                   	push   %ebp
8100797e:	89 e5                	mov    %esp,%ebp
81007980:	83 ec 18             	sub    $0x18,%esp
81007983:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100798a:	00 00 00 
8100798d:	83 ec 04             	sub    $0x4,%esp
81007990:	ff 75 14             	pushl  0x14(%ebp)
81007993:	ff 75 10             	pushl  0x10(%ebp)
81007996:	ff 75 0c             	pushl  0xc(%ebp)
81007999:	e8 5b 93 ff ff       	call   81000cf9 <lseek>
8100799e:	83 c4 10             	add    $0x10,%esp
810079a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079a4:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810079a8:	75 14                	jne    810079be <_lseek_r+0x41>
810079aa:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
810079af:	85 c0                	test   %eax,%eax
810079b1:	74 0b                	je     810079be <_lseek_r+0x41>
810079b3:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810079b9:	8b 45 08             	mov    0x8(%ebp),%eax
810079bc:	89 10                	mov    %edx,(%eax)
810079be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810079c1:	c9                   	leave  
810079c2:	c3                   	ret    

810079c3 <__get_global_locale>:
810079c3:	55                   	push   %ebp
810079c4:	89 e5                	mov    %esp,%ebp
810079c6:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810079cb:	5d                   	pop    %ebp
810079cc:	c3                   	ret    

810079cd <__get_current_locale>:
810079cd:	55                   	push   %ebp
810079ce:	89 e5                	mov    %esp,%ebp
810079d0:	e8 ee ff ff ff       	call   810079c3 <__get_global_locale>
810079d5:	5d                   	pop    %ebp
810079d6:	c3                   	ret    

810079d7 <_mbtowc_r>:
810079d7:	55                   	push   %ebp
810079d8:	89 e5                	mov    %esp,%ebp
810079da:	83 ec 08             	sub    $0x8,%esp
810079dd:	e8 eb ff ff ff       	call   810079cd <__get_current_locale>
810079e2:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810079e8:	83 ec 0c             	sub    $0xc,%esp
810079eb:	ff 75 18             	pushl  0x18(%ebp)
810079ee:	ff 75 14             	pushl  0x14(%ebp)
810079f1:	ff 75 10             	pushl  0x10(%ebp)
810079f4:	ff 75 0c             	pushl  0xc(%ebp)
810079f7:	ff 75 08             	pushl  0x8(%ebp)
810079fa:	ff d0                	call   *%eax
810079fc:	83 c4 20             	add    $0x20,%esp
810079ff:	c9                   	leave  
81007a00:	c3                   	ret    

81007a01 <__ascii_mbtowc>:
81007a01:	55                   	push   %ebp
81007a02:	89 e5                	mov    %esp,%ebp
81007a04:	83 ec 10             	sub    $0x10,%esp
81007a07:	8b 45 10             	mov    0x10(%ebp),%eax
81007a0a:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007a0d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007a11:	75 06                	jne    81007a19 <__ascii_mbtowc+0x18>
81007a13:	8d 45 f8             	lea    -0x8(%ebp),%eax
81007a16:	89 45 0c             	mov    %eax,0xc(%ebp)
81007a19:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007a1d:	75 07                	jne    81007a26 <__ascii_mbtowc+0x25>
81007a1f:	b8 00 00 00 00       	mov    $0x0,%eax
81007a24:	eb 31                	jmp    81007a57 <__ascii_mbtowc+0x56>
81007a26:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81007a2a:	75 07                	jne    81007a33 <__ascii_mbtowc+0x32>
81007a2c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007a31:	eb 24                	jmp    81007a57 <__ascii_mbtowc+0x56>
81007a33:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a36:	0f b6 00             	movzbl (%eax),%eax
81007a39:	0f b6 d0             	movzbl %al,%edx
81007a3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a3f:	89 10                	mov    %edx,(%eax)
81007a41:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a44:	0f b6 00             	movzbl (%eax),%eax
81007a47:	84 c0                	test   %al,%al
81007a49:	75 07                	jne    81007a52 <__ascii_mbtowc+0x51>
81007a4b:	b8 00 00 00 00       	mov    $0x0,%eax
81007a50:	eb 05                	jmp    81007a57 <__ascii_mbtowc+0x56>
81007a52:	b8 01 00 00 00       	mov    $0x1,%eax
81007a57:	c9                   	leave  
81007a58:	c3                   	ret    

81007a59 <__ssputs_r>:
81007a59:	55                   	push   %ebp
81007a5a:	89 e5                	mov    %esp,%ebp
81007a5c:	53                   	push   %ebx
81007a5d:	83 ec 14             	sub    $0x14,%esp
81007a60:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a63:	8b 58 08             	mov    0x8(%eax),%ebx
81007a66:	89 d8                	mov    %ebx,%eax
81007a68:	39 45 14             	cmp    %eax,0x14(%ebp)
81007a6b:	0f 82 3c 01 00 00    	jb     81007bad <__ssputs_r+0x154>
81007a71:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a74:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007a78:	98                   	cwtl   
81007a79:	25 80 04 00 00       	and    $0x480,%eax
81007a7e:	85 c0                	test   %eax,%eax
81007a80:	0f 84 27 01 00 00    	je     81007bad <__ssputs_r+0x154>
81007a86:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a89:	8b 10                	mov    (%eax),%edx
81007a8b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a8e:	8b 48 10             	mov    0x10(%eax),%ecx
81007a91:	89 d0                	mov    %edx,%eax
81007a93:	29 c8                	sub    %ecx,%eax
81007a95:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007a98:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a9b:	8b 50 14             	mov    0x14(%eax),%edx
81007a9e:	89 d0                	mov    %edx,%eax
81007aa0:	01 c0                	add    %eax,%eax
81007aa2:	01 d0                	add    %edx,%eax
81007aa4:	89 c2                	mov    %eax,%edx
81007aa6:	c1 ea 1f             	shr    $0x1f,%edx
81007aa9:	01 d0                	add    %edx,%eax
81007aab:	d1 f8                	sar    %eax
81007aad:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ab0:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007ab3:	8b 45 14             	mov    0x14(%ebp),%eax
81007ab6:	01 d0                	add    %edx,%eax
81007ab8:	8d 50 01             	lea    0x1(%eax),%edx
81007abb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007abe:	39 c2                	cmp    %eax,%edx
81007ac0:	76 0e                	jbe    81007ad0 <__ssputs_r+0x77>
81007ac2:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007ac5:	8b 45 14             	mov    0x14(%ebp),%eax
81007ac8:	01 d0                	add    %edx,%eax
81007aca:	83 c0 01             	add    $0x1,%eax
81007acd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ad0:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ad3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007ad7:	98                   	cwtl   
81007ad8:	25 00 04 00 00       	and    $0x400,%eax
81007add:	85 c0                	test   %eax,%eax
81007adf:	74 5a                	je     81007b3b <__ssputs_r+0xe2>
81007ae1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ae4:	83 ec 08             	sub    $0x8,%esp
81007ae7:	50                   	push   %eax
81007ae8:	ff 75 08             	pushl  0x8(%ebp)
81007aeb:	e8 ae c6 ff ff       	call   8100419e <_malloc_r>
81007af0:	83 c4 10             	add    $0x10,%esp
81007af3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007af6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007afa:	75 0e                	jne    81007b0a <__ssputs_r+0xb1>
81007afc:	8b 45 08             	mov    0x8(%ebp),%eax
81007aff:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b05:	e9 e9 00 00 00       	jmp    81007bf3 <__ssputs_r+0x19a>
81007b0a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007b0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b10:	8b 40 10             	mov    0x10(%eax),%eax
81007b13:	83 ec 04             	sub    $0x4,%esp
81007b16:	52                   	push   %edx
81007b17:	50                   	push   %eax
81007b18:	ff 75 f4             	pushl  -0xc(%ebp)
81007b1b:	e8 88 cf ff ff       	call   81004aa8 <memcpy>
81007b20:	83 c4 10             	add    $0x10,%esp
81007b23:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b26:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b2a:	66 25 7f fb          	and    $0xfb7f,%ax
81007b2e:	0c 80                	or     $0x80,%al
81007b30:	89 c2                	mov    %eax,%edx
81007b32:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b35:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007b39:	eb 42                	jmp    81007b7d <__ssputs_r+0x124>
81007b3b:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007b3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b41:	8b 40 10             	mov    0x10(%eax),%eax
81007b44:	83 ec 04             	sub    $0x4,%esp
81007b47:	52                   	push   %edx
81007b48:	50                   	push   %eax
81007b49:	ff 75 08             	pushl  0x8(%ebp)
81007b4c:	e8 a9 dd ff ff       	call   810058fa <_realloc_r>
81007b51:	83 c4 10             	add    $0x10,%esp
81007b54:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b57:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007b5b:	75 20                	jne    81007b7d <__ssputs_r+0x124>
81007b5d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b60:	8b 40 10             	mov    0x10(%eax),%eax
81007b63:	83 ec 08             	sub    $0x8,%esp
81007b66:	50                   	push   %eax
81007b67:	ff 75 08             	pushl  0x8(%ebp)
81007b6a:	e8 1a a3 ff ff       	call   81001e89 <_free_r>
81007b6f:	83 c4 10             	add    $0x10,%esp
81007b72:	8b 45 08             	mov    0x8(%ebp),%eax
81007b75:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b7b:	eb 76                	jmp    81007bf3 <__ssputs_r+0x19a>
81007b7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b80:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007b83:	89 50 10             	mov    %edx,0x10(%eax)
81007b86:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007b89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007b8c:	01 c2                	add    %eax,%edx
81007b8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b91:	89 10                	mov    %edx,(%eax)
81007b93:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b96:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007b99:	89 50 14             	mov    %edx,0x14(%eax)
81007b9c:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007b9f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ba2:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007ba5:	89 c2                	mov    %eax,%edx
81007ba7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007baa:	89 50 08             	mov    %edx,0x8(%eax)
81007bad:	89 d8                	mov    %ebx,%eax
81007baf:	39 45 14             	cmp    %eax,0x14(%ebp)
81007bb2:	73 03                	jae    81007bb7 <__ssputs_r+0x15e>
81007bb4:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007bb7:	89 da                	mov    %ebx,%edx
81007bb9:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bbc:	8b 00                	mov    (%eax),%eax
81007bbe:	83 ec 04             	sub    $0x4,%esp
81007bc1:	52                   	push   %edx
81007bc2:	ff 75 10             	pushl  0x10(%ebp)
81007bc5:	50                   	push   %eax
81007bc6:	e8 25 cf ff ff       	call   81004af0 <memmove>
81007bcb:	83 c4 10             	add    $0x10,%esp
81007bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bd1:	8b 40 08             	mov    0x8(%eax),%eax
81007bd4:	29 d8                	sub    %ebx,%eax
81007bd6:	89 c2                	mov    %eax,%edx
81007bd8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bdb:	89 50 08             	mov    %edx,0x8(%eax)
81007bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81007be1:	8b 00                	mov    (%eax),%eax
81007be3:	89 da                	mov    %ebx,%edx
81007be5:	01 c2                	add    %eax,%edx
81007be7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bea:	89 10                	mov    %edx,(%eax)
81007bec:	b8 00 00 00 00       	mov    $0x0,%eax
81007bf1:	eb 18                	jmp    81007c0b <__ssputs_r+0x1b2>
81007bf3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bf6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007bfa:	83 c8 40             	or     $0x40,%eax
81007bfd:	89 c2                	mov    %eax,%edx
81007bff:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c02:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007c06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007c0b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007c0e:	c9                   	leave  
81007c0f:	c3                   	ret    

81007c10 <__ssprint_r>:
81007c10:	55                   	push   %ebp
81007c11:	89 e5                	mov    %esp,%ebp
81007c13:	57                   	push   %edi
81007c14:	56                   	push   %esi
81007c15:	53                   	push   %ebx
81007c16:	83 ec 2c             	sub    $0x2c,%esp
81007c19:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007c1c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81007c23:	8b 03                	mov    (%ebx),%eax
81007c25:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c28:	be 00 00 00 00       	mov    $0x0,%esi
81007c2d:	8b 43 08             	mov    0x8(%ebx),%eax
81007c30:	85 c0                	test   %eax,%eax
81007c32:	75 22                	jne    81007c56 <__ssprint_r+0x46>
81007c34:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007c3b:	b8 00 00 00 00       	mov    $0x0,%eax
81007c40:	e9 f5 01 00 00       	jmp    81007e3a <__ssprint_r+0x22a>
81007c45:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007c48:	8b 08                	mov    (%eax),%ecx
81007c4a:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007c4d:	8b 70 04             	mov    0x4(%eax),%esi
81007c50:	83 c0 08             	add    $0x8,%eax
81007c53:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c56:	85 f6                	test   %esi,%esi
81007c58:	74 eb                	je     81007c45 <__ssprint_r+0x35>
81007c5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c5d:	8b 78 08             	mov    0x8(%eax),%edi
81007c60:	89 f8                	mov    %edi,%eax
81007c62:	39 c6                	cmp    %eax,%esi
81007c64:	0f 82 38 01 00 00    	jb     81007da2 <__ssprint_r+0x192>
81007c6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c6d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007c71:	98                   	cwtl   
81007c72:	25 80 04 00 00       	and    $0x480,%eax
81007c77:	85 c0                	test   %eax,%eax
81007c79:	0f 84 23 01 00 00    	je     81007da2 <__ssprint_r+0x192>
81007c7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c82:	8b 10                	mov    (%eax),%edx
81007c84:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c87:	8b 48 10             	mov    0x10(%eax),%ecx
81007c8a:	89 d0                	mov    %edx,%eax
81007c8c:	29 c8                	sub    %ecx,%eax
81007c8e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007c91:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c94:	8b 50 14             	mov    0x14(%eax),%edx
81007c97:	89 d0                	mov    %edx,%eax
81007c99:	01 c0                	add    %eax,%eax
81007c9b:	01 d0                	add    %edx,%eax
81007c9d:	89 c2                	mov    %eax,%edx
81007c9f:	c1 ea 1f             	shr    $0x1f,%edx
81007ca2:	01 d0                	add    %edx,%eax
81007ca4:	d1 f8                	sar    %eax
81007ca6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007ca9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007cac:	01 f0                	add    %esi,%eax
81007cae:	8d 50 01             	lea    0x1(%eax),%edx
81007cb1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007cb4:	39 c2                	cmp    %eax,%edx
81007cb6:	76 0b                	jbe    81007cc3 <__ssprint_r+0xb3>
81007cb8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007cbb:	01 f0                	add    %esi,%eax
81007cbd:	83 c0 01             	add    $0x1,%eax
81007cc0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007cc3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cc6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007cca:	98                   	cwtl   
81007ccb:	25 00 04 00 00       	and    $0x400,%eax
81007cd0:	85 c0                	test   %eax,%eax
81007cd2:	74 5a                	je     81007d2e <__ssprint_r+0x11e>
81007cd4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007cd7:	83 ec 08             	sub    $0x8,%esp
81007cda:	50                   	push   %eax
81007cdb:	ff 75 08             	pushl  0x8(%ebp)
81007cde:	e8 bb c4 ff ff       	call   8100419e <_malloc_r>
81007ce3:	83 c4 10             	add    $0x10,%esp
81007ce6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007ce9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007ced:	75 0e                	jne    81007cfd <__ssprint_r+0xed>
81007cef:	8b 45 08             	mov    0x8(%ebp),%eax
81007cf2:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007cf8:	e9 17 01 00 00       	jmp    81007e14 <__ssprint_r+0x204>
81007cfd:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d00:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d03:	8b 40 10             	mov    0x10(%eax),%eax
81007d06:	83 ec 04             	sub    $0x4,%esp
81007d09:	52                   	push   %edx
81007d0a:	50                   	push   %eax
81007d0b:	ff 75 e4             	pushl  -0x1c(%ebp)
81007d0e:	e8 95 cd ff ff       	call   81004aa8 <memcpy>
81007d13:	83 c4 10             	add    $0x10,%esp
81007d16:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d19:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007d1d:	66 25 7f fb          	and    $0xfb7f,%ax
81007d21:	0c 80                	or     $0x80,%al
81007d23:	89 c2                	mov    %eax,%edx
81007d25:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d28:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007d2c:	eb 45                	jmp    81007d73 <__ssprint_r+0x163>
81007d2e:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d31:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d34:	8b 40 10             	mov    0x10(%eax),%eax
81007d37:	83 ec 04             	sub    $0x4,%esp
81007d3a:	52                   	push   %edx
81007d3b:	50                   	push   %eax
81007d3c:	ff 75 08             	pushl  0x8(%ebp)
81007d3f:	e8 b6 db ff ff       	call   810058fa <_realloc_r>
81007d44:	83 c4 10             	add    $0x10,%esp
81007d47:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007d4a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007d4e:	75 23                	jne    81007d73 <__ssprint_r+0x163>
81007d50:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d53:	8b 40 10             	mov    0x10(%eax),%eax
81007d56:	83 ec 08             	sub    $0x8,%esp
81007d59:	50                   	push   %eax
81007d5a:	ff 75 08             	pushl  0x8(%ebp)
81007d5d:	e8 27 a1 ff ff       	call   81001e89 <_free_r>
81007d62:	83 c4 10             	add    $0x10,%esp
81007d65:	8b 45 08             	mov    0x8(%ebp),%eax
81007d68:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d6e:	e9 a1 00 00 00       	jmp    81007e14 <__ssprint_r+0x204>
81007d73:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d76:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007d79:	89 50 10             	mov    %edx,0x10(%eax)
81007d7c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007d82:	01 c2                	add    %eax,%edx
81007d84:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d87:	89 10                	mov    %edx,(%eax)
81007d89:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d8c:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d8f:	89 50 14             	mov    %edx,0x14(%eax)
81007d92:	89 f7                	mov    %esi,%edi
81007d94:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007d97:	2b 45 dc             	sub    -0x24(%ebp),%eax
81007d9a:	89 c2                	mov    %eax,%edx
81007d9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d9f:	89 50 08             	mov    %edx,0x8(%eax)
81007da2:	89 f8                	mov    %edi,%eax
81007da4:	39 c6                	cmp    %eax,%esi
81007da6:	73 02                	jae    81007daa <__ssprint_r+0x19a>
81007da8:	89 f7                	mov    %esi,%edi
81007daa:	89 fa                	mov    %edi,%edx
81007dac:	8b 45 0c             	mov    0xc(%ebp),%eax
81007daf:	8b 00                	mov    (%eax),%eax
81007db1:	83 ec 04             	sub    $0x4,%esp
81007db4:	52                   	push   %edx
81007db5:	ff 75 d4             	pushl  -0x2c(%ebp)
81007db8:	50                   	push   %eax
81007db9:	e8 32 cd ff ff       	call   81004af0 <memmove>
81007dbe:	83 c4 10             	add    $0x10,%esp
81007dc1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dc4:	8b 40 08             	mov    0x8(%eax),%eax
81007dc7:	29 f8                	sub    %edi,%eax
81007dc9:	89 c2                	mov    %eax,%edx
81007dcb:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dce:	89 50 08             	mov    %edx,0x8(%eax)
81007dd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dd4:	8b 00                	mov    (%eax),%eax
81007dd6:	89 fa                	mov    %edi,%edx
81007dd8:	01 c2                	add    %eax,%edx
81007dda:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ddd:	89 10                	mov    %edx,(%eax)
81007ddf:	89 f7                	mov    %esi,%edi
81007de1:	89 f8                	mov    %edi,%eax
81007de3:	01 45 d4             	add    %eax,-0x2c(%ebp)
81007de6:	89 f8                	mov    %edi,%eax
81007de8:	29 c6                	sub    %eax,%esi
81007dea:	8b 43 08             	mov    0x8(%ebx),%eax
81007ded:	89 fa                	mov    %edi,%edx
81007def:	29 d0                	sub    %edx,%eax
81007df1:	89 43 08             	mov    %eax,0x8(%ebx)
81007df4:	8b 43 08             	mov    0x8(%ebx),%eax
81007df7:	85 c0                	test   %eax,%eax
81007df9:	0f 85 57 fe ff ff    	jne    81007c56 <__ssprint_r+0x46>
81007dff:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e06:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e0d:	b8 00 00 00 00       	mov    $0x0,%eax
81007e12:	eb 26                	jmp    81007e3a <__ssprint_r+0x22a>
81007e14:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e17:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e1b:	83 c8 40             	or     $0x40,%eax
81007e1e:	89 c2                	mov    %eax,%edx
81007e20:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e23:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007e27:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e2e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007e3a:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007e3d:	5b                   	pop    %ebx
81007e3e:	5e                   	pop    %esi
81007e3f:	5f                   	pop    %edi
81007e40:	5d                   	pop    %ebp
81007e41:	c3                   	ret    

81007e42 <_svfiprintf_r>:
81007e42:	55                   	push   %ebp
81007e43:	89 e5                	mov    %esp,%ebp
81007e45:	57                   	push   %edi
81007e46:	56                   	push   %esi
81007e47:	53                   	push   %ebx
81007e48:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007e4e:	c7 45 e4 59 7a 00 81 	movl   $0x81007a59,-0x1c(%ebp)
81007e55:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e58:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e5c:	98                   	cwtl   
81007e5d:	25 80 00 00 00       	and    $0x80,%eax
81007e62:	85 c0                	test   %eax,%eax
81007e64:	74 50                	je     81007eb6 <_svfiprintf_r+0x74>
81007e66:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e69:	8b 40 10             	mov    0x10(%eax),%eax
81007e6c:	85 c0                	test   %eax,%eax
81007e6e:	75 46                	jne    81007eb6 <_svfiprintf_r+0x74>
81007e70:	83 ec 08             	sub    $0x8,%esp
81007e73:	6a 40                	push   $0x40
81007e75:	ff 75 08             	pushl  0x8(%ebp)
81007e78:	e8 21 c3 ff ff       	call   8100419e <_malloc_r>
81007e7d:	83 c4 10             	add    $0x10,%esp
81007e80:	8b 55 0c             	mov    0xc(%ebp),%edx
81007e83:	89 02                	mov    %eax,(%edx)
81007e85:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e88:	8b 10                	mov    (%eax),%edx
81007e8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e8d:	89 50 10             	mov    %edx,0x10(%eax)
81007e90:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e93:	8b 00                	mov    (%eax),%eax
81007e95:	85 c0                	test   %eax,%eax
81007e97:	75 13                	jne    81007eac <_svfiprintf_r+0x6a>
81007e99:	8b 45 08             	mov    0x8(%ebp),%eax
81007e9c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007ea2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007ea7:	e9 c8 02 00 00       	jmp    81008174 <_svfiprintf_r+0x332>
81007eac:	8b 45 0c             	mov    0xc(%ebp),%eax
81007eaf:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
81007eb6:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007eb9:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007ec0:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007ec4:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
81007ec8:	8b 45 14             	mov    0x14(%ebp),%eax
81007ecb:	89 45 80             	mov    %eax,-0x80(%ebp)
81007ece:	89 de                	mov    %ebx,%esi
81007ed0:	eb 03                	jmp    81007ed5 <_svfiprintf_r+0x93>
81007ed2:	83 c3 01             	add    $0x1,%ebx
81007ed5:	0f b6 03             	movzbl (%ebx),%eax
81007ed8:	84 c0                	test   %al,%al
81007eda:	74 07                	je     81007ee3 <_svfiprintf_r+0xa1>
81007edc:	0f b6 03             	movzbl (%ebx),%eax
81007edf:	3c 25                	cmp    $0x25,%al
81007ee1:	75 ef                	jne    81007ed2 <_svfiprintf_r+0x90>
81007ee3:	89 d8                	mov    %ebx,%eax
81007ee5:	29 f0                	sub    %esi,%eax
81007ee7:	85 c0                	test   %eax,%eax
81007ee9:	74 2b                	je     81007f16 <_svfiprintf_r+0xd4>
81007eeb:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007ef1:	50                   	push   %eax
81007ef2:	56                   	push   %esi
81007ef3:	ff 75 0c             	pushl  0xc(%ebp)
81007ef6:	ff 75 08             	pushl  0x8(%ebp)
81007ef9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007efc:	ff d0                	call   *%eax
81007efe:	83 c4 10             	add    $0x10,%esp
81007f01:	83 f8 ff             	cmp    $0xffffffff,%eax
81007f04:	0f 84 4a 02 00 00    	je     81008154 <_svfiprintf_r+0x312>
81007f0a:	8b 45 98             	mov    -0x68(%ebp),%eax
81007f0d:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007f13:	89 45 98             	mov    %eax,-0x68(%ebp)
81007f16:	0f b6 03             	movzbl (%ebx),%eax
81007f19:	84 c0                	test   %al,%al
81007f1b:	0f 84 36 02 00 00    	je     81008157 <_svfiprintf_r+0x315>
81007f21:	83 c3 01             	add    $0x1,%ebx
81007f24:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81007f2b:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007f32:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81007f39:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007f40:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007f44:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81007f4b:	c7 45 e0 4c 8c 00 81 	movl   $0x81008c4c,-0x20(%ebp)
81007f52:	eb 1b                	jmp    81007f6f <_svfiprintf_r+0x12d>
81007f54:	8b 55 84             	mov    -0x7c(%ebp),%edx
81007f57:	89 f0                	mov    %esi,%eax
81007f59:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007f5c:	be 01 00 00 00       	mov    $0x1,%esi
81007f61:	89 c1                	mov    %eax,%ecx
81007f63:	d3 e6                	shl    %cl,%esi
81007f65:	89 f0                	mov    %esi,%eax
81007f67:	09 d0                	or     %edx,%eax
81007f69:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007f6c:	83 c3 01             	add    $0x1,%ebx
81007f6f:	0f b6 03             	movzbl (%ebx),%eax
81007f72:	0f be c0             	movsbl %al,%eax
81007f75:	83 ec 04             	sub    $0x4,%esp
81007f78:	6a 05                	push   $0x5
81007f7a:	50                   	push   %eax
81007f7b:	ff 75 e0             	pushl  -0x20(%ebp)
81007f7e:	e8 3d ca ff ff       	call   810049c0 <memchr>
81007f83:	83 c4 10             	add    $0x10,%esp
81007f86:	89 c6                	mov    %eax,%esi
81007f88:	85 f6                	test   %esi,%esi
81007f8a:	75 c8                	jne    81007f54 <_svfiprintf_r+0x112>
81007f8c:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007f8f:	83 e0 10             	and    $0x10,%eax
81007f92:	85 c0                	test   %eax,%eax
81007f94:	74 04                	je     81007f9a <_svfiprintf_r+0x158>
81007f96:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
81007f9a:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007f9d:	83 e0 08             	and    $0x8,%eax
81007fa0:	85 c0                	test   %eax,%eax
81007fa2:	74 04                	je     81007fa8 <_svfiprintf_r+0x166>
81007fa4:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
81007fa8:	0f b6 03             	movzbl (%ebx),%eax
81007fab:	3c 2a                	cmp    $0x2a,%al
81007fad:	75 4a                	jne    81007ff9 <_svfiprintf_r+0x1b7>
81007faf:	8b 45 80             	mov    -0x80(%ebp),%eax
81007fb2:	8d 50 04             	lea    0x4(%eax),%edx
81007fb5:	89 55 80             	mov    %edx,-0x80(%ebp)
81007fb8:	8b 00                	mov    (%eax),%eax
81007fba:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fbd:	8b 45 90             	mov    -0x70(%ebp),%eax
81007fc0:	85 c0                	test   %eax,%eax
81007fc2:	79 11                	jns    81007fd5 <_svfiprintf_r+0x193>
81007fc4:	8b 45 90             	mov    -0x70(%ebp),%eax
81007fc7:	f7 d8                	neg    %eax
81007fc9:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fcc:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fcf:	83 c8 02             	or     $0x2,%eax
81007fd2:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007fd5:	83 c3 01             	add    $0x1,%ebx
81007fd8:	eb 2d                	jmp    81008007 <_svfiprintf_r+0x1c5>
81007fda:	8b 55 90             	mov    -0x70(%ebp),%edx
81007fdd:	89 d0                	mov    %edx,%eax
81007fdf:	c1 e0 02             	shl    $0x2,%eax
81007fe2:	01 d0                	add    %edx,%eax
81007fe4:	01 c0                	add    %eax,%eax
81007fe6:	89 c2                	mov    %eax,%edx
81007fe8:	0f b6 03             	movzbl (%ebx),%eax
81007feb:	0f be c0             	movsbl %al,%eax
81007fee:	83 e8 30             	sub    $0x30,%eax
81007ff1:	01 d0                	add    %edx,%eax
81007ff3:	89 45 90             	mov    %eax,-0x70(%ebp)
81007ff6:	83 c3 01             	add    $0x1,%ebx
81007ff9:	0f b6 03             	movzbl (%ebx),%eax
81007ffc:	0f be c0             	movsbl %al,%eax
81007fff:	83 e8 30             	sub    $0x30,%eax
81008002:	83 f8 09             	cmp    $0x9,%eax
81008005:	76 d3                	jbe    81007fda <_svfiprintf_r+0x198>
81008007:	0f b6 03             	movzbl (%ebx),%eax
8100800a:	3c 2e                	cmp    $0x2e,%al
8100800c:	75 61                	jne    8100806f <_svfiprintf_r+0x22d>
8100800e:	83 c3 01             	add    $0x1,%ebx
81008011:	0f b6 03             	movzbl (%ebx),%eax
81008014:	3c 2a                	cmp    $0x2a,%al
81008016:	75 21                	jne    81008039 <_svfiprintf_r+0x1f7>
81008018:	83 c3 01             	add    $0x1,%ebx
8100801b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100801e:	8d 50 04             	lea    0x4(%eax),%edx
81008021:	89 55 80             	mov    %edx,-0x80(%ebp)
81008024:	8b 00                	mov    (%eax),%eax
81008026:	89 45 88             	mov    %eax,-0x78(%ebp)
81008029:	8b 45 88             	mov    -0x78(%ebp),%eax
8100802c:	85 c0                	test   %eax,%eax
8100802e:	79 3f                	jns    8100806f <_svfiprintf_r+0x22d>
81008030:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81008037:	eb 36                	jmp    8100806f <_svfiprintf_r+0x22d>
81008039:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81008040:	eb 1f                	jmp    81008061 <_svfiprintf_r+0x21f>
81008042:	8b 55 88             	mov    -0x78(%ebp),%edx
81008045:	89 d0                	mov    %edx,%eax
81008047:	c1 e0 02             	shl    $0x2,%eax
8100804a:	01 d0                	add    %edx,%eax
8100804c:	01 c0                	add    %eax,%eax
8100804e:	89 c2                	mov    %eax,%edx
81008050:	0f b6 03             	movzbl (%ebx),%eax
81008053:	0f be c0             	movsbl %al,%eax
81008056:	83 e8 30             	sub    $0x30,%eax
81008059:	01 d0                	add    %edx,%eax
8100805b:	89 45 88             	mov    %eax,-0x78(%ebp)
8100805e:	83 c3 01             	add    $0x1,%ebx
81008061:	0f b6 03             	movzbl (%ebx),%eax
81008064:	0f be c0             	movsbl %al,%eax
81008067:	83 e8 30             	sub    $0x30,%eax
8100806a:	83 f8 09             	cmp    $0x9,%eax
8100806d:	76 d3                	jbe    81008042 <_svfiprintf_r+0x200>
8100806f:	c7 45 e0 52 8c 00 81 	movl   $0x81008c52,-0x20(%ebp)
81008076:	0f b6 03             	movzbl (%ebx),%eax
81008079:	0f be c0             	movsbl %al,%eax
8100807c:	83 ec 04             	sub    $0x4,%esp
8100807f:	6a 03                	push   $0x3
81008081:	50                   	push   %eax
81008082:	ff 75 e0             	pushl  -0x20(%ebp)
81008085:	e8 36 c9 ff ff       	call   810049c0 <memchr>
8100808a:	83 c4 10             	add    $0x10,%esp
8100808d:	89 c6                	mov    %eax,%esi
8100808f:	85 f6                	test   %esi,%esi
81008091:	74 1b                	je     810080ae <_svfiprintf_r+0x26c>
81008093:	8b 55 84             	mov    -0x7c(%ebp),%edx
81008096:	89 f0                	mov    %esi,%eax
81008098:	2b 45 e0             	sub    -0x20(%ebp),%eax
8100809b:	be 40 00 00 00       	mov    $0x40,%esi
810080a0:	89 c1                	mov    %eax,%ecx
810080a2:	d3 e6                	shl    %cl,%esi
810080a4:	89 f0                	mov    %esi,%eax
810080a6:	09 d0                	or     %edx,%eax
810080a8:	89 45 84             	mov    %eax,-0x7c(%ebp)
810080ab:	83 c3 01             	add    $0x1,%ebx
810080ae:	89 d8                	mov    %ebx,%eax
810080b0:	8d 58 01             	lea    0x1(%eax),%ebx
810080b3:	0f b6 00             	movzbl (%eax),%eax
810080b6:	88 45 9c             	mov    %al,-0x64(%ebp)
810080b9:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
810080bd:	0f be c0             	movsbl %al,%eax
810080c0:	83 ec 04             	sub    $0x4,%esp
810080c3:	6a 06                	push   $0x6
810080c5:	50                   	push   %eax
810080c6:	68 56 8c 00 81       	push   $0x81008c56
810080cb:	e8 f0 c8 ff ff       	call   810049c0 <memchr>
810080d0:	83 c4 10             	add    $0x10,%esp
810080d3:	89 c6                	mov    %eax,%esi
810080d5:	85 f6                	test   %esi,%esi
810080d7:	74 4b                	je     81008124 <_svfiprintf_r+0x2e2>
810080d9:	b8 00 00 00 00       	mov    $0x0,%eax
810080de:	85 c0                	test   %eax,%eax
810080e0:	75 22                	jne    81008104 <_svfiprintf_r+0x2c2>
810080e2:	8b 45 84             	mov    -0x7c(%ebp),%eax
810080e5:	25 00 01 00 00       	and    $0x100,%eax
810080ea:	85 c0                	test   %eax,%eax
810080ec:	74 0b                	je     810080f9 <_svfiprintf_r+0x2b7>
810080ee:	8b 45 80             	mov    -0x80(%ebp),%eax
810080f1:	83 c0 0c             	add    $0xc,%eax
810080f4:	89 45 80             	mov    %eax,-0x80(%ebp)
810080f7:	eb 49                	jmp    81008142 <_svfiprintf_r+0x300>
810080f9:	8b 45 80             	mov    -0x80(%ebp),%eax
810080fc:	83 c0 08             	add    $0x8,%eax
810080ff:	89 45 80             	mov    %eax,-0x80(%ebp)
81008102:	eb 3e                	jmp    81008142 <_svfiprintf_r+0x300>
81008104:	83 ec 0c             	sub    $0xc,%esp
81008107:	8d 45 80             	lea    -0x80(%ebp),%eax
8100810a:	50                   	push   %eax
8100810b:	ff 75 e4             	pushl  -0x1c(%ebp)
8100810e:	ff 75 0c             	pushl  0xc(%ebp)
81008111:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008114:	50                   	push   %eax
81008115:	ff 75 08             	pushl  0x8(%ebp)
81008118:	e8 e3 7e ff 7e       	call   0 <show_promot-0x81000000>
8100811d:	83 c4 20             	add    $0x20,%esp
81008120:	89 c7                	mov    %eax,%edi
81008122:	eb 1e                	jmp    81008142 <_svfiprintf_r+0x300>
81008124:	83 ec 0c             	sub    $0xc,%esp
81008127:	8d 45 80             	lea    -0x80(%ebp),%eax
8100812a:	50                   	push   %eax
8100812b:	ff 75 e4             	pushl  -0x1c(%ebp)
8100812e:	ff 75 0c             	pushl  0xc(%ebp)
81008131:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008134:	50                   	push   %eax
81008135:	ff 75 08             	pushl  0x8(%ebp)
81008138:	e8 d4 d1 ff ff       	call   81005311 <_printf_i>
8100813d:	83 c4 20             	add    $0x20,%esp
81008140:	89 c7                	mov    %eax,%edi
81008142:	83 ff ff             	cmp    $0xffffffff,%edi
81008145:	74 13                	je     8100815a <_svfiprintf_r+0x318>
81008147:	8b 45 98             	mov    -0x68(%ebp),%eax
8100814a:	01 f8                	add    %edi,%eax
8100814c:	89 45 98             	mov    %eax,-0x68(%ebp)
8100814f:	e9 7a fd ff ff       	jmp    81007ece <_svfiprintf_r+0x8c>
81008154:	90                   	nop
81008155:	eb 04                	jmp    8100815b <_svfiprintf_r+0x319>
81008157:	90                   	nop
81008158:	eb 01                	jmp    8100815b <_svfiprintf_r+0x319>
8100815a:	90                   	nop
8100815b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100815e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81008162:	98                   	cwtl   
81008163:	83 e0 40             	and    $0x40,%eax
81008166:	85 c0                	test   %eax,%eax
81008168:	75 05                	jne    8100816f <_svfiprintf_r+0x32d>
8100816a:	8b 45 98             	mov    -0x68(%ebp),%eax
8100816d:	eb 05                	jmp    81008174 <_svfiprintf_r+0x332>
8100816f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008174:	8d 65 f4             	lea    -0xc(%ebp),%esp
81008177:	5b                   	pop    %ebx
81008178:	5e                   	pop    %esi
81008179:	5f                   	pop    %edi
8100817a:	5d                   	pop    %ebp
8100817b:	c3                   	ret    

8100817c <__sputc_r>:
8100817c:	55                   	push   %ebp
8100817d:	89 e5                	mov    %esp,%ebp
8100817f:	83 ec 08             	sub    $0x8,%esp
81008182:	8b 45 10             	mov    0x10(%ebp),%eax
81008185:	8b 40 08             	mov    0x8(%eax),%eax
81008188:	8d 50 ff             	lea    -0x1(%eax),%edx
8100818b:	8b 45 10             	mov    0x10(%ebp),%eax
8100818e:	89 50 08             	mov    %edx,0x8(%eax)
81008191:	8b 45 10             	mov    0x10(%ebp),%eax
81008194:	8b 40 08             	mov    0x8(%eax),%eax
81008197:	85 c0                	test   %eax,%eax
81008199:	79 17                	jns    810081b2 <__sputc_r+0x36>
8100819b:	8b 45 10             	mov    0x10(%ebp),%eax
8100819e:	8b 50 08             	mov    0x8(%eax),%edx
810081a1:	8b 45 10             	mov    0x10(%ebp),%eax
810081a4:	8b 40 18             	mov    0x18(%eax),%eax
810081a7:	39 c2                	cmp    %eax,%edx
810081a9:	7c 21                	jl     810081cc <__sputc_r+0x50>
810081ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810081ae:	3c 0a                	cmp    $0xa,%al
810081b0:	74 1a                	je     810081cc <__sputc_r+0x50>
810081b2:	8b 45 10             	mov    0x10(%ebp),%eax
810081b5:	8b 00                	mov    (%eax),%eax
810081b7:	8d 48 01             	lea    0x1(%eax),%ecx
810081ba:	8b 55 10             	mov    0x10(%ebp),%edx
810081bd:	89 0a                	mov    %ecx,(%edx)
810081bf:	8b 55 0c             	mov    0xc(%ebp),%edx
810081c2:	88 10                	mov    %dl,(%eax)
810081c4:	0f b6 00             	movzbl (%eax),%eax
810081c7:	0f b6 c0             	movzbl %al,%eax
810081ca:	eb 14                	jmp    810081e0 <__sputc_r+0x64>
810081cc:	83 ec 04             	sub    $0x4,%esp
810081cf:	ff 75 10             	pushl  0x10(%ebp)
810081d2:	ff 75 0c             	pushl  0xc(%ebp)
810081d5:	ff 75 08             	pushl  0x8(%ebp)
810081d8:	e8 3a ee ff ff       	call   81007017 <__swbuf_r>
810081dd:	83 c4 10             	add    $0x10,%esp
810081e0:	c9                   	leave  
810081e1:	c3                   	ret    

810081e2 <_putc_r>:
810081e2:	55                   	push   %ebp
810081e3:	89 e5                	mov    %esp,%ebp
810081e5:	53                   	push   %ebx
810081e6:	83 ec 14             	sub    $0x14,%esp
810081e9:	8b 5d 10             	mov    0x10(%ebp),%ebx
810081ec:	8b 45 08             	mov    0x8(%ebp),%eax
810081ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810081f2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810081f6:	74 18                	je     81008210 <_putc_r+0x2e>
810081f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081fb:	8b 40 38             	mov    0x38(%eax),%eax
810081fe:	85 c0                	test   %eax,%eax
81008200:	75 0e                	jne    81008210 <_putc_r+0x2e>
81008202:	83 ec 0c             	sub    $0xc,%esp
81008205:	ff 75 f4             	pushl  -0xc(%ebp)
81008208:	e8 c7 96 ff ff       	call   810018d4 <__sinit>
8100820d:	83 c4 10             	add    $0x10,%esp
81008210:	83 ec 04             	sub    $0x4,%esp
81008213:	53                   	push   %ebx
81008214:	ff 75 0c             	pushl  0xc(%ebp)
81008217:	ff 75 08             	pushl  0x8(%ebp)
8100821a:	e8 5d ff ff ff       	call   8100817c <__sputc_r>
8100821f:	83 c4 10             	add    $0x10,%esp
81008222:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008225:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008228:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100822b:	c9                   	leave  
8100822c:	c3                   	ret    

8100822d <putc>:
8100822d:	55                   	push   %ebp
8100822e:	89 e5                	mov    %esp,%ebp
81008230:	53                   	push   %ebx
81008231:	83 ec 14             	sub    $0x14,%esp
81008234:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81008237:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100823c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100823f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008242:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008245:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81008249:	74 18                	je     81008263 <putc+0x36>
8100824b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100824e:	8b 40 38             	mov    0x38(%eax),%eax
81008251:	85 c0                	test   %eax,%eax
81008253:	75 0e                	jne    81008263 <putc+0x36>
81008255:	83 ec 0c             	sub    $0xc,%esp
81008258:	ff 75 f0             	pushl  -0x10(%ebp)
8100825b:	e8 74 96 ff ff       	call   810018d4 <__sinit>
81008260:	83 c4 10             	add    $0x10,%esp
81008263:	83 ec 04             	sub    $0x4,%esp
81008266:	53                   	push   %ebx
81008267:	ff 75 08             	pushl  0x8(%ebp)
8100826a:	ff 75 f4             	pushl  -0xc(%ebp)
8100826d:	e8 0a ff ff ff       	call   8100817c <__sputc_r>
81008272:	83 c4 10             	add    $0x10,%esp
81008275:	89 45 ec             	mov    %eax,-0x14(%ebp)
81008278:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100827b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100827e:	c9                   	leave  
8100827f:	c3                   	ret    

81008280 <_read_r>:
81008280:	55                   	push   %ebp
81008281:	89 e5                	mov    %esp,%ebp
81008283:	83 ec 18             	sub    $0x18,%esp
81008286:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100828d:	00 00 00 
81008290:	83 ec 04             	sub    $0x4,%esp
81008293:	ff 75 14             	pushl  0x14(%ebp)
81008296:	ff 75 10             	pushl  0x10(%ebp)
81008299:	ff 75 0c             	pushl  0xc(%ebp)
8100829c:	e8 dd 89 ff ff       	call   81000c7e <read>
810082a1:	83 c4 10             	add    $0x10,%esp
810082a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810082a7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810082ab:	75 14                	jne    810082c1 <_read_r+0x41>
810082ad:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
810082b2:	85 c0                	test   %eax,%eax
810082b4:	74 0b                	je     810082c1 <_read_r+0x41>
810082b6:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810082bc:	8b 45 08             	mov    0x8(%ebp),%eax
810082bf:	89 10                	mov    %edx,(%eax)
810082c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810082c4:	c9                   	leave  
810082c5:	c3                   	ret    

810082c6 <strncmp>:
810082c6:	55                   	push   %ebp
810082c7:	89 e5                	mov    %esp,%ebp
810082c9:	83 ec 10             	sub    $0x10,%esp
810082cc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082d0:	75 0a                	jne    810082dc <strncmp+0x16>
810082d2:	b8 00 00 00 00       	mov    $0x0,%eax
810082d7:	e9 cb 00 00 00       	jmp    810083a7 <strncmp+0xe1>
810082dc:	8b 55 08             	mov    0x8(%ebp),%edx
810082df:	8b 45 0c             	mov    0xc(%ebp),%eax
810082e2:	09 d0                	or     %edx,%eax
810082e4:	83 e0 03             	and    $0x3,%eax
810082e7:	85 c0                	test   %eax,%eax
810082e9:	0f 85 85 00 00 00    	jne    81008374 <strncmp+0xae>
810082ef:	8b 45 08             	mov    0x8(%ebp),%eax
810082f2:	89 45 fc             	mov    %eax,-0x4(%ebp)
810082f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810082f8:	89 45 f8             	mov    %eax,-0x8(%ebp)
810082fb:	eb 36                	jmp    81008333 <strncmp+0x6d>
810082fd:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81008301:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008305:	74 1d                	je     81008324 <strncmp+0x5e>
81008307:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100830a:	8b 00                	mov    (%eax),%eax
8100830c:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008312:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008315:	8b 00                	mov    (%eax),%eax
81008317:	f7 d0                	not    %eax
81008319:	21 d0                	and    %edx,%eax
8100831b:	25 80 80 80 80       	and    $0x80808080,%eax
81008320:	85 c0                	test   %eax,%eax
81008322:	74 07                	je     8100832b <strncmp+0x65>
81008324:	b8 00 00 00 00       	mov    $0x0,%eax
81008329:	eb 7c                	jmp    810083a7 <strncmp+0xe1>
8100832b:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100832f:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008333:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008337:	76 0e                	jbe    81008347 <strncmp+0x81>
81008339:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100833c:	8b 10                	mov    (%eax),%edx
8100833e:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008341:	8b 00                	mov    (%eax),%eax
81008343:	39 c2                	cmp    %eax,%edx
81008345:	74 b6                	je     810082fd <strncmp+0x37>
81008347:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100834a:	89 45 08             	mov    %eax,0x8(%ebp)
8100834d:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008350:	89 45 0c             	mov    %eax,0xc(%ebp)
81008353:	eb 1f                	jmp    81008374 <strncmp+0xae>
81008355:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008359:	74 0a                	je     81008365 <strncmp+0x9f>
8100835b:	8b 45 08             	mov    0x8(%ebp),%eax
8100835e:	0f b6 00             	movzbl (%eax),%eax
81008361:	84 c0                	test   %al,%al
81008363:	75 07                	jne    8100836c <strncmp+0xa6>
81008365:	b8 00 00 00 00       	mov    $0x0,%eax
8100836a:	eb 3b                	jmp    810083a7 <strncmp+0xe1>
8100836c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81008370:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81008374:	8b 45 10             	mov    0x10(%ebp),%eax
81008377:	8d 50 ff             	lea    -0x1(%eax),%edx
8100837a:	89 55 10             	mov    %edx,0x10(%ebp)
8100837d:	85 c0                	test   %eax,%eax
8100837f:	74 10                	je     81008391 <strncmp+0xcb>
81008381:	8b 45 08             	mov    0x8(%ebp),%eax
81008384:	0f b6 10             	movzbl (%eax),%edx
81008387:	8b 45 0c             	mov    0xc(%ebp),%eax
8100838a:	0f b6 00             	movzbl (%eax),%eax
8100838d:	38 c2                	cmp    %al,%dl
8100838f:	74 c4                	je     81008355 <strncmp+0x8f>
81008391:	8b 45 08             	mov    0x8(%ebp),%eax
81008394:	0f b6 00             	movzbl (%eax),%eax
81008397:	0f b6 d0             	movzbl %al,%edx
8100839a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100839d:	0f b6 00             	movzbl (%eax),%eax
810083a0:	0f b6 c8             	movzbl %al,%ecx
810083a3:	89 d0                	mov    %edx,%eax
810083a5:	29 c8                	sub    %ecx,%eax
810083a7:	c9                   	leave  
810083a8:	c3                   	ret    

810083a9 <__get_global_locale>:
810083a9:	55                   	push   %ebp
810083aa:	89 e5                	mov    %esp,%ebp
810083ac:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810083b1:	5d                   	pop    %ebp
810083b2:	c3                   	ret    

810083b3 <__get_current_locale>:
810083b3:	55                   	push   %ebp
810083b4:	89 e5                	mov    %esp,%ebp
810083b6:	e8 ee ff ff ff       	call   810083a9 <__get_global_locale>
810083bb:	5d                   	pop    %ebp
810083bc:	c3                   	ret    

810083bd <_wcrtomb_r>:
810083bd:	55                   	push   %ebp
810083be:	89 e5                	mov    %esp,%ebp
810083c0:	83 ec 18             	sub    $0x18,%esp
810083c3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810083ca:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810083ce:	75 21                	jne    810083f1 <_wcrtomb_r+0x34>
810083d0:	e8 de ff ff ff       	call   810083b3 <__get_current_locale>
810083d5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083db:	ff 75 14             	pushl  0x14(%ebp)
810083de:	6a 00                	push   $0x0
810083e0:	8d 55 ea             	lea    -0x16(%ebp),%edx
810083e3:	52                   	push   %edx
810083e4:	ff 75 08             	pushl  0x8(%ebp)
810083e7:	ff d0                	call   *%eax
810083e9:	83 c4 10             	add    $0x10,%esp
810083ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083ef:	eb 1f                	jmp    81008410 <_wcrtomb_r+0x53>
810083f1:	e8 bd ff ff ff       	call   810083b3 <__get_current_locale>
810083f6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083fc:	ff 75 14             	pushl  0x14(%ebp)
810083ff:	ff 75 10             	pushl  0x10(%ebp)
81008402:	ff 75 0c             	pushl  0xc(%ebp)
81008405:	ff 75 08             	pushl  0x8(%ebp)
81008408:	ff d0                	call   *%eax
8100840a:	83 c4 10             	add    $0x10,%esp
8100840d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008410:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008414:	75 19                	jne    8100842f <_wcrtomb_r+0x72>
81008416:	8b 45 14             	mov    0x14(%ebp),%eax
81008419:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100841f:	8b 45 08             	mov    0x8(%ebp),%eax
81008422:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008428:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100842d:	eb 03                	jmp    81008432 <_wcrtomb_r+0x75>
8100842f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008432:	c9                   	leave  
81008433:	c3                   	ret    

81008434 <wcrtomb>:
81008434:	55                   	push   %ebp
81008435:	89 e5                	mov    %esp,%ebp
81008437:	83 ec 28             	sub    $0x28,%esp
8100843a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81008441:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81008446:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008449:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100844d:	75 21                	jne    81008470 <wcrtomb+0x3c>
8100844f:	e8 5f ff ff ff       	call   810083b3 <__get_current_locale>
81008454:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100845a:	ff 75 10             	pushl  0x10(%ebp)
8100845d:	6a 00                	push   $0x0
8100845f:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008462:	52                   	push   %edx
81008463:	ff 75 f0             	pushl  -0x10(%ebp)
81008466:	ff d0                	call   *%eax
81008468:	83 c4 10             	add    $0x10,%esp
8100846b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100846e:	eb 1f                	jmp    8100848f <wcrtomb+0x5b>
81008470:	e8 3e ff ff ff       	call   810083b3 <__get_current_locale>
81008475:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100847b:	ff 75 10             	pushl  0x10(%ebp)
8100847e:	ff 75 0c             	pushl  0xc(%ebp)
81008481:	ff 75 08             	pushl  0x8(%ebp)
81008484:	ff 75 f0             	pushl  -0x10(%ebp)
81008487:	ff d0                	call   *%eax
81008489:	83 c4 10             	add    $0x10,%esp
8100848c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100848f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008493:	75 19                	jne    810084ae <wcrtomb+0x7a>
81008495:	8b 45 10             	mov    0x10(%ebp),%eax
81008498:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100849e:	8b 45 f0             	mov    -0x10(%ebp),%eax
810084a1:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810084a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810084ac:	eb 03                	jmp    810084b1 <wcrtomb+0x7d>
810084ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810084b1:	c9                   	leave  
810084b2:	c3                   	ret    

810084b3 <__get_global_locale>:
810084b3:	55                   	push   %ebp
810084b4:	89 e5                	mov    %esp,%ebp
810084b6:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810084bb:	5d                   	pop    %ebp
810084bc:	c3                   	ret    

810084bd <__get_current_locale>:
810084bd:	55                   	push   %ebp
810084be:	89 e5                	mov    %esp,%ebp
810084c0:	e8 ee ff ff ff       	call   810084b3 <__get_global_locale>
810084c5:	5d                   	pop    %ebp
810084c6:	c3                   	ret    

810084c7 <_wctomb_r>:
810084c7:	55                   	push   %ebp
810084c8:	89 e5                	mov    %esp,%ebp
810084ca:	83 ec 08             	sub    $0x8,%esp
810084cd:	e8 eb ff ff ff       	call   810084bd <__get_current_locale>
810084d2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810084d8:	ff 75 14             	pushl  0x14(%ebp)
810084db:	ff 75 10             	pushl  0x10(%ebp)
810084de:	ff 75 0c             	pushl  0xc(%ebp)
810084e1:	ff 75 08             	pushl  0x8(%ebp)
810084e4:	ff d0                	call   *%eax
810084e6:	83 c4 10             	add    $0x10,%esp
810084e9:	c9                   	leave  
810084ea:	c3                   	ret    

810084eb <__ascii_wctomb>:
810084eb:	55                   	push   %ebp
810084ec:	89 e5                	mov    %esp,%ebp
810084ee:	83 ec 10             	sub    $0x10,%esp
810084f1:	8b 45 10             	mov    0x10(%ebp),%eax
810084f4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810084f7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810084fb:	75 07                	jne    81008504 <__ascii_wctomb+0x19>
810084fd:	b8 00 00 00 00       	mov    $0x0,%eax
81008502:	eb 28                	jmp    8100852c <__ascii_wctomb+0x41>
81008504:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8100850b:	76 10                	jbe    8100851d <__ascii_wctomb+0x32>
8100850d:	8b 45 08             	mov    0x8(%ebp),%eax
81008510:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008516:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100851b:	eb 0f                	jmp    8100852c <__ascii_wctomb+0x41>
8100851d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008520:	89 c2                	mov    %eax,%edx
81008522:	8b 45 0c             	mov    0xc(%ebp),%eax
81008525:	88 10                	mov    %dl,(%eax)
81008527:	b8 01 00 00 00       	mov    $0x1,%eax
8100852c:	c9                   	leave  
8100852d:	c3                   	ret    

8100852e <__env_lock>:
8100852e:	55                   	push   %ebp
8100852f:	89 e5                	mov    %esp,%ebp
81008531:	90                   	nop
81008532:	5d                   	pop    %ebp
81008533:	c3                   	ret    

81008534 <__env_unlock>:
81008534:	55                   	push   %ebp
81008535:	89 e5                	mov    %esp,%ebp
81008537:	90                   	nop
81008538:	5d                   	pop    %ebp
81008539:	c3                   	ret    
