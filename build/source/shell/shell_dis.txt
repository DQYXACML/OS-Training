
C:/diy-x86os-master/start/start/build/source/shell/shell.elf:     file format elf32-i386
C:/diy-x86os-master/start/start/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000072

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00004010 memsz 0x000041a0 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000379f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000001a  810037a0  810037a0  000047a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  810037c0  810037c0  000047c0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000180  81004020  81004020  00005010  2**5
                  ALLOC
  4 .debug_info   00011fa7  00000000  00000000  00005010  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00003fbe  00000000  00000000  00016fb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000438  00000000  00000000  0001af78  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000028ac  00000000  00000000  0001b3b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000ea2  00000000  00000000  0001dc5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000023  00000000  00000000  0001eafe  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00000c00  00000000  00000000  0001eb24  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line_str 0000081b  00000000  00000000  0001f724  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_rnglists 00000022  00000000  00000000  0001ff3f  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
810037a0 l    d  .rodata	00000000 .rodata
810037c0 l    d  .data	00000000 .data
81004020 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
810000ba l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 gets.c
00000000 l    df *ABS*	00000000 impure.c
810037c0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810005a6 l       .text	00000000 L5
810005de l       .text	00000000 L15
810005b0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005e9 l     F .text	000000ad std
81000696 l     F .text	0000001b stdin_init
810006b1 l     F .text	0000001b stdout_init
810006cc l     F .text	0000001b stderr_init
81004020 l     O .bss	00000004 __sfp_recursive_mutex
81004024 l     O .bss	00000004 __sinit_recursive_mutex
8100098f l     F .text	0000000a __fp_lock
81000999 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 mallocr.c
81000f5c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001aad l       .text	00000000 L20
81001a64 l       .text	00000000 L5
81001aaa l       .text	00000000 L15
81001a70 l       .text	00000000 L8
81001a91 l       .text	00000000 L9
81001aa0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81004088 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
810024fb l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100375f g     F .text	00000040 _isatty_r
81003585 g     F .text	00000037 cleanup_glue
810003f5 g     F .text	000000d6 _puts_r
81003379 g     F .text	00000046 _lseek_r
810001bb g     F .text	0000001b yield
81002812 g     F .text	0000004a __sseek
810008de g     F .text	00000099 __sinit
810006e7 g     F .text	0000006f __sfmoreglue
81001c1b g     F .text	00000006 __malloc_unlock
81001b00 g       .text	00000000 memmove
810008c4 g     F .text	0000001a _cleanup
8100371c g     F .text	00000043 _fstat_r
8100408c g     O .bss	00000004 errno
8100054a g     F .text	0000001d __srget
810027ad g     F .text	0000000a __seofread
810003d9 g     F .text	0000001c gets
8100018e g     F .text	0000002d execve
81000130 g     F .text	0000001b getpid
81001ab8 g       .text	00000000 memcpy
810008a3 g     F .text	00000021 _cleanup_r
810004cb g     F .text	0000001c puts
810002cc g     F .text	00000021 isatty
81004040 g     O .bss	00000004 __malloc_top_pad
81004020 g       .bss	00000000 __bss_start__
810009eb g     F .text	0000049e __sfvwrite_r
81002729 g     F .text	00000040 _sbrk_r
8100353f g     F .text	00000046 _read_r
81002a62 g     F .text	00000107 _fclose_r
81002e04 g     F .text	00000039 fflush
81004044 g     O .bss	00000004 __malloc_max_sbrked_mem
81000278 g     F .text	0000002d lseek
810037b4 g     O .rodata	00000004 _global_impure_ptr
81001c21 g     F .text	000008da _realloc_r
810009a3 g     F .text	00000024 __fp_lock_all
810035bc g     F .text	00000160 _reclaim_reent
8100022a g     F .text	0000002d write
810002a5 g     F .text	00000027 fstat
81000977 g     F .text	00000006 __sfp_lock_acquire
81001a20 g       .text	00000000 memchr
81004090 g       .bss	00000000 __bss_end__
81002e3d g     F .text	000003db _free_r
810004e7 g     F .text	00000063 __srget_r
8100400c g     O .data	00000004 __malloc_sbrk_base
81000072 g       .text	00000000 _start
8100032f g     F .text	000000aa _gets_r
810001fd g     F .text	0000002d read
81004060 g     O .bss	00000028 __malloc_current_mallinfo
81002a22 g     F .text	00000040 _close_r
81000173 g     F .text	0000001b fork
810028c7 g     F .text	0000015b __swsetup_r
81000756 g     F .text	0000014d __sfp
81003c00 g     O .data	00000408 __malloc_av_
81000989 g     F .text	00000006 __sinit_lock_release
81002769 g     F .text	00000044 __sread
81001c15 g     F .text	00000006 __malloc_lock
810002ed g     F .text	00000021 sbrk
81002dac g     F .text	00000058 _fflush_r
81000082 g     F .text	00000038 cstart
81001b8d g       .text	00000000 memset
81000000 g     F .text	00000072 main
81004048 g     O .bss	00000004 __malloc_max_total_mem
8100285c g     F .text	00000025 __sclose
81002b69 g     F .text	0000001d fclose
810011ef g     F .text	00000822 _malloc_r
810040a0 g     O .bss	00000100 cmd_buf
81000e89 g     F .text	00000068 _fwalk
81003218 g     F .text	00000161 _malloc_trim_r
8100030e g     F .text	00000021 dup
81002881 g     F .text	00000046 _write_r
81003be4 g     O .data	00000004 _impure_ptr
81002b86 g     F .text	00000226 __sflush_r
81002528 g     F .text	00000201 __srefill_r
810009c7 g     F .text	00000024 __fp_unlock_all
8100014b g     F .text	00000028 print_msg
810034ac g     F .text	00000093 __swhatbuf_r
810027b7 g     F .text	0000005b __swrite
81004008 g     O .data	00000004 __malloc_trim_threshold
81000ef1 g     F .text	0000006b _fwalk_reent
8100097d g     F .text	00000006 __sfp_lock_release
810033bf g     F .text	000000ed __smakebuf_r
81000570 g       .text	00000000 strlen
810001d6 g     F .text	00000027 open
81000106 g     F .text	0000002a msleep
81000257 g     F .text	00000021 close
81000983 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
#include "lib_syscall.h"
#include <stdio.h>

char cmd_buf[256];
int main(int argc, char **argv)
{
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	pushl  -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	51                   	push   %ecx
8100000e:	83 ec 04             	sub    $0x4,%esp
81000011:	89 c8                	mov    %ecx,%eax
    printf("\033[20;20H test!\n");
    printf("\033[32;25;39m123\n");

    printf("\033[2J");
#endif
    open(argv[0], 0); // int fd=0;
81000013:	8b 40 04             	mov    0x4(%eax),%eax
81000016:	8b 00                	mov    (%eax),%eax
81000018:	83 ec 08             	sub    $0x8,%esp
8100001b:	6a 00                	push   $0x0
8100001d:	50                   	push   %eax
8100001e:	e8 b3 01 00 00       	call   810001d6 <open>
81000023:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000026:	83 ec 0c             	sub    $0xc,%esp
81000029:	6a 00                	push   $0x0
8100002b:	e8 de 02 00 00       	call   8100030e <dup>
81000030:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000033:	83 ec 0c             	sub    $0xc,%esp
81000036:	6a 00                	push   $0x0
81000038:	e8 d1 02 00 00       	call   8100030e <dup>
8100003d:	83 c4 10             	add    $0x10,%esp
    // open("tty:0", 0); // int fd=1;
    // open("tty:0", 0); // int fd=2;
    printf("Hello from shell\n");
81000040:	83 ec 0c             	sub    $0xc,%esp
81000043:	68 a0 37 00 81       	push   $0x810037a0
81000048:	e8 7e 04 00 00       	call   810004cb <puts>
8100004d:	83 c4 10             	add    $0x10,%esp
    // fork();
    // yield();

    for (;;)
    {
        gets(cmd_buf);
81000050:	83 ec 0c             	sub    $0xc,%esp
81000053:	68 a0 40 00 81       	push   $0x810040a0
81000058:	e8 7c 03 00 00       	call   810003d9 <gets>
8100005d:	83 c4 10             	add    $0x10,%esp
        puts(cmd_buf);
81000060:	83 ec 0c             	sub    $0xc,%esp
81000063:	68 a0 40 00 81       	push   $0x810040a0
81000068:	e8 5e 04 00 00       	call   810004cb <puts>
8100006d:	83 c4 10             	add    $0x10,%esp
        gets(cmd_buf);
81000070:	eb de                	jmp    81000050 <main+0x50>

81000072 <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
81000072:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
81000075:	8e d8                	mov    %eax,%ds
    mov %ax, %es
81000077:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000079:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
8100007b:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
8100007d:	e9 00 00 00 00       	jmp    81000082 <cstart>

81000082 <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];
/**
 * @brief 应用的初始化，C部分
 */
void cstart(int argc, char **argv)
{
81000082:	55                   	push   %ebp
81000083:	89 e5                	mov    %esp,%ebp
81000085:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t *start = __bss_start__;
81000088:	c7 45 f4 20 40 00 81 	movl   $0x81004020,-0xc(%ebp)
    while (start < __bss_end__)
8100008f:	eb 0c                	jmp    8100009d <cstart+0x1b>
    {
        *start++ = 0;
81000091:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000094:	8d 50 01             	lea    0x1(%eax),%edx
81000097:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100009a:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__)
8100009d:	81 7d f4 90 40 00 81 	cmpl   $0x81004090,-0xc(%ebp)
810000a4:	72 eb                	jb     81000091 <cstart+0xf>
    }
    main(argc, argv);
810000a6:	83 ec 08             	sub    $0x8,%esp
810000a9:	ff 75 0c             	pushl  0xc(%ebp)
810000ac:	ff 75 08             	pushl  0x8(%ebp)
810000af:	e8 4c ff ff ff       	call   81000000 <main>
810000b4:	83 c4 10             	add    $0x10,%esp
810000b7:	90                   	nop
810000b8:	c9                   	leave  
810000b9:	c3                   	ret    

810000ba <sys_call>:

/**
 * 执行系统调用
 */
static inline int sys_call(syscall_args_t *args)
{
810000ba:	55                   	push   %ebp
810000bb:	89 e5                	mov    %esp,%ebp
810000bd:	57                   	push   %edi
810000be:	56                   	push   %esi
810000bf:	53                   	push   %ebx
810000c0:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0}; // 使用特权级0
810000c3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810000ca:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[gate])\n\n"
        : "=a"(ret)
        : [arg3] "r"(args->arg3), [arg2] "r"(args->arg2), [arg1] "r"(args->arg1),
810000d1:	8b 45 08             	mov    0x8(%ebp),%eax
810000d4:	8b 40 10             	mov    0x10(%eax),%eax
810000d7:	8b 55 08             	mov    0x8(%ebp),%edx
810000da:	8b 52 0c             	mov    0xc(%edx),%edx
810000dd:	8b 4d 08             	mov    0x8(%ebp),%ecx
810000e0:	8b 49 08             	mov    0x8(%ecx),%ecx
          [arg0] "r"(args->arg0), [id] "r"(args->id),
810000e3:	8b 5d 08             	mov    0x8(%ebp),%ebx
810000e6:	8b 5b 04             	mov    0x4(%ebx),%ebx
810000e9:	8b 75 08             	mov    0x8(%ebp),%esi
810000ec:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
810000ee:	8d 7d e8             	lea    -0x18(%ebp),%edi
810000f1:	50                   	push   %eax
810000f2:	52                   	push   %edx
810000f3:	51                   	push   %ecx
810000f4:	53                   	push   %ebx
810000f5:	56                   	push   %esi
810000f6:	ff 1f                	lcall  *(%edi)
810000f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
          [gate] "r"(sys_gate_addr));
    return ret;
810000fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810000fe:	83 c4 10             	add    $0x10,%esp
81000101:	5b                   	pop    %ebx
81000102:	5e                   	pop    %esi
81000103:	5f                   	pop    %edi
81000104:	5d                   	pop    %ebp
81000105:	c3                   	ret    

81000106 <msleep>:

int msleep(int ms)
{
81000106:	55                   	push   %ebp
81000107:	89 e5                	mov    %esp,%ebp
81000109:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0)
8100010c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000110:	7e 1b                	jle    8100012d <msleep+0x27>
    {
        return;
    }

    syscall_args_t args;
    args.id = SYS_msleep;
81000112:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000119:	8b 45 08             	mov    0x8(%ebp),%eax
8100011c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
8100011f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000122:	50                   	push   %eax
81000123:	e8 92 ff ff ff       	call   810000ba <sys_call>
81000128:	83 c4 04             	add    $0x4,%esp
8100012b:	eb 01                	jmp    8100012e <msleep+0x28>
        return;
8100012d:	90                   	nop
}
8100012e:	c9                   	leave  
8100012f:	c3                   	ret    

81000130 <getpid>:

int getpid(void)
{
81000130:	55                   	push   %ebp
81000131:	89 e5                	mov    %esp,%ebp
81000133:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000136:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
8100013d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000140:	50                   	push   %eax
81000141:	e8 74 ff ff ff       	call   810000ba <sys_call>
81000146:	83 c4 04             	add    $0x4,%esp
}
81000149:	c9                   	leave  
8100014a:	c3                   	ret    

8100014b <print_msg>:

void print_msg(const char *fmt, int arg)
{
8100014b:	55                   	push   %ebp
8100014c:	89 e5                	mov    %esp,%ebp
8100014e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000151:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000158:	8b 45 08             	mov    0x8(%ebp),%eax
8100015b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100015e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000161:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000164:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000167:	50                   	push   %eax
81000168:	e8 4d ff ff ff       	call   810000ba <sys_call>
8100016d:	83 c4 04             	add    $0x4,%esp
}
81000170:	90                   	nop
81000171:	c9                   	leave  
81000172:	c3                   	ret    

81000173 <fork>:

int fork(void)
{
81000173:	55                   	push   %ebp
81000174:	89 e5                	mov    %esp,%ebp
81000176:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000179:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000180:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000183:	50                   	push   %eax
81000184:	e8 31 ff ff ff       	call   810000ba <sys_call>
81000189:	83 c4 04             	add    $0x4,%esp
}
8100018c:	c9                   	leave  
8100018d:	c3                   	ret    

8100018e <execve>:

int execve(const char *name, char *const *argv, char *const *env)
{
8100018e:	55                   	push   %ebp
8100018f:	89 e5                	mov    %esp,%ebp
81000191:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000194:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8100019b:	8b 45 08             	mov    0x8(%ebp),%eax
8100019e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810001a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810001a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810001a7:	8b 45 10             	mov    0x10(%ebp),%eax
810001aa:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
810001ad:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001b0:	50                   	push   %eax
810001b1:	e8 04 ff ff ff       	call   810000ba <sys_call>
810001b6:	83 c4 04             	add    $0x4,%esp
}
810001b9:	c9                   	leave  
810001ba:	c3                   	ret    

810001bb <yield>:

int yield(void)
{
810001bb:	55                   	push   %ebp
810001bc:	89 e5                	mov    %esp,%ebp
810001be:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810001c1:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
810001c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001cb:	50                   	push   %eax
810001cc:	e8 e9 fe ff ff       	call   810000ba <sys_call>
810001d1:	83 c4 04             	add    $0x4,%esp
}
810001d4:	c9                   	leave  
810001d5:	c3                   	ret    

810001d6 <open>:

int open(const char *name, int flags, ...)
{
810001d6:	55                   	push   %ebp
810001d7:	89 e5                	mov    %esp,%ebp
810001d9:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
810001dc:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810001e3:	8b 45 08             	mov    0x8(%ebp),%eax
810001e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
810001e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810001ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
810001ef:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001f2:	50                   	push   %eax
810001f3:	e8 c2 fe ff ff       	call   810000ba <sys_call>
810001f8:	83 c4 04             	add    $0x4,%esp
}
810001fb:	c9                   	leave  
810001fc:	c3                   	ret    

810001fd <read>:

int read(int file, char *ptr, int len)
{
810001fd:	55                   	push   %ebp
810001fe:	89 e5                	mov    %esp,%ebp
81000200:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000203:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
8100020a:	8b 45 08             	mov    0x8(%ebp),%eax
8100020d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000210:	8b 45 0c             	mov    0xc(%ebp),%eax
81000213:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000216:	8b 45 10             	mov    0x10(%ebp),%eax
81000219:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
8100021c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100021f:	50                   	push   %eax
81000220:	e8 95 fe ff ff       	call   810000ba <sys_call>
81000225:	83 c4 04             	add    $0x4,%esp
}
81000228:	c9                   	leave  
81000229:	c3                   	ret    

8100022a <write>:

int write(int file, char *ptr, int len)
{
8100022a:	55                   	push   %ebp
8100022b:	89 e5                	mov    %esp,%ebp
8100022d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000230:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
81000237:	8b 45 08             	mov    0x8(%ebp),%eax
8100023a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100023d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000240:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000243:	8b 45 10             	mov    0x10(%ebp),%eax
81000246:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000249:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100024c:	50                   	push   %eax
8100024d:	e8 68 fe ff ff       	call   810000ba <sys_call>
81000252:	83 c4 04             	add    $0x4,%esp
}
81000255:	c9                   	leave  
81000256:	c3                   	ret    

81000257 <close>:

int close(int file)
{
81000257:	55                   	push   %ebp
81000258:	89 e5                	mov    %esp,%ebp
8100025a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100025d:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000264:	8b 45 08             	mov    0x8(%ebp),%eax
81000267:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
8100026a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100026d:	50                   	push   %eax
8100026e:	e8 47 fe ff ff       	call   810000ba <sys_call>
81000273:	83 c4 04             	add    $0x4,%esp
}
81000276:	c9                   	leave  
81000277:	c3                   	ret    

81000278 <lseek>:

int lseek(int file, int ptr, int dir)
{
81000278:	55                   	push   %ebp
81000279:	89 e5                	mov    %esp,%ebp
8100027b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100027e:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
81000285:	8b 45 08             	mov    0x8(%ebp),%eax
81000288:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100028b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100028e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000291:	8b 45 10             	mov    0x10(%ebp),%eax
81000294:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000297:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029a:	50                   	push   %eax
8100029b:	e8 1a fe ff ff       	call   810000ba <sys_call>
810002a0:	83 c4 04             	add    $0x4,%esp
}
810002a3:	c9                   	leave  
810002a4:	c3                   	ret    

810002a5 <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st)
{
810002a5:	55                   	push   %ebp
810002a6:	89 e5                	mov    %esp,%ebp
810002a8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810002ab:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
810002b2:	8b 45 08             	mov    0x8(%ebp),%eax
810002b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810002b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810002bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
810002be:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002c1:	50                   	push   %eax
810002c2:	e8 f3 fd ff ff       	call   810000ba <sys_call>
810002c7:	83 c4 04             	add    $0x4,%esp
}
810002ca:	c9                   	leave  
810002cb:	c3                   	ret    

810002cc <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file)
{
810002cc:	55                   	push   %ebp
810002cd:	89 e5                	mov    %esp,%ebp
810002cf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810002d2:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
810002d9:	8b 45 08             	mov    0x8(%ebp),%eax
810002dc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
810002df:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002e2:	50                   	push   %eax
810002e3:	e8 d2 fd ff ff       	call   810000ba <sys_call>
810002e8:	83 c4 04             	add    $0x4,%esp
}
810002eb:	c9                   	leave  
810002ec:	c3                   	ret    

810002ed <sbrk>:

void *sbrk(ptrdiff_t incr)
{
810002ed:	55                   	push   %ebp
810002ee:	89 e5                	mov    %esp,%ebp
810002f0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810002f3:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
810002fa:	8b 45 08             	mov    0x8(%ebp),%eax
810002fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000300:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000303:	50                   	push   %eax
81000304:	e8 b1 fd ff ff       	call   810000ba <sys_call>
81000309:	83 c4 04             	add    $0x4,%esp
}
8100030c:	c9                   	leave  
8100030d:	c3                   	ret    

8100030e <dup>:

int dup(int file)
{
8100030e:	55                   	push   %ebp
8100030f:	89 e5                	mov    %esp,%ebp
81000311:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000314:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
8100031b:	8b 45 08             	mov    0x8(%ebp),%eax
8100031e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000321:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000324:	50                   	push   %eax
81000325:	e8 90 fd ff ff       	call   810000ba <sys_call>
8100032a:	83 c4 04             	add    $0x4,%esp
8100032d:	c9                   	leave  
8100032e:	c3                   	ret    

8100032f <_gets_r>:
8100032f:	55                   	push   %ebp
81000330:	89 e5                	mov    %esp,%ebp
81000332:	56                   	push   %esi
81000333:	53                   	push   %ebx
81000334:	83 ec 10             	sub    $0x10,%esp
81000337:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100033a:	8b 45 08             	mov    0x8(%ebp),%eax
8100033d:	8b 40 04             	mov    0x4(%eax),%eax
81000340:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000343:	8b 45 08             	mov    0x8(%ebp),%eax
81000346:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000349:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100034d:	74 34                	je     81000383 <_gets_r+0x54>
8100034f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000352:	8b 40 38             	mov    0x38(%eax),%eax
81000355:	85 c0                	test   %eax,%eax
81000357:	75 2a                	jne    81000383 <_gets_r+0x54>
81000359:	83 ec 0c             	sub    $0xc,%esp
8100035c:	ff 75 f0             	pushl  -0x10(%ebp)
8100035f:	e8 7a 05 00 00       	call   810008de <__sinit>
81000364:	83 c4 10             	add    $0x10,%esp
81000367:	eb 1a                	jmp    81000383 <_gets_r+0x54>
81000369:	83 fe ff             	cmp    $0xffffffff,%esi
8100036c:	75 0c                	jne    8100037a <_gets_r+0x4b>
8100036e:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
81000371:	75 58                	jne    810003cb <_gets_r+0x9c>
81000373:	b8 00 00 00 00       	mov    $0x0,%eax
81000378:	eb 58                	jmp    810003d2 <_gets_r+0xa3>
8100037a:	89 d8                	mov    %ebx,%eax
8100037c:	8d 58 01             	lea    0x1(%eax),%ebx
8100037f:	89 f2                	mov    %esi,%edx
81000381:	88 10                	mov    %dl,(%eax)
81000383:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000386:	8b 40 04             	mov    0x4(%eax),%eax
81000389:	8d 50 ff             	lea    -0x1(%eax),%edx
8100038c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100038f:	89 50 04             	mov    %edx,0x4(%eax)
81000392:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000395:	8b 40 04             	mov    0x4(%eax),%eax
81000398:	85 c0                	test   %eax,%eax
8100039a:	79 13                	jns    810003af <_gets_r+0x80>
8100039c:	83 ec 08             	sub    $0x8,%esp
8100039f:	ff 75 f4             	pushl  -0xc(%ebp)
810003a2:	ff 75 08             	pushl  0x8(%ebp)
810003a5:	e8 3d 01 00 00       	call   810004e7 <__srget_r>
810003aa:	83 c4 10             	add    $0x10,%esp
810003ad:	eb 13                	jmp    810003c2 <_gets_r+0x93>
810003af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003b2:	8b 00                	mov    (%eax),%eax
810003b4:	8d 48 01             	lea    0x1(%eax),%ecx
810003b7:	8b 55 f4             	mov    -0xc(%ebp),%edx
810003ba:	89 0a                	mov    %ecx,(%edx)
810003bc:	0f b6 00             	movzbl (%eax),%eax
810003bf:	0f b6 c0             	movzbl %al,%eax
810003c2:	89 c6                	mov    %eax,%esi
810003c4:	83 fe 0a             	cmp    $0xa,%esi
810003c7:	75 a0                	jne    81000369 <_gets_r+0x3a>
810003c9:	eb 01                	jmp    810003cc <_gets_r+0x9d>
810003cb:	90                   	nop
810003cc:	c6 03 00             	movb   $0x0,(%ebx)
810003cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810003d2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810003d5:	5b                   	pop    %ebx
810003d6:	5e                   	pop    %esi
810003d7:	5d                   	pop    %ebp
810003d8:	c3                   	ret    

810003d9 <gets>:
810003d9:	55                   	push   %ebp
810003da:	89 e5                	mov    %esp,%ebp
810003dc:	83 ec 08             	sub    $0x8,%esp
810003df:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
810003e4:	83 ec 08             	sub    $0x8,%esp
810003e7:	ff 75 08             	pushl  0x8(%ebp)
810003ea:	50                   	push   %eax
810003eb:	e8 3f ff ff ff       	call   8100032f <_gets_r>
810003f0:	83 c4 10             	add    $0x10,%esp
810003f3:	c9                   	leave  
810003f4:	c3                   	ret    

810003f5 <_puts_r>:
810003f5:	55                   	push   %ebp
810003f6:	89 e5                	mov    %esp,%ebp
810003f8:	83 ec 38             	sub    $0x38,%esp
810003fb:	83 ec 0c             	sub    $0xc,%esp
810003fe:	ff 75 0c             	pushl  0xc(%ebp)
81000401:	e8 6a 01 00 00       	call   81000570 <strlen>
81000406:	83 c4 10             	add    $0x10,%esp
81000409:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100040c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100040f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000412:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000415:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000418:	c7 45 d4 b8 37 00 81 	movl   $0x810037b8,-0x2c(%ebp)
8100041f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81000426:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000429:	83 c0 01             	add    $0x1,%eax
8100042c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100042f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81000432:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000435:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100043c:	8b 45 08             	mov    0x8(%ebp),%eax
8100043f:	8b 40 08             	mov    0x8(%eax),%eax
81000442:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000445:	8b 45 08             	mov    0x8(%ebp),%eax
81000448:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100044b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100044f:	74 18                	je     81000469 <_puts_r+0x74>
81000451:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000454:	8b 40 38             	mov    0x38(%eax),%eax
81000457:	85 c0                	test   %eax,%eax
81000459:	75 0e                	jne    81000469 <_puts_r+0x74>
8100045b:	83 ec 0c             	sub    $0xc,%esp
8100045e:	ff 75 ec             	pushl  -0x14(%ebp)
81000461:	e8 78 04 00 00       	call   810008de <__sinit>
81000466:	83 c4 10             	add    $0x10,%esp
81000469:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100046c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000470:	98                   	cwtl   
81000471:	25 00 20 00 00       	and    $0x2000,%eax
81000476:	85 c0                	test   %eax,%eax
81000478:	75 24                	jne    8100049e <_puts_r+0xa9>
8100047a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100047d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000481:	80 cc 20             	or     $0x20,%ah
81000484:	89 c2                	mov    %eax,%edx
81000486:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000489:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100048d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000490:	8b 40 64             	mov    0x64(%eax),%eax
81000493:	80 e4 df             	and    $0xdf,%ah
81000496:	89 c2                	mov    %eax,%edx
81000498:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100049b:	89 50 64             	mov    %edx,0x64(%eax)
8100049e:	83 ec 04             	sub    $0x4,%esp
810004a1:	8d 45 dc             	lea    -0x24(%ebp),%eax
810004a4:	50                   	push   %eax
810004a5:	ff 75 f0             	pushl  -0x10(%ebp)
810004a8:	ff 75 08             	pushl  0x8(%ebp)
810004ab:	e8 3b 05 00 00       	call   810009eb <__sfvwrite_r>
810004b0:	83 c4 10             	add    $0x10,%esp
810004b3:	85 c0                	test   %eax,%eax
810004b5:	74 07                	je     810004be <_puts_r+0xc9>
810004b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810004bc:	eb 05                	jmp    810004c3 <_puts_r+0xce>
810004be:	b8 0a 00 00 00       	mov    $0xa,%eax
810004c3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810004c6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810004c9:	c9                   	leave  
810004ca:	c3                   	ret    

810004cb <puts>:
810004cb:	55                   	push   %ebp
810004cc:	89 e5                	mov    %esp,%ebp
810004ce:	83 ec 08             	sub    $0x8,%esp
810004d1:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
810004d6:	83 ec 08             	sub    $0x8,%esp
810004d9:	ff 75 08             	pushl  0x8(%ebp)
810004dc:	50                   	push   %eax
810004dd:	e8 13 ff ff ff       	call   810003f5 <_puts_r>
810004e2:	83 c4 10             	add    $0x10,%esp
810004e5:	c9                   	leave  
810004e6:	c3                   	ret    

810004e7 <__srget_r>:
810004e7:	55                   	push   %ebp
810004e8:	89 e5                	mov    %esp,%ebp
810004ea:	53                   	push   %ebx
810004eb:	83 ec 14             	sub    $0x14,%esp
810004ee:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810004f1:	8b 45 08             	mov    0x8(%ebp),%eax
810004f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004f7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810004fb:	74 18                	je     81000515 <__srget_r+0x2e>
810004fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000500:	8b 40 38             	mov    0x38(%eax),%eax
81000503:	85 c0                	test   %eax,%eax
81000505:	75 0e                	jne    81000515 <__srget_r+0x2e>
81000507:	83 ec 0c             	sub    $0xc,%esp
8100050a:	ff 75 f4             	pushl  -0xc(%ebp)
8100050d:	e8 cc 03 00 00       	call   810008de <__sinit>
81000512:	83 c4 10             	add    $0x10,%esp
81000515:	83 ec 08             	sub    $0x8,%esp
81000518:	53                   	push   %ebx
81000519:	ff 75 08             	pushl  0x8(%ebp)
8100051c:	e8 07 20 00 00       	call   81002528 <__srefill_r>
81000521:	83 c4 10             	add    $0x10,%esp
81000524:	85 c0                	test   %eax,%eax
81000526:	75 18                	jne    81000540 <__srget_r+0x59>
81000528:	8b 43 04             	mov    0x4(%ebx),%eax
8100052b:	83 e8 01             	sub    $0x1,%eax
8100052e:	89 43 04             	mov    %eax,0x4(%ebx)
81000531:	8b 03                	mov    (%ebx),%eax
81000533:	8d 50 01             	lea    0x1(%eax),%edx
81000536:	89 13                	mov    %edx,(%ebx)
81000538:	0f b6 00             	movzbl (%eax),%eax
8100053b:	0f b6 c0             	movzbl %al,%eax
8100053e:	eb 05                	jmp    81000545 <__srget_r+0x5e>
81000540:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000545:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000548:	c9                   	leave  
81000549:	c3                   	ret    

8100054a <__srget>:
8100054a:	55                   	push   %ebp
8100054b:	89 e5                	mov    %esp,%ebp
8100054d:	83 ec 08             	sub    $0x8,%esp
81000550:	8b 55 08             	mov    0x8(%ebp),%edx
81000553:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
81000558:	83 ec 08             	sub    $0x8,%esp
8100055b:	52                   	push   %edx
8100055c:	50                   	push   %eax
8100055d:	e8 85 ff ff ff       	call   810004e7 <__srget_r>
81000562:	83 c4 10             	add    $0x10,%esp
81000565:	c9                   	leave  
81000566:	c3                   	ret    
81000567:	66 90                	xchg   %ax,%ax
81000569:	66 90                	xchg   %ax,%ax
8100056b:	66 90                	xchg   %ax,%ax
8100056d:	66 90                	xchg   %ax,%ax
8100056f:	90                   	nop

81000570 <strlen>:
81000570:	55                   	push   %ebp
81000571:	89 e5                	mov    %esp,%ebp
81000573:	57                   	push   %edi
81000574:	8b 55 08             	mov    0x8(%ebp),%edx
81000577:	89 d7                	mov    %edx,%edi
81000579:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100057f:	74 25                	je     810005a6 <L5>
81000581:	8a 0f                	mov    (%edi),%cl
81000583:	47                   	inc    %edi
81000584:	84 c9                	test   %cl,%cl
81000586:	74 56                	je     810005de <L15>
81000588:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100058e:	74 16                	je     810005a6 <L5>
81000590:	8a 0f                	mov    (%edi),%cl
81000592:	47                   	inc    %edi
81000593:	84 c9                	test   %cl,%cl
81000595:	74 47                	je     810005de <L15>
81000597:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100059d:	74 07                	je     810005a6 <L5>
8100059f:	8a 0f                	mov    (%edi),%cl
810005a1:	47                   	inc    %edi
810005a2:	84 c9                	test   %cl,%cl
810005a4:	74 38                	je     810005de <L15>

810005a6 <L5>:
810005a6:	83 ef 04             	sub    $0x4,%edi
810005a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810005b0 <L10>:
810005b0:	83 c7 04             	add    $0x4,%edi
810005b3:	8b 0f                	mov    (%edi),%ecx
810005b5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810005bb:	f7 d1                	not    %ecx
810005bd:	21 c8                	and    %ecx,%eax
810005bf:	a9 80 80 80 80       	test   $0x80808080,%eax
810005c4:	74 ea                	je     810005b0 <L10>
810005c6:	f7 d1                	not    %ecx
810005c8:	47                   	inc    %edi
810005c9:	84 c9                	test   %cl,%cl
810005cb:	74 11                	je     810005de <L15>
810005cd:	47                   	inc    %edi
810005ce:	c1 e9 08             	shr    $0x8,%ecx
810005d1:	84 c9                	test   %cl,%cl
810005d3:	74 09                	je     810005de <L15>
810005d5:	47                   	inc    %edi
810005d6:	c1 e9 08             	shr    $0x8,%ecx
810005d9:	84 c9                	test   %cl,%cl
810005db:	74 01                	je     810005de <L15>
810005dd:	47                   	inc    %edi

810005de <L15>:
810005de:	29 d7                	sub    %edx,%edi
810005e0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005e3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005e6:	5f                   	pop    %edi
810005e7:	c9                   	leave  
810005e8:	c3                   	ret    

810005e9 <std>:
810005e9:	55                   	push   %ebp
810005ea:	89 e5                	mov    %esp,%ebp
810005ec:	83 ec 08             	sub    $0x8,%esp
810005ef:	8b 45 08             	mov    0x8(%ebp),%eax
810005f2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005f8:	8b 45 08             	mov    0x8(%ebp),%eax
810005fb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000602:	8b 45 08             	mov    0x8(%ebp),%eax
81000605:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100060c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100060f:	89 c2                	mov    %eax,%edx
81000611:	8b 45 08             	mov    0x8(%ebp),%eax
81000614:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000618:	8b 45 08             	mov    0x8(%ebp),%eax
8100061b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000622:	8b 45 10             	mov    0x10(%ebp),%eax
81000625:	89 c2                	mov    %eax,%edx
81000627:	8b 45 08             	mov    0x8(%ebp),%eax
8100062a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100062e:	8b 45 08             	mov    0x8(%ebp),%eax
81000631:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000638:	8b 45 08             	mov    0x8(%ebp),%eax
8100063b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000642:	8b 45 08             	mov    0x8(%ebp),%eax
81000645:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100064c:	8b 45 08             	mov    0x8(%ebp),%eax
8100064f:	83 c0 5c             	add    $0x5c,%eax
81000652:	83 ec 04             	sub    $0x4,%esp
81000655:	6a 08                	push   $0x8
81000657:	6a 00                	push   $0x0
81000659:	50                   	push   %eax
8100065a:	e8 2e 15 00 00       	call   81001b8d <memset>
8100065f:	83 c4 10             	add    $0x10,%esp
81000662:	8b 45 08             	mov    0x8(%ebp),%eax
81000665:	8b 55 08             	mov    0x8(%ebp),%edx
81000668:	89 50 1c             	mov    %edx,0x1c(%eax)
8100066b:	8b 45 08             	mov    0x8(%ebp),%eax
8100066e:	c7 40 20 69 27 00 81 	movl   $0x81002769,0x20(%eax)
81000675:	8b 45 08             	mov    0x8(%ebp),%eax
81000678:	c7 40 24 b7 27 00 81 	movl   $0x810027b7,0x24(%eax)
8100067f:	8b 45 08             	mov    0x8(%ebp),%eax
81000682:	c7 40 28 12 28 00 81 	movl   $0x81002812,0x28(%eax)
81000689:	8b 45 08             	mov    0x8(%ebp),%eax
8100068c:	c7 40 2c 5c 28 00 81 	movl   $0x8100285c,0x2c(%eax)
81000693:	90                   	nop
81000694:	c9                   	leave  
81000695:	c3                   	ret    

81000696 <stdin_init>:
81000696:	55                   	push   %ebp
81000697:	89 e5                	mov    %esp,%ebp
81000699:	83 ec 08             	sub    $0x8,%esp
8100069c:	83 ec 04             	sub    $0x4,%esp
8100069f:	6a 00                	push   $0x0
810006a1:	6a 04                	push   $0x4
810006a3:	ff 75 08             	pushl  0x8(%ebp)
810006a6:	e8 3e ff ff ff       	call   810005e9 <std>
810006ab:	83 c4 10             	add    $0x10,%esp
810006ae:	90                   	nop
810006af:	c9                   	leave  
810006b0:	c3                   	ret    

810006b1 <stdout_init>:
810006b1:	55                   	push   %ebp
810006b2:	89 e5                	mov    %esp,%ebp
810006b4:	83 ec 08             	sub    $0x8,%esp
810006b7:	83 ec 04             	sub    $0x4,%esp
810006ba:	6a 01                	push   $0x1
810006bc:	6a 09                	push   $0x9
810006be:	ff 75 08             	pushl  0x8(%ebp)
810006c1:	e8 23 ff ff ff       	call   810005e9 <std>
810006c6:	83 c4 10             	add    $0x10,%esp
810006c9:	90                   	nop
810006ca:	c9                   	leave  
810006cb:	c3                   	ret    

810006cc <stderr_init>:
810006cc:	55                   	push   %ebp
810006cd:	89 e5                	mov    %esp,%ebp
810006cf:	83 ec 08             	sub    $0x8,%esp
810006d2:	83 ec 04             	sub    $0x4,%esp
810006d5:	6a 02                	push   $0x2
810006d7:	6a 12                	push   $0x12
810006d9:	ff 75 08             	pushl  0x8(%ebp)
810006dc:	e8 08 ff ff ff       	call   810005e9 <std>
810006e1:	83 c4 10             	add    $0x10,%esp
810006e4:	90                   	nop
810006e5:	c9                   	leave  
810006e6:	c3                   	ret    

810006e7 <__sfmoreglue>:
810006e7:	55                   	push   %ebp
810006e8:	89 e5                	mov    %esp,%ebp
810006ea:	53                   	push   %ebx
810006eb:	83 ec 14             	sub    $0x14,%esp
810006ee:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006f1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006f4:	6b c0 68             	imul   $0x68,%eax,%eax
810006f7:	83 c0 74             	add    $0x74,%eax
810006fa:	83 ec 08             	sub    $0x8,%esp
810006fd:	50                   	push   %eax
810006fe:	ff 75 08             	pushl  0x8(%ebp)
81000701:	e8 e9 0a 00 00       	call   810011ef <_malloc_r>
81000706:	83 c4 10             	add    $0x10,%esp
81000709:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100070c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000710:	75 07                	jne    81000719 <__sfmoreglue+0x32>
81000712:	b8 00 00 00 00       	mov    $0x0,%eax
81000717:	eb 38                	jmp    81000751 <__sfmoreglue+0x6a>
81000719:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100071c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000725:	89 58 04             	mov    %ebx,0x4(%eax)
81000728:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100072b:	8d 50 0c             	lea    0xc(%eax),%edx
8100072e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000731:	89 50 08             	mov    %edx,0x8(%eax)
81000734:	89 d8                	mov    %ebx,%eax
81000736:	6b c0 68             	imul   $0x68,%eax,%eax
81000739:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100073c:	83 c2 0c             	add    $0xc,%edx
8100073f:	83 ec 04             	sub    $0x4,%esp
81000742:	50                   	push   %eax
81000743:	6a 00                	push   $0x0
81000745:	52                   	push   %edx
81000746:	e8 42 14 00 00       	call   81001b8d <memset>
8100074b:	83 c4 10             	add    $0x10,%esp
8100074e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000751:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000754:	c9                   	leave  
81000755:	c3                   	ret    

81000756 <__sfp>:
81000756:	55                   	push   %ebp
81000757:	89 e5                	mov    %esp,%ebp
81000759:	83 ec 18             	sub    $0x18,%esp
8100075c:	e8 16 02 00 00       	call   81000977 <__sfp_lock_acquire>
81000761:	a1 b4 37 00 81       	mov    0x810037b4,%eax
81000766:	8b 40 38             	mov    0x38(%eax),%eax
81000769:	85 c0                	test   %eax,%eax
8100076b:	75 11                	jne    8100077e <__sfp+0x28>
8100076d:	a1 b4 37 00 81       	mov    0x810037b4,%eax
81000772:	83 ec 0c             	sub    $0xc,%esp
81000775:	50                   	push   %eax
81000776:	e8 63 01 00 00       	call   810008de <__sinit>
8100077b:	83 c4 10             	add    $0x10,%esp
8100077e:	a1 b4 37 00 81       	mov    0x810037b4,%eax
81000783:	05 e0 02 00 00       	add    $0x2e0,%eax
81000788:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100078b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100078e:	8b 40 08             	mov    0x8(%eax),%eax
81000791:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000794:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000797:	8b 40 04             	mov    0x4(%eax),%eax
8100079a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100079d:	eb 10                	jmp    810007af <__sfp+0x59>
8100079f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810007a6:	66 85 c0             	test   %ax,%ax
810007a9:	74 58                	je     81000803 <__sfp+0xad>
810007ab:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810007af:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810007b3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810007b7:	79 e6                	jns    8100079f <__sfp+0x49>
810007b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007bc:	8b 00                	mov    (%eax),%eax
810007be:	85 c0                	test   %eax,%eax
810007c0:	75 1e                	jne    810007e0 <__sfp+0x8a>
810007c2:	83 ec 08             	sub    $0x8,%esp
810007c5:	6a 04                	push   $0x4
810007c7:	ff 75 08             	pushl  0x8(%ebp)
810007ca:	e8 18 ff ff ff       	call   810006e7 <__sfmoreglue>
810007cf:	83 c4 10             	add    $0x10,%esp
810007d2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810007d5:	89 02                	mov    %eax,(%edx)
810007d7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007da:	8b 00                	mov    (%eax),%eax
810007dc:	85 c0                	test   %eax,%eax
810007de:	74 0a                	je     810007ea <__sfp+0x94>
810007e0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007e3:	8b 00                	mov    (%eax),%eax
810007e5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007e8:	eb a1                	jmp    8100078b <__sfp+0x35>
810007ea:	90                   	nop
810007eb:	e8 8d 01 00 00       	call   8100097d <__sfp_lock_release>
810007f0:	8b 45 08             	mov    0x8(%ebp),%eax
810007f3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007f9:	b8 00 00 00 00       	mov    $0x0,%eax
810007fe:	e9 9e 00 00 00       	jmp    810008a1 <__sfp+0x14b>
81000803:	90                   	nop
81000804:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000807:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
8100080d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000810:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000816:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000819:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000820:	e8 58 01 00 00       	call   8100097d <__sfp_lock_release>
81000825:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000828:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100082e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000831:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000838:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100083b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000842:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000845:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100084c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100084f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000856:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000859:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000860:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000863:	83 c0 5c             	add    $0x5c,%eax
81000866:	83 ec 04             	sub    $0x4,%esp
81000869:	6a 08                	push   $0x8
8100086b:	6a 00                	push   $0x0
8100086d:	50                   	push   %eax
8100086e:	e8 1a 13 00 00       	call   81001b8d <memset>
81000873:	83 c4 10             	add    $0x10,%esp
81000876:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000879:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000880:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000883:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100088a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100088d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000894:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000897:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100089e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008a1:	c9                   	leave  
810008a2:	c3                   	ret    

810008a3 <_cleanup_r>:
810008a3:	55                   	push   %ebp
810008a4:	89 e5                	mov    %esp,%ebp
810008a6:	83 ec 18             	sub    $0x18,%esp
810008a9:	c7 45 f4 62 2a 00 81 	movl   $0x81002a62,-0xc(%ebp)
810008b0:	83 ec 08             	sub    $0x8,%esp
810008b3:	ff 75 f4             	pushl  -0xc(%ebp)
810008b6:	ff 75 08             	pushl  0x8(%ebp)
810008b9:	e8 33 06 00 00       	call   81000ef1 <_fwalk_reent>
810008be:	83 c4 10             	add    $0x10,%esp
810008c1:	90                   	nop
810008c2:	c9                   	leave  
810008c3:	c3                   	ret    

810008c4 <_cleanup>:
810008c4:	55                   	push   %ebp
810008c5:	89 e5                	mov    %esp,%ebp
810008c7:	83 ec 08             	sub    $0x8,%esp
810008ca:	a1 b4 37 00 81       	mov    0x810037b4,%eax
810008cf:	83 ec 0c             	sub    $0xc,%esp
810008d2:	50                   	push   %eax
810008d3:	e8 cb ff ff ff       	call   810008a3 <_cleanup_r>
810008d8:	83 c4 10             	add    $0x10,%esp
810008db:	90                   	nop
810008dc:	c9                   	leave  
810008dd:	c3                   	ret    

810008de <__sinit>:
810008de:	55                   	push   %ebp
810008df:	89 e5                	mov    %esp,%ebp
810008e1:	83 ec 08             	sub    $0x8,%esp
810008e4:	e8 9a 00 00 00       	call   81000983 <__sinit_lock_acquire>
810008e9:	8b 45 08             	mov    0x8(%ebp),%eax
810008ec:	8b 40 38             	mov    0x38(%eax),%eax
810008ef:	85 c0                	test   %eax,%eax
810008f1:	74 07                	je     810008fa <__sinit+0x1c>
810008f3:	e8 91 00 00 00       	call   81000989 <__sinit_lock_release>
810008f8:	eb 7b                	jmp    81000975 <__sinit+0x97>
810008fa:	8b 45 08             	mov    0x8(%ebp),%eax
810008fd:	c7 40 3c a3 08 00 81 	movl   $0x810008a3,0x3c(%eax)
81000904:	8b 45 08             	mov    0x8(%ebp),%eax
81000907:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100090e:	00 00 00 
81000911:	8b 45 08             	mov    0x8(%ebp),%eax
81000914:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100091b:	00 00 00 
8100091e:	8b 45 08             	mov    0x8(%ebp),%eax
81000921:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000927:	8b 45 08             	mov    0x8(%ebp),%eax
8100092a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000930:	8b 45 08             	mov    0x8(%ebp),%eax
81000933:	8b 40 04             	mov    0x4(%eax),%eax
81000936:	83 ec 0c             	sub    $0xc,%esp
81000939:	50                   	push   %eax
8100093a:	e8 57 fd ff ff       	call   81000696 <stdin_init>
8100093f:	83 c4 10             	add    $0x10,%esp
81000942:	8b 45 08             	mov    0x8(%ebp),%eax
81000945:	8b 40 08             	mov    0x8(%eax),%eax
81000948:	83 ec 0c             	sub    $0xc,%esp
8100094b:	50                   	push   %eax
8100094c:	e8 60 fd ff ff       	call   810006b1 <stdout_init>
81000951:	83 c4 10             	add    $0x10,%esp
81000954:	8b 45 08             	mov    0x8(%ebp),%eax
81000957:	8b 40 0c             	mov    0xc(%eax),%eax
8100095a:	83 ec 0c             	sub    $0xc,%esp
8100095d:	50                   	push   %eax
8100095e:	e8 69 fd ff ff       	call   810006cc <stderr_init>
81000963:	83 c4 10             	add    $0x10,%esp
81000966:	8b 45 08             	mov    0x8(%ebp),%eax
81000969:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000970:	e8 14 00 00 00       	call   81000989 <__sinit_lock_release>
81000975:	c9                   	leave  
81000976:	c3                   	ret    

81000977 <__sfp_lock_acquire>:
81000977:	55                   	push   %ebp
81000978:	89 e5                	mov    %esp,%ebp
8100097a:	90                   	nop
8100097b:	5d                   	pop    %ebp
8100097c:	c3                   	ret    

8100097d <__sfp_lock_release>:
8100097d:	55                   	push   %ebp
8100097e:	89 e5                	mov    %esp,%ebp
81000980:	90                   	nop
81000981:	5d                   	pop    %ebp
81000982:	c3                   	ret    

81000983 <__sinit_lock_acquire>:
81000983:	55                   	push   %ebp
81000984:	89 e5                	mov    %esp,%ebp
81000986:	90                   	nop
81000987:	5d                   	pop    %ebp
81000988:	c3                   	ret    

81000989 <__sinit_lock_release>:
81000989:	55                   	push   %ebp
8100098a:	89 e5                	mov    %esp,%ebp
8100098c:	90                   	nop
8100098d:	5d                   	pop    %ebp
8100098e:	c3                   	ret    

8100098f <__fp_lock>:
8100098f:	55                   	push   %ebp
81000990:	89 e5                	mov    %esp,%ebp
81000992:	b8 00 00 00 00       	mov    $0x0,%eax
81000997:	5d                   	pop    %ebp
81000998:	c3                   	ret    

81000999 <__fp_unlock>:
81000999:	55                   	push   %ebp
8100099a:	89 e5                	mov    %esp,%ebp
8100099c:	b8 00 00 00 00       	mov    $0x0,%eax
810009a1:	5d                   	pop    %ebp
810009a2:	c3                   	ret    

810009a3 <__fp_lock_all>:
810009a3:	55                   	push   %ebp
810009a4:	89 e5                	mov    %esp,%ebp
810009a6:	83 ec 08             	sub    $0x8,%esp
810009a9:	e8 c9 ff ff ff       	call   81000977 <__sfp_lock_acquire>
810009ae:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
810009b3:	83 ec 08             	sub    $0x8,%esp
810009b6:	68 8f 09 00 81       	push   $0x8100098f
810009bb:	50                   	push   %eax
810009bc:	e8 c8 04 00 00       	call   81000e89 <_fwalk>
810009c1:	83 c4 10             	add    $0x10,%esp
810009c4:	90                   	nop
810009c5:	c9                   	leave  
810009c6:	c3                   	ret    

810009c7 <__fp_unlock_all>:
810009c7:	55                   	push   %ebp
810009c8:	89 e5                	mov    %esp,%ebp
810009ca:	83 ec 08             	sub    $0x8,%esp
810009cd:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
810009d2:	83 ec 08             	sub    $0x8,%esp
810009d5:	68 99 09 00 81       	push   $0x81000999
810009da:	50                   	push   %eax
810009db:	e8 a9 04 00 00       	call   81000e89 <_fwalk>
810009e0:	83 c4 10             	add    $0x10,%esp
810009e3:	e8 95 ff ff ff       	call   8100097d <__sfp_lock_release>
810009e8:	90                   	nop
810009e9:	c9                   	leave  
810009ea:	c3                   	ret    

810009eb <__sfvwrite_r>:
810009eb:	55                   	push   %ebp
810009ec:	89 e5                	mov    %esp,%ebp
810009ee:	57                   	push   %edi
810009ef:	56                   	push   %esi
810009f0:	53                   	push   %ebx
810009f1:	83 ec 3c             	sub    $0x3c,%esp
810009f4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009f7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009fe:	8b 45 10             	mov    0x10(%ebp),%eax
81000a01:	8b 78 08             	mov    0x8(%eax),%edi
81000a04:	85 ff                	test   %edi,%edi
81000a06:	75 0a                	jne    81000a12 <__sfvwrite_r+0x27>
81000a08:	b8 00 00 00 00       	mov    $0x0,%eax
81000a0d:	e9 6f 04 00 00       	jmp    81000e81 <__sfvwrite_r+0x496>
81000a12:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a16:	98                   	cwtl   
81000a17:	83 e0 08             	and    $0x8,%eax
81000a1a:	85 c0                	test   %eax,%eax
81000a1c:	74 07                	je     81000a25 <__sfvwrite_r+0x3a>
81000a1e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a21:	85 c0                	test   %eax,%eax
81000a23:	75 1d                	jne    81000a42 <__sfvwrite_r+0x57>
81000a25:	83 ec 08             	sub    $0x8,%esp
81000a28:	53                   	push   %ebx
81000a29:	ff 75 08             	pushl  0x8(%ebp)
81000a2c:	e8 96 1e 00 00       	call   810028c7 <__swsetup_r>
81000a31:	83 c4 10             	add    $0x10,%esp
81000a34:	85 c0                	test   %eax,%eax
81000a36:	74 0a                	je     81000a42 <__sfvwrite_r+0x57>
81000a38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a3d:	e9 3f 04 00 00       	jmp    81000e81 <__sfvwrite_r+0x496>
81000a42:	8b 45 10             	mov    0x10(%ebp),%eax
81000a45:	8b 00                	mov    (%eax),%eax
81000a47:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a4a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a4f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a53:	98                   	cwtl   
81000a54:	83 e0 02             	and    $0x2,%eax
81000a57:	85 c0                	test   %eax,%eax
81000a59:	74 68                	je     81000ac3 <__sfvwrite_r+0xd8>
81000a5b:	eb 11                	jmp    81000a6e <__sfvwrite_r+0x83>
81000a5d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a60:	8b 08                	mov    (%eax),%ecx
81000a62:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a65:	8b 78 04             	mov    0x4(%eax),%edi
81000a68:	83 c0 08             	add    $0x8,%eax
81000a6b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a6e:	85 ff                	test   %edi,%edi
81000a70:	74 eb                	je     81000a5d <__sfvwrite_r+0x72>
81000a72:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a75:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a7a:	39 c7                	cmp    %eax,%edi
81000a7c:	0f 46 c7             	cmovbe %edi,%eax
81000a7f:	89 c2                	mov    %eax,%edx
81000a81:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a84:	52                   	push   %edx
81000a85:	ff 75 c4             	pushl  -0x3c(%ebp)
81000a88:	50                   	push   %eax
81000a89:	ff 75 08             	pushl  0x8(%ebp)
81000a8c:	ff d1                	call   *%ecx
81000a8e:	83 c4 10             	add    $0x10,%esp
81000a91:	89 c6                	mov    %eax,%esi
81000a93:	85 f6                	test   %esi,%esi
81000a95:	0f 8e cf 03 00 00    	jle    81000e6a <__sfvwrite_r+0x47f>
81000a9b:	89 f0                	mov    %esi,%eax
81000a9d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000aa0:	89 f0                	mov    %esi,%eax
81000aa2:	29 c7                	sub    %eax,%edi
81000aa4:	8b 45 10             	mov    0x10(%ebp),%eax
81000aa7:	8b 40 08             	mov    0x8(%eax),%eax
81000aaa:	89 f2                	mov    %esi,%edx
81000aac:	29 d0                	sub    %edx,%eax
81000aae:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000ab1:	89 41 08             	mov    %eax,0x8(%ecx)
81000ab4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ab7:	8b 40 08             	mov    0x8(%eax),%eax
81000aba:	85 c0                	test   %eax,%eax
81000abc:	75 b0                	jne    81000a6e <__sfvwrite_r+0x83>
81000abe:	e9 a0 03 00 00       	jmp    81000e63 <__sfvwrite_r+0x478>
81000ac3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ac7:	98                   	cwtl   
81000ac8:	83 e0 01             	and    $0x1,%eax
81000acb:	85 c0                	test   %eax,%eax
81000acd:	0f 85 44 02 00 00    	jne    81000d17 <__sfvwrite_r+0x32c>
81000ad3:	eb 11                	jmp    81000ae6 <__sfvwrite_r+0xfb>
81000ad5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000ad8:	8b 08                	mov    (%eax),%ecx
81000ada:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000add:	8b 78 04             	mov    0x4(%eax),%edi
81000ae0:	83 c0 08             	add    $0x8,%eax
81000ae3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000ae6:	85 ff                	test   %edi,%edi
81000ae8:	74 eb                	je     81000ad5 <__sfvwrite_r+0xea>
81000aea:	8b 73 08             	mov    0x8(%ebx),%esi
81000aed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000af1:	98                   	cwtl   
81000af2:	25 00 02 00 00       	and    $0x200,%eax
81000af7:	85 c0                	test   %eax,%eax
81000af9:	0f 84 4f 01 00 00    	je     81000c4e <__sfvwrite_r+0x263>
81000aff:	89 f0                	mov    %esi,%eax
81000b01:	39 c7                	cmp    %eax,%edi
81000b03:	0f 82 12 01 00 00    	jb     81000c1b <__sfvwrite_r+0x230>
81000b09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b0d:	98                   	cwtl   
81000b0e:	25 80 04 00 00       	and    $0x480,%eax
81000b13:	85 c0                	test   %eax,%eax
81000b15:	0f 84 00 01 00 00    	je     81000c1b <__sfvwrite_r+0x230>
81000b1b:	8b 03                	mov    (%ebx),%eax
81000b1d:	8b 53 10             	mov    0x10(%ebx),%edx
81000b20:	29 d0                	sub    %edx,%eax
81000b22:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000b25:	8b 53 14             	mov    0x14(%ebx),%edx
81000b28:	89 d0                	mov    %edx,%eax
81000b2a:	01 c0                	add    %eax,%eax
81000b2c:	01 d0                	add    %edx,%eax
81000b2e:	89 c2                	mov    %eax,%edx
81000b30:	c1 ea 1f             	shr    $0x1f,%edx
81000b33:	01 d0                	add    %edx,%eax
81000b35:	d1 f8                	sar    %eax
81000b37:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b3a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b3d:	01 f8                	add    %edi,%eax
81000b3f:	8d 50 01             	lea    0x1(%eax),%edx
81000b42:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b45:	39 c2                	cmp    %eax,%edx
81000b47:	76 0b                	jbe    81000b54 <__sfvwrite_r+0x169>
81000b49:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b4c:	01 f8                	add    %edi,%eax
81000b4e:	83 c0 01             	add    $0x1,%eax
81000b51:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b54:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b58:	98                   	cwtl   
81000b59:	25 00 04 00 00       	and    $0x400,%eax
81000b5e:	85 c0                	test   %eax,%eax
81000b60:	74 4f                	je     81000bb1 <__sfvwrite_r+0x1c6>
81000b62:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b65:	83 ec 08             	sub    $0x8,%esp
81000b68:	50                   	push   %eax
81000b69:	ff 75 08             	pushl  0x8(%ebp)
81000b6c:	e8 7e 06 00 00       	call   810011ef <_malloc_r>
81000b71:	83 c4 10             	add    $0x10,%esp
81000b74:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b77:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b7b:	75 0e                	jne    81000b8b <__sfvwrite_r+0x1a0>
81000b7d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b80:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b86:	e9 e6 02 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000b8b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b8e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b91:	83 ec 04             	sub    $0x4,%esp
81000b94:	52                   	push   %edx
81000b95:	50                   	push   %eax
81000b96:	ff 75 dc             	pushl  -0x24(%ebp)
81000b99:	e8 1a 0f 00 00       	call   81001ab8 <memcpy>
81000b9e:	83 c4 10             	add    $0x10,%esp
81000ba1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ba5:	66 25 7f fb          	and    $0xfb7f,%ax
81000ba9:	0c 80                	or     $0x80,%al
81000bab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000baf:	eb 49                	jmp    81000bfa <__sfvwrite_r+0x20f>
81000bb1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000bb4:	8b 43 10             	mov    0x10(%ebx),%eax
81000bb7:	83 ec 04             	sub    $0x4,%esp
81000bba:	52                   	push   %edx
81000bbb:	50                   	push   %eax
81000bbc:	ff 75 08             	pushl  0x8(%ebp)
81000bbf:	e8 5d 10 00 00       	call   81001c21 <_realloc_r>
81000bc4:	83 c4 10             	add    $0x10,%esp
81000bc7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000bca:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000bce:	75 2a                	jne    81000bfa <__sfvwrite_r+0x20f>
81000bd0:	8b 43 10             	mov    0x10(%ebx),%eax
81000bd3:	83 ec 08             	sub    $0x8,%esp
81000bd6:	50                   	push   %eax
81000bd7:	ff 75 08             	pushl  0x8(%ebp)
81000bda:	e8 5e 22 00 00       	call   81002e3d <_free_r>
81000bdf:	83 c4 10             	add    $0x10,%esp
81000be2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000be6:	24 7f                	and    $0x7f,%al
81000be8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bec:	8b 45 08             	mov    0x8(%ebp),%eax
81000bef:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000bf5:	e9 77 02 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000bfa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bfd:	89 43 10             	mov    %eax,0x10(%ebx)
81000c00:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000c03:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c06:	01 d0                	add    %edx,%eax
81000c08:	89 03                	mov    %eax,(%ebx)
81000c0a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c0d:	89 43 14             	mov    %eax,0x14(%ebx)
81000c10:	89 fe                	mov    %edi,%esi
81000c12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c15:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000c18:	89 43 08             	mov    %eax,0x8(%ebx)
81000c1b:	89 f0                	mov    %esi,%eax
81000c1d:	39 c7                	cmp    %eax,%edi
81000c1f:	73 02                	jae    81000c23 <__sfvwrite_r+0x238>
81000c21:	89 fe                	mov    %edi,%esi
81000c23:	89 f2                	mov    %esi,%edx
81000c25:	8b 03                	mov    (%ebx),%eax
81000c27:	83 ec 04             	sub    $0x4,%esp
81000c2a:	52                   	push   %edx
81000c2b:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c2e:	50                   	push   %eax
81000c2f:	e8 cc 0e 00 00       	call   81001b00 <memmove>
81000c34:	83 c4 10             	add    $0x10,%esp
81000c37:	8b 43 08             	mov    0x8(%ebx),%eax
81000c3a:	29 f0                	sub    %esi,%eax
81000c3c:	89 43 08             	mov    %eax,0x8(%ebx)
81000c3f:	8b 03                	mov    (%ebx),%eax
81000c41:	89 f2                	mov    %esi,%edx
81000c43:	01 d0                	add    %edx,%eax
81000c45:	89 03                	mov    %eax,(%ebx)
81000c47:	89 fe                	mov    %edi,%esi
81000c49:	e9 9d 00 00 00       	jmp    81000ceb <__sfvwrite_r+0x300>
81000c4e:	8b 13                	mov    (%ebx),%edx
81000c50:	8b 43 10             	mov    0x10(%ebx),%eax
81000c53:	39 c2                	cmp    %eax,%edx
81000c55:	77 07                	ja     81000c5e <__sfvwrite_r+0x273>
81000c57:	8b 43 14             	mov    0x14(%ebx),%eax
81000c5a:	39 c7                	cmp    %eax,%edi
81000c5c:	73 4c                	jae    81000caa <__sfvwrite_r+0x2bf>
81000c5e:	89 f0                	mov    %esi,%eax
81000c60:	39 c7                	cmp    %eax,%edi
81000c62:	0f 46 c7             	cmovbe %edi,%eax
81000c65:	89 c6                	mov    %eax,%esi
81000c67:	89 f2                	mov    %esi,%edx
81000c69:	8b 03                	mov    (%ebx),%eax
81000c6b:	83 ec 04             	sub    $0x4,%esp
81000c6e:	52                   	push   %edx
81000c6f:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c72:	50                   	push   %eax
81000c73:	e8 88 0e 00 00       	call   81001b00 <memmove>
81000c78:	83 c4 10             	add    $0x10,%esp
81000c7b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c7e:	29 f0                	sub    %esi,%eax
81000c80:	89 43 08             	mov    %eax,0x8(%ebx)
81000c83:	8b 03                	mov    (%ebx),%eax
81000c85:	89 f2                	mov    %esi,%edx
81000c87:	01 d0                	add    %edx,%eax
81000c89:	89 03                	mov    %eax,(%ebx)
81000c8b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c8e:	85 c0                	test   %eax,%eax
81000c90:	75 58                	jne    81000cea <__sfvwrite_r+0x2ff>
81000c92:	83 ec 08             	sub    $0x8,%esp
81000c95:	53                   	push   %ebx
81000c96:	ff 75 08             	pushl  0x8(%ebp)
81000c99:	e8 0e 21 00 00       	call   81002dac <_fflush_r>
81000c9e:	83 c4 10             	add    $0x10,%esp
81000ca1:	85 c0                	test   %eax,%eax
81000ca3:	74 45                	je     81000cea <__sfvwrite_r+0x2ff>
81000ca5:	e9 c7 01 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000caa:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000cb0:	77 04                	ja     81000cb6 <__sfvwrite_r+0x2cb>
81000cb2:	89 f8                	mov    %edi,%eax
81000cb4:	eb 05                	jmp    81000cbb <__sfvwrite_r+0x2d0>
81000cb6:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000cbb:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000cbe:	99                   	cltd   
81000cbf:	f7 f9                	idiv   %ecx
81000cc1:	89 c2                	mov    %eax,%edx
81000cc3:	8b 43 14             	mov    0x14(%ebx),%eax
81000cc6:	89 d6                	mov    %edx,%esi
81000cc8:	0f af f0             	imul   %eax,%esi
81000ccb:	8b 53 24             	mov    0x24(%ebx),%edx
81000cce:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000cd1:	56                   	push   %esi
81000cd2:	ff 75 c4             	pushl  -0x3c(%ebp)
81000cd5:	50                   	push   %eax
81000cd6:	ff 75 08             	pushl  0x8(%ebp)
81000cd9:	ff d2                	call   *%edx
81000cdb:	83 c4 10             	add    $0x10,%esp
81000cde:	89 c6                	mov    %eax,%esi
81000ce0:	85 f6                	test   %esi,%esi
81000ce2:	0f 8e 85 01 00 00    	jle    81000e6d <__sfvwrite_r+0x482>
81000ce8:	eb 01                	jmp    81000ceb <__sfvwrite_r+0x300>
81000cea:	90                   	nop
81000ceb:	89 f0                	mov    %esi,%eax
81000ced:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000cf0:	89 f0                	mov    %esi,%eax
81000cf2:	29 c7                	sub    %eax,%edi
81000cf4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cf7:	8b 40 08             	mov    0x8(%eax),%eax
81000cfa:	89 f2                	mov    %esi,%edx
81000cfc:	29 d0                	sub    %edx,%eax
81000cfe:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d01:	89 41 08             	mov    %eax,0x8(%ecx)
81000d04:	8b 45 10             	mov    0x10(%ebp),%eax
81000d07:	8b 40 08             	mov    0x8(%eax),%eax
81000d0a:	85 c0                	test   %eax,%eax
81000d0c:	0f 85 d4 fd ff ff    	jne    81000ae6 <__sfvwrite_r+0xfb>
81000d12:	e9 4c 01 00 00       	jmp    81000e63 <__sfvwrite_r+0x478>
81000d17:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d1e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000d25:	eb 18                	jmp    81000d3f <__sfvwrite_r+0x354>
81000d27:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d2e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000d31:	8b 08                	mov    (%eax),%ecx
81000d33:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000d36:	8b 78 04             	mov    0x4(%eax),%edi
81000d39:	83 c0 08             	add    $0x8,%eax
81000d3c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000d3f:	85 ff                	test   %edi,%edi
81000d41:	74 e4                	je     81000d27 <__sfvwrite_r+0x33c>
81000d43:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d47:	75 32                	jne    81000d7b <__sfvwrite_r+0x390>
81000d49:	83 ec 04             	sub    $0x4,%esp
81000d4c:	57                   	push   %edi
81000d4d:	6a 0a                	push   $0xa
81000d4f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d52:	56                   	push   %esi
81000d53:	e8 c8 0c 00 00       	call   81001a20 <memchr>
81000d58:	83 c4 10             	add    $0x10,%esp
81000d5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d5e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d62:	74 0a                	je     81000d6e <__sfvwrite_r+0x383>
81000d64:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d67:	83 c0 01             	add    $0x1,%eax
81000d6a:	29 f0                	sub    %esi,%eax
81000d6c:	eb 03                	jmp    81000d71 <__sfvwrite_r+0x386>
81000d6e:	8d 47 01             	lea    0x1(%edi),%eax
81000d71:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d74:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d7b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d7e:	39 c7                	cmp    %eax,%edi
81000d80:	0f 46 c7             	cmovbe %edi,%eax
81000d83:	89 c1                	mov    %eax,%ecx
81000d85:	8b 53 08             	mov    0x8(%ebx),%edx
81000d88:	8b 43 14             	mov    0x14(%ebx),%eax
81000d8b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d8e:	8b 13                	mov    (%ebx),%edx
81000d90:	8b 43 10             	mov    0x10(%ebx),%eax
81000d93:	39 c2                	cmp    %eax,%edx
81000d95:	76 38                	jbe    81000dcf <__sfvwrite_r+0x3e4>
81000d97:	39 f1                	cmp    %esi,%ecx
81000d99:	7e 34                	jle    81000dcf <__sfvwrite_r+0x3e4>
81000d9b:	89 f2                	mov    %esi,%edx
81000d9d:	8b 03                	mov    (%ebx),%eax
81000d9f:	83 ec 04             	sub    $0x4,%esp
81000da2:	52                   	push   %edx
81000da3:	ff 75 c4             	pushl  -0x3c(%ebp)
81000da6:	50                   	push   %eax
81000da7:	e8 54 0d 00 00       	call   81001b00 <memmove>
81000dac:	83 c4 10             	add    $0x10,%esp
81000daf:	8b 03                	mov    (%ebx),%eax
81000db1:	89 f2                	mov    %esi,%edx
81000db3:	01 d0                	add    %edx,%eax
81000db5:	89 03                	mov    %eax,(%ebx)
81000db7:	83 ec 08             	sub    $0x8,%esp
81000dba:	53                   	push   %ebx
81000dbb:	ff 75 08             	pushl  0x8(%ebp)
81000dbe:	e8 e9 1f 00 00       	call   81002dac <_fflush_r>
81000dc3:	83 c4 10             	add    $0x10,%esp
81000dc6:	85 c0                	test   %eax,%eax
81000dc8:	74 4f                	je     81000e19 <__sfvwrite_r+0x42e>
81000dca:	e9 a2 00 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000dcf:	8b 73 14             	mov    0x14(%ebx),%esi
81000dd2:	89 c8                	mov    %ecx,%eax
81000dd4:	39 c6                	cmp    %eax,%esi
81000dd6:	7f 1b                	jg     81000df3 <__sfvwrite_r+0x408>
81000dd8:	8b 53 24             	mov    0x24(%ebx),%edx
81000ddb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000dde:	56                   	push   %esi
81000ddf:	ff 75 c4             	pushl  -0x3c(%ebp)
81000de2:	50                   	push   %eax
81000de3:	ff 75 08             	pushl  0x8(%ebp)
81000de6:	ff d2                	call   *%edx
81000de8:	83 c4 10             	add    $0x10,%esp
81000deb:	89 c6                	mov    %eax,%esi
81000ded:	85 f6                	test   %esi,%esi
81000def:	7f 28                	jg     81000e19 <__sfvwrite_r+0x42e>
81000df1:	eb 7e                	jmp    81000e71 <__sfvwrite_r+0x486>
81000df3:	89 ce                	mov    %ecx,%esi
81000df5:	89 f2                	mov    %esi,%edx
81000df7:	8b 03                	mov    (%ebx),%eax
81000df9:	83 ec 04             	sub    $0x4,%esp
81000dfc:	52                   	push   %edx
81000dfd:	ff 75 c4             	pushl  -0x3c(%ebp)
81000e00:	50                   	push   %eax
81000e01:	e8 fa 0c 00 00       	call   81001b00 <memmove>
81000e06:	83 c4 10             	add    $0x10,%esp
81000e09:	8b 43 08             	mov    0x8(%ebx),%eax
81000e0c:	29 f0                	sub    %esi,%eax
81000e0e:	89 43 08             	mov    %eax,0x8(%ebx)
81000e11:	8b 03                	mov    (%ebx),%eax
81000e13:	89 f2                	mov    %esi,%edx
81000e15:	01 d0                	add    %edx,%eax
81000e17:	89 03                	mov    %eax,(%ebx)
81000e19:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000e1c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000e20:	75 1a                	jne    81000e3c <__sfvwrite_r+0x451>
81000e22:	83 ec 08             	sub    $0x8,%esp
81000e25:	53                   	push   %ebx
81000e26:	ff 75 08             	pushl  0x8(%ebp)
81000e29:	e8 7e 1f 00 00       	call   81002dac <_fflush_r>
81000e2e:	83 c4 10             	add    $0x10,%esp
81000e31:	85 c0                	test   %eax,%eax
81000e33:	75 3b                	jne    81000e70 <__sfvwrite_r+0x485>
81000e35:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e3c:	89 f0                	mov    %esi,%eax
81000e3e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e41:	89 f0                	mov    %esi,%eax
81000e43:	29 c7                	sub    %eax,%edi
81000e45:	8b 45 10             	mov    0x10(%ebp),%eax
81000e48:	8b 40 08             	mov    0x8(%eax),%eax
81000e4b:	89 f2                	mov    %esi,%edx
81000e4d:	29 d0                	sub    %edx,%eax
81000e4f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e52:	89 41 08             	mov    %eax,0x8(%ecx)
81000e55:	8b 45 10             	mov    0x10(%ebp),%eax
81000e58:	8b 40 08             	mov    0x8(%eax),%eax
81000e5b:	85 c0                	test   %eax,%eax
81000e5d:	0f 85 dc fe ff ff    	jne    81000d3f <__sfvwrite_r+0x354>
81000e63:	b8 00 00 00 00       	mov    $0x0,%eax
81000e68:	eb 17                	jmp    81000e81 <__sfvwrite_r+0x496>
81000e6a:	90                   	nop
81000e6b:	eb 04                	jmp    81000e71 <__sfvwrite_r+0x486>
81000e6d:	90                   	nop
81000e6e:	eb 01                	jmp    81000e71 <__sfvwrite_r+0x486>
81000e70:	90                   	nop
81000e71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e75:	83 c8 40             	or     $0x40,%eax
81000e78:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e81:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e84:	5b                   	pop    %ebx
81000e85:	5e                   	pop    %esi
81000e86:	5f                   	pop    %edi
81000e87:	5d                   	pop    %ebp
81000e88:	c3                   	ret    

81000e89 <_fwalk>:
81000e89:	55                   	push   %ebp
81000e8a:	89 e5                	mov    %esp,%ebp
81000e8c:	57                   	push   %edi
81000e8d:	56                   	push   %esi
81000e8e:	53                   	push   %ebx
81000e8f:	83 ec 1c             	sub    $0x1c,%esp
81000e92:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e99:	8b 45 08             	mov    0x8(%ebp),%eax
81000e9c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000ea2:	eb 3e                	jmp    81000ee2 <_fwalk+0x59>
81000ea4:	8b 5e 08             	mov    0x8(%esi),%ebx
81000ea7:	8b 7e 04             	mov    0x4(%esi),%edi
81000eaa:	eb 2d                	jmp    81000ed9 <_fwalk+0x50>
81000eac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000eb0:	66 85 c0             	test   %ax,%ax
81000eb3:	74 21                	je     81000ed6 <_fwalk+0x4d>
81000eb5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000eb9:	66 83 f8 01          	cmp    $0x1,%ax
81000ebd:	74 17                	je     81000ed6 <_fwalk+0x4d>
81000ebf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000ec3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000ec7:	74 0d                	je     81000ed6 <_fwalk+0x4d>
81000ec9:	83 ec 0c             	sub    $0xc,%esp
81000ecc:	53                   	push   %ebx
81000ecd:	ff 55 0c             	call   *0xc(%ebp)
81000ed0:	83 c4 10             	add    $0x10,%esp
81000ed3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000ed6:	83 c3 68             	add    $0x68,%ebx
81000ed9:	83 ef 01             	sub    $0x1,%edi
81000edc:	85 ff                	test   %edi,%edi
81000ede:	79 cc                	jns    81000eac <_fwalk+0x23>
81000ee0:	8b 36                	mov    (%esi),%esi
81000ee2:	85 f6                	test   %esi,%esi
81000ee4:	75 be                	jne    81000ea4 <_fwalk+0x1b>
81000ee6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ee9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000eec:	5b                   	pop    %ebx
81000eed:	5e                   	pop    %esi
81000eee:	5f                   	pop    %edi
81000eef:	5d                   	pop    %ebp
81000ef0:	c3                   	ret    

81000ef1 <_fwalk_reent>:
81000ef1:	55                   	push   %ebp
81000ef2:	89 e5                	mov    %esp,%ebp
81000ef4:	57                   	push   %edi
81000ef5:	56                   	push   %esi
81000ef6:	53                   	push   %ebx
81000ef7:	83 ec 1c             	sub    $0x1c,%esp
81000efa:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f01:	8b 45 08             	mov    0x8(%ebp),%eax
81000f04:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000f0a:	eb 41                	jmp    81000f4d <_fwalk_reent+0x5c>
81000f0c:	8b 5e 08             	mov    0x8(%esi),%ebx
81000f0f:	8b 7e 04             	mov    0x4(%esi),%edi
81000f12:	eb 30                	jmp    81000f44 <_fwalk_reent+0x53>
81000f14:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f18:	66 85 c0             	test   %ax,%ax
81000f1b:	74 24                	je     81000f41 <_fwalk_reent+0x50>
81000f1d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f21:	66 83 f8 01          	cmp    $0x1,%ax
81000f25:	74 1a                	je     81000f41 <_fwalk_reent+0x50>
81000f27:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000f2b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000f2f:	74 10                	je     81000f41 <_fwalk_reent+0x50>
81000f31:	83 ec 08             	sub    $0x8,%esp
81000f34:	53                   	push   %ebx
81000f35:	ff 75 08             	pushl  0x8(%ebp)
81000f38:	ff 55 0c             	call   *0xc(%ebp)
81000f3b:	83 c4 10             	add    $0x10,%esp
81000f3e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f41:	83 c3 68             	add    $0x68,%ebx
81000f44:	83 ef 01             	sub    $0x1,%edi
81000f47:	85 ff                	test   %edi,%edi
81000f49:	79 c9                	jns    81000f14 <_fwalk_reent+0x23>
81000f4b:	8b 36                	mov    (%esi),%esi
81000f4d:	85 f6                	test   %esi,%esi
81000f4f:	75 bb                	jne    81000f0c <_fwalk_reent+0x1b>
81000f51:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f54:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f57:	5b                   	pop    %ebx
81000f58:	5e                   	pop    %esi
81000f59:	5f                   	pop    %edi
81000f5a:	5d                   	pop    %ebp
81000f5b:	c3                   	ret    

81000f5c <malloc_extend_top>:
81000f5c:	55                   	push   %ebp
81000f5d:	89 e5                	mov    %esp,%ebp
81000f5f:	83 ec 38             	sub    $0x38,%esp
81000f62:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f69:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81000f6e:	8b 40 08             	mov    0x8(%eax),%eax
81000f71:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f74:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f77:	8b 40 04             	mov    0x4(%eax),%eax
81000f7a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f7d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f80:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f83:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f86:	01 d0                	add    %edx,%eax
81000f88:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f8b:	8b 15 40 40 00 81    	mov    0x81004040,%edx
81000f91:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f94:	01 d0                	add    %edx,%eax
81000f96:	83 c0 10             	add    $0x10,%eax
81000f99:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f9c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000fa3:	a1 0c 40 00 81       	mov    0x8100400c,%eax
81000fa8:	83 f8 ff             	cmp    $0xffffffff,%eax
81000fab:	74 15                	je     81000fc2 <malloc_extend_top+0x66>
81000fad:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000fb0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fb3:	01 d0                	add    %edx,%eax
81000fb5:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fb8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fbb:	f7 d8                	neg    %eax
81000fbd:	21 d0                	and    %edx,%eax
81000fbf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fc2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc5:	83 ec 08             	sub    $0x8,%esp
81000fc8:	50                   	push   %eax
81000fc9:	ff 75 08             	pushl  0x8(%ebp)
81000fcc:	e8 58 17 00 00       	call   81002729 <_sbrk_r>
81000fd1:	83 c4 10             	add    $0x10,%esp
81000fd4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fd7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000fdb:	0f 84 0b 02 00 00    	je     810011ec <malloc_extend_top+0x290>
81000fe1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fe7:	73 0e                	jae    81000ff7 <malloc_extend_top+0x9b>
81000fe9:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81000fee:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000ff1:	0f 85 f5 01 00 00    	jne    810011ec <malloc_extend_top+0x290>
81000ff7:	a1 60 40 00 81       	mov    0x81004060,%eax
81000ffc:	89 c2                	mov    %eax,%edx
81000ffe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001001:	01 d0                	add    %edx,%eax
81001003:	a3 60 40 00 81       	mov    %eax,0x81004060
81001008:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100100e:	75 30                	jne    81001040 <malloc_extend_top+0xe4>
81001010:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001013:	8d 50 ff             	lea    -0x1(%eax),%edx
81001016:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001019:	21 d0                	and    %edx,%eax
8100101b:	85 c0                	test   %eax,%eax
8100101d:	75 21                	jne    81001040 <malloc_extend_top+0xe4>
8100101f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001022:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001025:	01 d0                	add    %edx,%eax
81001027:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100102a:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100102f:	8b 40 08             	mov    0x8(%eax),%eax
81001032:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001035:	83 ca 01             	or     $0x1,%edx
81001038:	89 50 04             	mov    %edx,0x4(%eax)
8100103b:	e9 76 01 00 00       	jmp    810011b6 <malloc_extend_top+0x25a>
81001040:	a1 0c 40 00 81       	mov    0x8100400c,%eax
81001045:	83 f8 ff             	cmp    $0xffffffff,%eax
81001048:	75 0a                	jne    81001054 <malloc_extend_top+0xf8>
8100104a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100104d:	a3 0c 40 00 81       	mov    %eax,0x8100400c
81001052:	eb 13                	jmp    81001067 <malloc_extend_top+0x10b>
81001054:	8b 15 60 40 00 81    	mov    0x81004060,%edx
8100105a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100105d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001060:	01 d0                	add    %edx,%eax
81001062:	a3 60 40 00 81       	mov    %eax,0x81004060
81001067:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100106a:	83 c0 08             	add    $0x8,%eax
8100106d:	83 e0 07             	and    $0x7,%eax
81001070:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001073:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001077:	74 13                	je     8100108c <malloc_extend_top+0x130>
81001079:	b8 08 00 00 00       	mov    $0x8,%eax
8100107e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001081:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001084:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001087:	01 45 f4             	add    %eax,-0xc(%ebp)
8100108a:	eb 07                	jmp    81001093 <malloc_extend_top+0x137>
8100108c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001093:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001096:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001099:	01 d0                	add    %edx,%eax
8100109b:	89 c2                	mov    %eax,%edx
8100109d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010a0:	83 e8 01             	sub    $0x1,%eax
810010a3:	21 c2                	and    %eax,%edx
810010a5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010a8:	29 d0                	sub    %edx,%eax
810010aa:	01 45 f0             	add    %eax,-0x10(%ebp)
810010ad:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010b0:	83 e8 01             	sub    $0x1,%eax
810010b3:	21 45 f0             	and    %eax,-0x10(%ebp)
810010b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010b9:	83 ec 08             	sub    $0x8,%esp
810010bc:	50                   	push   %eax
810010bd:	ff 75 08             	pushl  0x8(%ebp)
810010c0:	e8 64 16 00 00       	call   81002729 <_sbrk_r>
810010c5:	83 c4 10             	add    $0x10,%esp
810010c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010cb:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810010cf:	75 28                	jne    810010f9 <malloc_extend_top+0x19d>
810010d1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010d8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810010df:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010e2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010e5:	01 d0                	add    %edx,%eax
810010e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010ea:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010ee:	74 09                	je     810010f9 <malloc_extend_top+0x19d>
810010f0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010f3:	83 e8 08             	sub    $0x8,%eax
810010f6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010f9:	a1 60 40 00 81       	mov    0x81004060,%eax
810010fe:	89 c2                	mov    %eax,%edx
81001100:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001103:	01 d0                	add    %edx,%eax
81001105:	a3 60 40 00 81       	mov    %eax,0x81004060
8100110a:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
8100110f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001112:	89 42 08             	mov    %eax,0x8(%edx)
81001115:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001118:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100111b:	89 c2                	mov    %eax,%edx
8100111d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001120:	01 d0                	add    %edx,%eax
81001122:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001125:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100112a:	8b 40 08             	mov    0x8(%eax),%eax
8100112d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001130:	83 ca 01             	or     $0x1,%edx
81001133:	89 50 04             	mov    %edx,0x4(%eax)
81001136:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100113b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100113e:	74 76                	je     810011b6 <malloc_extend_top+0x25a>
81001140:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001144:	77 14                	ja     8100115a <malloc_extend_top+0x1fe>
81001146:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100114b:	8b 40 08             	mov    0x8(%eax),%eax
8100114e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001155:	e9 93 00 00 00       	jmp    810011ed <malloc_extend_top+0x291>
8100115a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100115d:	83 e8 0c             	sub    $0xc,%eax
81001160:	83 e0 f8             	and    $0xfffffff8,%eax
81001163:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001166:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001169:	8b 40 04             	mov    0x4(%eax),%eax
8100116c:	83 e0 01             	and    $0x1,%eax
8100116f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001172:	89 c2                	mov    %eax,%edx
81001174:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001177:	89 50 04             	mov    %edx,0x4(%eax)
8100117a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100117d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001180:	01 d0                	add    %edx,%eax
81001182:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001189:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100118c:	8d 50 04             	lea    0x4(%eax),%edx
8100118f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001192:	01 d0                	add    %edx,%eax
81001194:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100119b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100119f:	76 15                	jbe    810011b6 <malloc_extend_top+0x25a>
810011a1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011a4:	83 c0 08             	add    $0x8,%eax
810011a7:	83 ec 08             	sub    $0x8,%esp
810011aa:	50                   	push   %eax
810011ab:	ff 75 08             	pushl  0x8(%ebp)
810011ae:	e8 8a 1c 00 00       	call   81002e3d <_free_r>
810011b3:	83 c4 10             	add    $0x10,%esp
810011b6:	a1 60 40 00 81       	mov    0x81004060,%eax
810011bb:	89 c2                	mov    %eax,%edx
810011bd:	a1 44 40 00 81       	mov    0x81004044,%eax
810011c2:	39 c2                	cmp    %eax,%edx
810011c4:	76 0a                	jbe    810011d0 <malloc_extend_top+0x274>
810011c6:	a1 60 40 00 81       	mov    0x81004060,%eax
810011cb:	a3 44 40 00 81       	mov    %eax,0x81004044
810011d0:	a1 60 40 00 81       	mov    0x81004060,%eax
810011d5:	89 c2                	mov    %eax,%edx
810011d7:	a1 48 40 00 81       	mov    0x81004048,%eax
810011dc:	39 c2                	cmp    %eax,%edx
810011de:	76 0d                	jbe    810011ed <malloc_extend_top+0x291>
810011e0:	a1 60 40 00 81       	mov    0x81004060,%eax
810011e5:	a3 48 40 00 81       	mov    %eax,0x81004048
810011ea:	eb 01                	jmp    810011ed <malloc_extend_top+0x291>
810011ec:	90                   	nop
810011ed:	c9                   	leave  
810011ee:	c3                   	ret    

810011ef <_malloc_r>:
810011ef:	55                   	push   %ebp
810011f0:	89 e5                	mov    %esp,%ebp
810011f2:	53                   	push   %ebx
810011f3:	83 ec 44             	sub    $0x44,%esp
810011f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011f9:	83 c0 0b             	add    $0xb,%eax
810011fc:	83 f8 16             	cmp    $0x16,%eax
810011ff:	76 0b                	jbe    8100120c <_malloc_r+0x1d>
81001201:	8b 45 0c             	mov    0xc(%ebp),%eax
81001204:	83 c0 0b             	add    $0xb,%eax
81001207:	83 e0 f8             	and    $0xfffffff8,%eax
8100120a:	eb 05                	jmp    81001211 <_malloc_r+0x22>
8100120c:	b8 10 00 00 00       	mov    $0x10,%eax
81001211:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001214:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001217:	85 c0                	test   %eax,%eax
81001219:	78 08                	js     81001223 <_malloc_r+0x34>
8100121b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100121e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001221:	73 13                	jae    81001236 <_malloc_r+0x47>
81001223:	8b 45 08             	mov    0x8(%ebp),%eax
81001226:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100122c:	b8 00 00 00 00       	mov    $0x0,%eax
81001231:	e9 d6 07 00 00       	jmp    81001a0c <_malloc_r+0x81d>
81001236:	83 ec 0c             	sub    $0xc,%esp
81001239:	ff 75 08             	pushl  0x8(%ebp)
8100123c:	e8 d4 09 00 00       	call   81001c15 <__malloc_lock>
81001241:	83 c4 10             	add    $0x10,%esp
81001244:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100124b:	0f 87 b0 00 00 00    	ja     81001301 <_malloc_r+0x112>
81001251:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001254:	c1 e8 03             	shr    $0x3,%eax
81001257:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100125a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100125d:	83 c0 01             	add    $0x1,%eax
81001260:	01 c0                	add    %eax,%eax
81001262:	c1 e0 02             	shl    $0x2,%eax
81001265:	05 00 3c 00 81       	add    $0x81003c00,%eax
8100126a:	83 e8 08             	sub    $0x8,%eax
8100126d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001270:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001273:	8b 40 0c             	mov    0xc(%eax),%eax
81001276:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001279:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100127c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100127f:	75 0d                	jne    8100128e <_malloc_r+0x9f>
81001281:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001285:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001288:	8b 40 0c             	mov    0xc(%eax),%eax
8100128b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100128e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001291:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001294:	74 62                	je     810012f8 <_malloc_r+0x109>
81001296:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001299:	8b 40 04             	mov    0x4(%eax),%eax
8100129c:	83 e0 fc             	and    $0xfffffffc,%eax
8100129f:	89 45 cc             	mov    %eax,-0x34(%ebp)
810012a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a5:	8b 40 0c             	mov    0xc(%eax),%eax
810012a8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ae:	8b 40 08             	mov    0x8(%eax),%eax
810012b1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012b4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012b7:	8b 55 d8             	mov    -0x28(%ebp),%edx
810012ba:	89 50 0c             	mov    %edx,0xc(%eax)
810012bd:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012c0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012c3:	89 50 08             	mov    %edx,0x8(%eax)
810012c6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012c9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012cc:	01 d0                	add    %edx,%eax
810012ce:	8b 50 04             	mov    0x4(%eax),%edx
810012d1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012d4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012d7:	01 c8                	add    %ecx,%eax
810012d9:	83 ca 01             	or     $0x1,%edx
810012dc:	89 50 04             	mov    %edx,0x4(%eax)
810012df:	83 ec 0c             	sub    $0xc,%esp
810012e2:	ff 75 08             	pushl  0x8(%ebp)
810012e5:	e8 31 09 00 00       	call   81001c1b <__malloc_unlock>
810012ea:	83 c4 10             	add    $0x10,%esp
810012ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f0:	83 c0 08             	add    $0x8,%eax
810012f3:	e9 14 07 00 00       	jmp    81001a0c <_malloc_r+0x81d>
810012f8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012fc:	e9 46 01 00 00       	jmp    81001447 <_malloc_r+0x258>
81001301:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001304:	c1 e8 09             	shr    $0x9,%eax
81001307:	85 c0                	test   %eax,%eax
81001309:	75 08                	jne    81001313 <_malloc_r+0x124>
8100130b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100130e:	c1 e8 03             	shr    $0x3,%eax
81001311:	eb 77                	jmp    8100138a <_malloc_r+0x19b>
81001313:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001316:	c1 e8 09             	shr    $0x9,%eax
81001319:	83 f8 04             	cmp    $0x4,%eax
8100131c:	77 0b                	ja     81001329 <_malloc_r+0x13a>
8100131e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001321:	c1 e8 06             	shr    $0x6,%eax
81001324:	83 c0 38             	add    $0x38,%eax
81001327:	eb 61                	jmp    8100138a <_malloc_r+0x19b>
81001329:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100132c:	c1 e8 09             	shr    $0x9,%eax
8100132f:	83 f8 14             	cmp    $0x14,%eax
81001332:	77 0b                	ja     8100133f <_malloc_r+0x150>
81001334:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001337:	c1 e8 09             	shr    $0x9,%eax
8100133a:	83 c0 5b             	add    $0x5b,%eax
8100133d:	eb 4b                	jmp    8100138a <_malloc_r+0x19b>
8100133f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001342:	c1 e8 09             	shr    $0x9,%eax
81001345:	83 f8 54             	cmp    $0x54,%eax
81001348:	77 0b                	ja     81001355 <_malloc_r+0x166>
8100134a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100134d:	c1 e8 0c             	shr    $0xc,%eax
81001350:	83 c0 6e             	add    $0x6e,%eax
81001353:	eb 35                	jmp    8100138a <_malloc_r+0x19b>
81001355:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001358:	c1 e8 09             	shr    $0x9,%eax
8100135b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001360:	77 0b                	ja     8100136d <_malloc_r+0x17e>
81001362:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001365:	c1 e8 0f             	shr    $0xf,%eax
81001368:	83 c0 77             	add    $0x77,%eax
8100136b:	eb 1d                	jmp    8100138a <_malloc_r+0x19b>
8100136d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001370:	c1 e8 09             	shr    $0x9,%eax
81001373:	3d 54 05 00 00       	cmp    $0x554,%eax
81001378:	77 0b                	ja     81001385 <_malloc_r+0x196>
8100137a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100137d:	c1 e8 12             	shr    $0x12,%eax
81001380:	83 c0 7c             	add    $0x7c,%eax
81001383:	eb 05                	jmp    8100138a <_malloc_r+0x19b>
81001385:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100138a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100138d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001390:	83 c0 01             	add    $0x1,%eax
81001393:	01 c0                	add    %eax,%eax
81001395:	c1 e0 02             	shl    $0x2,%eax
81001398:	05 00 3c 00 81       	add    $0x81003c00,%eax
8100139d:	83 e8 08             	sub    $0x8,%eax
810013a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013a6:	8b 40 0c             	mov    0xc(%eax),%eax
810013a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013ac:	e9 86 00 00 00       	jmp    81001437 <_malloc_r+0x248>
810013b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013b4:	8b 40 04             	mov    0x4(%eax),%eax
810013b7:	83 e0 fc             	and    $0xfffffffc,%eax
810013ba:	89 45 cc             	mov    %eax,-0x34(%ebp)
810013bd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013c0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810013c3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013c6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810013ca:	7e 06                	jle    810013d2 <_malloc_r+0x1e3>
810013cc:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810013d0:	eb 71                	jmp    81001443 <_malloc_r+0x254>
810013d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013d6:	78 56                	js     8100142e <_malloc_r+0x23f>
810013d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013db:	8b 40 0c             	mov    0xc(%eax),%eax
810013de:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e4:	8b 40 08             	mov    0x8(%eax),%eax
810013e7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013ea:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013ed:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013f0:	89 50 0c             	mov    %edx,0xc(%eax)
810013f3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013f6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013f9:	89 50 08             	mov    %edx,0x8(%eax)
810013fc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013ff:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001402:	01 d0                	add    %edx,%eax
81001404:	8b 50 04             	mov    0x4(%eax),%edx
81001407:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100140a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100140d:	01 c8                	add    %ecx,%eax
8100140f:	83 ca 01             	or     $0x1,%edx
81001412:	89 50 04             	mov    %edx,0x4(%eax)
81001415:	83 ec 0c             	sub    $0xc,%esp
81001418:	ff 75 08             	pushl  0x8(%ebp)
8100141b:	e8 fb 07 00 00       	call   81001c1b <__malloc_unlock>
81001420:	83 c4 10             	add    $0x10,%esp
81001423:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001426:	83 c0 08             	add    $0x8,%eax
81001429:	e9 de 05 00 00       	jmp    81001a0c <_malloc_r+0x81d>
8100142e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001431:	8b 40 0c             	mov    0xc(%eax),%eax
81001434:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001437:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100143d:	0f 85 6e ff ff ff    	jne    810013b1 <_malloc_r+0x1c2>
81001443:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001447:	b8 08 3c 00 81       	mov    $0x81003c08,%eax
8100144c:	8b 40 08             	mov    0x8(%eax),%eax
8100144f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001452:	b8 08 3c 00 81       	mov    $0x81003c08,%eax
81001457:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100145a:	0f 84 9c 02 00 00    	je     810016fc <_malloc_r+0x50d>
81001460:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001463:	8b 40 04             	mov    0x4(%eax),%eax
81001466:	83 e0 fc             	and    $0xfffffffc,%eax
81001469:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100146c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100146f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001472:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001475:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001479:	7e 7a                	jle    810014f5 <_malloc_r+0x306>
8100147b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100147e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001481:	01 d0                	add    %edx,%eax
81001483:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001486:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001489:	83 c8 01             	or     $0x1,%eax
8100148c:	89 c2                	mov    %eax,%edx
8100148e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001491:	89 50 04             	mov    %edx,0x4(%eax)
81001494:	b8 08 3c 00 81       	mov    $0x81003c08,%eax
81001499:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100149c:	89 50 0c             	mov    %edx,0xc(%eax)
8100149f:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
810014a4:	8b 40 0c             	mov    0xc(%eax),%eax
810014a7:	89 42 08             	mov    %eax,0x8(%edx)
810014aa:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
810014af:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014b2:	89 50 0c             	mov    %edx,0xc(%eax)
810014b5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014b8:	8b 50 0c             	mov    0xc(%eax),%edx
810014bb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014be:	89 50 08             	mov    %edx,0x8(%eax)
810014c1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014c4:	83 c8 01             	or     $0x1,%eax
810014c7:	89 c2                	mov    %eax,%edx
810014c9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014cc:	89 50 04             	mov    %edx,0x4(%eax)
810014cf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014d5:	01 c2                	add    %eax,%edx
810014d7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014da:	89 02                	mov    %eax,(%edx)
810014dc:	83 ec 0c             	sub    $0xc,%esp
810014df:	ff 75 08             	pushl  0x8(%ebp)
810014e2:	e8 34 07 00 00       	call   81001c1b <__malloc_unlock>
810014e7:	83 c4 10             	add    $0x10,%esp
810014ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ed:	83 c0 08             	add    $0x8,%eax
810014f0:	e9 17 05 00 00       	jmp    81001a0c <_malloc_r+0x81d>
810014f5:	b8 08 3c 00 81       	mov    $0x81003c08,%eax
810014fa:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
810014ff:	89 50 0c             	mov    %edx,0xc(%eax)
81001502:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
81001507:	8b 40 0c             	mov    0xc(%eax),%eax
8100150a:	89 42 08             	mov    %eax,0x8(%edx)
8100150d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001511:	78 32                	js     81001545 <_malloc_r+0x356>
81001513:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001516:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001519:	01 d0                	add    %edx,%eax
8100151b:	8b 50 04             	mov    0x4(%eax),%edx
8100151e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001521:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001524:	01 c8                	add    %ecx,%eax
81001526:	83 ca 01             	or     $0x1,%edx
81001529:	89 50 04             	mov    %edx,0x4(%eax)
8100152c:	83 ec 0c             	sub    $0xc,%esp
8100152f:	ff 75 08             	pushl  0x8(%ebp)
81001532:	e8 e4 06 00 00       	call   81001c1b <__malloc_unlock>
81001537:	83 c4 10             	add    $0x10,%esp
8100153a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100153d:	83 c0 08             	add    $0x8,%eax
81001540:	e9 c7 04 00 00       	jmp    81001a0c <_malloc_r+0x81d>
81001545:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100154c:	77 7f                	ja     810015cd <_malloc_r+0x3de>
8100154e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001551:	c1 e8 03             	shr    $0x3,%eax
81001554:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001557:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100155c:	8b 58 04             	mov    0x4(%eax),%ebx
8100155f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001562:	8d 50 03             	lea    0x3(%eax),%edx
81001565:	85 c0                	test   %eax,%eax
81001567:	0f 48 c2             	cmovs  %edx,%eax
8100156a:	c1 f8 02             	sar    $0x2,%eax
8100156d:	ba 01 00 00 00       	mov    $0x1,%edx
81001572:	89 c1                	mov    %eax,%ecx
81001574:	d3 e2                	shl    %cl,%edx
81001576:	89 d0                	mov    %edx,%eax
81001578:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
8100157d:	09 d8                	or     %ebx,%eax
8100157f:	89 42 04             	mov    %eax,0x4(%edx)
81001582:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001585:	83 c0 01             	add    $0x1,%eax
81001588:	01 c0                	add    %eax,%eax
8100158a:	c1 e0 02             	shl    $0x2,%eax
8100158d:	05 00 3c 00 81       	add    $0x81003c00,%eax
81001592:	83 e8 08             	sub    $0x8,%eax
81001595:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001598:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100159b:	8b 40 08             	mov    0x8(%eax),%eax
8100159e:	89 45 dc             	mov    %eax,-0x24(%ebp)
810015a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015a4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015a7:	89 50 0c             	mov    %edx,0xc(%eax)
810015aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015ad:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015b0:	89 50 08             	mov    %edx,0x8(%eax)
810015b3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015b6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015b9:	89 50 08             	mov    %edx,0x8(%eax)
810015bc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015bf:	8b 50 08             	mov    0x8(%eax),%edx
810015c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015c5:	89 50 0c             	mov    %edx,0xc(%eax)
810015c8:	e9 2f 01 00 00       	jmp    810016fc <_malloc_r+0x50d>
810015cd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d0:	c1 e8 09             	shr    $0x9,%eax
810015d3:	85 c0                	test   %eax,%eax
810015d5:	75 08                	jne    810015df <_malloc_r+0x3f0>
810015d7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015da:	c1 e8 03             	shr    $0x3,%eax
810015dd:	eb 77                	jmp    81001656 <_malloc_r+0x467>
810015df:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e2:	c1 e8 09             	shr    $0x9,%eax
810015e5:	83 f8 04             	cmp    $0x4,%eax
810015e8:	77 0b                	ja     810015f5 <_malloc_r+0x406>
810015ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ed:	c1 e8 06             	shr    $0x6,%eax
810015f0:	83 c0 38             	add    $0x38,%eax
810015f3:	eb 61                	jmp    81001656 <_malloc_r+0x467>
810015f5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f8:	c1 e8 09             	shr    $0x9,%eax
810015fb:	83 f8 14             	cmp    $0x14,%eax
810015fe:	77 0b                	ja     8100160b <_malloc_r+0x41c>
81001600:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001603:	c1 e8 09             	shr    $0x9,%eax
81001606:	83 c0 5b             	add    $0x5b,%eax
81001609:	eb 4b                	jmp    81001656 <_malloc_r+0x467>
8100160b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100160e:	c1 e8 09             	shr    $0x9,%eax
81001611:	83 f8 54             	cmp    $0x54,%eax
81001614:	77 0b                	ja     81001621 <_malloc_r+0x432>
81001616:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001619:	c1 e8 0c             	shr    $0xc,%eax
8100161c:	83 c0 6e             	add    $0x6e,%eax
8100161f:	eb 35                	jmp    81001656 <_malloc_r+0x467>
81001621:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001624:	c1 e8 09             	shr    $0x9,%eax
81001627:	3d 54 01 00 00       	cmp    $0x154,%eax
8100162c:	77 0b                	ja     81001639 <_malloc_r+0x44a>
8100162e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001631:	c1 e8 0f             	shr    $0xf,%eax
81001634:	83 c0 77             	add    $0x77,%eax
81001637:	eb 1d                	jmp    81001656 <_malloc_r+0x467>
81001639:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100163c:	c1 e8 09             	shr    $0x9,%eax
8100163f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001644:	77 0b                	ja     81001651 <_malloc_r+0x462>
81001646:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001649:	c1 e8 12             	shr    $0x12,%eax
8100164c:	83 c0 7c             	add    $0x7c,%eax
8100164f:	eb 05                	jmp    81001656 <_malloc_r+0x467>
81001651:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001656:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001659:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100165c:	83 c0 01             	add    $0x1,%eax
8100165f:	01 c0                	add    %eax,%eax
81001661:	c1 e0 02             	shl    $0x2,%eax
81001664:	05 00 3c 00 81       	add    $0x81003c00,%eax
81001669:	83 e8 08             	sub    $0x8,%eax
8100166c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100166f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001672:	8b 40 08             	mov    0x8(%eax),%eax
81001675:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001678:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100167b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100167e:	75 36                	jne    810016b6 <_malloc_r+0x4c7>
81001680:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001685:	8b 58 04             	mov    0x4(%eax),%ebx
81001688:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100168b:	8d 50 03             	lea    0x3(%eax),%edx
8100168e:	85 c0                	test   %eax,%eax
81001690:	0f 48 c2             	cmovs  %edx,%eax
81001693:	c1 f8 02             	sar    $0x2,%eax
81001696:	ba 01 00 00 00       	mov    $0x1,%edx
8100169b:	89 c1                	mov    %eax,%ecx
8100169d:	d3 e2                	shl    %cl,%edx
8100169f:	89 d0                	mov    %edx,%eax
810016a1:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
810016a6:	09 d8                	or     %ebx,%eax
810016a8:	89 42 04             	mov    %eax,0x4(%edx)
810016ab:	eb 28                	jmp    810016d5 <_malloc_r+0x4e6>
810016ad:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b0:	8b 40 08             	mov    0x8(%eax),%eax
810016b3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810016bc:	74 0e                	je     810016cc <_malloc_r+0x4dd>
810016be:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016c1:	8b 40 04             	mov    0x4(%eax),%eax
810016c4:	83 e0 fc             	and    $0xfffffffc,%eax
810016c7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810016ca:	72 e1                	jb     810016ad <_malloc_r+0x4be>
810016cc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016cf:	8b 40 0c             	mov    0xc(%eax),%eax
810016d2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016d8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016db:	89 50 0c             	mov    %edx,0xc(%eax)
810016de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016e1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016e4:	89 50 08             	mov    %edx,0x8(%eax)
810016e7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016ea:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016ed:	89 50 08             	mov    %edx,0x8(%eax)
810016f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016f3:	8b 50 08             	mov    0x8(%eax),%edx
810016f6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016f9:	89 50 0c             	mov    %edx,0xc(%eax)
810016fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016ff:	8d 50 03             	lea    0x3(%eax),%edx
81001702:	85 c0                	test   %eax,%eax
81001704:	0f 48 c2             	cmovs  %edx,%eax
81001707:	c1 f8 02             	sar    $0x2,%eax
8100170a:	ba 01 00 00 00       	mov    $0x1,%edx
8100170f:	89 c1                	mov    %eax,%ecx
81001711:	d3 e2                	shl    %cl,%edx
81001713:	89 d0                	mov    %edx,%eax
81001715:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001718:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100171d:	8b 40 04             	mov    0x4(%eax),%eax
81001720:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001723:	0f 87 13 02 00 00    	ja     8100193c <_malloc_r+0x74d>
81001729:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100172e:	8b 40 04             	mov    0x4(%eax),%eax
81001731:	23 45 e4             	and    -0x1c(%ebp),%eax
81001734:	85 c0                	test   %eax,%eax
81001736:	75 27                	jne    8100175f <_malloc_r+0x570>
81001738:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100173b:	83 e0 fc             	and    $0xfffffffc,%eax
8100173e:	83 c0 04             	add    $0x4,%eax
81001741:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001744:	d1 65 e4             	shll   -0x1c(%ebp)
81001747:	eb 07                	jmp    81001750 <_malloc_r+0x561>
81001749:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100174d:	d1 65 e4             	shll   -0x1c(%ebp)
81001750:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001755:	8b 40 04             	mov    0x4(%eax),%eax
81001758:	23 45 e4             	and    -0x1c(%ebp),%eax
8100175b:	85 c0                	test   %eax,%eax
8100175d:	74 ea                	je     81001749 <_malloc_r+0x55a>
8100175f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001762:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001765:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001768:	83 c0 01             	add    $0x1,%eax
8100176b:	01 c0                	add    %eax,%eax
8100176d:	c1 e0 02             	shl    $0x2,%eax
81001770:	05 00 3c 00 81       	add    $0x81003c00,%eax
81001775:	83 e8 08             	sub    $0x8,%eax
81001778:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100177b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100177e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001781:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001784:	8b 40 0c             	mov    0xc(%eax),%eax
81001787:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100178a:	e9 22 01 00 00       	jmp    810018b1 <_malloc_r+0x6c2>
8100178f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001792:	8b 40 04             	mov    0x4(%eax),%eax
81001795:	83 e0 fc             	and    $0xfffffffc,%eax
81001798:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100179b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100179e:	2b 45 d0             	sub    -0x30(%ebp),%eax
810017a1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810017a4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810017a8:	0f 8e 9e 00 00 00    	jle    8100184c <_malloc_r+0x65d>
810017ae:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017b4:	01 d0                	add    %edx,%eax
810017b6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810017b9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017bc:	83 c8 01             	or     $0x1,%eax
810017bf:	89 c2                	mov    %eax,%edx
810017c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017c4:	89 50 04             	mov    %edx,0x4(%eax)
810017c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ca:	8b 40 0c             	mov    0xc(%eax),%eax
810017cd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d3:	8b 40 08             	mov    0x8(%eax),%eax
810017d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017d9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017dc:	8b 55 d8             	mov    -0x28(%ebp),%edx
810017df:	89 50 0c             	mov    %edx,0xc(%eax)
810017e2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017e8:	89 50 08             	mov    %edx,0x8(%eax)
810017eb:	b8 08 3c 00 81       	mov    $0x81003c08,%eax
810017f0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017f3:	89 50 0c             	mov    %edx,0xc(%eax)
810017f6:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
810017fb:	8b 40 0c             	mov    0xc(%eax),%eax
810017fe:	89 42 08             	mov    %eax,0x8(%edx)
81001801:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
81001806:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001809:	89 50 0c             	mov    %edx,0xc(%eax)
8100180c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100180f:	8b 50 0c             	mov    0xc(%eax),%edx
81001812:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001815:	89 50 08             	mov    %edx,0x8(%eax)
81001818:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100181b:	83 c8 01             	or     $0x1,%eax
8100181e:	89 c2                	mov    %eax,%edx
81001820:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001823:	89 50 04             	mov    %edx,0x4(%eax)
81001826:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001829:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100182c:	01 c2                	add    %eax,%edx
8100182e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001831:	89 02                	mov    %eax,(%edx)
81001833:	83 ec 0c             	sub    $0xc,%esp
81001836:	ff 75 08             	pushl  0x8(%ebp)
81001839:	e8 dd 03 00 00       	call   81001c1b <__malloc_unlock>
8100183e:	83 c4 10             	add    $0x10,%esp
81001841:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001844:	83 c0 08             	add    $0x8,%eax
81001847:	e9 c0 01 00 00       	jmp    81001a0c <_malloc_r+0x81d>
8100184c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001850:	78 56                	js     810018a8 <_malloc_r+0x6b9>
81001852:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001855:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001858:	01 d0                	add    %edx,%eax
8100185a:	8b 50 04             	mov    0x4(%eax),%edx
8100185d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001860:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001863:	01 c8                	add    %ecx,%eax
81001865:	83 ca 01             	or     $0x1,%edx
81001868:	89 50 04             	mov    %edx,0x4(%eax)
8100186b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186e:	8b 40 0c             	mov    0xc(%eax),%eax
81001871:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001874:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001877:	8b 40 08             	mov    0x8(%eax),%eax
8100187a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100187d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001880:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001883:	89 50 0c             	mov    %edx,0xc(%eax)
81001886:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001889:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100188c:	89 50 08             	mov    %edx,0x8(%eax)
8100188f:	83 ec 0c             	sub    $0xc,%esp
81001892:	ff 75 08             	pushl  0x8(%ebp)
81001895:	e8 81 03 00 00       	call   81001c1b <__malloc_unlock>
8100189a:	83 c4 10             	add    $0x10,%esp
8100189d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a0:	83 c0 08             	add    $0x8,%eax
810018a3:	e9 64 01 00 00       	jmp    81001a0c <_malloc_r+0x81d>
810018a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ab:	8b 40 0c             	mov    0xc(%eax),%eax
810018ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b4:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810018b7:	0f 85 d2 fe ff ff    	jne    8100178f <_malloc_r+0x5a0>
810018bd:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810018c1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810018c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018c8:	83 e0 03             	and    $0x3,%eax
810018cb:	85 c0                	test   %eax,%eax
810018cd:	0f 85 ae fe ff ff    	jne    81001781 <_malloc_r+0x592>
810018d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018d6:	83 e0 03             	and    $0x3,%eax
810018d9:	85 c0                	test   %eax,%eax
810018db:	75 19                	jne    810018f6 <_malloc_r+0x707>
810018dd:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
810018e2:	8b 48 04             	mov    0x4(%eax),%ecx
810018e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018e8:	f7 d0                	not    %eax
810018ea:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
810018ef:	21 c8                	and    %ecx,%eax
810018f1:	89 42 04             	mov    %eax,0x4(%edx)
810018f4:	eb 13                	jmp    81001909 <_malloc_r+0x71a>
810018f6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018fa:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018fe:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001901:	8b 40 08             	mov    0x8(%eax),%eax
81001904:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001907:	74 ca                	je     810018d3 <_malloc_r+0x6e4>
81001909:	d1 65 e4             	shll   -0x1c(%ebp)
8100190c:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001911:	8b 40 04             	mov    0x4(%eax),%eax
81001914:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001917:	77 23                	ja     8100193c <_malloc_r+0x74d>
81001919:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100191d:	74 1d                	je     8100193c <_malloc_r+0x74d>
8100191f:	eb 07                	jmp    81001928 <_malloc_r+0x739>
81001921:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001925:	d1 65 e4             	shll   -0x1c(%ebp)
81001928:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100192d:	8b 40 04             	mov    0x4(%eax),%eax
81001930:	23 45 e4             	and    -0x1c(%ebp),%eax
81001933:	85 c0                	test   %eax,%eax
81001935:	74 ea                	je     81001921 <_malloc_r+0x732>
81001937:	e9 23 fe ff ff       	jmp    8100175f <_malloc_r+0x570>
8100193c:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001941:	8b 40 08             	mov    0x8(%eax),%eax
81001944:	8b 40 04             	mov    0x4(%eax),%eax
81001947:	83 e0 fc             	and    $0xfffffffc,%eax
8100194a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100194d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001950:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001955:	8b 40 08             	mov    0x8(%eax),%eax
81001958:	8b 40 04             	mov    0x4(%eax),%eax
8100195b:	83 e0 fc             	and    $0xfffffffc,%eax
8100195e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001961:	77 06                	ja     81001969 <_malloc_r+0x77a>
81001963:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001967:	7f 53                	jg     810019bc <_malloc_r+0x7cd>
81001969:	83 ec 08             	sub    $0x8,%esp
8100196c:	ff 75 d0             	pushl  -0x30(%ebp)
8100196f:	ff 75 08             	pushl  0x8(%ebp)
81001972:	e8 e5 f5 ff ff       	call   81000f5c <malloc_extend_top>
81001977:	83 c4 10             	add    $0x10,%esp
8100197a:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100197f:	8b 40 08             	mov    0x8(%eax),%eax
81001982:	8b 40 04             	mov    0x4(%eax),%eax
81001985:	83 e0 fc             	and    $0xfffffffc,%eax
81001988:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100198b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100198e:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001993:	8b 40 08             	mov    0x8(%eax),%eax
81001996:	8b 40 04             	mov    0x4(%eax),%eax
81001999:	83 e0 fc             	and    $0xfffffffc,%eax
8100199c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100199f:	77 06                	ja     810019a7 <_malloc_r+0x7b8>
810019a1:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810019a5:	7f 15                	jg     810019bc <_malloc_r+0x7cd>
810019a7:	83 ec 0c             	sub    $0xc,%esp
810019aa:	ff 75 08             	pushl  0x8(%ebp)
810019ad:	e8 69 02 00 00       	call   81001c1b <__malloc_unlock>
810019b2:	83 c4 10             	add    $0x10,%esp
810019b5:	b8 00 00 00 00       	mov    $0x0,%eax
810019ba:	eb 50                	jmp    81001a0c <_malloc_r+0x81d>
810019bc:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
810019c1:	8b 40 08             	mov    0x8(%eax),%eax
810019c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019ca:	83 c8 01             	or     $0x1,%eax
810019cd:	89 c2                	mov    %eax,%edx
810019cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019d2:	89 50 04             	mov    %edx,0x4(%eax)
810019d5:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
810019da:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810019dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019e0:	01 c8                	add    %ecx,%eax
810019e2:	89 42 08             	mov    %eax,0x8(%edx)
810019e5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019e8:	83 c8 01             	or     $0x1,%eax
810019eb:	89 c2                	mov    %eax,%edx
810019ed:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
810019f2:	8b 40 08             	mov    0x8(%eax),%eax
810019f5:	89 50 04             	mov    %edx,0x4(%eax)
810019f8:	83 ec 0c             	sub    $0xc,%esp
810019fb:	ff 75 08             	pushl  0x8(%ebp)
810019fe:	e8 18 02 00 00       	call   81001c1b <__malloc_unlock>
81001a03:	83 c4 10             	add    $0x10,%esp
81001a06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a09:	83 c0 08             	add    $0x8,%eax
81001a0c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001a0f:	c9                   	leave  
81001a10:	c3                   	ret    
81001a11:	66 90                	xchg   %ax,%ax
81001a13:	66 90                	xchg   %ax,%ax
81001a15:	66 90                	xchg   %ax,%ax
81001a17:	66 90                	xchg   %ax,%ax
81001a19:	66 90                	xchg   %ax,%ax
81001a1b:	66 90                	xchg   %ax,%ax
81001a1d:	66 90                	xchg   %ax,%ax
81001a1f:	90                   	nop

81001a20 <memchr>:
81001a20:	55                   	push   %ebp
81001a21:	89 e5                	mov    %esp,%ebp
81001a23:	57                   	push   %edi
81001a24:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a28:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a2b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a2e:	31 d2                	xor    %edx,%edx
81001a30:	85 c9                	test   %ecx,%ecx
81001a32:	74 79                	je     81001aad <L20>
81001a34:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a3a:	74 28                	je     81001a64 <L5>
81001a3c:	3a 07                	cmp    (%edi),%al
81001a3e:	74 6a                	je     81001aaa <L15>
81001a40:	47                   	inc    %edi
81001a41:	49                   	dec    %ecx
81001a42:	74 69                	je     81001aad <L20>
81001a44:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a4a:	74 18                	je     81001a64 <L5>
81001a4c:	3a 07                	cmp    (%edi),%al
81001a4e:	74 5a                	je     81001aaa <L15>
81001a50:	47                   	inc    %edi
81001a51:	49                   	dec    %ecx
81001a52:	74 59                	je     81001aad <L20>
81001a54:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a5a:	74 08                	je     81001a64 <L5>
81001a5c:	3a 07                	cmp    (%edi),%al
81001a5e:	74 4a                	je     81001aaa <L15>
81001a60:	47                   	inc    %edi
81001a61:	49                   	dec    %ecx
81001a62:	74 49                	je     81001aad <L20>

81001a64 <L5>:
81001a64:	88 c4                	mov    %al,%ah
81001a66:	89 c2                	mov    %eax,%edx
81001a68:	c1 e2 10             	shl    $0x10,%edx
81001a6b:	09 d0                	or     %edx,%eax
81001a6d:	53                   	push   %ebx
81001a6e:	66 90                	xchg   %ax,%ax

81001a70 <L8>:
81001a70:	83 e9 04             	sub    $0x4,%ecx
81001a73:	72 1c                	jb     81001a91 <L9>
81001a75:	8b 17                	mov    (%edi),%edx
81001a77:	83 c7 04             	add    $0x4,%edi
81001a7a:	31 c2                	xor    %eax,%edx
81001a7c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a82:	f7 d2                	not    %edx
81001a84:	21 d3                	and    %edx,%ebx
81001a86:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a8c:	74 e2                	je     81001a70 <L8>
81001a8e:	83 ef 04             	sub    $0x4,%edi

81001a91 <L9>:
81001a91:	5b                   	pop    %ebx
81001a92:	31 d2                	xor    %edx,%edx
81001a94:	83 c1 04             	add    $0x4,%ecx
81001a97:	74 14                	je     81001aad <L20>
81001a99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001aa0 <L10>:
81001aa0:	3a 07                	cmp    (%edi),%al
81001aa2:	74 06                	je     81001aaa <L15>
81001aa4:	47                   	inc    %edi
81001aa5:	49                   	dec    %ecx
81001aa6:	75 f8                	jne    81001aa0 <L10>
81001aa8:	31 ff                	xor    %edi,%edi

81001aaa <L15>:
81001aaa:	4a                   	dec    %edx
81001aab:	21 fa                	and    %edi,%edx

81001aad <L20>:
81001aad:	89 d0                	mov    %edx,%eax
81001aaf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001ab2:	5f                   	pop    %edi
81001ab3:	c9                   	leave  
81001ab4:	c3                   	ret    
81001ab5:	66 90                	xchg   %ax,%ax
81001ab7:	90                   	nop

81001ab8 <memcpy>:
81001ab8:	55                   	push   %ebp
81001ab9:	89 e5                	mov    %esp,%ebp
81001abb:	56                   	push   %esi
81001abc:	57                   	push   %edi
81001abd:	53                   	push   %ebx
81001abe:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ac1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001ac4:	8b 75 0c             	mov    0xc(%ebp),%esi
81001ac7:	fc                   	cld    
81001ac8:	83 f9 08             	cmp    $0x8,%ecx
81001acb:	76 26                	jbe    81001af3 <memcpy+0x3b>
81001acd:	89 fa                	mov    %edi,%edx
81001acf:	89 cb                	mov    %ecx,%ebx
81001ad1:	83 e2 03             	and    $0x3,%edx
81001ad4:	74 10                	je     81001ae6 <memcpy+0x2e>
81001ad6:	b9 04 00 00 00       	mov    $0x4,%ecx
81001adb:	29 d1                	sub    %edx,%ecx
81001add:	83 e1 03             	and    $0x3,%ecx
81001ae0:	29 cb                	sub    %ecx,%ebx
81001ae2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ae4:	89 d9                	mov    %ebx,%ecx
81001ae6:	c1 e9 02             	shr    $0x2,%ecx
81001ae9:	8d 76 00             	lea    0x0(%esi),%esi
81001aec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001aee:	89 d9                	mov    %ebx,%ecx
81001af0:	83 e1 03             	and    $0x3,%ecx
81001af3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001af5:	8b 45 08             	mov    0x8(%ebp),%eax
81001af8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001afb:	5b                   	pop    %ebx
81001afc:	5f                   	pop    %edi
81001afd:	5e                   	pop    %esi
81001afe:	c9                   	leave  
81001aff:	c3                   	ret    

81001b00 <memmove>:
81001b00:	55                   	push   %ebp
81001b01:	89 e5                	mov    %esp,%ebp
81001b03:	56                   	push   %esi
81001b04:	57                   	push   %edi
81001b05:	53                   	push   %ebx
81001b06:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b09:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b0c:	8b 75 0c             	mov    0xc(%ebp),%esi
81001b0f:	fc                   	cld    
81001b10:	39 fe                	cmp    %edi,%esi
81001b12:	73 43                	jae    81001b57 <memmove+0x57>
81001b14:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001b18:	39 df                	cmp    %ebx,%edi
81001b1a:	77 3b                	ja     81001b57 <memmove+0x57>
81001b1c:	01 ce                	add    %ecx,%esi
81001b1e:	01 cf                	add    %ecx,%edi
81001b20:	fd                   	std    
81001b21:	83 f9 08             	cmp    $0x8,%ecx
81001b24:	76 2b                	jbe    81001b51 <memmove+0x51>
81001b26:	89 fa                	mov    %edi,%edx
81001b28:	89 cb                	mov    %ecx,%ebx
81001b2a:	83 e2 03             	and    $0x3,%edx
81001b2d:	74 0c                	je     81001b3b <memmove+0x3b>
81001b2f:	89 d1                	mov    %edx,%ecx
81001b31:	4e                   	dec    %esi
81001b32:	4f                   	dec    %edi
81001b33:	29 cb                	sub    %ecx,%ebx
81001b35:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b37:	89 d9                	mov    %ebx,%ecx
81001b39:	46                   	inc    %esi
81001b3a:	47                   	inc    %edi
81001b3b:	c1 e9 02             	shr    $0x2,%ecx
81001b3e:	83 ee 04             	sub    $0x4,%esi
81001b41:	83 ef 04             	sub    $0x4,%edi
81001b44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b46:	83 c6 04             	add    $0x4,%esi
81001b49:	83 c7 04             	add    $0x4,%edi
81001b4c:	89 d9                	mov    %ebx,%ecx
81001b4e:	83 e1 03             	and    $0x3,%ecx
81001b51:	4e                   	dec    %esi
81001b52:	4f                   	dec    %edi
81001b53:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b55:	eb 2a                	jmp    81001b81 <memmove+0x81>
81001b57:	83 f9 08             	cmp    $0x8,%ecx
81001b5a:	76 23                	jbe    81001b7f <memmove+0x7f>
81001b5c:	89 fa                	mov    %edi,%edx
81001b5e:	89 cb                	mov    %ecx,%ebx
81001b60:	83 e2 03             	and    $0x3,%edx
81001b63:	74 10                	je     81001b75 <memmove+0x75>
81001b65:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b6a:	29 d1                	sub    %edx,%ecx
81001b6c:	83 e1 03             	and    $0x3,%ecx
81001b6f:	29 cb                	sub    %ecx,%ebx
81001b71:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b73:	89 d9                	mov    %ebx,%ecx
81001b75:	c1 e9 02             	shr    $0x2,%ecx
81001b78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b7a:	89 d9                	mov    %ebx,%ecx
81001b7c:	83 e1 03             	and    $0x3,%ecx
81001b7f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b81:	8b 45 08             	mov    0x8(%ebp),%eax
81001b84:	fc                   	cld    
81001b85:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b88:	5b                   	pop    %ebx
81001b89:	5f                   	pop    %edi
81001b8a:	5e                   	pop    %esi
81001b8b:	c9                   	leave  
81001b8c:	c3                   	ret    

81001b8d <memset>:
81001b8d:	55                   	push   %ebp
81001b8e:	89 e5                	mov    %esp,%ebp
81001b90:	57                   	push   %edi
81001b91:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b94:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b98:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b9b:	fc                   	cld    
81001b9c:	83 f9 10             	cmp    $0x10,%ecx
81001b9f:	76 69                	jbe    81001c0a <memset+0x7d>
81001ba1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ba7:	74 4c                	je     81001bf5 <memset+0x68>
81001ba9:	88 07                	mov    %al,(%edi)
81001bab:	47                   	inc    %edi
81001bac:	49                   	dec    %ecx
81001bad:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bb3:	74 40                	je     81001bf5 <memset+0x68>
81001bb5:	88 07                	mov    %al,(%edi)
81001bb7:	47                   	inc    %edi
81001bb8:	49                   	dec    %ecx
81001bb9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bbf:	74 34                	je     81001bf5 <memset+0x68>
81001bc1:	88 07                	mov    %al,(%edi)
81001bc3:	47                   	inc    %edi
81001bc4:	49                   	dec    %ecx
81001bc5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bcb:	74 28                	je     81001bf5 <memset+0x68>
81001bcd:	88 07                	mov    %al,(%edi)
81001bcf:	47                   	inc    %edi
81001bd0:	49                   	dec    %ecx
81001bd1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bd7:	74 1c                	je     81001bf5 <memset+0x68>
81001bd9:	88 07                	mov    %al,(%edi)
81001bdb:	47                   	inc    %edi
81001bdc:	49                   	dec    %ecx
81001bdd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001be3:	74 10                	je     81001bf5 <memset+0x68>
81001be5:	88 07                	mov    %al,(%edi)
81001be7:	47                   	inc    %edi
81001be8:	49                   	dec    %ecx
81001be9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bef:	74 04                	je     81001bf5 <memset+0x68>
81001bf1:	88 07                	mov    %al,(%edi)
81001bf3:	47                   	inc    %edi
81001bf4:	49                   	dec    %ecx
81001bf5:	88 c4                	mov    %al,%ah
81001bf7:	89 c2                	mov    %eax,%edx
81001bf9:	c1 e2 10             	shl    $0x10,%edx
81001bfc:	09 d0                	or     %edx,%eax
81001bfe:	89 ca                	mov    %ecx,%edx
81001c00:	c1 e9 02             	shr    $0x2,%ecx
81001c03:	83 e2 03             	and    $0x3,%edx
81001c06:	f3 ab                	rep stos %eax,%es:(%edi)
81001c08:	89 d1                	mov    %edx,%ecx
81001c0a:	f3 aa                	rep stos %al,%es:(%edi)
81001c0c:	8b 45 08             	mov    0x8(%ebp),%eax
81001c0f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001c12:	5f                   	pop    %edi
81001c13:	c9                   	leave  
81001c14:	c3                   	ret    

81001c15 <__malloc_lock>:
81001c15:	55                   	push   %ebp
81001c16:	89 e5                	mov    %esp,%ebp
81001c18:	90                   	nop
81001c19:	5d                   	pop    %ebp
81001c1a:	c3                   	ret    

81001c1b <__malloc_unlock>:
81001c1b:	55                   	push   %ebp
81001c1c:	89 e5                	mov    %esp,%ebp
81001c1e:	90                   	nop
81001c1f:	5d                   	pop    %ebp
81001c20:	c3                   	ret    

81001c21 <_realloc_r>:
81001c21:	55                   	push   %ebp
81001c22:	89 e5                	mov    %esp,%ebp
81001c24:	83 ec 78             	sub    $0x78,%esp
81001c27:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001c2b:	75 16                	jne    81001c43 <_realloc_r+0x22>
81001c2d:	83 ec 08             	sub    $0x8,%esp
81001c30:	ff 75 10             	pushl  0x10(%ebp)
81001c33:	ff 75 08             	pushl  0x8(%ebp)
81001c36:	e8 b4 f5 ff ff       	call   810011ef <_malloc_r>
81001c3b:	83 c4 10             	add    $0x10,%esp
81001c3e:	e9 b6 08 00 00       	jmp    810024f9 <_realloc_r+0x8d8>
81001c43:	83 ec 0c             	sub    $0xc,%esp
81001c46:	ff 75 08             	pushl  0x8(%ebp)
81001c49:	e8 c7 ff ff ff       	call   81001c15 <__malloc_lock>
81001c4e:	83 c4 10             	add    $0x10,%esp
81001c51:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c54:	83 e8 08             	sub    $0x8,%eax
81001c57:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001c5a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c5d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c60:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c63:	8b 40 04             	mov    0x4(%eax),%eax
81001c66:	83 e0 fc             	and    $0xfffffffc,%eax
81001c69:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001c6c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c6f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c72:	8b 45 10             	mov    0x10(%ebp),%eax
81001c75:	83 c0 0b             	add    $0xb,%eax
81001c78:	83 f8 16             	cmp    $0x16,%eax
81001c7b:	76 0b                	jbe    81001c88 <_realloc_r+0x67>
81001c7d:	8b 45 10             	mov    0x10(%ebp),%eax
81001c80:	83 c0 0b             	add    $0xb,%eax
81001c83:	83 e0 f8             	and    $0xfffffff8,%eax
81001c86:	eb 05                	jmp    81001c8d <_realloc_r+0x6c>
81001c88:	b8 10 00 00 00       	mov    $0x10,%eax
81001c8d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001c90:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c93:	85 c0                	test   %eax,%eax
81001c95:	78 08                	js     81001c9f <_realloc_r+0x7e>
81001c97:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c9a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001c9d:	73 13                	jae    81001cb2 <_realloc_r+0x91>
81001c9f:	8b 45 08             	mov    0x8(%ebp),%eax
81001ca2:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001ca8:	b8 00 00 00 00       	mov    $0x0,%eax
81001cad:	e9 47 08 00 00       	jmp    810024f9 <_realloc_r+0x8d8>
81001cb2:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001cb5:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001cb8:	39 c2                	cmp    %eax,%edx
81001cba:	0f 8d 8b 07 00 00    	jge    8100244b <_realloc_r+0x82a>
81001cc0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001cc3:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001cc6:	01 d0                	add    %edx,%eax
81001cc8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ccb:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001cd0:	8b 40 08             	mov    0x8(%eax),%eax
81001cd3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001cd6:	74 1e                	je     81001cf6 <_realloc_r+0xd5>
81001cd8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001cdb:	8b 40 04             	mov    0x4(%eax),%eax
81001cde:	83 e0 fe             	and    $0xfffffffe,%eax
81001ce1:	89 c2                	mov    %eax,%edx
81001ce3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ce6:	01 d0                	add    %edx,%eax
81001ce8:	8b 40 04             	mov    0x4(%eax),%eax
81001ceb:	83 e0 01             	and    $0x1,%eax
81001cee:	85 c0                	test   %eax,%eax
81001cf0:	0f 85 ca 00 00 00    	jne    81001dc0 <_realloc_r+0x19f>
81001cf6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001cf9:	8b 40 04             	mov    0x4(%eax),%eax
81001cfc:	83 e0 fc             	and    $0xfffffffc,%eax
81001cff:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d02:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001d07:	8b 40 08             	mov    0x8(%eax),%eax
81001d0a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001d0d:	75 71                	jne    81001d80 <_realloc_r+0x15f>
81001d0f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d12:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d15:	01 d0                	add    %edx,%eax
81001d17:	89 c2                	mov    %eax,%edx
81001d19:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d1c:	83 c0 10             	add    $0x10,%eax
81001d1f:	39 c2                	cmp    %eax,%edx
81001d21:	0f 8c a9 00 00 00    	jl     81001dd0 <_realloc_r+0x1af>
81001d27:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d2a:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d2d:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
81001d32:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001d35:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d38:	01 c8                	add    %ecx,%eax
81001d3a:	89 42 08             	mov    %eax,0x8(%edx)
81001d3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d40:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001d43:	89 c2                	mov    %eax,%edx
81001d45:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001d4a:	8b 40 08             	mov    0x8(%eax),%eax
81001d4d:	83 ca 01             	or     $0x1,%edx
81001d50:	89 50 04             	mov    %edx,0x4(%eax)
81001d53:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d56:	8b 40 04             	mov    0x4(%eax),%eax
81001d59:	83 e0 01             	and    $0x1,%eax
81001d5c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001d5f:	89 c2                	mov    %eax,%edx
81001d61:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d64:	89 50 04             	mov    %edx,0x4(%eax)
81001d67:	83 ec 0c             	sub    $0xc,%esp
81001d6a:	ff 75 08             	pushl  0x8(%ebp)
81001d6d:	e8 a9 fe ff ff       	call   81001c1b <__malloc_unlock>
81001d72:	83 c4 10             	add    $0x10,%esp
81001d75:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d78:	83 c0 08             	add    $0x8,%eax
81001d7b:	e9 79 07 00 00       	jmp    810024f9 <_realloc_r+0x8d8>
81001d80:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d83:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d86:	01 d0                	add    %edx,%eax
81001d88:	89 c2                	mov    %eax,%edx
81001d8a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d8d:	39 c2                	cmp    %eax,%edx
81001d8f:	7c 3f                	jl     81001dd0 <_realloc_r+0x1af>
81001d91:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d94:	8b 40 0c             	mov    0xc(%eax),%eax
81001d97:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001d9a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d9d:	8b 40 08             	mov    0x8(%eax),%eax
81001da0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001da3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001da6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001da9:	89 50 0c             	mov    %edx,0xc(%eax)
81001dac:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001daf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001db2:	89 50 08             	mov    %edx,0x8(%eax)
81001db5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001db8:	01 45 f0             	add    %eax,-0x10(%ebp)
81001dbb:	e9 8c 06 00 00       	jmp    8100244c <_realloc_r+0x82b>
81001dc0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001dc7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001dce:	eb 01                	jmp    81001dd1 <_realloc_r+0x1b0>
81001dd0:	90                   	nop
81001dd1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001dd4:	8b 40 04             	mov    0x4(%eax),%eax
81001dd7:	83 e0 01             	and    $0x1,%eax
81001dda:	85 c0                	test   %eax,%eax
81001ddc:	0f 85 d6 04 00 00    	jne    810022b8 <_realloc_r+0x697>
81001de2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001de5:	8b 00                	mov    (%eax),%eax
81001de7:	f7 d8                	neg    %eax
81001de9:	89 c2                	mov    %eax,%edx
81001deb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001dee:	01 d0                	add    %edx,%eax
81001df0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001df3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001df6:	8b 40 04             	mov    0x4(%eax),%eax
81001df9:	83 e0 fc             	and    $0xfffffffc,%eax
81001dfc:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001dff:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001e03:	0f 84 4a 03 00 00    	je     81002153 <_realloc_r+0x532>
81001e09:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001e0e:	8b 40 08             	mov    0x8(%eax),%eax
81001e11:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001e14:	0f 85 b0 01 00 00    	jne    81001fca <_realloc_r+0x3a9>
81001e1a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e1d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001e20:	01 c2                	add    %eax,%edx
81001e22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e25:	01 d0                	add    %edx,%eax
81001e27:	89 c2                	mov    %eax,%edx
81001e29:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001e2c:	83 c0 10             	add    $0x10,%eax
81001e2f:	39 c2                	cmp    %eax,%edx
81001e31:	0f 8c 1c 03 00 00    	jl     81002153 <_realloc_r+0x532>
81001e37:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e3a:	8b 40 0c             	mov    0xc(%eax),%eax
81001e3d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001e40:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e43:	8b 40 08             	mov    0x8(%eax),%eax
81001e46:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001e49:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001e4c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001e4f:	89 50 0c             	mov    %edx,0xc(%eax)
81001e52:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001e55:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001e58:	89 50 08             	mov    %edx,0x8(%eax)
81001e5b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e61:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001e64:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e67:	01 d0                	add    %edx,%eax
81001e69:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e6f:	83 c0 08             	add    $0x8,%eax
81001e72:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001e75:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001e78:	83 e8 04             	sub    $0x4,%eax
81001e7b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001e7e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001e82:	0f 87 de 00 00 00    	ja     81001f66 <_realloc_r+0x345>
81001e88:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e8b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e8e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001e91:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e94:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001e98:	0f 86 90 00 00 00    	jbe    81001f2e <_realloc_r+0x30d>
81001e9e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ea1:	8d 42 04             	lea    0x4(%edx),%eax
81001ea4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ea7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001eaa:	8d 48 04             	lea    0x4(%eax),%ecx
81001ead:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001eb0:	8b 12                	mov    (%edx),%edx
81001eb2:	89 10                	mov    %edx,(%eax)
81001eb4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001eb7:	8d 42 04             	lea    0x4(%edx),%eax
81001eba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ebd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ec0:	8d 48 04             	lea    0x4(%eax),%ecx
81001ec3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ec6:	8b 12                	mov    (%edx),%edx
81001ec8:	89 10                	mov    %edx,(%eax)
81001eca:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001ece:	76 5e                	jbe    81001f2e <_realloc_r+0x30d>
81001ed0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ed3:	8d 42 04             	lea    0x4(%edx),%eax
81001ed6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ed9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001edc:	8d 48 04             	lea    0x4(%eax),%ecx
81001edf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ee2:	8b 12                	mov    (%edx),%edx
81001ee4:	89 10                	mov    %edx,(%eax)
81001ee6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ee9:	8d 42 04             	lea    0x4(%edx),%eax
81001eec:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001eef:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ef2:	8d 48 04             	lea    0x4(%eax),%ecx
81001ef5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ef8:	8b 12                	mov    (%edx),%edx
81001efa:	89 10                	mov    %edx,(%eax)
81001efc:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001f00:	76 2c                	jbe    81001f2e <_realloc_r+0x30d>
81001f02:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f05:	8d 42 04             	lea    0x4(%edx),%eax
81001f08:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f0b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f0e:	8d 48 04             	lea    0x4(%eax),%ecx
81001f11:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f14:	8b 12                	mov    (%edx),%edx
81001f16:	89 10                	mov    %edx,(%eax)
81001f18:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f1b:	8d 42 04             	lea    0x4(%edx),%eax
81001f1e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f21:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f24:	8d 48 04             	lea    0x4(%eax),%ecx
81001f27:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f2a:	8b 12                	mov    (%edx),%edx
81001f2c:	89 10                	mov    %edx,(%eax)
81001f2e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f31:	8d 42 04             	lea    0x4(%edx),%eax
81001f34:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f37:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f3a:	8d 48 04             	lea    0x4(%eax),%ecx
81001f3d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f40:	8b 12                	mov    (%edx),%edx
81001f42:	89 10                	mov    %edx,(%eax)
81001f44:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f47:	8d 42 04             	lea    0x4(%edx),%eax
81001f4a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f4d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f50:	8d 48 04             	lea    0x4(%eax),%ecx
81001f53:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f56:	8b 12                	mov    (%edx),%edx
81001f58:	89 10                	mov    %edx,(%eax)
81001f5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f5d:	8b 10                	mov    (%eax),%edx
81001f5f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f62:	89 10                	mov    %edx,(%eax)
81001f64:	eb 14                	jmp    81001f7a <_realloc_r+0x359>
81001f66:	83 ec 04             	sub    $0x4,%esp
81001f69:	ff 75 a0             	pushl  -0x60(%ebp)
81001f6c:	ff 75 0c             	pushl  0xc(%ebp)
81001f6f:	ff 75 a8             	pushl  -0x58(%ebp)
81001f72:	e8 89 fb ff ff       	call   81001b00 <memmove>
81001f77:	83 c4 10             	add    $0x10,%esp
81001f7a:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
81001f7f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001f82:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f85:	01 c8                	add    %ecx,%eax
81001f87:	89 42 08             	mov    %eax,0x8(%edx)
81001f8a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f8d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001f90:	89 c2                	mov    %eax,%edx
81001f92:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81001f97:	8b 40 08             	mov    0x8(%eax),%eax
81001f9a:	83 ca 01             	or     $0x1,%edx
81001f9d:	89 50 04             	mov    %edx,0x4(%eax)
81001fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fa3:	8b 40 04             	mov    0x4(%eax),%eax
81001fa6:	83 e0 01             	and    $0x1,%eax
81001fa9:	0b 45 bc             	or     -0x44(%ebp),%eax
81001fac:	89 c2                	mov    %eax,%edx
81001fae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fb1:	89 50 04             	mov    %edx,0x4(%eax)
81001fb4:	83 ec 0c             	sub    $0xc,%esp
81001fb7:	ff 75 08             	pushl  0x8(%ebp)
81001fba:	e8 5c fc ff ff       	call   81001c1b <__malloc_unlock>
81001fbf:	83 c4 10             	add    $0x10,%esp
81001fc2:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001fc5:	e9 2f 05 00 00       	jmp    810024f9 <_realloc_r+0x8d8>
81001fca:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001fcd:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001fd0:	01 c2                	add    %eax,%edx
81001fd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fd5:	01 d0                	add    %edx,%eax
81001fd7:	89 c2                	mov    %eax,%edx
81001fd9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001fdc:	39 c2                	cmp    %eax,%edx
81001fde:	0f 8c 6f 01 00 00    	jl     81002153 <_realloc_r+0x532>
81001fe4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fe7:	8b 40 0c             	mov    0xc(%eax),%eax
81001fea:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001fed:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ff0:	8b 40 08             	mov    0x8(%eax),%eax
81001ff3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001ff6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001ff9:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001ffc:	89 50 0c             	mov    %edx,0xc(%eax)
81001fff:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002002:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002005:	89 50 08             	mov    %edx,0x8(%eax)
81002008:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100200b:	8b 40 0c             	mov    0xc(%eax),%eax
8100200e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002011:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002014:	8b 40 08             	mov    0x8(%eax),%eax
81002017:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100201a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100201d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002020:	89 50 0c             	mov    %edx,0xc(%eax)
81002023:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002026:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002029:	89 50 08             	mov    %edx,0x8(%eax)
8100202c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100202f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002032:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002035:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002038:	01 d0                	add    %edx,%eax
8100203a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100203d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002040:	83 c0 08             	add    $0x8,%eax
81002043:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002046:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002049:	83 e8 04             	sub    $0x4,%eax
8100204c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
8100204f:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002053:	0f 87 e1 00 00 00    	ja     8100213a <_realloc_r+0x519>
81002059:	8b 45 0c             	mov    0xc(%ebp),%eax
8100205c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100205f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002062:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002065:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002069:	0f 86 90 00 00 00    	jbe    810020ff <_realloc_r+0x4de>
8100206f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002072:	8d 42 04             	lea    0x4(%edx),%eax
81002075:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002078:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100207b:	8d 48 04             	lea    0x4(%eax),%ecx
8100207e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002081:	8b 12                	mov    (%edx),%edx
81002083:	89 10                	mov    %edx,(%eax)
81002085:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002088:	8d 42 04             	lea    0x4(%edx),%eax
8100208b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100208e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002091:	8d 48 04             	lea    0x4(%eax),%ecx
81002094:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002097:	8b 12                	mov    (%edx),%edx
81002099:	89 10                	mov    %edx,(%eax)
8100209b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
8100209f:	76 5e                	jbe    810020ff <_realloc_r+0x4de>
810020a1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020a4:	8d 42 04             	lea    0x4(%edx),%eax
810020a7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020aa:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020ad:	8d 48 04             	lea    0x4(%eax),%ecx
810020b0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020b3:	8b 12                	mov    (%edx),%edx
810020b5:	89 10                	mov    %edx,(%eax)
810020b7:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020ba:	8d 42 04             	lea    0x4(%edx),%eax
810020bd:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020c0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020c3:	8d 48 04             	lea    0x4(%eax),%ecx
810020c6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020c9:	8b 12                	mov    (%edx),%edx
810020cb:	89 10                	mov    %edx,(%eax)
810020cd:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810020d1:	76 2c                	jbe    810020ff <_realloc_r+0x4de>
810020d3:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020d6:	8d 42 04             	lea    0x4(%edx),%eax
810020d9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020dc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020df:	8d 48 04             	lea    0x4(%eax),%ecx
810020e2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020e5:	8b 12                	mov    (%edx),%edx
810020e7:	89 10                	mov    %edx,(%eax)
810020e9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020ec:	8d 42 04             	lea    0x4(%edx),%eax
810020ef:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020f2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020f5:	8d 48 04             	lea    0x4(%eax),%ecx
810020f8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020fb:	8b 12                	mov    (%edx),%edx
810020fd:	89 10                	mov    %edx,(%eax)
810020ff:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002102:	8d 42 04             	lea    0x4(%edx),%eax
81002105:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002108:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100210b:	8d 48 04             	lea    0x4(%eax),%ecx
8100210e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002111:	8b 12                	mov    (%edx),%edx
81002113:	89 10                	mov    %edx,(%eax)
81002115:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002118:	8d 42 04             	lea    0x4(%edx),%eax
8100211b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100211e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002121:	8d 48 04             	lea    0x4(%eax),%ecx
81002124:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002127:	8b 12                	mov    (%edx),%edx
81002129:	89 10                	mov    %edx,(%eax)
8100212b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100212e:	8b 10                	mov    (%eax),%edx
81002130:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002133:	89 10                	mov    %edx,(%eax)
81002135:	e9 12 03 00 00       	jmp    8100244c <_realloc_r+0x82b>
8100213a:	83 ec 04             	sub    $0x4,%esp
8100213d:	ff 75 a4             	pushl  -0x5c(%ebp)
81002140:	ff 75 0c             	pushl  0xc(%ebp)
81002143:	ff 75 a8             	pushl  -0x58(%ebp)
81002146:	e8 b5 f9 ff ff       	call   81001b00 <memmove>
8100214b:	83 c4 10             	add    $0x10,%esp
8100214e:	e9 f9 02 00 00       	jmp    8100244c <_realloc_r+0x82b>
81002153:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002157:	0f 84 5b 01 00 00    	je     810022b8 <_realloc_r+0x697>
8100215d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002160:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002163:	01 d0                	add    %edx,%eax
81002165:	89 c2                	mov    %eax,%edx
81002167:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100216a:	39 c2                	cmp    %eax,%edx
8100216c:	0f 8c 46 01 00 00    	jl     810022b8 <_realloc_r+0x697>
81002172:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002175:	8b 40 0c             	mov    0xc(%eax),%eax
81002178:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100217b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100217e:	8b 40 08             	mov    0x8(%eax),%eax
81002181:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002184:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002187:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100218a:	89 50 0c             	mov    %edx,0xc(%eax)
8100218d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002190:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002193:	89 50 08             	mov    %edx,0x8(%eax)
81002196:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002199:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100219c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100219f:	01 45 f0             	add    %eax,-0x10(%ebp)
810021a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021a5:	83 c0 08             	add    $0x8,%eax
810021a8:	89 45 a8             	mov    %eax,-0x58(%ebp)
810021ab:	8b 45 c0             	mov    -0x40(%ebp),%eax
810021ae:	83 e8 04             	sub    $0x4,%eax
810021b1:	89 45 9c             	mov    %eax,-0x64(%ebp)
810021b4:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810021b8:	0f 87 e1 00 00 00    	ja     8100229f <_realloc_r+0x67e>
810021be:	8b 45 0c             	mov    0xc(%ebp),%eax
810021c1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021c4:	8b 45 a8             	mov    -0x58(%ebp),%eax
810021c7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810021ca:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810021ce:	0f 86 90 00 00 00    	jbe    81002264 <_realloc_r+0x643>
810021d4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021d7:	8d 42 04             	lea    0x4(%edx),%eax
810021da:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021e0:	8d 48 04             	lea    0x4(%eax),%ecx
810021e3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021e6:	8b 12                	mov    (%edx),%edx
810021e8:	89 10                	mov    %edx,(%eax)
810021ea:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021ed:	8d 42 04             	lea    0x4(%edx),%eax
810021f0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021f6:	8d 48 04             	lea    0x4(%eax),%ecx
810021f9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021fc:	8b 12                	mov    (%edx),%edx
810021fe:	89 10                	mov    %edx,(%eax)
81002200:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002204:	76 5e                	jbe    81002264 <_realloc_r+0x643>
81002206:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002209:	8d 42 04             	lea    0x4(%edx),%eax
8100220c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100220f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002212:	8d 48 04             	lea    0x4(%eax),%ecx
81002215:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002218:	8b 12                	mov    (%edx),%edx
8100221a:	89 10                	mov    %edx,(%eax)
8100221c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100221f:	8d 42 04             	lea    0x4(%edx),%eax
81002222:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002225:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002228:	8d 48 04             	lea    0x4(%eax),%ecx
8100222b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100222e:	8b 12                	mov    (%edx),%edx
81002230:	89 10                	mov    %edx,(%eax)
81002232:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002236:	76 2c                	jbe    81002264 <_realloc_r+0x643>
81002238:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100223b:	8d 42 04             	lea    0x4(%edx),%eax
8100223e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002241:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002244:	8d 48 04             	lea    0x4(%eax),%ecx
81002247:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100224a:	8b 12                	mov    (%edx),%edx
8100224c:	89 10                	mov    %edx,(%eax)
8100224e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002251:	8d 42 04             	lea    0x4(%edx),%eax
81002254:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002257:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100225a:	8d 48 04             	lea    0x4(%eax),%ecx
8100225d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002260:	8b 12                	mov    (%edx),%edx
81002262:	89 10                	mov    %edx,(%eax)
81002264:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002267:	8d 42 04             	lea    0x4(%edx),%eax
8100226a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100226d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002270:	8d 48 04             	lea    0x4(%eax),%ecx
81002273:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002276:	8b 12                	mov    (%edx),%edx
81002278:	89 10                	mov    %edx,(%eax)
8100227a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100227d:	8d 42 04             	lea    0x4(%edx),%eax
81002280:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002283:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002286:	8d 48 04             	lea    0x4(%eax),%ecx
81002289:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100228c:	8b 12                	mov    (%edx),%edx
8100228e:	89 10                	mov    %edx,(%eax)
81002290:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002293:	8b 10                	mov    (%eax),%edx
81002295:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002298:	89 10                	mov    %edx,(%eax)
8100229a:	e9 ad 01 00 00       	jmp    8100244c <_realloc_r+0x82b>
8100229f:	83 ec 04             	sub    $0x4,%esp
810022a2:	ff 75 9c             	pushl  -0x64(%ebp)
810022a5:	ff 75 0c             	pushl  0xc(%ebp)
810022a8:	ff 75 a8             	pushl  -0x58(%ebp)
810022ab:	e8 50 f8 ff ff       	call   81001b00 <memmove>
810022b0:	83 c4 10             	add    $0x10,%esp
810022b3:	e9 94 01 00 00       	jmp    8100244c <_realloc_r+0x82b>
810022b8:	83 ec 08             	sub    $0x8,%esp
810022bb:	ff 75 10             	pushl  0x10(%ebp)
810022be:	ff 75 08             	pushl  0x8(%ebp)
810022c1:	e8 29 ef ff ff       	call   810011ef <_malloc_r>
810022c6:	83 c4 10             	add    $0x10,%esp
810022c9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810022cc:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810022d0:	75 18                	jne    810022ea <_realloc_r+0x6c9>
810022d2:	83 ec 0c             	sub    $0xc,%esp
810022d5:	ff 75 08             	pushl  0x8(%ebp)
810022d8:	e8 3e f9 ff ff       	call   81001c1b <__malloc_unlock>
810022dd:	83 c4 10             	add    $0x10,%esp
810022e0:	b8 00 00 00 00       	mov    $0x0,%eax
810022e5:	e9 0f 02 00 00       	jmp    810024f9 <_realloc_r+0x8d8>
810022ea:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022ed:	83 e8 08             	sub    $0x8,%eax
810022f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022f3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022f6:	8b 40 04             	mov    0x4(%eax),%eax
810022f9:	83 e0 fe             	and    $0xfffffffe,%eax
810022fc:	89 c2                	mov    %eax,%edx
810022fe:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002301:	01 d0                	add    %edx,%eax
81002303:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002306:	75 17                	jne    8100231f <_realloc_r+0x6fe>
81002308:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100230b:	8b 40 04             	mov    0x4(%eax),%eax
8100230e:	83 e0 fc             	and    $0xfffffffc,%eax
81002311:	01 45 f0             	add    %eax,-0x10(%ebp)
81002314:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002317:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100231a:	e9 2d 01 00 00       	jmp    8100244c <_realloc_r+0x82b>
8100231f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002322:	83 e8 04             	sub    $0x4,%eax
81002325:	89 45 98             	mov    %eax,-0x68(%ebp)
81002328:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
8100232c:	0f 87 de 00 00 00    	ja     81002410 <_realloc_r+0x7ef>
81002332:	8b 45 0c             	mov    0xc(%ebp),%eax
81002335:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002338:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100233b:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100233e:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002342:	0f 86 90 00 00 00    	jbe    810023d8 <_realloc_r+0x7b7>
81002348:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100234b:	8d 42 04             	lea    0x4(%edx),%eax
8100234e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002351:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002354:	8d 48 04             	lea    0x4(%eax),%ecx
81002357:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100235a:	8b 12                	mov    (%edx),%edx
8100235c:	89 10                	mov    %edx,(%eax)
8100235e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002361:	8d 42 04             	lea    0x4(%edx),%eax
81002364:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002367:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100236a:	8d 48 04             	lea    0x4(%eax),%ecx
8100236d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002370:	8b 12                	mov    (%edx),%edx
81002372:	89 10                	mov    %edx,(%eax)
81002374:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002378:	76 5e                	jbe    810023d8 <_realloc_r+0x7b7>
8100237a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100237d:	8d 42 04             	lea    0x4(%edx),%eax
81002380:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002383:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002386:	8d 48 04             	lea    0x4(%eax),%ecx
81002389:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100238c:	8b 12                	mov    (%edx),%edx
8100238e:	89 10                	mov    %edx,(%eax)
81002390:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002393:	8d 42 04             	lea    0x4(%edx),%eax
81002396:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002399:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100239c:	8d 48 04             	lea    0x4(%eax),%ecx
8100239f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023a2:	8b 12                	mov    (%edx),%edx
810023a4:	89 10                	mov    %edx,(%eax)
810023a6:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810023aa:	76 2c                	jbe    810023d8 <_realloc_r+0x7b7>
810023ac:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023af:	8d 42 04             	lea    0x4(%edx),%eax
810023b2:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023b5:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023b8:	8d 48 04             	lea    0x4(%eax),%ecx
810023bb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023be:	8b 12                	mov    (%edx),%edx
810023c0:	89 10                	mov    %edx,(%eax)
810023c2:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023c5:	8d 42 04             	lea    0x4(%edx),%eax
810023c8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023cb:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023ce:	8d 48 04             	lea    0x4(%eax),%ecx
810023d1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023d4:	8b 12                	mov    (%edx),%edx
810023d6:	89 10                	mov    %edx,(%eax)
810023d8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023db:	8d 42 04             	lea    0x4(%edx),%eax
810023de:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023e1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023e4:	8d 48 04             	lea    0x4(%eax),%ecx
810023e7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023ea:	8b 12                	mov    (%edx),%edx
810023ec:	89 10                	mov    %edx,(%eax)
810023ee:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023f1:	8d 42 04             	lea    0x4(%edx),%eax
810023f4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023f7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023fa:	8d 48 04             	lea    0x4(%eax),%ecx
810023fd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002400:	8b 12                	mov    (%edx),%edx
81002402:	89 10                	mov    %edx,(%eax)
81002404:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002407:	8b 10                	mov    (%eax),%edx
81002409:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100240c:	89 10                	mov    %edx,(%eax)
8100240e:	eb 14                	jmp    81002424 <_realloc_r+0x803>
81002410:	83 ec 04             	sub    $0x4,%esp
81002413:	ff 75 98             	pushl  -0x68(%ebp)
81002416:	ff 75 0c             	pushl  0xc(%ebp)
81002419:	ff 75 a8             	pushl  -0x58(%ebp)
8100241c:	e8 df f6 ff ff       	call   81001b00 <memmove>
81002421:	83 c4 10             	add    $0x10,%esp
81002424:	83 ec 08             	sub    $0x8,%esp
81002427:	ff 75 0c             	pushl  0xc(%ebp)
8100242a:	ff 75 08             	pushl  0x8(%ebp)
8100242d:	e8 0b 0a 00 00       	call   81002e3d <_free_r>
81002432:	83 c4 10             	add    $0x10,%esp
81002435:	83 ec 0c             	sub    $0xc,%esp
81002438:	ff 75 08             	pushl  0x8(%ebp)
8100243b:	e8 db f7 ff ff       	call   81001c1b <__malloc_unlock>
81002440:	83 c4 10             	add    $0x10,%esp
81002443:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002446:	e9 ae 00 00 00       	jmp    810024f9 <_realloc_r+0x8d8>
8100244b:	90                   	nop
8100244c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100244f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002452:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002455:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002459:	76 5d                	jbe    810024b8 <_realloc_r+0x897>
8100245b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100245e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002461:	01 d0                	add    %edx,%eax
81002463:	89 45 90             	mov    %eax,-0x70(%ebp)
81002466:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002469:	8b 40 04             	mov    0x4(%eax),%eax
8100246c:	83 e0 01             	and    $0x1,%eax
8100246f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002472:	89 c2                	mov    %eax,%edx
81002474:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002477:	89 50 04             	mov    %edx,0x4(%eax)
8100247a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100247d:	83 c8 01             	or     $0x1,%eax
81002480:	89 c2                	mov    %eax,%edx
81002482:	8b 45 90             	mov    -0x70(%ebp),%eax
81002485:	89 50 04             	mov    %edx,0x4(%eax)
81002488:	8b 55 90             	mov    -0x70(%ebp),%edx
8100248b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100248e:	01 d0                	add    %edx,%eax
81002490:	8b 50 04             	mov    0x4(%eax),%edx
81002493:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002496:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002499:	01 c8                	add    %ecx,%eax
8100249b:	83 ca 01             	or     $0x1,%edx
8100249e:	89 50 04             	mov    %edx,0x4(%eax)
810024a1:	8b 45 90             	mov    -0x70(%ebp),%eax
810024a4:	83 c0 08             	add    $0x8,%eax
810024a7:	83 ec 08             	sub    $0x8,%esp
810024aa:	50                   	push   %eax
810024ab:	ff 75 08             	pushl  0x8(%ebp)
810024ae:	e8 8a 09 00 00       	call   81002e3d <_free_r>
810024b3:	83 c4 10             	add    $0x10,%esp
810024b6:	eb 2d                	jmp    810024e5 <_realloc_r+0x8c4>
810024b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024bb:	8b 40 04             	mov    0x4(%eax),%eax
810024be:	83 e0 01             	and    $0x1,%eax
810024c1:	0b 45 f0             	or     -0x10(%ebp),%eax
810024c4:	89 c2                	mov    %eax,%edx
810024c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024c9:	89 50 04             	mov    %edx,0x4(%eax)
810024cc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810024cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810024d2:	01 d0                	add    %edx,%eax
810024d4:	8b 50 04             	mov    0x4(%eax),%edx
810024d7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810024da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810024dd:	01 c8                	add    %ecx,%eax
810024df:	83 ca 01             	or     $0x1,%edx
810024e2:	89 50 04             	mov    %edx,0x4(%eax)
810024e5:	83 ec 0c             	sub    $0xc,%esp
810024e8:	ff 75 08             	pushl  0x8(%ebp)
810024eb:	e8 2b f7 ff ff       	call   81001c1b <__malloc_unlock>
810024f0:	83 c4 10             	add    $0x10,%esp
810024f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024f6:	83 c0 08             	add    $0x8,%eax
810024f9:	c9                   	leave  
810024fa:	c3                   	ret    

810024fb <lflush>:
810024fb:	55                   	push   %ebp
810024fc:	89 e5                	mov    %esp,%ebp
810024fe:	83 ec 08             	sub    $0x8,%esp
81002501:	8b 45 08             	mov    0x8(%ebp),%eax
81002504:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002508:	98                   	cwtl   
81002509:	83 e0 09             	and    $0x9,%eax
8100250c:	83 f8 09             	cmp    $0x9,%eax
8100250f:	75 10                	jne    81002521 <lflush+0x26>
81002511:	83 ec 0c             	sub    $0xc,%esp
81002514:	ff 75 08             	pushl  0x8(%ebp)
81002517:	e8 e8 08 00 00       	call   81002e04 <fflush>
8100251c:	83 c4 10             	add    $0x10,%esp
8100251f:	eb 05                	jmp    81002526 <lflush+0x2b>
81002521:	b8 00 00 00 00       	mov    $0x0,%eax
81002526:	c9                   	leave  
81002527:	c3                   	ret    

81002528 <__srefill_r>:
81002528:	55                   	push   %ebp
81002529:	89 e5                	mov    %esp,%ebp
8100252b:	56                   	push   %esi
8100252c:	53                   	push   %ebx
8100252d:	83 ec 10             	sub    $0x10,%esp
81002530:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002533:	8b 45 08             	mov    0x8(%ebp),%eax
81002536:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002539:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100253d:	74 18                	je     81002557 <__srefill_r+0x2f>
8100253f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002542:	8b 40 38             	mov    0x38(%eax),%eax
81002545:	85 c0                	test   %eax,%eax
81002547:	75 0e                	jne    81002557 <__srefill_r+0x2f>
81002549:	83 ec 0c             	sub    $0xc,%esp
8100254c:	ff 75 f4             	pushl  -0xc(%ebp)
8100254f:	e8 8a e3 ff ff       	call   810008de <__sinit>
81002554:	83 c4 10             	add    $0x10,%esp
81002557:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100255b:	98                   	cwtl   
8100255c:	25 00 20 00 00       	and    $0x2000,%eax
81002561:	85 c0                	test   %eax,%eax
81002563:	75 14                	jne    81002579 <__srefill_r+0x51>
81002565:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002569:	80 cc 20             	or     $0x20,%ah
8100256c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002570:	8b 43 64             	mov    0x64(%ebx),%eax
81002573:	80 e4 df             	and    $0xdf,%ah
81002576:	89 43 64             	mov    %eax,0x64(%ebx)
81002579:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002580:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002584:	98                   	cwtl   
81002585:	83 e0 20             	and    $0x20,%eax
81002588:	85 c0                	test   %eax,%eax
8100258a:	74 0a                	je     81002596 <__srefill_r+0x6e>
8100258c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002591:	e9 8c 01 00 00       	jmp    81002722 <__srefill_r+0x1fa>
81002596:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100259a:	98                   	cwtl   
8100259b:	83 e0 04             	and    $0x4,%eax
8100259e:	85 c0                	test   %eax,%eax
810025a0:	75 79                	jne    8100261b <__srefill_r+0xf3>
810025a2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025a6:	98                   	cwtl   
810025a7:	83 e0 10             	and    $0x10,%eax
810025aa:	85 c0                	test   %eax,%eax
810025ac:	75 1e                	jne    810025cc <__srefill_r+0xa4>
810025ae:	8b 45 08             	mov    0x8(%ebp),%eax
810025b1:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810025b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025bb:	83 c8 40             	or     $0x40,%eax
810025be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025c7:	e9 56 01 00 00       	jmp    81002722 <__srefill_r+0x1fa>
810025cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025d0:	98                   	cwtl   
810025d1:	83 e0 08             	and    $0x8,%eax
810025d4:	85 c0                	test   %eax,%eax
810025d6:	74 36                	je     8100260e <__srefill_r+0xe6>
810025d8:	83 ec 08             	sub    $0x8,%esp
810025db:	53                   	push   %ebx
810025dc:	ff 75 08             	pushl  0x8(%ebp)
810025df:	e8 c8 07 00 00       	call   81002dac <_fflush_r>
810025e4:	83 c4 10             	add    $0x10,%esp
810025e7:	85 c0                	test   %eax,%eax
810025e9:	74 0a                	je     810025f5 <__srefill_r+0xcd>
810025eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025f0:	e9 2d 01 00 00       	jmp    81002722 <__srefill_r+0x1fa>
810025f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025f9:	83 e0 f7             	and    $0xfffffff7,%eax
810025fc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002600:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002607:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100260e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002612:	83 c8 04             	or     $0x4,%eax
81002615:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002619:	eb 46                	jmp    81002661 <__srefill_r+0x139>
8100261b:	8b 43 30             	mov    0x30(%ebx),%eax
8100261e:	85 c0                	test   %eax,%eax
81002620:	74 3f                	je     81002661 <__srefill_r+0x139>
81002622:	8b 53 30             	mov    0x30(%ebx),%edx
81002625:	8d 43 40             	lea    0x40(%ebx),%eax
81002628:	39 c2                	cmp    %eax,%edx
8100262a:	74 12                	je     8100263e <__srefill_r+0x116>
8100262c:	8b 43 30             	mov    0x30(%ebx),%eax
8100262f:	83 ec 08             	sub    $0x8,%esp
81002632:	50                   	push   %eax
81002633:	ff 75 08             	pushl  0x8(%ebp)
81002636:	e8 02 08 00 00       	call   81002e3d <_free_r>
8100263b:	83 c4 10             	add    $0x10,%esp
8100263e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002645:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002648:	89 43 04             	mov    %eax,0x4(%ebx)
8100264b:	8b 43 04             	mov    0x4(%ebx),%eax
8100264e:	85 c0                	test   %eax,%eax
81002650:	74 0f                	je     81002661 <__srefill_r+0x139>
81002652:	8b 43 38             	mov    0x38(%ebx),%eax
81002655:	89 03                	mov    %eax,(%ebx)
81002657:	b8 00 00 00 00       	mov    $0x0,%eax
8100265c:	e9 c1 00 00 00       	jmp    81002722 <__srefill_r+0x1fa>
81002661:	8b 43 10             	mov    0x10(%ebx),%eax
81002664:	85 c0                	test   %eax,%eax
81002666:	75 0f                	jne    81002677 <__srefill_r+0x14f>
81002668:	83 ec 08             	sub    $0x8,%esp
8100266b:	53                   	push   %ebx
8100266c:	ff 75 08             	pushl  0x8(%ebp)
8100266f:	e8 4b 0d 00 00       	call   810033bf <__smakebuf_r>
81002674:	83 c4 10             	add    $0x10,%esp
81002677:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100267b:	98                   	cwtl   
8100267c:	83 e0 03             	and    $0x3,%eax
8100267f:	85 c0                	test   %eax,%eax
81002681:	74 48                	je     810026cb <__srefill_r+0x1a3>
81002683:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002687:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100268b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002691:	a1 b4 37 00 81       	mov    0x810037b4,%eax
81002696:	83 ec 08             	sub    $0x8,%esp
81002699:	68 fb 24 00 81       	push   $0x810024fb
8100269e:	50                   	push   %eax
8100269f:	e8 e5 e7 ff ff       	call   81000e89 <_fwalk>
810026a4:	83 c4 10             	add    $0x10,%esp
810026a7:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810026ab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026af:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026b3:	98                   	cwtl   
810026b4:	83 e0 09             	and    $0x9,%eax
810026b7:	83 f8 09             	cmp    $0x9,%eax
810026ba:	75 0f                	jne    810026cb <__srefill_r+0x1a3>
810026bc:	83 ec 08             	sub    $0x8,%esp
810026bf:	53                   	push   %ebx
810026c0:	ff 75 08             	pushl  0x8(%ebp)
810026c3:	e8 be 04 00 00       	call   81002b86 <__sflush_r>
810026c8:	83 c4 10             	add    $0x10,%esp
810026cb:	8b 43 10             	mov    0x10(%ebx),%eax
810026ce:	89 03                	mov    %eax,(%ebx)
810026d0:	8b 43 20             	mov    0x20(%ebx),%eax
810026d3:	8b 73 14             	mov    0x14(%ebx),%esi
810026d6:	8b 0b                	mov    (%ebx),%ecx
810026d8:	8b 53 1c             	mov    0x1c(%ebx),%edx
810026db:	56                   	push   %esi
810026dc:	51                   	push   %ecx
810026dd:	52                   	push   %edx
810026de:	ff 75 08             	pushl  0x8(%ebp)
810026e1:	ff d0                	call   *%eax
810026e3:	83 c4 10             	add    $0x10,%esp
810026e6:	89 43 04             	mov    %eax,0x4(%ebx)
810026e9:	8b 43 04             	mov    0x4(%ebx),%eax
810026ec:	85 c0                	test   %eax,%eax
810026ee:	7f 2d                	jg     8100271d <__srefill_r+0x1f5>
810026f0:	8b 43 04             	mov    0x4(%ebx),%eax
810026f3:	85 c0                	test   %eax,%eax
810026f5:	75 0d                	jne    81002704 <__srefill_r+0x1dc>
810026f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026fb:	83 c8 20             	or     $0x20,%eax
810026fe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002702:	eb 12                	jmp    81002716 <__srefill_r+0x1ee>
81002704:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100270b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100270f:	83 c8 40             	or     $0x40,%eax
81002712:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002716:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100271b:	eb 05                	jmp    81002722 <__srefill_r+0x1fa>
8100271d:	b8 00 00 00 00       	mov    $0x0,%eax
81002722:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002725:	5b                   	pop    %ebx
81002726:	5e                   	pop    %esi
81002727:	5d                   	pop    %ebp
81002728:	c3                   	ret    

81002729 <_sbrk_r>:
81002729:	55                   	push   %ebp
8100272a:	89 e5                	mov    %esp,%ebp
8100272c:	83 ec 18             	sub    $0x18,%esp
8100272f:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
81002736:	00 00 00 
81002739:	83 ec 0c             	sub    $0xc,%esp
8100273c:	ff 75 0c             	pushl  0xc(%ebp)
8100273f:	e8 a9 db ff ff       	call   810002ed <sbrk>
81002744:	83 c4 10             	add    $0x10,%esp
81002747:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100274a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100274e:	75 14                	jne    81002764 <_sbrk_r+0x3b>
81002750:	a1 8c 40 00 81       	mov    0x8100408c,%eax
81002755:	85 c0                	test   %eax,%eax
81002757:	74 0b                	je     81002764 <_sbrk_r+0x3b>
81002759:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
8100275f:	8b 45 08             	mov    0x8(%ebp),%eax
81002762:	89 10                	mov    %edx,(%eax)
81002764:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002767:	c9                   	leave  
81002768:	c3                   	ret    

81002769 <__sread>:
81002769:	55                   	push   %ebp
8100276a:	89 e5                	mov    %esp,%ebp
8100276c:	56                   	push   %esi
8100276d:	53                   	push   %ebx
8100276e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002771:	8b 55 14             	mov    0x14(%ebp),%edx
81002774:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002778:	98                   	cwtl   
81002779:	52                   	push   %edx
8100277a:	ff 75 10             	pushl  0x10(%ebp)
8100277d:	50                   	push   %eax
8100277e:	ff 75 08             	pushl  0x8(%ebp)
81002781:	e8 b9 0d 00 00       	call   8100353f <_read_r>
81002786:	83 c4 10             	add    $0x10,%esp
81002789:	89 c6                	mov    %eax,%esi
8100278b:	85 f6                	test   %esi,%esi
8100278d:	78 0a                	js     81002799 <__sread+0x30>
8100278f:	8b 43 50             	mov    0x50(%ebx),%eax
81002792:	01 f0                	add    %esi,%eax
81002794:	89 43 50             	mov    %eax,0x50(%ebx)
81002797:	eb 0b                	jmp    810027a4 <__sread+0x3b>
81002799:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100279d:	80 e4 ef             	and    $0xef,%ah
810027a0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027a4:	89 f0                	mov    %esi,%eax
810027a6:	8d 65 f8             	lea    -0x8(%ebp),%esp
810027a9:	5b                   	pop    %ebx
810027aa:	5e                   	pop    %esi
810027ab:	5d                   	pop    %ebp
810027ac:	c3                   	ret    

810027ad <__seofread>:
810027ad:	55                   	push   %ebp
810027ae:	89 e5                	mov    %esp,%ebp
810027b0:	b8 00 00 00 00       	mov    $0x0,%eax
810027b5:	5d                   	pop    %ebp
810027b6:	c3                   	ret    

810027b7 <__swrite>:
810027b7:	55                   	push   %ebp
810027b8:	89 e5                	mov    %esp,%ebp
810027ba:	53                   	push   %ebx
810027bb:	83 ec 14             	sub    $0x14,%esp
810027be:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810027c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027c5:	98                   	cwtl   
810027c6:	25 00 01 00 00       	and    $0x100,%eax
810027cb:	85 c0                	test   %eax,%eax
810027cd:	74 15                	je     810027e4 <__swrite+0x2d>
810027cf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027d3:	98                   	cwtl   
810027d4:	6a 02                	push   $0x2
810027d6:	6a 00                	push   $0x0
810027d8:	50                   	push   %eax
810027d9:	ff 75 08             	pushl  0x8(%ebp)
810027dc:	e8 98 0b 00 00       	call   81003379 <_lseek_r>
810027e1:	83 c4 10             	add    $0x10,%esp
810027e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027e8:	80 e4 ef             	and    $0xef,%ah
810027eb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027ef:	8b 55 14             	mov    0x14(%ebp),%edx
810027f2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027f6:	98                   	cwtl   
810027f7:	52                   	push   %edx
810027f8:	ff 75 10             	pushl  0x10(%ebp)
810027fb:	50                   	push   %eax
810027fc:	ff 75 08             	pushl  0x8(%ebp)
810027ff:	e8 7d 00 00 00       	call   81002881 <_write_r>
81002804:	83 c4 10             	add    $0x10,%esp
81002807:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100280a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100280d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002810:	c9                   	leave  
81002811:	c3                   	ret    

81002812 <__sseek>:
81002812:	55                   	push   %ebp
81002813:	89 e5                	mov    %esp,%ebp
81002815:	56                   	push   %esi
81002816:	53                   	push   %ebx
81002817:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100281a:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100281e:	98                   	cwtl   
8100281f:	ff 75 14             	pushl  0x14(%ebp)
81002822:	ff 75 10             	pushl  0x10(%ebp)
81002825:	50                   	push   %eax
81002826:	ff 75 08             	pushl  0x8(%ebp)
81002829:	e8 4b 0b 00 00       	call   81003379 <_lseek_r>
8100282e:	83 c4 10             	add    $0x10,%esp
81002831:	89 c6                	mov    %eax,%esi
81002833:	83 fe ff             	cmp    $0xffffffff,%esi
81002836:	75 0d                	jne    81002845 <__sseek+0x33>
81002838:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100283c:	80 e4 ef             	and    $0xef,%ah
8100283f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002843:	eb 0e                	jmp    81002853 <__sseek+0x41>
81002845:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002849:	80 cc 10             	or     $0x10,%ah
8100284c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002850:	89 73 50             	mov    %esi,0x50(%ebx)
81002853:	89 f0                	mov    %esi,%eax
81002855:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002858:	5b                   	pop    %ebx
81002859:	5e                   	pop    %esi
8100285a:	5d                   	pop    %ebp
8100285b:	c3                   	ret    

8100285c <__sclose>:
8100285c:	55                   	push   %ebp
8100285d:	89 e5                	mov    %esp,%ebp
8100285f:	83 ec 18             	sub    $0x18,%esp
81002862:	8b 45 0c             	mov    0xc(%ebp),%eax
81002865:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002868:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100286b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100286f:	98                   	cwtl   
81002870:	83 ec 08             	sub    $0x8,%esp
81002873:	50                   	push   %eax
81002874:	ff 75 08             	pushl  0x8(%ebp)
81002877:	e8 a6 01 00 00       	call   81002a22 <_close_r>
8100287c:	83 c4 10             	add    $0x10,%esp
8100287f:	c9                   	leave  
81002880:	c3                   	ret    

81002881 <_write_r>:
81002881:	55                   	push   %ebp
81002882:	89 e5                	mov    %esp,%ebp
81002884:	83 ec 18             	sub    $0x18,%esp
81002887:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
8100288e:	00 00 00 
81002891:	83 ec 04             	sub    $0x4,%esp
81002894:	ff 75 14             	pushl  0x14(%ebp)
81002897:	ff 75 10             	pushl  0x10(%ebp)
8100289a:	ff 75 0c             	pushl  0xc(%ebp)
8100289d:	e8 88 d9 ff ff       	call   8100022a <write>
810028a2:	83 c4 10             	add    $0x10,%esp
810028a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028a8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028ac:	75 14                	jne    810028c2 <_write_r+0x41>
810028ae:	a1 8c 40 00 81       	mov    0x8100408c,%eax
810028b3:	85 c0                	test   %eax,%eax
810028b5:	74 0b                	je     810028c2 <_write_r+0x41>
810028b7:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
810028bd:	8b 45 08             	mov    0x8(%ebp),%eax
810028c0:	89 10                	mov    %edx,(%eax)
810028c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028c5:	c9                   	leave  
810028c6:	c3                   	ret    

810028c7 <__swsetup_r>:
810028c7:	55                   	push   %ebp
810028c8:	89 e5                	mov    %esp,%ebp
810028ca:	53                   	push   %ebx
810028cb:	83 ec 14             	sub    $0x14,%esp
810028ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810028d1:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
810028d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810028dd:	74 18                	je     810028f7 <__swsetup_r+0x30>
810028df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028e2:	8b 40 38             	mov    0x38(%eax),%eax
810028e5:	85 c0                	test   %eax,%eax
810028e7:	75 0e                	jne    810028f7 <__swsetup_r+0x30>
810028e9:	83 ec 0c             	sub    $0xc,%esp
810028ec:	ff 75 f4             	pushl  -0xc(%ebp)
810028ef:	e8 ea df ff ff       	call   810008de <__sinit>
810028f4:	83 c4 10             	add    $0x10,%esp
810028f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028fb:	98                   	cwtl   
810028fc:	83 e0 08             	and    $0x8,%eax
810028ff:	85 c0                	test   %eax,%eax
81002901:	0f 85 82 00 00 00    	jne    81002989 <__swsetup_r+0xc2>
81002907:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100290b:	98                   	cwtl   
8100290c:	83 e0 10             	and    $0x10,%eax
8100290f:	85 c0                	test   %eax,%eax
81002911:	75 1e                	jne    81002931 <__swsetup_r+0x6a>
81002913:	8b 45 08             	mov    0x8(%ebp),%eax
81002916:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100291c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002920:	83 c8 40             	or     $0x40,%eax
81002923:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002927:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100292c:	e9 ec 00 00 00       	jmp    81002a1d <__swsetup_r+0x156>
81002931:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002935:	98                   	cwtl   
81002936:	83 e0 04             	and    $0x4,%eax
81002939:	85 c0                	test   %eax,%eax
8100293b:	74 41                	je     8100297e <__swsetup_r+0xb7>
8100293d:	8b 43 30             	mov    0x30(%ebx),%eax
81002940:	85 c0                	test   %eax,%eax
81002942:	74 23                	je     81002967 <__swsetup_r+0xa0>
81002944:	8b 53 30             	mov    0x30(%ebx),%edx
81002947:	8d 43 40             	lea    0x40(%ebx),%eax
8100294a:	39 c2                	cmp    %eax,%edx
8100294c:	74 12                	je     81002960 <__swsetup_r+0x99>
8100294e:	8b 43 30             	mov    0x30(%ebx),%eax
81002951:	83 ec 08             	sub    $0x8,%esp
81002954:	50                   	push   %eax
81002955:	ff 75 08             	pushl  0x8(%ebp)
81002958:	e8 e0 04 00 00       	call   81002e3d <_free_r>
8100295d:	83 c4 10             	add    $0x10,%esp
81002960:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002967:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100296b:	83 e0 db             	and    $0xffffffdb,%eax
8100296e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002972:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002979:	8b 43 10             	mov    0x10(%ebx),%eax
8100297c:	89 03                	mov    %eax,(%ebx)
8100297e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002982:	83 c8 08             	or     $0x8,%eax
81002985:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002989:	8b 43 10             	mov    0x10(%ebx),%eax
8100298c:	85 c0                	test   %eax,%eax
8100298e:	75 2b                	jne    810029bb <__swsetup_r+0xf4>
81002990:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002994:	98                   	cwtl   
81002995:	25 00 02 00 00       	and    $0x200,%eax
8100299a:	85 c0                	test   %eax,%eax
8100299c:	74 0e                	je     810029ac <__swsetup_r+0xe5>
8100299e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029a2:	98                   	cwtl   
810029a3:	25 80 00 00 00       	and    $0x80,%eax
810029a8:	85 c0                	test   %eax,%eax
810029aa:	74 0f                	je     810029bb <__swsetup_r+0xf4>
810029ac:	83 ec 08             	sub    $0x8,%esp
810029af:	53                   	push   %ebx
810029b0:	ff 75 08             	pushl  0x8(%ebp)
810029b3:	e8 07 0a 00 00       	call   810033bf <__smakebuf_r>
810029b8:	83 c4 10             	add    $0x10,%esp
810029bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029bf:	98                   	cwtl   
810029c0:	83 e0 01             	and    $0x1,%eax
810029c3:	85 c0                	test   %eax,%eax
810029c5:	74 11                	je     810029d8 <__swsetup_r+0x111>
810029c7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810029ce:	8b 43 14             	mov    0x14(%ebx),%eax
810029d1:	f7 d8                	neg    %eax
810029d3:	89 43 18             	mov    %eax,0x18(%ebx)
810029d6:	eb 19                	jmp    810029f1 <__swsetup_r+0x12a>
810029d8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029dc:	98                   	cwtl   
810029dd:	83 e0 02             	and    $0x2,%eax
810029e0:	85 c0                	test   %eax,%eax
810029e2:	75 05                	jne    810029e9 <__swsetup_r+0x122>
810029e4:	8b 43 14             	mov    0x14(%ebx),%eax
810029e7:	eb 05                	jmp    810029ee <__swsetup_r+0x127>
810029e9:	b8 00 00 00 00       	mov    $0x0,%eax
810029ee:	89 43 08             	mov    %eax,0x8(%ebx)
810029f1:	8b 43 10             	mov    0x10(%ebx),%eax
810029f4:	85 c0                	test   %eax,%eax
810029f6:	75 20                	jne    81002a18 <__swsetup_r+0x151>
810029f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029fc:	98                   	cwtl   
810029fd:	25 80 00 00 00       	and    $0x80,%eax
81002a02:	85 c0                	test   %eax,%eax
81002a04:	74 12                	je     81002a18 <__swsetup_r+0x151>
81002a06:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a0a:	83 c8 40             	or     $0x40,%eax
81002a0d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a11:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002a16:	eb 05                	jmp    81002a1d <__swsetup_r+0x156>
81002a18:	b8 00 00 00 00       	mov    $0x0,%eax
81002a1d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002a20:	c9                   	leave  
81002a21:	c3                   	ret    

81002a22 <_close_r>:
81002a22:	55                   	push   %ebp
81002a23:	89 e5                	mov    %esp,%ebp
81002a25:	83 ec 18             	sub    $0x18,%esp
81002a28:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
81002a2f:	00 00 00 
81002a32:	83 ec 0c             	sub    $0xc,%esp
81002a35:	ff 75 0c             	pushl  0xc(%ebp)
81002a38:	e8 1a d8 ff ff       	call   81000257 <close>
81002a3d:	83 c4 10             	add    $0x10,%esp
81002a40:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a43:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002a47:	75 14                	jne    81002a5d <_close_r+0x3b>
81002a49:	a1 8c 40 00 81       	mov    0x8100408c,%eax
81002a4e:	85 c0                	test   %eax,%eax
81002a50:	74 0b                	je     81002a5d <_close_r+0x3b>
81002a52:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
81002a58:	8b 45 08             	mov    0x8(%ebp),%eax
81002a5b:	89 10                	mov    %edx,(%eax)
81002a5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a60:	c9                   	leave  
81002a61:	c3                   	ret    

81002a62 <_fclose_r>:
81002a62:	55                   	push   %ebp
81002a63:	89 e5                	mov    %esp,%ebp
81002a65:	53                   	push   %ebx
81002a66:	83 ec 14             	sub    $0x14,%esp
81002a69:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002a6c:	85 db                	test   %ebx,%ebx
81002a6e:	75 0a                	jne    81002a7a <_fclose_r+0x18>
81002a70:	b8 00 00 00 00       	mov    $0x0,%eax
81002a75:	e9 ea 00 00 00       	jmp    81002b64 <_fclose_r+0x102>
81002a7a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a7d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a80:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002a84:	74 18                	je     81002a9e <_fclose_r+0x3c>
81002a86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a89:	8b 40 38             	mov    0x38(%eax),%eax
81002a8c:	85 c0                	test   %eax,%eax
81002a8e:	75 0e                	jne    81002a9e <_fclose_r+0x3c>
81002a90:	83 ec 0c             	sub    $0xc,%esp
81002a93:	ff 75 f0             	pushl  -0x10(%ebp)
81002a96:	e8 43 de ff ff       	call   810008de <__sinit>
81002a9b:	83 c4 10             	add    $0x10,%esp
81002a9e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aa2:	66 85 c0             	test   %ax,%ax
81002aa5:	75 0a                	jne    81002ab1 <_fclose_r+0x4f>
81002aa7:	b8 00 00 00 00       	mov    $0x0,%eax
81002aac:	e9 b3 00 00 00       	jmp    81002b64 <_fclose_r+0x102>
81002ab1:	83 ec 08             	sub    $0x8,%esp
81002ab4:	53                   	push   %ebx
81002ab5:	ff 75 08             	pushl  0x8(%ebp)
81002ab8:	e8 c9 00 00 00       	call   81002b86 <__sflush_r>
81002abd:	83 c4 10             	add    $0x10,%esp
81002ac0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ac3:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002ac6:	85 c0                	test   %eax,%eax
81002ac8:	74 1d                	je     81002ae7 <_fclose_r+0x85>
81002aca:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002acd:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002ad0:	83 ec 08             	sub    $0x8,%esp
81002ad3:	52                   	push   %edx
81002ad4:	ff 75 08             	pushl  0x8(%ebp)
81002ad7:	ff d0                	call   *%eax
81002ad9:	83 c4 10             	add    $0x10,%esp
81002adc:	85 c0                	test   %eax,%eax
81002ade:	79 07                	jns    81002ae7 <_fclose_r+0x85>
81002ae0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002ae7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aeb:	98                   	cwtl   
81002aec:	25 80 00 00 00       	and    $0x80,%eax
81002af1:	85 c0                	test   %eax,%eax
81002af3:	74 12                	je     81002b07 <_fclose_r+0xa5>
81002af5:	8b 43 10             	mov    0x10(%ebx),%eax
81002af8:	83 ec 08             	sub    $0x8,%esp
81002afb:	50                   	push   %eax
81002afc:	ff 75 08             	pushl  0x8(%ebp)
81002aff:	e8 39 03 00 00       	call   81002e3d <_free_r>
81002b04:	83 c4 10             	add    $0x10,%esp
81002b07:	8b 43 30             	mov    0x30(%ebx),%eax
81002b0a:	85 c0                	test   %eax,%eax
81002b0c:	74 23                	je     81002b31 <_fclose_r+0xcf>
81002b0e:	8b 53 30             	mov    0x30(%ebx),%edx
81002b11:	8d 43 40             	lea    0x40(%ebx),%eax
81002b14:	39 c2                	cmp    %eax,%edx
81002b16:	74 12                	je     81002b2a <_fclose_r+0xc8>
81002b18:	8b 43 30             	mov    0x30(%ebx),%eax
81002b1b:	83 ec 08             	sub    $0x8,%esp
81002b1e:	50                   	push   %eax
81002b1f:	ff 75 08             	pushl  0x8(%ebp)
81002b22:	e8 16 03 00 00       	call   81002e3d <_free_r>
81002b27:	83 c4 10             	add    $0x10,%esp
81002b2a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002b31:	8b 43 44             	mov    0x44(%ebx),%eax
81002b34:	85 c0                	test   %eax,%eax
81002b36:	74 19                	je     81002b51 <_fclose_r+0xef>
81002b38:	8b 43 44             	mov    0x44(%ebx),%eax
81002b3b:	83 ec 08             	sub    $0x8,%esp
81002b3e:	50                   	push   %eax
81002b3f:	ff 75 08             	pushl  0x8(%ebp)
81002b42:	e8 f6 02 00 00       	call   81002e3d <_free_r>
81002b47:	83 c4 10             	add    $0x10,%esp
81002b4a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002b51:	e8 21 de ff ff       	call   81000977 <__sfp_lock_acquire>
81002b56:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002b5c:	e8 1c de ff ff       	call   8100097d <__sfp_lock_release>
81002b61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b64:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002b67:	c9                   	leave  
81002b68:	c3                   	ret    

81002b69 <fclose>:
81002b69:	55                   	push   %ebp
81002b6a:	89 e5                	mov    %esp,%ebp
81002b6c:	83 ec 08             	sub    $0x8,%esp
81002b6f:	8b 55 08             	mov    0x8(%ebp),%edx
81002b72:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
81002b77:	83 ec 08             	sub    $0x8,%esp
81002b7a:	52                   	push   %edx
81002b7b:	50                   	push   %eax
81002b7c:	e8 e1 fe ff ff       	call   81002a62 <_fclose_r>
81002b81:	83 c4 10             	add    $0x10,%esp
81002b84:	c9                   	leave  
81002b85:	c3                   	ret    

81002b86 <__sflush_r>:
81002b86:	55                   	push   %ebp
81002b87:	89 e5                	mov    %esp,%ebp
81002b89:	57                   	push   %edi
81002b8a:	56                   	push   %esi
81002b8b:	53                   	push   %ebx
81002b8c:	83 ec 1c             	sub    $0x1c,%esp
81002b8f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002b92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b96:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81002b9a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002b9e:	83 e0 08             	and    $0x8,%eax
81002ba1:	85 c0                	test   %eax,%eax
81002ba3:	0f 85 93 01 00 00    	jne    81002d3c <__sflush_r+0x1b6>
81002ba9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002bad:	80 cc 08             	or     $0x8,%ah
81002bb0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002bb4:	8b 43 04             	mov    0x4(%ebx),%eax
81002bb7:	85 c0                	test   %eax,%eax
81002bb9:	7f 0b                	jg     81002bc6 <__sflush_r+0x40>
81002bbb:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002bbe:	85 c0                	test   %eax,%eax
81002bc0:	0f 8e 6f 01 00 00    	jle    81002d35 <__sflush_r+0x1af>
81002bc6:	8b 43 28             	mov    0x28(%ebx),%eax
81002bc9:	85 c0                	test   %eax,%eax
81002bcb:	0f 84 64 01 00 00    	je     81002d35 <__sflush_r+0x1af>
81002bd1:	8b 45 08             	mov    0x8(%ebp),%eax
81002bd4:	8b 00                	mov    (%eax),%eax
81002bd6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002bd9:	8b 45 08             	mov    0x8(%ebp),%eax
81002bdc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002be2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002be6:	98                   	cwtl   
81002be7:	25 00 10 00 00       	and    $0x1000,%eax
81002bec:	85 c0                	test   %eax,%eax
81002bee:	74 08                	je     81002bf8 <__sflush_r+0x72>
81002bf0:	8b 43 50             	mov    0x50(%ebx),%eax
81002bf3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bf6:	eb 64                	jmp    81002c5c <__sflush_r+0xd6>
81002bf8:	8b 43 28             	mov    0x28(%ebx),%eax
81002bfb:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002bfe:	6a 01                	push   $0x1
81002c00:	6a 00                	push   $0x0
81002c02:	52                   	push   %edx
81002c03:	ff 75 08             	pushl  0x8(%ebp)
81002c06:	ff d0                	call   *%eax
81002c08:	83 c4 10             	add    $0x10,%esp
81002c0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002c0e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c12:	75 48                	jne    81002c5c <__sflush_r+0xd6>
81002c14:	8b 45 08             	mov    0x8(%ebp),%eax
81002c17:	8b 00                	mov    (%eax),%eax
81002c19:	85 c0                	test   %eax,%eax
81002c1b:	74 3f                	je     81002c5c <__sflush_r+0xd6>
81002c1d:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002c24:	8b 45 08             	mov    0x8(%ebp),%eax
81002c27:	8b 00                	mov    (%eax),%eax
81002c29:	83 f8 1d             	cmp    $0x1d,%eax
81002c2c:	74 0a                	je     81002c38 <__sflush_r+0xb2>
81002c2e:	8b 45 08             	mov    0x8(%ebp),%eax
81002c31:	8b 00                	mov    (%eax),%eax
81002c33:	83 f8 16             	cmp    $0x16,%eax
81002c36:	75 11                	jne    81002c49 <__sflush_r+0xc3>
81002c38:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002c3f:	8b 45 08             	mov    0x8(%ebp),%eax
81002c42:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002c45:	89 10                	mov    %edx,(%eax)
81002c47:	eb 0b                	jmp    81002c54 <__sflush_r+0xce>
81002c49:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c4d:	83 c8 40             	or     $0x40,%eax
81002c50:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c54:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c57:	e9 48 01 00 00       	jmp    81002da4 <__sflush_r+0x21e>
81002c5c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c60:	98                   	cwtl   
81002c61:	83 e0 04             	and    $0x4,%eax
81002c64:	85 c0                	test   %eax,%eax
81002c66:	74 13                	je     81002c7b <__sflush_r+0xf5>
81002c68:	8b 43 04             	mov    0x4(%ebx),%eax
81002c6b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c6e:	8b 43 30             	mov    0x30(%ebx),%eax
81002c71:	85 c0                	test   %eax,%eax
81002c73:	74 06                	je     81002c7b <__sflush_r+0xf5>
81002c75:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002c78:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c7b:	8b 43 28             	mov    0x28(%ebx),%eax
81002c7e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002c81:	6a 00                	push   $0x0
81002c83:	ff 75 e4             	pushl  -0x1c(%ebp)
81002c86:	52                   	push   %edx
81002c87:	ff 75 08             	pushl  0x8(%ebp)
81002c8a:	ff d0                	call   *%eax
81002c8c:	83 c4 10             	add    $0x10,%esp
81002c8f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002c92:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c96:	75 1d                	jne    81002cb5 <__sflush_r+0x12f>
81002c98:	8b 45 08             	mov    0x8(%ebp),%eax
81002c9b:	8b 00                	mov    (%eax),%eax
81002c9d:	85 c0                	test   %eax,%eax
81002c9f:	74 14                	je     81002cb5 <__sflush_r+0x12f>
81002ca1:	8b 45 08             	mov    0x8(%ebp),%eax
81002ca4:	8b 00                	mov    (%eax),%eax
81002ca6:	83 f8 1d             	cmp    $0x1d,%eax
81002ca9:	74 0a                	je     81002cb5 <__sflush_r+0x12f>
81002cab:	8b 45 08             	mov    0x8(%ebp),%eax
81002cae:	8b 00                	mov    (%eax),%eax
81002cb0:	83 f8 16             	cmp    $0x16,%eax
81002cb3:	75 6e                	jne    81002d23 <__sflush_r+0x19d>
81002cb5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002cb9:	80 e4 f7             	and    $0xf7,%ah
81002cbc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002cc0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002cc7:	8b 43 10             	mov    0x10(%ebx),%eax
81002cca:	89 03                	mov    %eax,(%ebx)
81002ccc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002cd0:	98                   	cwtl   
81002cd1:	25 00 10 00 00       	and    $0x1000,%eax
81002cd6:	85 c0                	test   %eax,%eax
81002cd8:	74 15                	je     81002cef <__sflush_r+0x169>
81002cda:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002cde:	75 09                	jne    81002ce9 <__sflush_r+0x163>
81002ce0:	8b 45 08             	mov    0x8(%ebp),%eax
81002ce3:	8b 00                	mov    (%eax),%eax
81002ce5:	85 c0                	test   %eax,%eax
81002ce7:	75 06                	jne    81002cef <__sflush_r+0x169>
81002ce9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002cec:	89 43 50             	mov    %eax,0x50(%ebx)
81002cef:	8b 45 08             	mov    0x8(%ebp),%eax
81002cf2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cf5:	89 10                	mov    %edx,(%eax)
81002cf7:	8b 43 30             	mov    0x30(%ebx),%eax
81002cfa:	85 c0                	test   %eax,%eax
81002cfc:	74 37                	je     81002d35 <__sflush_r+0x1af>
81002cfe:	8b 53 30             	mov    0x30(%ebx),%edx
81002d01:	8d 43 40             	lea    0x40(%ebx),%eax
81002d04:	39 c2                	cmp    %eax,%edx
81002d06:	74 12                	je     81002d1a <__sflush_r+0x194>
81002d08:	8b 43 30             	mov    0x30(%ebx),%eax
81002d0b:	83 ec 08             	sub    $0x8,%esp
81002d0e:	50                   	push   %eax
81002d0f:	ff 75 08             	pushl  0x8(%ebp)
81002d12:	e8 26 01 00 00       	call   81002e3d <_free_r>
81002d17:	83 c4 10             	add    $0x10,%esp
81002d1a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002d21:	eb 12                	jmp    81002d35 <__sflush_r+0x1af>
81002d23:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d27:	83 c8 40             	or     $0x40,%eax
81002d2a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d2e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d33:	eb 6f                	jmp    81002da4 <__sflush_r+0x21e>
81002d35:	b8 00 00 00 00       	mov    $0x0,%eax
81002d3a:	eb 68                	jmp    81002da4 <__sflush_r+0x21e>
81002d3c:	8b 73 10             	mov    0x10(%ebx),%esi
81002d3f:	85 f6                	test   %esi,%esi
81002d41:	75 07                	jne    81002d4a <__sflush_r+0x1c4>
81002d43:	b8 00 00 00 00       	mov    $0x0,%eax
81002d48:	eb 5a                	jmp    81002da4 <__sflush_r+0x21e>
81002d4a:	8b 03                	mov    (%ebx),%eax
81002d4c:	29 f0                	sub    %esi,%eax
81002d4e:	89 c7                	mov    %eax,%edi
81002d50:	89 33                	mov    %esi,(%ebx)
81002d52:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002d56:	83 e0 03             	and    $0x3,%eax
81002d59:	85 c0                	test   %eax,%eax
81002d5b:	75 05                	jne    81002d62 <__sflush_r+0x1dc>
81002d5d:	8b 43 14             	mov    0x14(%ebx),%eax
81002d60:	eb 05                	jmp    81002d67 <__sflush_r+0x1e1>
81002d62:	b8 00 00 00 00       	mov    $0x0,%eax
81002d67:	89 43 08             	mov    %eax,0x8(%ebx)
81002d6a:	eb 2f                	jmp    81002d9b <__sflush_r+0x215>
81002d6c:	8b 43 24             	mov    0x24(%ebx),%eax
81002d6f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002d72:	57                   	push   %edi
81002d73:	56                   	push   %esi
81002d74:	52                   	push   %edx
81002d75:	ff 75 08             	pushl  0x8(%ebp)
81002d78:	ff d0                	call   *%eax
81002d7a:	83 c4 10             	add    $0x10,%esp
81002d7d:	85 c0                	test   %eax,%eax
81002d7f:	7f 12                	jg     81002d93 <__sflush_r+0x20d>
81002d81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d85:	83 c8 40             	or     $0x40,%eax
81002d88:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d91:	eb 11                	jmp    81002da4 <__sflush_r+0x21e>
81002d93:	89 c1                	mov    %eax,%ecx
81002d95:	89 c8                	mov    %ecx,%eax
81002d97:	01 c6                	add    %eax,%esi
81002d99:	29 cf                	sub    %ecx,%edi
81002d9b:	85 ff                	test   %edi,%edi
81002d9d:	7f cd                	jg     81002d6c <__sflush_r+0x1e6>
81002d9f:	b8 00 00 00 00       	mov    $0x0,%eax
81002da4:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002da7:	5b                   	pop    %ebx
81002da8:	5e                   	pop    %esi
81002da9:	5f                   	pop    %edi
81002daa:	5d                   	pop    %ebp
81002dab:	c3                   	ret    

81002dac <_fflush_r>:
81002dac:	55                   	push   %ebp
81002dad:	89 e5                	mov    %esp,%ebp
81002daf:	53                   	push   %ebx
81002db0:	83 ec 14             	sub    $0x14,%esp
81002db3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002db6:	8b 45 08             	mov    0x8(%ebp),%eax
81002db9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002dbc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002dc0:	74 18                	je     81002dda <_fflush_r+0x2e>
81002dc2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002dc5:	8b 40 38             	mov    0x38(%eax),%eax
81002dc8:	85 c0                	test   %eax,%eax
81002dca:	75 0e                	jne    81002dda <_fflush_r+0x2e>
81002dcc:	83 ec 0c             	sub    $0xc,%esp
81002dcf:	ff 75 f4             	pushl  -0xc(%ebp)
81002dd2:	e8 07 db ff ff       	call   810008de <__sinit>
81002dd7:	83 c4 10             	add    $0x10,%esp
81002dda:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dde:	66 85 c0             	test   %ax,%ax
81002de1:	75 07                	jne    81002dea <_fflush_r+0x3e>
81002de3:	b8 00 00 00 00       	mov    $0x0,%eax
81002de8:	eb 15                	jmp    81002dff <_fflush_r+0x53>
81002dea:	83 ec 08             	sub    $0x8,%esp
81002ded:	53                   	push   %ebx
81002dee:	ff 75 08             	pushl  0x8(%ebp)
81002df1:	e8 90 fd ff ff       	call   81002b86 <__sflush_r>
81002df6:	83 c4 10             	add    $0x10,%esp
81002df9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002dfc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dff:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002e02:	c9                   	leave  
81002e03:	c3                   	ret    

81002e04 <fflush>:
81002e04:	55                   	push   %ebp
81002e05:	89 e5                	mov    %esp,%ebp
81002e07:	83 ec 08             	sub    $0x8,%esp
81002e0a:	8b 55 08             	mov    0x8(%ebp),%edx
81002e0d:	85 d2                	test   %edx,%edx
81002e0f:	75 18                	jne    81002e29 <fflush+0x25>
81002e11:	a1 b4 37 00 81       	mov    0x810037b4,%eax
81002e16:	83 ec 08             	sub    $0x8,%esp
81002e19:	68 ac 2d 00 81       	push   $0x81002dac
81002e1e:	50                   	push   %eax
81002e1f:	e8 cd e0 ff ff       	call   81000ef1 <_fwalk_reent>
81002e24:	83 c4 10             	add    $0x10,%esp
81002e27:	eb 12                	jmp    81002e3b <fflush+0x37>
81002e29:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
81002e2e:	83 ec 08             	sub    $0x8,%esp
81002e31:	52                   	push   %edx
81002e32:	50                   	push   %eax
81002e33:	e8 74 ff ff ff       	call   81002dac <_fflush_r>
81002e38:	83 c4 10             	add    $0x10,%esp
81002e3b:	c9                   	leave  
81002e3c:	c3                   	ret    

81002e3d <_free_r>:
81002e3d:	55                   	push   %ebp
81002e3e:	89 e5                	mov    %esp,%ebp
81002e40:	53                   	push   %ebx
81002e41:	83 ec 34             	sub    $0x34,%esp
81002e44:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002e48:	0f 84 c4 03 00 00    	je     81003212 <_free_r+0x3d5>
81002e4e:	83 ec 0c             	sub    $0xc,%esp
81002e51:	ff 75 08             	pushl  0x8(%ebp)
81002e54:	e8 bc ed ff ff       	call   81001c15 <__malloc_lock>
81002e59:	83 c4 10             	add    $0x10,%esp
81002e5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e5f:	83 e8 08             	sub    $0x8,%eax
81002e62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e68:	8b 40 04             	mov    0x4(%eax),%eax
81002e6b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e6e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e71:	83 e0 fe             	and    $0xfffffffe,%eax
81002e74:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e77:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e7d:	01 d0                	add    %edx,%eax
81002e7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e82:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e85:	8b 40 04             	mov    0x4(%eax),%eax
81002e88:	83 e0 fc             	and    $0xfffffffc,%eax
81002e8b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e8e:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81002e93:	8b 40 08             	mov    0x8(%eax),%eax
81002e96:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002e99:	0f 85 94 00 00 00    	jne    81002f33 <_free_r+0xf6>
81002e9f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ea2:	01 45 f0             	add    %eax,-0x10(%ebp)
81002ea5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ea8:	83 e0 01             	and    $0x1,%eax
81002eab:	85 c0                	test   %eax,%eax
81002ead:	75 3a                	jne    81002ee9 <_free_r+0xac>
81002eaf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eb2:	8b 00                	mov    (%eax),%eax
81002eb4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002eb7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002eba:	f7 d8                	neg    %eax
81002ebc:	01 45 f4             	add    %eax,-0xc(%ebp)
81002ebf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002ec2:	01 45 f0             	add    %eax,-0x10(%ebp)
81002ec5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ec8:	8b 40 0c             	mov    0xc(%eax),%eax
81002ecb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ece:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ed1:	8b 40 08             	mov    0x8(%eax),%eax
81002ed4:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ed7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002eda:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002edd:	89 50 0c             	mov    %edx,0xc(%eax)
81002ee0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ee3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002ee6:	89 50 08             	mov    %edx,0x8(%eax)
81002ee9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eec:	83 c8 01             	or     $0x1,%eax
81002eef:	89 c2                	mov    %eax,%edx
81002ef1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ef4:	89 50 04             	mov    %edx,0x4(%eax)
81002ef7:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
81002efc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eff:	89 42 08             	mov    %eax,0x8(%edx)
81002f02:	a1 08 40 00 81       	mov    0x81004008,%eax
81002f07:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002f0a:	72 14                	jb     81002f20 <_free_r+0xe3>
81002f0c:	a1 40 40 00 81       	mov    0x81004040,%eax
81002f11:	83 ec 08             	sub    $0x8,%esp
81002f14:	50                   	push   %eax
81002f15:	ff 75 08             	pushl  0x8(%ebp)
81002f18:	e8 fb 02 00 00       	call   81003218 <_malloc_trim_r>
81002f1d:	83 c4 10             	add    $0x10,%esp
81002f20:	83 ec 0c             	sub    $0xc,%esp
81002f23:	ff 75 08             	pushl  0x8(%ebp)
81002f26:	e8 f0 ec ff ff       	call   81001c1b <__malloc_unlock>
81002f2b:	83 c4 10             	add    $0x10,%esp
81002f2e:	e9 e0 02 00 00       	jmp    81003213 <_free_r+0x3d6>
81002f33:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f36:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002f39:	89 50 04             	mov    %edx,0x4(%eax)
81002f3c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002f43:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002f46:	83 e0 01             	and    $0x1,%eax
81002f49:	85 c0                	test   %eax,%eax
81002f4b:	75 52                	jne    81002f9f <_free_r+0x162>
81002f4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f50:	8b 00                	mov    (%eax),%eax
81002f52:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002f55:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f58:	f7 d8                	neg    %eax
81002f5a:	01 45 f4             	add    %eax,-0xc(%ebp)
81002f5d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f60:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f66:	8b 40 08             	mov    0x8(%eax),%eax
81002f69:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
81002f6e:	39 d0                	cmp    %edx,%eax
81002f70:	75 09                	jne    81002f7b <_free_r+0x13e>
81002f72:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f79:	eb 24                	jmp    81002f9f <_free_r+0x162>
81002f7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f7e:	8b 40 0c             	mov    0xc(%eax),%eax
81002f81:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f84:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f87:	8b 40 08             	mov    0x8(%eax),%eax
81002f8a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f8d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f90:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f93:	89 50 0c             	mov    %edx,0xc(%eax)
81002f96:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f99:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f9c:	89 50 08             	mov    %edx,0x8(%eax)
81002f9f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002fa2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fa5:	01 d0                	add    %edx,%eax
81002fa7:	8b 40 04             	mov    0x4(%eax),%eax
81002faa:	83 e0 01             	and    $0x1,%eax
81002fad:	85 c0                	test   %eax,%eax
81002faf:	75 75                	jne    81003026 <_free_r+0x1e9>
81002fb1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fb4:	01 45 f0             	add    %eax,-0x10(%ebp)
81002fb7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002fbb:	75 45                	jne    81003002 <_free_r+0x1c5>
81002fbd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fc0:	8b 40 08             	mov    0x8(%eax),%eax
81002fc3:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
81002fc8:	39 d0                	cmp    %edx,%eax
81002fca:	75 36                	jne    81003002 <_free_r+0x1c5>
81002fcc:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002fd3:	b8 08 3c 00 81       	mov    $0x81003c08,%eax
81002fd8:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fdb:	89 50 0c             	mov    %edx,0xc(%eax)
81002fde:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
81002fe3:	8b 40 0c             	mov    0xc(%eax),%eax
81002fe6:	89 42 08             	mov    %eax,0x8(%edx)
81002fe9:	ba 08 3c 00 81       	mov    $0x81003c08,%edx
81002fee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ff1:	89 50 0c             	mov    %edx,0xc(%eax)
81002ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ff7:	8b 50 0c             	mov    0xc(%eax),%edx
81002ffa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ffd:	89 50 08             	mov    %edx,0x8(%eax)
81003000:	eb 24                	jmp    81003026 <_free_r+0x1e9>
81003002:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003005:	8b 40 0c             	mov    0xc(%eax),%eax
81003008:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100300b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100300e:	8b 40 08             	mov    0x8(%eax),%eax
81003011:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003014:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003017:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100301a:	89 50 0c             	mov    %edx,0xc(%eax)
8100301d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003020:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003023:	89 50 08             	mov    %edx,0x8(%eax)
81003026:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003029:	83 c8 01             	or     $0x1,%eax
8100302c:	89 c2                	mov    %eax,%edx
8100302e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003031:	89 50 04             	mov    %edx,0x4(%eax)
81003034:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003037:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100303a:	01 c2                	add    %eax,%edx
8100303c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100303f:	89 02                	mov    %eax,(%edx)
81003041:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003045:	0f 85 b7 01 00 00    	jne    81003202 <_free_r+0x3c5>
8100304b:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003052:	77 7f                	ja     810030d3 <_free_r+0x296>
81003054:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003057:	c1 e8 03             	shr    $0x3,%eax
8100305a:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100305d:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81003062:	8b 58 04             	mov    0x4(%eax),%ebx
81003065:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003068:	8d 50 03             	lea    0x3(%eax),%edx
8100306b:	85 c0                	test   %eax,%eax
8100306d:	0f 48 c2             	cmovs  %edx,%eax
81003070:	c1 f8 02             	sar    $0x2,%eax
81003073:	ba 01 00 00 00       	mov    $0x1,%edx
81003078:	89 c1                	mov    %eax,%ecx
8100307a:	d3 e2                	shl    %cl,%edx
8100307c:	89 d0                	mov    %edx,%eax
8100307e:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
81003083:	09 d8                	or     %ebx,%eax
81003085:	89 42 04             	mov    %eax,0x4(%edx)
81003088:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100308b:	83 c0 01             	add    $0x1,%eax
8100308e:	01 c0                	add    %eax,%eax
81003090:	c1 e0 02             	shl    $0x2,%eax
81003093:	05 00 3c 00 81       	add    $0x81003c00,%eax
81003098:	83 e8 08             	sub    $0x8,%eax
8100309b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100309e:	8b 45 ec             	mov    -0x14(%ebp),%eax
810030a1:	8b 40 08             	mov    0x8(%eax),%eax
810030a4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810030a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030aa:	8b 55 ec             	mov    -0x14(%ebp),%edx
810030ad:	89 50 0c             	mov    %edx,0xc(%eax)
810030b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030b3:	8b 55 e8             	mov    -0x18(%ebp),%edx
810030b6:	89 50 08             	mov    %edx,0x8(%eax)
810030b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810030bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810030bf:	89 50 08             	mov    %edx,0x8(%eax)
810030c2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810030c5:	8b 50 08             	mov    0x8(%eax),%edx
810030c8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810030cb:	89 50 0c             	mov    %edx,0xc(%eax)
810030ce:	e9 2f 01 00 00       	jmp    81003202 <_free_r+0x3c5>
810030d3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030d6:	c1 e8 09             	shr    $0x9,%eax
810030d9:	85 c0                	test   %eax,%eax
810030db:	75 08                	jne    810030e5 <_free_r+0x2a8>
810030dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030e0:	c1 e8 03             	shr    $0x3,%eax
810030e3:	eb 77                	jmp    8100315c <_free_r+0x31f>
810030e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030e8:	c1 e8 09             	shr    $0x9,%eax
810030eb:	83 f8 04             	cmp    $0x4,%eax
810030ee:	77 0b                	ja     810030fb <_free_r+0x2be>
810030f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030f3:	c1 e8 06             	shr    $0x6,%eax
810030f6:	83 c0 38             	add    $0x38,%eax
810030f9:	eb 61                	jmp    8100315c <_free_r+0x31f>
810030fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030fe:	c1 e8 09             	shr    $0x9,%eax
81003101:	83 f8 14             	cmp    $0x14,%eax
81003104:	77 0b                	ja     81003111 <_free_r+0x2d4>
81003106:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003109:	c1 e8 09             	shr    $0x9,%eax
8100310c:	83 c0 5b             	add    $0x5b,%eax
8100310f:	eb 4b                	jmp    8100315c <_free_r+0x31f>
81003111:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003114:	c1 e8 09             	shr    $0x9,%eax
81003117:	83 f8 54             	cmp    $0x54,%eax
8100311a:	77 0b                	ja     81003127 <_free_r+0x2ea>
8100311c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100311f:	c1 e8 0c             	shr    $0xc,%eax
81003122:	83 c0 6e             	add    $0x6e,%eax
81003125:	eb 35                	jmp    8100315c <_free_r+0x31f>
81003127:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100312a:	c1 e8 09             	shr    $0x9,%eax
8100312d:	3d 54 01 00 00       	cmp    $0x154,%eax
81003132:	77 0b                	ja     8100313f <_free_r+0x302>
81003134:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003137:	c1 e8 0f             	shr    $0xf,%eax
8100313a:	83 c0 77             	add    $0x77,%eax
8100313d:	eb 1d                	jmp    8100315c <_free_r+0x31f>
8100313f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003142:	c1 e8 09             	shr    $0x9,%eax
81003145:	3d 54 05 00 00       	cmp    $0x554,%eax
8100314a:	77 0b                	ja     81003157 <_free_r+0x31a>
8100314c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100314f:	c1 e8 12             	shr    $0x12,%eax
81003152:	83 c0 7c             	add    $0x7c,%eax
81003155:	eb 05                	jmp    8100315c <_free_r+0x31f>
81003157:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100315c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100315f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003162:	83 c0 01             	add    $0x1,%eax
81003165:	01 c0                	add    %eax,%eax
81003167:	c1 e0 02             	shl    $0x2,%eax
8100316a:	05 00 3c 00 81       	add    $0x81003c00,%eax
8100316f:	83 e8 08             	sub    $0x8,%eax
81003172:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003175:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003178:	8b 40 08             	mov    0x8(%eax),%eax
8100317b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100317e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003181:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003184:	75 36                	jne    810031bc <_free_r+0x37f>
81003186:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100318b:	8b 58 04             	mov    0x4(%eax),%ebx
8100318e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003191:	8d 50 03             	lea    0x3(%eax),%edx
81003194:	85 c0                	test   %eax,%eax
81003196:	0f 48 c2             	cmovs  %edx,%eax
81003199:	c1 f8 02             	sar    $0x2,%eax
8100319c:	ba 01 00 00 00       	mov    $0x1,%edx
810031a1:	89 c1                	mov    %eax,%ecx
810031a3:	d3 e2                	shl    %cl,%edx
810031a5:	89 d0                	mov    %edx,%eax
810031a7:	ba 00 3c 00 81       	mov    $0x81003c00,%edx
810031ac:	09 d8                	or     %ebx,%eax
810031ae:	89 42 04             	mov    %eax,0x4(%edx)
810031b1:	eb 28                	jmp    810031db <_free_r+0x39e>
810031b3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031b6:	8b 40 08             	mov    0x8(%eax),%eax
810031b9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810031bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031bf:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810031c2:	74 0e                	je     810031d2 <_free_r+0x395>
810031c4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031c7:	8b 40 04             	mov    0x4(%eax),%eax
810031ca:	83 e0 fc             	and    $0xfffffffc,%eax
810031cd:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810031d0:	72 e1                	jb     810031b3 <_free_r+0x376>
810031d2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031d5:	8b 40 0c             	mov    0xc(%eax),%eax
810031d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810031db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031de:	8b 55 ec             	mov    -0x14(%ebp),%edx
810031e1:	89 50 0c             	mov    %edx,0xc(%eax)
810031e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031e7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810031ea:	89 50 08             	mov    %edx,0x8(%eax)
810031ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031f0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810031f3:	89 50 08             	mov    %edx,0x8(%eax)
810031f6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031f9:	8b 50 08             	mov    0x8(%eax),%edx
810031fc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031ff:	89 50 0c             	mov    %edx,0xc(%eax)
81003202:	83 ec 0c             	sub    $0xc,%esp
81003205:	ff 75 08             	pushl  0x8(%ebp)
81003208:	e8 0e ea ff ff       	call   81001c1b <__malloc_unlock>
8100320d:	83 c4 10             	add    $0x10,%esp
81003210:	eb 01                	jmp    81003213 <_free_r+0x3d6>
81003212:	90                   	nop
81003213:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003216:	c9                   	leave  
81003217:	c3                   	ret    

81003218 <_malloc_trim_r>:
81003218:	55                   	push   %ebp
81003219:	89 e5                	mov    %esp,%ebp
8100321b:	83 ec 28             	sub    $0x28,%esp
8100321e:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003225:	83 ec 0c             	sub    $0xc,%esp
81003228:	ff 75 08             	pushl  0x8(%ebp)
8100322b:	e8 e5 e9 ff ff       	call   81001c15 <__malloc_lock>
81003230:	83 c4 10             	add    $0x10,%esp
81003233:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81003238:	8b 40 08             	mov    0x8(%eax),%eax
8100323b:	8b 40 04             	mov    0x4(%eax),%eax
8100323e:	83 e0 fc             	and    $0xfffffffc,%eax
81003241:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003244:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003247:	2b 45 0c             	sub    0xc(%ebp),%eax
8100324a:	89 c2                	mov    %eax,%edx
8100324c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100324f:	01 d0                	add    %edx,%eax
81003251:	83 e8 11             	sub    $0x11,%eax
81003254:	ba 00 00 00 00       	mov    $0x0,%edx
81003259:	f7 75 f4             	divl   -0xc(%ebp)
8100325c:	83 e8 01             	sub    $0x1,%eax
8100325f:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003263:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003266:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003269:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100326c:	7d 18                	jge    81003286 <_malloc_trim_r+0x6e>
8100326e:	83 ec 0c             	sub    $0xc,%esp
81003271:	ff 75 08             	pushl  0x8(%ebp)
81003274:	e8 a2 e9 ff ff       	call   81001c1b <__malloc_unlock>
81003279:	83 c4 10             	add    $0x10,%esp
8100327c:	b8 00 00 00 00       	mov    $0x0,%eax
81003281:	e9 f1 00 00 00       	jmp    81003377 <_malloc_trim_r+0x15f>
81003286:	83 ec 08             	sub    $0x8,%esp
81003289:	6a 00                	push   $0x0
8100328b:	ff 75 08             	pushl  0x8(%ebp)
8100328e:	e8 96 f4 ff ff       	call   81002729 <_sbrk_r>
81003293:	83 c4 10             	add    $0x10,%esp
81003296:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003299:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
8100329e:	8b 50 08             	mov    0x8(%eax),%edx
810032a1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032a4:	01 d0                	add    %edx,%eax
810032a6:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810032a9:	74 18                	je     810032c3 <_malloc_trim_r+0xab>
810032ab:	83 ec 0c             	sub    $0xc,%esp
810032ae:	ff 75 08             	pushl  0x8(%ebp)
810032b1:	e8 65 e9 ff ff       	call   81001c1b <__malloc_unlock>
810032b6:	83 c4 10             	add    $0x10,%esp
810032b9:	b8 00 00 00 00       	mov    $0x0,%eax
810032be:	e9 b4 00 00 00       	jmp    81003377 <_malloc_trim_r+0x15f>
810032c3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810032c6:	f7 d8                	neg    %eax
810032c8:	83 ec 08             	sub    $0x8,%esp
810032cb:	50                   	push   %eax
810032cc:	ff 75 08             	pushl  0x8(%ebp)
810032cf:	e8 55 f4 ff ff       	call   81002729 <_sbrk_r>
810032d4:	83 c4 10             	add    $0x10,%esp
810032d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810032da:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810032de:	75 61                	jne    81003341 <_malloc_trim_r+0x129>
810032e0:	83 ec 08             	sub    $0x8,%esp
810032e3:	6a 00                	push   $0x0
810032e5:	ff 75 08             	pushl  0x8(%ebp)
810032e8:	e8 3c f4 ff ff       	call   81002729 <_sbrk_r>
810032ed:	83 c4 10             	add    $0x10,%esp
810032f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032f3:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
810032f8:	8b 50 08             	mov    0x8(%eax),%edx
810032fb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032fe:	29 d0                	sub    %edx,%eax
81003300:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003303:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003307:	7e 23                	jle    8100332c <_malloc_trim_r+0x114>
81003309:	8b 15 0c 40 00 81    	mov    0x8100400c,%edx
8100330f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003312:	29 d0                	sub    %edx,%eax
81003314:	a3 60 40 00 81       	mov    %eax,0x81004060
81003319:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100331c:	83 c8 01             	or     $0x1,%eax
8100331f:	89 c2                	mov    %eax,%edx
81003321:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81003326:	8b 40 08             	mov    0x8(%eax),%eax
81003329:	89 50 04             	mov    %edx,0x4(%eax)
8100332c:	83 ec 0c             	sub    $0xc,%esp
8100332f:	ff 75 08             	pushl  0x8(%ebp)
81003332:	e8 e4 e8 ff ff       	call   81001c1b <__malloc_unlock>
81003337:	83 c4 10             	add    $0x10,%esp
8100333a:	b8 00 00 00 00       	mov    $0x0,%eax
8100333f:	eb 36                	jmp    81003377 <_malloc_trim_r+0x15f>
81003341:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003344:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003347:	83 c8 01             	or     $0x1,%eax
8100334a:	89 c2                	mov    %eax,%edx
8100334c:	b8 00 3c 00 81       	mov    $0x81003c00,%eax
81003351:	8b 40 08             	mov    0x8(%eax),%eax
81003354:	89 50 04             	mov    %edx,0x4(%eax)
81003357:	a1 60 40 00 81       	mov    0x81004060,%eax
8100335c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100335f:	a3 60 40 00 81       	mov    %eax,0x81004060
81003364:	83 ec 0c             	sub    $0xc,%esp
81003367:	ff 75 08             	pushl  0x8(%ebp)
8100336a:	e8 ac e8 ff ff       	call   81001c1b <__malloc_unlock>
8100336f:	83 c4 10             	add    $0x10,%esp
81003372:	b8 01 00 00 00       	mov    $0x1,%eax
81003377:	c9                   	leave  
81003378:	c3                   	ret    

81003379 <_lseek_r>:
81003379:	55                   	push   %ebp
8100337a:	89 e5                	mov    %esp,%ebp
8100337c:	83 ec 18             	sub    $0x18,%esp
8100337f:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
81003386:	00 00 00 
81003389:	83 ec 04             	sub    $0x4,%esp
8100338c:	ff 75 14             	pushl  0x14(%ebp)
8100338f:	ff 75 10             	pushl  0x10(%ebp)
81003392:	ff 75 0c             	pushl  0xc(%ebp)
81003395:	e8 de ce ff ff       	call   81000278 <lseek>
8100339a:	83 c4 10             	add    $0x10,%esp
8100339d:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033a0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810033a4:	75 14                	jne    810033ba <_lseek_r+0x41>
810033a6:	a1 8c 40 00 81       	mov    0x8100408c,%eax
810033ab:	85 c0                	test   %eax,%eax
810033ad:	74 0b                	je     810033ba <_lseek_r+0x41>
810033af:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
810033b5:	8b 45 08             	mov    0x8(%ebp),%eax
810033b8:	89 10                	mov    %edx,(%eax)
810033ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033bd:	c9                   	leave  
810033be:	c3                   	ret    

810033bf <__smakebuf_r>:
810033bf:	55                   	push   %ebp
810033c0:	89 e5                	mov    %esp,%ebp
810033c2:	56                   	push   %esi
810033c3:	53                   	push   %ebx
810033c4:	83 ec 10             	sub    $0x10,%esp
810033c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810033ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033ce:	98                   	cwtl   
810033cf:	83 e0 02             	and    $0x2,%eax
810033d2:	85 c0                	test   %eax,%eax
810033d4:	74 16                	je     810033ec <__smakebuf_r+0x2d>
810033d6:	8d 43 43             	lea    0x43(%ebx),%eax
810033d9:	89 03                	mov    %eax,(%ebx)
810033db:	8b 03                	mov    (%ebx),%eax
810033dd:	89 43 10             	mov    %eax,0x10(%ebx)
810033e0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810033e7:	e9 b9 00 00 00       	jmp    810034a5 <__smakebuf_r+0xe6>
810033ec:	8d 45 ec             	lea    -0x14(%ebp),%eax
810033ef:	50                   	push   %eax
810033f0:	8d 45 f0             	lea    -0x10(%ebp),%eax
810033f3:	50                   	push   %eax
810033f4:	53                   	push   %ebx
810033f5:	ff 75 08             	pushl  0x8(%ebp)
810033f8:	e8 af 00 00 00       	call   810034ac <__swhatbuf_r>
810033fd:	83 c4 10             	add    $0x10,%esp
81003400:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003403:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003406:	83 ec 08             	sub    $0x8,%esp
81003409:	50                   	push   %eax
8100340a:	ff 75 08             	pushl  0x8(%ebp)
8100340d:	e8 dd dd ff ff       	call   810011ef <_malloc_r>
81003412:	83 c4 10             	add    $0x10,%esp
81003415:	89 c6                	mov    %eax,%esi
81003417:	85 f6                	test   %esi,%esi
81003419:	75 2f                	jne    8100344a <__smakebuf_r+0x8b>
8100341b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100341f:	98                   	cwtl   
81003420:	25 00 02 00 00       	and    $0x200,%eax
81003425:	85 c0                	test   %eax,%eax
81003427:	75 7c                	jne    810034a5 <__smakebuf_r+0xe6>
81003429:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100342d:	83 e0 fc             	and    $0xfffffffc,%eax
81003430:	83 c8 02             	or     $0x2,%eax
81003433:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003437:	8d 43 43             	lea    0x43(%ebx),%eax
8100343a:	89 03                	mov    %eax,(%ebx)
8100343c:	8b 03                	mov    (%ebx),%eax
8100343e:	89 43 10             	mov    %eax,0x10(%ebx)
81003441:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003448:	eb 5b                	jmp    810034a5 <__smakebuf_r+0xe6>
8100344a:	8b 45 08             	mov    0x8(%ebp),%eax
8100344d:	c7 40 3c a3 08 00 81 	movl   $0x810008a3,0x3c(%eax)
81003454:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003458:	0c 80                	or     $0x80,%al
8100345a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100345e:	89 33                	mov    %esi,(%ebx)
81003460:	8b 03                	mov    (%ebx),%eax
81003462:	89 43 10             	mov    %eax,0x10(%ebx)
81003465:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003468:	89 43 14             	mov    %eax,0x14(%ebx)
8100346b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100346e:	85 c0                	test   %eax,%eax
81003470:	74 26                	je     81003498 <__smakebuf_r+0xd9>
81003472:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003476:	98                   	cwtl   
81003477:	83 ec 08             	sub    $0x8,%esp
8100347a:	50                   	push   %eax
8100347b:	ff 75 08             	pushl  0x8(%ebp)
8100347e:	e8 dc 02 00 00       	call   8100375f <_isatty_r>
81003483:	83 c4 10             	add    $0x10,%esp
81003486:	85 c0                	test   %eax,%eax
81003488:	74 0e                	je     81003498 <__smakebuf_r+0xd9>
8100348a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100348e:	83 e0 fc             	and    $0xfffffffc,%eax
81003491:	83 c8 01             	or     $0x1,%eax
81003494:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003498:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100349c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100349f:	09 d0                	or     %edx,%eax
810034a1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810034a5:	8d 65 f8             	lea    -0x8(%ebp),%esp
810034a8:	5b                   	pop    %ebx
810034a9:	5e                   	pop    %esi
810034aa:	5d                   	pop    %ebp
810034ab:	c3                   	ret    

810034ac <__swhatbuf_r>:
810034ac:	55                   	push   %ebp
810034ad:	89 e5                	mov    %esp,%ebp
810034af:	83 ec 58             	sub    $0x58,%esp
810034b2:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810034b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810034bc:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810034c0:	66 85 c0             	test   %ax,%ax
810034c3:	78 1f                	js     810034e4 <__swhatbuf_r+0x38>
810034c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810034c8:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810034cc:	98                   	cwtl   
810034cd:	83 ec 04             	sub    $0x4,%esp
810034d0:	8d 55 ac             	lea    -0x54(%ebp),%edx
810034d3:	52                   	push   %edx
810034d4:	50                   	push   %eax
810034d5:	ff 75 08             	pushl  0x8(%ebp)
810034d8:	e8 3f 02 00 00       	call   8100371c <_fstat_r>
810034dd:	83 c4 10             	add    $0x10,%esp
810034e0:	85 c0                	test   %eax,%eax
810034e2:	79 35                	jns    81003519 <__swhatbuf_r+0x6d>
810034e4:	8b 45 14             	mov    0x14(%ebp),%eax
810034e7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810034ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810034f0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810034f4:	98                   	cwtl   
810034f5:	25 80 00 00 00       	and    $0x80,%eax
810034fa:	85 c0                	test   %eax,%eax
810034fc:	74 0b                	je     81003509 <__swhatbuf_r+0x5d>
810034fe:	8b 45 10             	mov    0x10(%ebp),%eax
81003501:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003507:	eb 09                	jmp    81003512 <__swhatbuf_r+0x66>
81003509:	8b 45 10             	mov    0x10(%ebp),%eax
8100350c:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003512:	b8 00 00 00 00       	mov    $0x0,%eax
81003517:	eb 24                	jmp    8100353d <__swhatbuf_r+0x91>
81003519:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100351c:	25 00 f0 00 00       	and    $0xf000,%eax
81003521:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003526:	0f 94 c0             	sete   %al
81003529:	0f b6 d0             	movzbl %al,%edx
8100352c:	8b 45 14             	mov    0x14(%ebp),%eax
8100352f:	89 10                	mov    %edx,(%eax)
81003531:	8b 45 10             	mov    0x10(%ebp),%eax
81003534:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100353a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100353d:	c9                   	leave  
8100353e:	c3                   	ret    

8100353f <_read_r>:
8100353f:	55                   	push   %ebp
81003540:	89 e5                	mov    %esp,%ebp
81003542:	83 ec 18             	sub    $0x18,%esp
81003545:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
8100354c:	00 00 00 
8100354f:	83 ec 04             	sub    $0x4,%esp
81003552:	ff 75 14             	pushl  0x14(%ebp)
81003555:	ff 75 10             	pushl  0x10(%ebp)
81003558:	ff 75 0c             	pushl  0xc(%ebp)
8100355b:	e8 9d cc ff ff       	call   810001fd <read>
81003560:	83 c4 10             	add    $0x10,%esp
81003563:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003566:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100356a:	75 14                	jne    81003580 <_read_r+0x41>
8100356c:	a1 8c 40 00 81       	mov    0x8100408c,%eax
81003571:	85 c0                	test   %eax,%eax
81003573:	74 0b                	je     81003580 <_read_r+0x41>
81003575:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
8100357b:	8b 45 08             	mov    0x8(%ebp),%eax
8100357e:	89 10                	mov    %edx,(%eax)
81003580:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003583:	c9                   	leave  
81003584:	c3                   	ret    

81003585 <cleanup_glue>:
81003585:	55                   	push   %ebp
81003586:	89 e5                	mov    %esp,%ebp
81003588:	83 ec 08             	sub    $0x8,%esp
8100358b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100358e:	8b 00                	mov    (%eax),%eax
81003590:	85 c0                	test   %eax,%eax
81003592:	74 14                	je     810035a8 <cleanup_glue+0x23>
81003594:	8b 45 0c             	mov    0xc(%ebp),%eax
81003597:	8b 00                	mov    (%eax),%eax
81003599:	83 ec 08             	sub    $0x8,%esp
8100359c:	50                   	push   %eax
8100359d:	ff 75 08             	pushl  0x8(%ebp)
810035a0:	e8 e0 ff ff ff       	call   81003585 <cleanup_glue>
810035a5:	83 c4 10             	add    $0x10,%esp
810035a8:	83 ec 08             	sub    $0x8,%esp
810035ab:	ff 75 0c             	pushl  0xc(%ebp)
810035ae:	ff 75 08             	pushl  0x8(%ebp)
810035b1:	e8 87 f8 ff ff       	call   81002e3d <_free_r>
810035b6:	83 c4 10             	add    $0x10,%esp
810035b9:	90                   	nop
810035ba:	c9                   	leave  
810035bb:	c3                   	ret    

810035bc <_reclaim_reent>:
810035bc:	55                   	push   %ebp
810035bd:	89 e5                	mov    %esp,%ebp
810035bf:	83 ec 28             	sub    $0x28,%esp
810035c2:	a1 e4 3b 00 81       	mov    0x81003be4,%eax
810035c7:	39 45 08             	cmp    %eax,0x8(%ebp)
810035ca:	0f 84 49 01 00 00    	je     81003719 <_reclaim_reent+0x15d>
810035d0:	8b 45 08             	mov    0x8(%ebp),%eax
810035d3:	8b 40 4c             	mov    0x4c(%eax),%eax
810035d6:	85 c0                	test   %eax,%eax
810035d8:	74 64                	je     8100363e <_reclaim_reent+0x82>
810035da:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810035e1:	eb 3e                	jmp    81003621 <_reclaim_reent+0x65>
810035e3:	8b 45 08             	mov    0x8(%ebp),%eax
810035e6:	8b 50 4c             	mov    0x4c(%eax),%edx
810035e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035ec:	c1 e0 02             	shl    $0x2,%eax
810035ef:	01 d0                	add    %edx,%eax
810035f1:	8b 00                	mov    (%eax),%eax
810035f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035f6:	eb 1f                	jmp    81003617 <_reclaim_reent+0x5b>
810035f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035fb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810035fe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003601:	8b 00                	mov    (%eax),%eax
81003603:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003606:	83 ec 08             	sub    $0x8,%esp
81003609:	ff 75 e8             	pushl  -0x18(%ebp)
8100360c:	ff 75 08             	pushl  0x8(%ebp)
8100360f:	e8 29 f8 ff ff       	call   81002e3d <_free_r>
81003614:	83 c4 10             	add    $0x10,%esp
81003617:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100361b:	75 db                	jne    810035f8 <_reclaim_reent+0x3c>
8100361d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003621:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003624:	83 f8 1f             	cmp    $0x1f,%eax
81003627:	76 ba                	jbe    810035e3 <_reclaim_reent+0x27>
81003629:	8b 45 08             	mov    0x8(%ebp),%eax
8100362c:	8b 40 4c             	mov    0x4c(%eax),%eax
8100362f:	83 ec 08             	sub    $0x8,%esp
81003632:	50                   	push   %eax
81003633:	ff 75 08             	pushl  0x8(%ebp)
81003636:	e8 02 f8 ff ff       	call   81002e3d <_free_r>
8100363b:	83 c4 10             	add    $0x10,%esp
8100363e:	8b 45 08             	mov    0x8(%ebp),%eax
81003641:	8b 40 40             	mov    0x40(%eax),%eax
81003644:	85 c0                	test   %eax,%eax
81003646:	74 15                	je     8100365d <_reclaim_reent+0xa1>
81003648:	8b 45 08             	mov    0x8(%ebp),%eax
8100364b:	8b 40 40             	mov    0x40(%eax),%eax
8100364e:	83 ec 08             	sub    $0x8,%esp
81003651:	50                   	push   %eax
81003652:	ff 75 08             	pushl  0x8(%ebp)
81003655:	e8 e3 f7 ff ff       	call   81002e3d <_free_r>
8100365a:	83 c4 10             	add    $0x10,%esp
8100365d:	8b 45 08             	mov    0x8(%ebp),%eax
81003660:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003666:	85 c0                	test   %eax,%eax
81003668:	74 50                	je     810036ba <_reclaim_reent+0xfe>
8100366a:	8b 45 08             	mov    0x8(%ebp),%eax
8100366d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003673:	8b 55 08             	mov    0x8(%ebp),%edx
81003676:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100367c:	39 d0                	cmp    %edx,%eax
8100367e:	74 3a                	je     810036ba <_reclaim_reent+0xfe>
81003680:	8b 45 08             	mov    0x8(%ebp),%eax
81003683:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003689:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100368c:	eb 1f                	jmp    810036ad <_reclaim_reent+0xf1>
8100368e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003691:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003694:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003697:	8b 00                	mov    (%eax),%eax
81003699:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100369c:	83 ec 08             	sub    $0x8,%esp
8100369f:	ff 75 e4             	pushl  -0x1c(%ebp)
810036a2:	ff 75 08             	pushl  0x8(%ebp)
810036a5:	e8 93 f7 ff ff       	call   81002e3d <_free_r>
810036aa:	83 c4 10             	add    $0x10,%esp
810036ad:	8b 45 08             	mov    0x8(%ebp),%eax
810036b0:	05 4c 01 00 00       	add    $0x14c,%eax
810036b5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810036b8:	75 d4                	jne    8100368e <_reclaim_reent+0xd2>
810036ba:	8b 45 08             	mov    0x8(%ebp),%eax
810036bd:	8b 40 54             	mov    0x54(%eax),%eax
810036c0:	85 c0                	test   %eax,%eax
810036c2:	74 15                	je     810036d9 <_reclaim_reent+0x11d>
810036c4:	8b 45 08             	mov    0x8(%ebp),%eax
810036c7:	8b 40 54             	mov    0x54(%eax),%eax
810036ca:	83 ec 08             	sub    $0x8,%esp
810036cd:	50                   	push   %eax
810036ce:	ff 75 08             	pushl  0x8(%ebp)
810036d1:	e8 67 f7 ff ff       	call   81002e3d <_free_r>
810036d6:	83 c4 10             	add    $0x10,%esp
810036d9:	8b 45 08             	mov    0x8(%ebp),%eax
810036dc:	8b 40 38             	mov    0x38(%eax),%eax
810036df:	85 c0                	test   %eax,%eax
810036e1:	74 36                	je     81003719 <_reclaim_reent+0x15d>
810036e3:	8b 45 08             	mov    0x8(%ebp),%eax
810036e6:	8b 40 3c             	mov    0x3c(%eax),%eax
810036e9:	83 ec 0c             	sub    $0xc,%esp
810036ec:	ff 75 08             	pushl  0x8(%ebp)
810036ef:	ff d0                	call   *%eax
810036f1:	83 c4 10             	add    $0x10,%esp
810036f4:	8b 45 08             	mov    0x8(%ebp),%eax
810036f7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036fd:	85 c0                	test   %eax,%eax
810036ff:	74 18                	je     81003719 <_reclaim_reent+0x15d>
81003701:	8b 45 08             	mov    0x8(%ebp),%eax
81003704:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100370a:	83 ec 08             	sub    $0x8,%esp
8100370d:	50                   	push   %eax
8100370e:	ff 75 08             	pushl  0x8(%ebp)
81003711:	e8 6f fe ff ff       	call   81003585 <cleanup_glue>
81003716:	83 c4 10             	add    $0x10,%esp
81003719:	90                   	nop
8100371a:	c9                   	leave  
8100371b:	c3                   	ret    

8100371c <_fstat_r>:
8100371c:	55                   	push   %ebp
8100371d:	89 e5                	mov    %esp,%ebp
8100371f:	83 ec 18             	sub    $0x18,%esp
81003722:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
81003729:	00 00 00 
8100372c:	83 ec 08             	sub    $0x8,%esp
8100372f:	ff 75 10             	pushl  0x10(%ebp)
81003732:	ff 75 0c             	pushl  0xc(%ebp)
81003735:	e8 6b cb ff ff       	call   810002a5 <fstat>
8100373a:	83 c4 10             	add    $0x10,%esp
8100373d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003740:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003744:	75 14                	jne    8100375a <_fstat_r+0x3e>
81003746:	a1 8c 40 00 81       	mov    0x8100408c,%eax
8100374b:	85 c0                	test   %eax,%eax
8100374d:	74 0b                	je     8100375a <_fstat_r+0x3e>
8100374f:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
81003755:	8b 45 08             	mov    0x8(%ebp),%eax
81003758:	89 10                	mov    %edx,(%eax)
8100375a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100375d:	c9                   	leave  
8100375e:	c3                   	ret    

8100375f <_isatty_r>:
8100375f:	55                   	push   %ebp
81003760:	89 e5                	mov    %esp,%ebp
81003762:	83 ec 18             	sub    $0x18,%esp
81003765:	c7 05 8c 40 00 81 00 	movl   $0x0,0x8100408c
8100376c:	00 00 00 
8100376f:	83 ec 0c             	sub    $0xc,%esp
81003772:	ff 75 0c             	pushl  0xc(%ebp)
81003775:	e8 52 cb ff ff       	call   810002cc <isatty>
8100377a:	83 c4 10             	add    $0x10,%esp
8100377d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003780:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003784:	75 14                	jne    8100379a <_isatty_r+0x3b>
81003786:	a1 8c 40 00 81       	mov    0x8100408c,%eax
8100378b:	85 c0                	test   %eax,%eax
8100378d:	74 0b                	je     8100379a <_isatty_r+0x3b>
8100378f:	8b 15 8c 40 00 81    	mov    0x8100408c,%edx
81003795:	8b 45 08             	mov    0x8(%ebp),%eax
81003798:	89 10                	mov    %edx,(%eax)
8100379a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100379d:	c9                   	leave  
8100379e:	c3                   	ret    
